
Segway.elf:     file format elf32-avr32

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .reset        00000008  80000000  80000000  00000400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rela.got     00000000  80000008  80000008  00000408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0000f1ae  80000008  80000008  00000408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .exception    00000200  8000f200  8000f200  0000f600  2**9
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .rodata       00000efc  8000f400  8000f400  0000f800  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dalign       00000004  800102fc  800102fc  000106fc  2**0
                  ALLOC
  6 .gcc_except_table 000000c4  00000004  80010300  00010804  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .ctors        00000004  000000c8  800103c4  000108c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000054c  000000cc  800103c8  000108cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000009b0  00000618  80010914  00010e18  2**2
                  ALLOC
 10 .comment      00000030  00000000  00000000  00010e18  2**0
                  CONTENTS, READONLY
 11 .debug_aranges 000011b0  00000000  00000000  00010e48  2**3
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubnames 00002e6a  00000000  00000000  00011ff8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_info   00028c84  00000000  00000000  00014e62  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_abbrev 000087fd  00000000  00000000  0003dae6  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_line   0000f9eb  00000000  00000000  000462e3  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00003254  00000000  00000000  00055cd0  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_str    000078a1  00000000  00000000  00058f24  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_loc    0000bc89  00000000  00000000  000607c5  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_macinfo 0001114c  00000000  00000000  0006c44e  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .stack        00001000  00007000  00007000  00000400  2**0
                  ALLOC
 21 .debug_ranges 00001608  00000000  00000000  0007d5a0  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .reset:

80000000 <_start>:

  .global _start
  .type _start, @function
_start:
  // Jump to the C runtime startup routine.
  lda.w   pc, _stext
80000000:	48 1f       	lddpc	pc,80000004 <_start+0x4>
80000002:	00 00       	add	r0,r0
80000004:	80 00       	ld.sh	r0,r0[0x0]
80000006:	2a 38       	sub	r8,-93

Disassembly of section .text:

80000008 <_ZN6Segway22MYAVR32_GPIO_SIZE_PORTE>:
80000008:	00 00 01 00                                         ....

8000000c <_ZN6Segway24MYAVR32_GPIO_OFFSET_GPERE>:
8000000c:	00 00 00 00                                         ....

80000010 <_ZN6Segway24MYAVR32_GPIO_OFFSET_ODERE>:
80000010:	00 00 00 40                                         ...@

80000014 <_ZN6Segway23MYAVR32_GPIO_OFFSET_OVRE>:
80000014:	00 00 00 50 54 69 76 53 65 67 31 33 00 00 00 00     ...PTivSeg13....

80000024 <_ZN6Segway21TIMER_DELTA_T_SECONDSE>:
80000024:	3c 23 d7 0a                                         <#..

80000028 <_ZN6Segway37ALGCFG_COMPL_FILTER_ACCELANGLE_FACTORE>:
80000028:	3c a3 d7 0a                                         <...

8000002c <_ZN6Segway40MULTIPLEXSENSOR_BATTERYVOLTAGE_FACTOR_MVE>:
8000002c:	42 00 00 00                                         B...

80000030 <_ZN6Segway22PWM_TO_DRIVESUM_FACTORE>:
80000030:	43 b3 80 00                                         C...

80000034 <_ZN6Segway25SPEEDLIMIT_START_DRIVESUME>:
80000034:	46 0f 0a 00                                         F...

80000038 <_ZN6Segway23SPEEDLIMIT_END_DRIVESUME>:
80000038:	46 8f 0a 00 0d 0a 62 61 74 74 56 6f 6c 74 3a 20     F.....battVolt: 
80000048:	00 00 00 00 20 6d 56 00 0d 0a 44 72 69 76 65 53     .... mV...DriveS
80000058:	75 6d 3a 20 00 00 00 00 0d 0a 53 74 65 65 72 69     um: ......Steeri
80000068:	6e 67 50 57 4d 3a 20 00 0d 0a 4c 53 70 65 65 64     ngPWM: ...LSpeed
80000078:	3a 20 00 00 0d 0a 52 53 70 65 65 64 3a 20 00 00     : ....RSpeed: ..
80000088:	0d 0a 43 46 54 69 6c 74 41 6e 67 6c 65 3a 20 00     ..CFTiltAngle: .
80000098:	0d 0a 53 70 65 65 64 4c 69 6d 69 74 54 69 6c 74     ..SpeedLimitTilt
800000a8:	41 6e 67 6c 65 3a 20 00 0d 0a 0d 0a 00 00 00 00     Angle: .........
800000b8:	2b 2b 2b 0d 00 00 00 00                             +++.....

800000c0 <_ZZN6Segway11initHelpersEvE4C.21>:
800000c0:	01 01 01 00                                         ....

800000c4 <_ZZN6Segway11initHelpersEvE4C.22>:
800000c4:	02 03 04 00                                         ....

800000c8 <_ZN6Segway13timerFunctionEv>:
/*! \brief	Function called by the timer. It contains the control algorithm.

		The function first receives the sensor values and then calculates and sets the motor's PWM
		according to the controlling algorithm.
*/
void Segway::timerFunction() {
800000c8:	eb cd 40 c0 	pushm	r6-r7,lr
800000cc:	1a 97       	mov	r7,sp
800000ce:	20 ed       	sub	sp,56
800000d0:	ef 4c ff c8 	st.w	r7[-56],r12
	// get sensor values
	bool footSwitchPressed = footSwitchSensor.getValue();
800000d4:	ee f8 ff c8 	ld.w	r8,r7[-56]
800000d8:	2e 08       	sub	r8,-32
800000da:	10 9c       	mov	r12,r8
800000dc:	f0 1f 01 93 	mcall	80000728 <_ZN6Segway13timerFunctionEv+0x660>
800000e0:	18 98       	mov	r8,r12
800000e2:	ef 68 ff cf 	st.b	r7[-49],r8
	long orientationGyrometerValue = orientationGyrometer.getIntegerValue() - orientationGyrometerReference.getIntegerValue(); // orientationGyrometer does not have to be calibrated as it has it's own reference voltage
800000e6:	ee f8 ff c8 	ld.w	r8,r7[-56]
800000ea:	29 c8       	sub	r8,-100
800000ec:	30 0a       	mov	r10,0
800000ee:	30 0b       	mov	r11,0
800000f0:	10 9c       	mov	r12,r8
800000f2:	f0 1f 01 8f 	mcall	8000072c <_ZN6Segway13timerFunctionEv+0x664>
800000f6:	18 96       	mov	r6,r12
800000f8:	ee f8 ff c8 	ld.w	r8,r7[-56]
800000fc:	f0 c8 ff 68 	sub	r8,r8,-152
80000100:	30 0a       	mov	r10,0
80000102:	30 0b       	mov	r11,0
80000104:	10 9c       	mov	r12,r8
80000106:	f0 1f 01 8a 	mcall	8000072c <_ZN6Segway13timerFunctionEv+0x664>
8000010a:	18 98       	mov	r8,r12
8000010c:	10 16       	sub	r6,r8
8000010e:	ef 46 ff d0 	st.w	r7[-48],r6
	long orientationAccelerometerValue = orientationAccelerometer.getIntegerValue();
80000112:	ee f8 ff c8 	ld.w	r8,r7[-56]
80000116:	2d 08       	sub	r8,-48
80000118:	30 0a       	mov	r10,0
8000011a:	30 0b       	mov	r11,0
8000011c:	10 9c       	mov	r12,r8
8000011e:	f0 1f 01 84 	mcall	8000072c <_ZN6Segway13timerFunctionEv+0x664>
80000122:	18 98       	mov	r8,r12
80000124:	ef 48 ff d4 	st.w	r7[-44],r8
	long steeringPotentiometerValue = 0 - steeringPotentiometer.getIntegerValue();
80000128:	ee f8 ff c8 	ld.w	r8,r7[-56]
8000012c:	f0 c8 ff 34 	sub	r8,r8,-204
80000130:	30 0a       	mov	r10,0
80000132:	30 0b       	mov	r11,0
80000134:	10 9c       	mov	r12,r8
80000136:	f0 1f 01 7e 	mcall	8000072c <_ZN6Segway13timerFunctionEv+0x664>
8000013a:	18 98       	mov	r8,r12
8000013c:	5c 38       	neg	r8
8000013e:	ef 48 ff d8 	st.w	r7[-40],r8
	
	// calculate the angle rate in °/s from the sensor value (+- 1000mV = +- 100°/s)
	float realAngleRate = 0.0 - float( orientationGyrometerValue ) * 100.0 / 310.0;
80000142:	ee fc ff d0 	ld.w	r12,r7[-48]
80000146:	f0 1f 01 7b 	mcall	80000730 <_ZN6Segway13timerFunctionEv+0x668>
8000014a:	18 98       	mov	r8,r12
8000014c:	10 9c       	mov	r12,r8
8000014e:	f0 1f 01 7a 	mcall	80000734 <_ZN6Segway13timerFunctionEv+0x66c>
80000152:	30 08       	mov	r8,0
80000154:	30 09       	mov	r9,0
80000156:	ea 19 40 59 	orh	r9,0x4059
8000015a:	f0 1f 01 78 	mcall	80000738 <_ZN6Segway13timerFunctionEv+0x670>
8000015e:	14 98       	mov	r8,r10
80000160:	16 99       	mov	r9,r11
80000162:	10 9a       	mov	r10,r8
80000164:	12 9b       	mov	r11,r9
80000166:	30 08       	mov	r8,0
80000168:	e0 69 60 00 	mov	r9,24576
8000016c:	ea 19 c0 73 	orh	r9,0xc073
80000170:	f0 1f 01 73 	mcall	8000073c <_ZN6Segway13timerFunctionEv+0x674>
80000174:	14 98       	mov	r8,r10
80000176:	16 99       	mov	r9,r11
80000178:	10 9a       	mov	r10,r8
8000017a:	12 9b       	mov	r11,r9
8000017c:	30 08       	mov	r8,0
8000017e:	30 09       	mov	r9,0
80000180:	f0 1f 01 70 	mcall	80000740 <_ZN6Segway13timerFunctionEv+0x678>
80000184:	14 98       	mov	r8,r10
80000186:	16 99       	mov	r9,r11
80000188:	10 9a       	mov	r10,r8
8000018a:	12 9b       	mov	r11,r9
8000018c:	f0 1f 01 6e 	mcall	80000744 <_ZN6Segway13timerFunctionEv+0x67c>
80000190:	18 98       	mov	r8,r12
80000192:	ef 48 ff dc 	st.w	r7[-36],r8
	
	// calculate the acceleration g from the sensor value (+- 800mV = +- 1g)
	float acceleration = float( orientationAccelerometerValue ) / 248.0;
80000196:	ee fc ff d4 	ld.w	r12,r7[-44]
8000019a:	f0 1f 01 66 	mcall	80000730 <_ZN6Segway13timerFunctionEv+0x668>
8000019e:	18 98       	mov	r8,r12
800001a0:	30 0b       	mov	r11,0
800001a2:	ea 1b 43 78 	orh	r11,0x4378
800001a6:	10 9c       	mov	r12,r8
800001a8:	f0 1f 01 68 	mcall	80000748 <_ZN6Segway13timerFunctionEv+0x680>
800001ac:	18 98       	mov	r8,r12
800001ae:	ef 48 ff e0 	st.w	r7[-32],r8
	// calculate the (tilt) angle of the segway.
	// sin(a) = acceleration / 1g
	// a in rad = acceleration / 1g
	// a in ° = acceleration / 1g * 360/2pi
	// Approximation for small values
	float accelerometerAngle = acceleration * 57;
800001b2:	30 0b       	mov	r11,0
800001b4:	ea 1b 42 64 	orh	r11,0x4264
800001b8:	ee fc ff e0 	ld.w	r12,r7[-32]
800001bc:	f0 1f 01 64 	mcall	8000074c <_ZN6Segway13timerFunctionEv+0x684>
800001c0:	18 98       	mov	r8,r12
800001c2:	ef 48 ff e4 	st.w	r7[-28],r8
	
	// Apply complementary filter to the measured angle and the measured angle rate to get the real angle.
	// angle = (0.98)*(angle + gyro * dt) + (0.02)*(x_acc);
	CFTiltAngle = ( 1 - ALGCFG_COMPL_FILTER_ACCELANGLE_FACTOR ) * ( CFTiltAngle + realAngleRate * TIMER_DELTA_T_SECONDS ) + ( ALGCFG_COMPL_FILTER_ACCELANGLE_FACTOR )*( accelerometerAngle );
800001c6:	ee f8 ff c8 	ld.w	r8,r7[-56]
800001ca:	f0 f6 04 90 	ld.w	r6,r8[1168]
800001ce:	e0 6b d7 0a 	mov	r11,55050
800001d2:	ea 1b 3c 23 	orh	r11,0x3c23
800001d6:	ee fc ff dc 	ld.w	r12,r7[-36]
800001da:	f0 1f 01 5d 	mcall	8000074c <_ZN6Segway13timerFunctionEv+0x684>
800001de:	18 98       	mov	r8,r12
800001e0:	10 9b       	mov	r11,r8
800001e2:	0c 9c       	mov	r12,r6
800001e4:	f0 1f 01 5b 	mcall	80000750 <_ZN6Segway13timerFunctionEv+0x688>
800001e8:	18 98       	mov	r8,r12
800001ea:	e0 6b e1 48 	mov	r11,57672
800001ee:	ea 1b 3f 7a 	orh	r11,0x3f7a
800001f2:	10 9c       	mov	r12,r8
800001f4:	f0 1f 01 56 	mcall	8000074c <_ZN6Segway13timerFunctionEv+0x684>
800001f8:	18 98       	mov	r8,r12
800001fa:	10 96       	mov	r6,r8
800001fc:	e0 6b d7 0a 	mov	r11,55050
80000200:	ea 1b 3c a3 	orh	r11,0x3ca3
80000204:	ee fc ff e4 	ld.w	r12,r7[-28]
80000208:	f0 1f 01 51 	mcall	8000074c <_ZN6Segway13timerFunctionEv+0x684>
8000020c:	18 98       	mov	r8,r12
8000020e:	10 9b       	mov	r11,r8
80000210:	0c 9c       	mov	r12,r6
80000212:	f0 1f 01 50 	mcall	80000750 <_ZN6Segway13timerFunctionEv+0x688>
80000216:	18 98       	mov	r8,r12
80000218:	10 99       	mov	r9,r8
8000021a:	ee f8 ff c8 	ld.w	r8,r7[-56]
8000021e:	f1 49 04 90 	st.w	r8[1168],r9
	
	// Calculate correction angle for soft speed limit
	float speedLimitTiltAngle = limitSpeedSoft( driveSum );
80000222:	ee f8 ff c8 	ld.w	r8,r7[-56]
80000226:	f0 f8 01 5c 	ld.w	r8,r8[348]
8000022a:	10 9b       	mov	r11,r8
8000022c:	ee fc ff c8 	ld.w	r12,r7[-56]
80000230:	f0 1f 01 49 	mcall	80000754 <_ZN6Segway13timerFunctionEv+0x68c>
80000234:	18 98       	mov	r8,r12
80000236:	ef 48 ff e8 	st.w	r7[-24],r8
	
	// Correction term to be added to the driveSum.
	float balanceMoment = BALANCEMOMENT_ANGLERATE_WEIGHT * realAngleRate + BALANCEMOMENT_ANGLE_WEIGHT * ( CFTiltAngle + speedLimitTiltAngle );
8000023a:	30 0b       	mov	r11,0
8000023c:	ea 1b 41 d8 	orh	r11,0x41d8
80000240:	ee fc ff dc 	ld.w	r12,r7[-36]
80000244:	f0 1f 01 42 	mcall	8000074c <_ZN6Segway13timerFunctionEv+0x684>
80000248:	18 98       	mov	r8,r12
8000024a:	10 96       	mov	r6,r8
8000024c:	ee f8 ff c8 	ld.w	r8,r7[-56]
80000250:	f0 f8 04 90 	ld.w	r8,r8[1168]
80000254:	ee fb ff e8 	ld.w	r11,r7[-24]
80000258:	10 9c       	mov	r12,r8
8000025a:	f0 1f 01 3e 	mcall	80000750 <_ZN6Segway13timerFunctionEv+0x688>
8000025e:	18 98       	mov	r8,r12
80000260:	30 0b       	mov	r11,0
80000262:	ea 1b 42 a2 	orh	r11,0x42a2
80000266:	10 9c       	mov	r12,r8
80000268:	f0 1f 01 39 	mcall	8000074c <_ZN6Segway13timerFunctionEv+0x684>
8000026c:	18 98       	mov	r8,r12
8000026e:	10 9b       	mov	r11,r8
80000270:	0c 9c       	mov	r12,r6
80000272:	f0 1f 01 38 	mcall	80000750 <_ZN6Segway13timerFunctionEv+0x688>
80000276:	18 98       	mov	r8,r12
80000278:	ef 48 ff ec 	st.w	r7[-20],r8
	
	// Integration
	driveSum = driveSum + balanceMoment;
8000027c:	ee f8 ff c8 	ld.w	r8,r7[-56]
80000280:	f0 f8 01 5c 	ld.w	r8,r8[348]
80000284:	10 9c       	mov	r12,r8
80000286:	f0 1f 01 2b 	mcall	80000730 <_ZN6Segway13timerFunctionEv+0x668>
8000028a:	18 98       	mov	r8,r12
8000028c:	ee fb ff ec 	ld.w	r11,r7[-20]
80000290:	10 9c       	mov	r12,r8
80000292:	f0 1f 01 30 	mcall	80000750 <_ZN6Segway13timerFunctionEv+0x688>
80000296:	18 98       	mov	r8,r12
80000298:	10 9c       	mov	r12,r8
8000029a:	f0 1f 01 30 	mcall	80000758 <_ZN6Segway13timerFunctionEv+0x690>
8000029e:	18 99       	mov	r9,r12
800002a0:	ee f8 ff c8 	ld.w	r8,r7[-56]
800002a4:	f1 49 01 5c 	st.w	r8[348],r9
	
	// Hard Limit Speed
	if( driveSum > ALGCFG_DRIVESUM_MAX_VALUE ) {
800002a8:	ee f8 ff c8 	ld.w	r8,r7[-56]
800002ac:	f0 f8 01 5c 	ld.w	r8,r8[348]
800002b0:	e0 48 d6 d8 	cp.w	r8,55000
800002b4:	e0 8a 00 09 	brle	800002c6 <_ZN6Segway13timerFunctionEv+0x1fe>
		driveSum = ALGCFG_DRIVESUM_MAX_VALUE;
800002b8:	ee f8 ff c8 	ld.w	r8,r7[-56]
800002bc:	e0 69 d6 d8 	mov	r9,55000
800002c0:	f1 49 01 5c 	st.w	r8[348],r9
800002c4:	c0 e8       	rjmp	800002e0 <_ZN6Segway13timerFunctionEv+0x218>
	} else if( driveSum < -ALGCFG_DRIVESUM_MAX_VALUE ) {
800002c6:	ee f8 ff c8 	ld.w	r8,r7[-56]
800002ca:	f0 f8 01 5c 	ld.w	r8,r8[348]
800002ce:	fe 58 29 28 	cp.w	r8,-55000
800002d2:	c0 74       	brge	800002e0 <_ZN6Segway13timerFunctionEv+0x218>
		driveSum = -ALGCFG_DRIVESUM_MAX_VALUE;
800002d4:	ee f8 ff c8 	ld.w	r8,r7[-56]
800002d8:	fe 79 29 28 	mov	r9,-55000
800002dc:	f1 49 01 5c 	st.w	r8[348],r9
	}
	
	
	// Convert driveSum to PWM value
	long driveSpeedPWM = driveSum / PWM_TO_DRIVESUM_FACTOR;
800002e0:	ee f8 ff c8 	ld.w	r8,r7[-56]
800002e4:	f0 f8 01 5c 	ld.w	r8,r8[348]
800002e8:	10 9c       	mov	r12,r8
800002ea:	f0 1f 01 12 	mcall	80000730 <_ZN6Segway13timerFunctionEv+0x668>
800002ee:	18 98       	mov	r8,r12
800002f0:	e0 6b 80 00 	mov	r11,32768
800002f4:	ea 1b 43 b3 	orh	r11,0x43b3
800002f8:	10 9c       	mov	r12,r8
800002fa:	f0 1f 01 14 	mcall	80000748 <_ZN6Segway13timerFunctionEv+0x680>
800002fe:	18 98       	mov	r8,r12
80000300:	10 9c       	mov	r12,r8
80000302:	f0 1f 01 16 	mcall	80000758 <_ZN6Segway13timerFunctionEv+0x690>
80000306:	18 98       	mov	r8,r12
80000308:	ef 48 ff f0 	st.w	r7[-16],r8
	
	// Calculate steering PWM if not blocked.
	long steeringPWM = 0;
8000030c:	30 08       	mov	r8,0
8000030e:	ef 48 ff f4 	st.w	r7[-12],r8
	if( !steeringBlocked ) {
80000312:	ee f8 ff c8 	ld.w	r8,r7[-56]
80000316:	f1 38 04 94 	ld.ub	r8,r8[1172]
8000031a:	ec 18 00 01 	eorl	r8,0x1
8000031e:	5c 58       	castu.b	r8
80000320:	c0 f0       	breq	8000033e <_ZN6Segway13timerFunctionEv+0x276>
		steeringPWM = limitSteeringPWM( steeringPotentiometerValue, driveSum );
80000322:	ee f8 ff c8 	ld.w	r8,r7[-56]
80000326:	f0 f8 01 5c 	ld.w	r8,r8[348]
8000032a:	10 9a       	mov	r10,r8
8000032c:	ee fb ff d8 	ld.w	r11,r7[-40]
80000330:	ee fc ff c8 	ld.w	r12,r7[-56]
80000334:	f0 1f 01 0a 	mcall	8000075c <_ZN6Segway13timerFunctionEv+0x694>
80000338:	18 98       	mov	r8,r12
8000033a:	ef 48 ff f4 	st.w	r7[-12],r8
	}
		
	long leftSpeed = driveSpeedPWM;
8000033e:	ee f8 ff f0 	ld.w	r8,r7[-16]
80000342:	ef 48 ff f8 	st.w	r7[-8],r8
	long rightSpeed = driveSpeedPWM;
80000346:	ee f8 ff f0 	ld.w	r8,r7[-16]
8000034a:	ef 48 ff fc 	st.w	r7[-4],r8
	
	
	if( operationMode == _standby ) {
8000034e:	ee f8 ff c8 	ld.w	r8,r7[-56]
80000352:	f0 f8 04 98 	ld.w	r8,r8[1176]
80000356:	58 08       	cp.w	r8,0
80000358:	c4 e1       	brne	800003f4 <_ZN6Segway13timerFunctionEv+0x32c>
		// If in standby mode, don't move
		driveSum = 0;
8000035a:	ee f8 ff c8 	ld.w	r8,r7[-56]
8000035e:	30 09       	mov	r9,0
80000360:	f1 49 01 5c 	st.w	r8[348],r9
		leftSpeed = 0;
80000364:	30 08       	mov	r8,0
80000366:	ef 48 ff f8 	st.w	r7[-8],r8
		rightSpeed = 0;
8000036a:	30 08       	mov	r8,0
8000036c:	ef 48 ff fc 	st.w	r7[-4],r8
		
		if( footSwitchPressed ) {
80000370:	ef 39 ff cf 	ld.ub	r9,r7[-49]
80000374:	30 08       	mov	r8,0
80000376:	f0 09 18 00 	cp.b	r9,r8
8000037a:	c3 d0       	breq	800003f4 <_ZN6Segway13timerFunctionEv+0x32c>
			// If foot switch is pressed in standby mode, take current position as zero position, set up blocking
			// of the steering for 5 seconds, do a battery check and then enter run mode.
			
			setCurrentOrientationAsZero();
8000037c:	ee fc ff c8 	ld.w	r12,r7[-56]
80000380:	f0 1f 00 f8 	mcall	80000760 <_ZN6Segway13timerFunctionEv+0x698>
			setCurrentSteeringPositionAsZero();
80000384:	ee fc ff c8 	ld.w	r12,r7[-56]
80000388:	f0 1f 00 f7 	mcall	80000764 <_ZN6Segway13timerFunctionEv+0x69c>
			footSwitchTimeout = 0;
8000038c:	ee f8 ff c8 	ld.w	r8,r7[-56]
80000390:	30 09       	mov	r9,0
80000392:	f1 49 04 84 	st.w	r8[1156],r9
			CFTiltAngle = 0;
80000396:	ee f8 ff c8 	ld.w	r8,r7[-56]
8000039a:	30 09       	mov	r9,0
8000039c:	f1 49 04 90 	st.w	r8[1168],r9
			AVGSpeedLimitDriveSumArray = {0};
800003a0:	ee f8 ff c8 	ld.w	r8,r7[-56]
800003a4:	f0 c8 fe a0 	sub	r8,r8,-352
800003a8:	e0 69 03 20 	mov	r9,800
800003ac:	12 9a       	mov	r10,r9
800003ae:	30 0b       	mov	r11,0
800003b0:	10 9c       	mov	r12,r8
800003b2:	f0 1f 00 ee 	mcall	80000768 <_ZN6Segway13timerFunctionEv+0x6a0>
			AVGSpeedLimitDriveSumArray_index = 0;
800003b6:	ee f8 ff c8 	ld.w	r8,r7[-56]
800003ba:	30 09       	mov	r9,0
800003bc:	f1 49 04 80 	st.w	r8[1152],r9
			
			// prevent Steering within the first 5 seconds
			blockSteeringTimeout = 500;
800003c0:	ee f8 ff c8 	ld.w	r8,r7[-56]
800003c4:	e0 69 01 f4 	mov	r9,500
800003c8:	f1 49 04 88 	st.w	r8[1160],r9
			steeringBlocked = true;
800003cc:	ee f9 ff c8 	ld.w	r9,r7[-56]
800003d0:	30 18       	mov	r8,1
800003d2:	f3 68 04 94 	st.b	r9[1172],r8
			
			// Check battery voltage, block if voltage is too low.
			doBatteryCheck();
800003d6:	ee fc ff c8 	ld.w	r12,r7[-56]
800003da:	f0 1f 00 e5 	mcall	8000076c <_ZN6Segway13timerFunctionEv+0x6a4>
			
			leftMotor.setEnabled( true );
800003de:	30 1c       	mov	r12,1
800003e0:	f0 1f 00 e4 	mcall	80000770 <_ZN6Segway13timerFunctionEv+0x6a8>
			rightMotor.setEnabled( true );
800003e4:	30 1c       	mov	r12,1
800003e6:	f0 1f 00 e3 	mcall	80000770 <_ZN6Segway13timerFunctionEv+0x6a8>
			
			operationMode = _run;
800003ea:	ee f8 ff c8 	ld.w	r8,r7[-56]
800003ee:	30 19       	mov	r9,1
800003f0:	f1 49 04 98 	st.w	r8[1176],r9
		}
	}
	
	if( operationMode == _run ) {
800003f4:	ee f8 ff c8 	ld.w	r8,r7[-56]
800003f8:	f0 f8 04 98 	ld.w	r8,r8[1176]
800003fc:	58 18       	cp.w	r8,1
800003fe:	c6 c1       	brne	800004d6 <_ZN6Segway13timerFunctionEv+0x40e>
		// If in run mode, control motors.
		if( footSwitchPressed ) {
80000400:	ef 39 ff cf 	ld.ub	r9,r7[-49]
80000404:	30 08       	mov	r8,0
80000406:	f0 09 18 00 	cp.b	r9,r8
8000040a:	c4 90       	breq	8000049c <_ZN6Segway13timerFunctionEv+0x3d4>
			// If foot switch is pressed, continue normally.
			footSwitchTimeout = 0;
8000040c:	ee f8 ff c8 	ld.w	r8,r7[-56]
80000410:	30 09       	mov	r9,0
80000412:	f1 49 04 84 	st.w	r8[1156],r9
			
			if( !steeringBlocked ) {
80000416:	ee f8 ff c8 	ld.w	r8,r7[-56]
8000041a:	f1 38 04 94 	ld.ub	r8,r8[1172]
8000041e:	ec 18 00 01 	eorl	r8,0x1
80000422:	5c 58       	castu.b	r8
80000424:	c1 20       	breq	80000448 <_ZN6Segway13timerFunctionEv+0x380>
				// If steering is not blocked, add steering PWM to motor speeds.
				leftSpeed += steeringPWM;
80000426:	ee f9 ff f8 	ld.w	r9,r7[-8]
8000042a:	ee f8 ff f4 	ld.w	r8,r7[-12]
8000042e:	f2 08 00 08 	add	r8,r9,r8
80000432:	ef 48 ff f8 	st.w	r7[-8],r8
				rightSpeed -= steeringPWM;
80000436:	ee f9 ff fc 	ld.w	r9,r7[-4]
8000043a:	ee f8 ff f4 	ld.w	r8,r7[-12]
8000043e:	f2 08 01 08 	sub	r8,r9,r8
80000442:	ef 48 ff fc 	st.w	r7[-4],r8
80000446:	c4 88       	rjmp	800004d6 <_ZN6Segway13timerFunctionEv+0x40e>
			} else {
				// If steering is blocked, wait decrease timeout and enable the steering when the timeout value reaches zero.
				if( blockSteeringTimeout > 0 ) {
80000448:	ee f8 ff c8 	ld.w	r8,r7[-56]
8000044c:	f0 f8 04 88 	ld.w	r8,r8[1160]
80000450:	58 08       	cp.w	r8,0
80000452:	c0 c0       	breq	8000046a <_ZN6Segway13timerFunctionEv+0x3a2>
					blockSteeringTimeout--;
80000454:	ee f8 ff c8 	ld.w	r8,r7[-56]
80000458:	f0 f8 04 88 	ld.w	r8,r8[1160]
8000045c:	f0 c9 00 01 	sub	r9,r8,1
80000460:	ee f8 ff c8 	ld.w	r8,r7[-56]
80000464:	f1 49 04 88 	st.w	r8[1160],r9
80000468:	c3 78       	rjmp	800004d6 <_ZN6Segway13timerFunctionEv+0x40e>
				} else {
					if( steeringBlocked ) {
8000046a:	ee f8 ff c8 	ld.w	r8,r7[-56]
8000046e:	f1 38 04 94 	ld.ub	r8,r8[1172]
80000472:	58 08       	cp.w	r8,0
80000474:	c3 10       	breq	800004d6 <_ZN6Segway13timerFunctionEv+0x40e>
						if( steeringPWM == 0 && steeringPotentiometerValue == 0 ) {
80000476:	ee f8 ff f4 	ld.w	r8,r7[-12]
8000047a:	58 08       	cp.w	r8,0
8000047c:	c2 d1       	brne	800004d6 <_ZN6Segway13timerFunctionEv+0x40e>
8000047e:	ee f8 ff d8 	ld.w	r8,r7[-40]
80000482:	58 08       	cp.w	r8,0
80000484:	c2 91       	brne	800004d6 <_ZN6Segway13timerFunctionEv+0x40e>
							// Blocking time elapsed and steeringPWM is zero => activate steering
							steeringBlocked = false;
80000486:	ee f9 ff c8 	ld.w	r9,r7[-56]
8000048a:	30 08       	mov	r8,0
8000048c:	f3 68 04 94 	st.b	r9[1172],r8
							blockSteeringTimeout = 0;
80000490:	ee f8 ff c8 	ld.w	r8,r7[-56]
80000494:	30 09       	mov	r9,0
80000496:	f1 49 04 88 	st.w	r8[1160],r9
8000049a:	c1 e8       	rjmp	800004d6 <_ZN6Segway13timerFunctionEv+0x40e>
					}
				}
			}
		} else {
			// If foot switch is not pressed, start timeout.
			footSwitchTimeout++;
8000049c:	ee f8 ff c8 	ld.w	r8,r7[-56]
800004a0:	f0 f8 04 84 	ld.w	r8,r8[1156]
800004a4:	f0 c9 ff ff 	sub	r9,r8,-1
800004a8:	ee f8 ff c8 	ld.w	r8,r7[-56]
800004ac:	f1 49 04 84 	st.w	r8[1156],r9
			if( footSwitchTimeout >= ALGCFG_FOOTSWITCHTIMEOUT_CRITICAL ) {
800004b0:	ee f8 ff c8 	ld.w	r8,r7[-56]
800004b4:	f0 f8 04 84 	ld.w	r8,r8[1156]
800004b8:	e0 48 00 63 	cp.w	r8,99
800004bc:	e0 88 00 0d 	brls	800004d6 <_ZN6Segway13timerFunctionEv+0x40e>
				// Foot switch released too long -> go to standby
				leftMotor.setEnabled( false );
800004c0:	30 0c       	mov	r12,0
800004c2:	f0 1f 00 ac 	mcall	80000770 <_ZN6Segway13timerFunctionEv+0x6a8>
				rightMotor.setEnabled( false );
800004c6:	30 0c       	mov	r12,0
800004c8:	f0 1f 00 aa 	mcall	80000770 <_ZN6Segway13timerFunctionEv+0x6a8>
				
				operationMode = _standby;
800004cc:	ee f8 ff c8 	ld.w	r8,r7[-56]
800004d0:	30 09       	mov	r9,0
800004d2:	f1 49 04 98 	st.w	r8[1176],r9
	
	// Apply an offset to the motor speeds to face the problem that the wheels - when standing still - won't start
	// turning until a PWM of about 12 (of 255) is reached.
	// If the target speed is lower than 5, set it to zero. Otherwise add/subtract 3 according to the direction to
	// get closer towards 12.
	if( leftSpeed > -5 && leftSpeed < 5 ) {
800004d6:	ee f8 ff f8 	ld.w	r8,r7[-8]
800004da:	5b c8       	cp.w	r8,-4
800004dc:	c0 a5       	brlt	800004f0 <_ZN6Segway13timerFunctionEv+0x428>
800004de:	ee f8 ff f8 	ld.w	r8,r7[-8]
800004e2:	58 48       	cp.w	r8,4
800004e4:	e0 89 00 06 	brgt	800004f0 <_ZN6Segway13timerFunctionEv+0x428>
		leftSpeed = 0;
800004e8:	30 08       	mov	r8,0
800004ea:	ef 48 ff f8 	st.w	r7[-8],r8
	
	// Apply an offset to the motor speeds to face the problem that the wheels - when standing still - won't start
	// turning until a PWM of about 12 (of 255) is reached.
	// If the target speed is lower than 5, set it to zero. Otherwise add/subtract 3 according to the direction to
	// get closer towards 12.
	if( leftSpeed > -5 && leftSpeed < 5 ) {
800004ee:	c1 18       	rjmp	80000510 <_ZN6Segway13timerFunctionEv+0x448>
		leftSpeed = 0;
	} else {
		if( leftSpeed > 0 ) {
800004f0:	ee f8 ff f8 	ld.w	r8,r7[-8]
800004f4:	58 08       	cp.w	r8,0
800004f6:	e0 8a 00 08 	brle	80000506 <_ZN6Segway13timerFunctionEv+0x43e>
			leftSpeed += 3;
800004fa:	ee f8 ff f8 	ld.w	r8,r7[-8]
800004fe:	2f d8       	sub	r8,-3
80000500:	ef 48 ff f8 	st.w	r7[-8],r8
80000504:	c0 68       	rjmp	80000510 <_ZN6Segway13timerFunctionEv+0x448>
		} else {
			leftSpeed -= 3;
80000506:	ee f8 ff f8 	ld.w	r8,r7[-8]
8000050a:	20 38       	sub	r8,3
8000050c:	ef 48 ff f8 	st.w	r7[-8],r8
		}
	}
	if( rightSpeed > -5 && rightSpeed < 5 ) {
80000510:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000514:	5b c8       	cp.w	r8,-4
80000516:	c0 a5       	brlt	8000052a <_ZN6Segway13timerFunctionEv+0x462>
80000518:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000051c:	58 48       	cp.w	r8,4
8000051e:	e0 89 00 06 	brgt	8000052a <_ZN6Segway13timerFunctionEv+0x462>
		rightSpeed = 0;
80000522:	30 08       	mov	r8,0
80000524:	ef 48 ff fc 	st.w	r7[-4],r8
			leftSpeed += 3;
		} else {
			leftSpeed -= 3;
		}
	}
	if( rightSpeed > -5 && rightSpeed < 5 ) {
80000528:	c1 18       	rjmp	8000054a <_ZN6Segway13timerFunctionEv+0x482>
		rightSpeed = 0;
	} else {
		if( rightSpeed > 0 ) {
8000052a:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000052e:	58 08       	cp.w	r8,0
80000530:	e0 8a 00 08 	brle	80000540 <_ZN6Segway13timerFunctionEv+0x478>
			rightSpeed += 3;
80000534:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000538:	2f d8       	sub	r8,-3
8000053a:	ef 48 ff fc 	st.w	r7[-4],r8
8000053e:	c0 68       	rjmp	8000054a <_ZN6Segway13timerFunctionEv+0x482>
		} else {
			rightSpeed -= 3;
80000540:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000544:	20 38       	sub	r8,3
80000546:	ef 48 ff fc 	st.w	r7[-4],r8
	}

	// Set the motor's speed.
	// 1.741 is a correction factor resulting from fixing a rounding error in the PWM class as the
	// other parameters of the control algorithm were adjusted to the erroneous PWM class.
	setMotorSpeed( &leftMotor, ( float(leftSpeed) / 1.741 ));
8000054a:	ee fc ff f8 	ld.w	r12,r7[-8]
8000054e:	f0 1f 00 79 	mcall	80000730 <_ZN6Segway13timerFunctionEv+0x668>
80000552:	18 98       	mov	r8,r12
80000554:	10 9c       	mov	r12,r8
80000556:	f0 1f 00 78 	mcall	80000734 <_ZN6Segway13timerFunctionEv+0x66c>
8000055a:	e0 68 60 42 	mov	r8,24642
8000055e:	ea 18 d0 e5 	orh	r8,0xd0e5
80000562:	e0 69 db 22 	mov	r9,56098
80000566:	ea 19 3f fb 	orh	r9,0x3ffb
8000056a:	f0 1f 00 75 	mcall	8000073c <_ZN6Segway13timerFunctionEv+0x674>
8000056e:	14 98       	mov	r8,r10
80000570:	16 99       	mov	r9,r11
80000572:	10 9a       	mov	r10,r8
80000574:	12 9b       	mov	r11,r9
80000576:	f0 1f 00 80 	mcall	80000774 <_ZN6Segway13timerFunctionEv+0x6ac>
8000057a:	18 99       	mov	r9,r12
8000057c:	ee f8 ff c8 	ld.w	r8,r7[-56]
80000580:	f0 c8 fe cc 	sub	r8,r8,-308
80000584:	12 9a       	mov	r10,r9
80000586:	10 9b       	mov	r11,r8
80000588:	ee fc ff c8 	ld.w	r12,r7[-56]
8000058c:	f0 1f 00 7b 	mcall	80000778 <_ZN6Segway13timerFunctionEv+0x6b0>
	setMotorSpeed( &rightMotor, ( float(rightSpeed) / 1.741 ));
80000590:	ee fc ff fc 	ld.w	r12,r7[-4]
80000594:	f0 1f 00 67 	mcall	80000730 <_ZN6Segway13timerFunctionEv+0x668>
80000598:	18 98       	mov	r8,r12
8000059a:	10 9c       	mov	r12,r8
8000059c:	f0 1f 00 66 	mcall	80000734 <_ZN6Segway13timerFunctionEv+0x66c>
800005a0:	e0 68 60 42 	mov	r8,24642
800005a4:	ea 18 d0 e5 	orh	r8,0xd0e5
800005a8:	e0 69 db 22 	mov	r9,56098
800005ac:	ea 19 3f fb 	orh	r9,0x3ffb
800005b0:	f0 1f 00 63 	mcall	8000073c <_ZN6Segway13timerFunctionEv+0x674>
800005b4:	14 98       	mov	r8,r10
800005b6:	16 99       	mov	r9,r11
800005b8:	10 9a       	mov	r10,r8
800005ba:	12 9b       	mov	r11,r9
800005bc:	f0 1f 00 6e 	mcall	80000774 <_ZN6Segway13timerFunctionEv+0x6ac>
800005c0:	18 99       	mov	r9,r12
800005c2:	ee f8 ff c8 	ld.w	r8,r7[-56]
800005c6:	f0 c8 fe bc 	sub	r8,r8,-324
800005ca:	12 9a       	mov	r10,r9
800005cc:	10 9b       	mov	r11,r8
800005ce:	ee fc ff c8 	ld.w	r12,r7[-56]
800005d2:	f0 1f 00 6a 	mcall	80000778 <_ZN6Segway13timerFunctionEv+0x6b0>
	
	
	// Every 20 cycles, store debug data.
	debugDataCounter++;
800005d6:	ee f8 ff c8 	ld.w	r8,r7[-56]
800005da:	f0 f8 04 8c 	ld.w	r8,r8[1164]
800005de:	f0 c9 ff ff 	sub	r9,r8,-1
800005e2:	ee f8 ff c8 	ld.w	r8,r7[-56]
800005e6:	f1 49 04 8c 	st.w	r8[1164],r9
	if( debugDataCounter >= 20 ) {
800005ea:	ee f8 ff c8 	ld.w	r8,r7[-56]
800005ee:	f0 f8 04 8c 	ld.w	r8,r8[1164]
800005f2:	59 38       	cp.w	r8,19
800005f4:	e0 88 00 97 	brls	80000722 <_ZN6Segway13timerFunctionEv+0x65a>
		debugDataCounter = 0;
800005f8:	ee f8 ff c8 	ld.w	r8,r7[-56]
800005fc:	30 09       	mov	r9,0
800005fe:	f1 49 04 8c 	st.w	r8[1164],r9
		
		if( !debugData.doNotRefresh ) {
80000602:	ee f8 ff c8 	ld.w	r8,r7[-56]
80000606:	f1 38 04 9c 	ld.ub	r8,r8[1180]
8000060a:	ec 18 00 01 	eorl	r8,0x1
8000060e:	5c 58       	castu.b	r8
80000610:	e0 80 00 89 	breq	80000722 <_ZN6Segway13timerFunctionEv+0x65a>
			debugData.leftPWM = leftSpeed;
80000614:	ee f8 ff c8 	ld.w	r8,r7[-56]
80000618:	ee f9 ff f8 	ld.w	r9,r7[-8]
8000061c:	f1 49 04 a0 	st.w	r8[1184],r9
			debugData.rightPWM = rightSpeed;
80000620:	ee f8 ff c8 	ld.w	r8,r7[-56]
80000624:	ee f9 ff fc 	ld.w	r9,r7[-4]
80000628:	f1 49 04 a4 	st.w	r8[1188],r9
			
			debugData.orientationAccelerometerValue = orientationAccelerometerValue;
8000062c:	ee f8 ff c8 	ld.w	r8,r7[-56]
80000630:	ee f9 ff d4 	ld.w	r9,r7[-44]
80000634:	f1 49 04 a8 	st.w	r8[1192],r9
			debugData.orientationGyrometerValue = orientationGyrometerValue;
80000638:	ee f8 ff c8 	ld.w	r8,r7[-56]
8000063c:	ee f9 ff d0 	ld.w	r9,r7[-48]
80000640:	f1 49 04 ac 	st.w	r8[1196],r9
			debugData.steeringPotentiometerValue = steeringPotentiometerValue;
80000644:	ee f8 ff c8 	ld.w	r8,r7[-56]
80000648:	ee f9 ff d8 	ld.w	r9,r7[-40]
8000064c:	f1 49 04 b0 	st.w	r8[1200],r9
			debugData.footSwitchPressed = footSwitchPressed;
80000650:	ee f9 ff c8 	ld.w	r9,r7[-56]
80000654:	ef 38 ff cf 	ld.ub	r8,r7[-49]
80000658:	f3 68 04 9e 	st.b	r9[1182],r8
			
			debugData.batteryVoltage = batteryVoltageSensor.getIntegerValue() * MULTIPLEXSENSOR_BATTERYVOLTAGE_FACTOR_MV; //in mV
8000065c:	ee f8 ff c8 	ld.w	r8,r7[-56]
80000660:	f0 c8 ff 00 	sub	r8,r8,-256
80000664:	30 0a       	mov	r10,0
80000666:	30 0b       	mov	r11,0
80000668:	10 9c       	mov	r12,r8
8000066a:	f0 1f 00 31 	mcall	8000072c <_ZN6Segway13timerFunctionEv+0x664>
8000066e:	18 98       	mov	r8,r12
80000670:	10 9c       	mov	r12,r8
80000672:	f0 1f 00 30 	mcall	80000730 <_ZN6Segway13timerFunctionEv+0x668>
80000676:	18 98       	mov	r8,r12
80000678:	30 0b       	mov	r11,0
8000067a:	ea 1b 42 00 	orh	r11,0x4200
8000067e:	10 9c       	mov	r12,r8
80000680:	f0 1f 00 33 	mcall	8000074c <_ZN6Segway13timerFunctionEv+0x684>
80000684:	18 98       	mov	r8,r12
80000686:	10 9c       	mov	r12,r8
80000688:	f0 1f 00 34 	mcall	80000758 <_ZN6Segway13timerFunctionEv+0x690>
8000068c:	18 99       	mov	r9,r12
8000068e:	ee f8 ff c8 	ld.w	r8,r7[-56]
80000692:	f1 49 04 b4 	st.w	r8[1204],r9
			
			debugData.driveSum = driveSum;
80000696:	ee f8 ff c8 	ld.w	r8,r7[-56]
8000069a:	f0 f9 01 5c 	ld.w	r9,r8[348]
8000069e:	ee f8 ff c8 	ld.w	r8,r7[-56]
800006a2:	f1 49 04 b8 	st.w	r8[1208],r9
			debugData.steeringPWM = steeringPWM;
800006a6:	ee f8 ff c8 	ld.w	r8,r7[-56]
800006aa:	ee f9 ff f4 	ld.w	r9,r7[-12]
800006ae:	f1 49 04 bc 	st.w	r8[1212],r9
			debugData.leftSpeed = leftSpeed;
800006b2:	ee f8 ff c8 	ld.w	r8,r7[-56]
800006b6:	ee f9 ff f8 	ld.w	r9,r7[-8]
800006ba:	f1 49 04 c0 	st.w	r8[1216],r9
			debugData.rightSpeed = rightSpeed;
800006be:	ee f8 ff c8 	ld.w	r8,r7[-56]
800006c2:	ee f9 ff fc 	ld.w	r9,r7[-4]
800006c6:	f1 49 04 c4 	st.w	r8[1220],r9
			
			debugData.CFTiltAngle = CFTiltAngle;
800006ca:	ee f8 ff c8 	ld.w	r8,r7[-56]
800006ce:	f0 f8 04 90 	ld.w	r8,r8[1168]
800006d2:	10 9c       	mov	r12,r8
800006d4:	f0 1f 00 21 	mcall	80000758 <_ZN6Segway13timerFunctionEv+0x690>
800006d8:	18 99       	mov	r9,r12
800006da:	ee f8 ff c8 	ld.w	r8,r7[-56]
800006de:	f1 49 04 c8 	st.w	r8[1224],r9
			debugData.speedLimitTiltAngle = speedLimitTiltAngle;
800006e2:	ee fc ff e8 	ld.w	r12,r7[-24]
800006e6:	f0 1f 00 1d 	mcall	80000758 <_ZN6Segway13timerFunctionEv+0x690>
800006ea:	18 99       	mov	r9,r12
800006ec:	ee f8 ff c8 	ld.w	r8,r7[-56]
800006f0:	f1 49 04 d4 	st.w	r8[1236],r9
			
			debugData.accelerometerAngle = accelerometerAngle;
800006f4:	ee fc ff e4 	ld.w	r12,r7[-28]
800006f8:	f0 1f 00 18 	mcall	80000758 <_ZN6Segway13timerFunctionEv+0x690>
800006fc:	18 99       	mov	r9,r12
800006fe:	ee f8 ff c8 	ld.w	r8,r7[-56]
80000702:	f1 49 04 cc 	st.w	r8[1228],r9
			debugData.realAngleRate = realAngleRate;
80000706:	ee fc ff dc 	ld.w	r12,r7[-36]
8000070a:	f0 1f 00 14 	mcall	80000758 <_ZN6Segway13timerFunctionEv+0x690>
8000070e:	18 99       	mov	r9,r12
80000710:	ee f8 ff c8 	ld.w	r8,r7[-56]
80000714:	f1 49 04 d0 	st.w	r8[1232],r9
			
			debugData.newDataAvailable = true;
80000718:	ee f9 ff c8 	ld.w	r9,r7[-56]
8000071c:	30 18       	mov	r8,1
8000071e:	f3 68 04 9d 	st.b	r9[1181],r8
		}
	}
}
80000722:	2f 2d       	sub	sp,-56
80000724:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80000728:	80 00       	ld.sh	r0,r0[0x0]
8000072a:	32 dc       	mov	r12,45
8000072c:	80 00       	ld.sh	r0,r0[0x0]
8000072e:	2e 0c       	sub	r12,-32
80000730:	80 00       	ld.sh	r0,r0[0x0]
80000732:	93 24       	st.w	r9[0x8],r4
80000734:	80 00       	ld.sh	r0,r0[0x0]
80000736:	94 26       	ld.sh	r6,r10[0x4]
80000738:	80 00       	ld.sh	r0,r0[0x0]
8000073a:	87 50       	st.w	r3[0x14],r0
8000073c:	80 00       	ld.sh	r0,r0[0x0]
8000073e:	8c 34       	ld.sh	r4,r6[0x6]
80000740:	80 00       	ld.sh	r0,r0[0x0]
80000742:	8a c4       	ld.uh	r4,r5[0x8]
80000744:	80 00       	ld.sh	r0,r0[0x0]
80000746:	94 88       	ld.uh	r8,r10[0x0]
80000748:	80 00       	ld.sh	r0,r0[0x0]
8000074a:	8f 50       	st.w	r7[0x14],r0
8000074c:	80 00       	ld.sh	r0,r0[0x0]
8000074e:	92 40       	ld.sh	r0,r9[0x8]
80000750:	80 00       	ld.sh	r0,r0[0x0]
80000752:	91 94       	st.w	r8[0x24],r4
80000754:	80 00       	ld.sh	r0,r0[0x0]
80000756:	0d 64       	ld.uh	r4,--r6
80000758:	80 00       	ld.sh	r0,r0[0x0]
8000075a:	94 08       	ld.sh	r8,r10[0x0]
8000075c:	80 00       	ld.sh	r0,r0[0x0]
8000075e:	0b c0       	ld.ub	r0,r5[0x4]
80000760:	80 00       	ld.sh	r0,r0[0x0]
80000762:	18 24       	rsub	r4,r12
80000764:	80 00       	ld.sh	r0,r0[0x0]
80000766:	17 9c       	ld.ub	r12,r11[0x1]
80000768:	80 00       	ld.sh	r0,r0[0x0]
8000076a:	a2 7e       	st.h	r1[0xe],lr
8000076c:	80 00       	ld.sh	r0,r0[0x0]
8000076e:	10 44       	or	r4,r8
80000770:	80 00       	ld.sh	r0,r0[0x0]
80000772:	1f b4       	ld.ub	r4,pc[0x3]
80000774:	80 00       	ld.sh	r0,r0[0x0]
80000776:	8b d8       	st.w	r5[0x34],r8
80000778:	80 00       	ld.sh	r0,r0[0x0]
8000077a:	0f dc       	ld.ub	r12,r7[0x5]

8000077c <_ZN6SegwayC1Ev>:


/*! \brief	Constructor. Does minimal initialization.
*/
Segway::Segway() {
8000077c:	d4 31       	pushm	r0-r7,lr
8000077e:	1a 97       	mov	r7,sp
80000780:	fa cd 00 90 	sub	sp,sp,144
80000784:	ef 4c ff fc 	st.w	r7[-4],r12
80000788:	fe f8 03 6c 	ld.w	r8,pc[876]
8000078c:	ef 48 ff e0 	st.w	r7[-32],r8
80000790:	fe f8 03 68 	ld.w	r8,pc[872]
80000794:	ef 48 ff e4 	st.w	r7[-28],r8
80000798:	ee c8 00 18 	sub	r8,r7,24
8000079c:	91 07       	st.w	r8[0x0],r7
8000079e:	fe c9 fe 74 	sub	r9,pc,-396
800007a2:	91 19       	st.w	r8[0x4],r9
800007a4:	91 2d       	st.w	r8[0x8],sp
800007a6:	ee c8 00 38 	sub	r8,r7,56
800007aa:	10 9c       	mov	r12,r8
800007ac:	f0 1f 00 d4 	mcall	80000afc <_ZN6SegwayC1Ev+0x380>
800007b0:	ee f8 ff fc 	ld.w	r8,r7[-4]
800007b4:	3f f9       	mov	r9,-1
800007b6:	ef 49 ff cc 	st.w	r7[-52],r9
800007ba:	10 9c       	mov	r12,r8
800007bc:	f0 1f 00 d1 	mcall	80000b00 <_ZN6SegwayC1Ev+0x384>
800007c0:	ee f8 ff fc 	ld.w	r8,r7[-4]
800007c4:	2f c8       	sub	r8,-4
800007c6:	30 b9       	mov	r9,11
800007c8:	ef 49 ff cc 	st.w	r7[-52],r9
800007cc:	10 9c       	mov	r12,r8
800007ce:	f0 1f 00 ce 	mcall	80000b04 <_ZN6SegwayC1Ev+0x388>
800007d2:	ee f8 ff fc 	ld.w	r8,r7[-4]
800007d6:	2e 08       	sub	r8,-32
800007d8:	30 a9       	mov	r9,10
800007da:	ef 49 ff cc 	st.w	r7[-52],r9
800007de:	10 9c       	mov	r12,r8
800007e0:	f0 1f 00 ca 	mcall	80000b08 <_ZN6SegwayC1Ev+0x38c>
800007e4:	ee f8 ff fc 	ld.w	r8,r7[-4]
800007e8:	2d 08       	sub	r8,-48
800007ea:	30 99       	mov	r9,9
800007ec:	ef 49 ff cc 	st.w	r7[-52],r9
800007f0:	10 9c       	mov	r12,r8
800007f2:	f0 1f 00 c7 	mcall	80000b0c <_ZN6SegwayC1Ev+0x390>
800007f6:	ee f8 ff fc 	ld.w	r8,r7[-4]
800007fa:	29 c8       	sub	r8,-100
800007fc:	30 89       	mov	r9,8
800007fe:	ef 49 ff cc 	st.w	r7[-52],r9
80000802:	10 9c       	mov	r12,r8
80000804:	f0 1f 00 c2 	mcall	80000b0c <_ZN6SegwayC1Ev+0x390>
80000808:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000080c:	f0 c8 ff 68 	sub	r8,r8,-152
80000810:	30 79       	mov	r9,7
80000812:	ef 49 ff cc 	st.w	r7[-52],r9
80000816:	10 9c       	mov	r12,r8
80000818:	f0 1f 00 bd 	mcall	80000b0c <_ZN6SegwayC1Ev+0x390>
8000081c:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000820:	f0 c8 ff 34 	sub	r8,r8,-204
80000824:	30 69       	mov	r9,6
80000826:	ef 49 ff cc 	st.w	r7[-52],r9
8000082a:	10 9c       	mov	r12,r8
8000082c:	f0 1f 00 b8 	mcall	80000b0c <_ZN6SegwayC1Ev+0x390>
80000830:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000834:	f0 c8 ff 00 	sub	r8,r8,-256
80000838:	30 59       	mov	r9,5
8000083a:	ef 49 ff cc 	st.w	r7[-52],r9
8000083e:	10 9c       	mov	r12,r8
80000840:	f0 1f 00 b3 	mcall	80000b0c <_ZN6SegwayC1Ev+0x390>
80000844:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000848:	f0 c8 fe cc 	sub	r8,r8,-308
8000084c:	30 49       	mov	r9,4
8000084e:	ef 49 ff cc 	st.w	r7[-52],r9
80000852:	10 9c       	mov	r12,r8
80000854:	f0 1f 00 af 	mcall	80000b10 <_ZN6SegwayC1Ev+0x394>
80000858:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000085c:	f0 c8 fe bc 	sub	r8,r8,-324
80000860:	30 39       	mov	r9,3
80000862:	ef 49 ff cc 	st.w	r7[-52],r9
80000866:	10 9c       	mov	r12,r8
80000868:	f0 1f 00 aa 	mcall	80000b10 <_ZN6SegwayC1Ev+0x394>
8000086c:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000870:	f0 c8 fe ac 	sub	r8,r8,-340
80000874:	30 29       	mov	r9,2
80000876:	ef 49 ff cc 	st.w	r7[-52],r9
8000087a:	10 9c       	mov	r12,r8
8000087c:	f0 1f 00 a6 	mcall	80000b14 <_ZN6SegwayC1Ev+0x398>
80000880:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000884:	f0 c8 fe a8 	sub	r8,r8,-344
80000888:	30 19       	mov	r9,1
8000088a:	ef 49 ff cc 	st.w	r7[-52],r9
8000088e:	10 9c       	mov	r12,r8
80000890:	f0 1f 00 a1 	mcall	80000b14 <_ZN6SegwayC1Ev+0x398>
	debugData = {0};
80000894:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000898:	f0 c8 fb 64 	sub	r8,r8,-1180
8000089c:	30 0a       	mov	r10,0
8000089e:	30 0b       	mov	r11,0
800008a0:	f0 eb 00 00 	st.d	r8[0],r10
800008a4:	2f 88       	sub	r8,-8
800008a6:	30 0a       	mov	r10,0
800008a8:	30 0b       	mov	r11,0
800008aa:	f0 eb 00 00 	st.d	r8[0],r10
800008ae:	2f 88       	sub	r8,-8
800008b0:	30 0a       	mov	r10,0
800008b2:	30 0b       	mov	r11,0
800008b4:	f0 eb 00 00 	st.d	r8[0],r10
800008b8:	2f 88       	sub	r8,-8
800008ba:	30 0a       	mov	r10,0
800008bc:	30 0b       	mov	r11,0
800008be:	f0 eb 00 00 	st.d	r8[0],r10
800008c2:	2f 88       	sub	r8,-8
800008c4:	30 0a       	mov	r10,0
800008c6:	30 0b       	mov	r11,0
800008c8:	f0 eb 00 00 	st.d	r8[0],r10
800008cc:	2f 88       	sub	r8,-8
800008ce:	30 0a       	mov	r10,0
800008d0:	30 0b       	mov	r11,0
800008d2:	f0 eb 00 00 	st.d	r8[0],r10
800008d6:	2f 88       	sub	r8,-8
800008d8:	30 0a       	mov	r10,0
800008da:	30 0b       	mov	r11,0
800008dc:	f0 eb 00 00 	st.d	r8[0],r10
800008e0:	2f 88       	sub	r8,-8
800008e2:	30 09       	mov	r9,0
800008e4:	91 09       	st.w	r8[0x0],r9
800008e6:	2f c8       	sub	r8,-4
	debugDataCounter = 0;
800008e8:	ee f8 ff fc 	ld.w	r8,r7[-4]
800008ec:	30 09       	mov	r9,0
800008ee:	f1 49 04 8c 	st.w	r8[1164],r9
	
	CFTiltAngle = 0;
800008f2:	ee f8 ff fc 	ld.w	r8,r7[-4]
800008f6:	30 09       	mov	r9,0
800008f8:	f1 49 04 90 	st.w	r8[1168],r9
	
	AVGSpeedLimitDriveSumArray = {0};
800008fc:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000900:	f0 c8 fe a0 	sub	r8,r8,-352
80000904:	e0 69 03 20 	mov	r9,800
80000908:	12 9a       	mov	r10,r9
8000090a:	30 0b       	mov	r11,0
8000090c:	10 9c       	mov	r12,r8
8000090e:	f0 1f 00 83 	mcall	80000b18 <_ZN6SegwayC1Ev+0x39c>
	AVGSpeedLimitDriveSumArray_index = 0;
80000912:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000916:	30 09       	mov	r9,0
80000918:	f1 49 04 80 	st.w	r8[1152],r9
8000091c:	ee c8 00 38 	sub	r8,r7,56
80000920:	10 9c       	mov	r12,r8
80000922:	f0 1f 00 7f 	mcall	80000b1c <_ZN6SegwayC1Ev+0x3a0>
}
80000926:	2d cd       	sub	sp,-144
80000928:	d8 32       	popm	r0-r7,pc
8000092a:	ee fa ff cc 	ld.w	r10,r7[-52]
8000092e:	ee f8 ff d0 	ld.w	r8,r7[-48]
80000932:	ee f9 ff d4 	ld.w	r9,r7[-44]
80000936:	58 1a       	cp.w	r10,1
80000938:	c2 90       	breq	8000098a <_ZN6SegwayC1Ev+0x20e>
8000093a:	58 2a       	cp.w	r10,2
8000093c:	c3 90       	breq	800009ae <_ZN6SegwayC1Ev+0x232>
8000093e:	58 3a       	cp.w	r10,3
80000940:	c4 90       	breq	800009d2 <_ZN6SegwayC1Ev+0x256>
80000942:	58 4a       	cp.w	r10,4
80000944:	c5 90       	breq	800009f6 <_ZN6SegwayC1Ev+0x27a>
80000946:	58 5a       	cp.w	r10,5
80000948:	c6 90       	breq	80000a1a <_ZN6SegwayC1Ev+0x29e>
8000094a:	58 6a       	cp.w	r10,6
8000094c:	c7 90       	breq	80000a3e <_ZN6SegwayC1Ev+0x2c2>
8000094e:	58 7a       	cp.w	r10,7
80000950:	e0 80 00 88 	breq	80000a60 <_ZN6SegwayC1Ev+0x2e4>
80000954:	58 8a       	cp.w	r10,8
80000956:	e0 80 00 96 	breq	80000a82 <_ZN6SegwayC1Ev+0x306>
8000095a:	58 9a       	cp.w	r10,9
8000095c:	e0 80 00 a4 	breq	80000aa4 <_ZN6SegwayC1Ev+0x328>
80000960:	58 aa       	cp.w	r10,10
80000962:	e0 80 00 b2 	breq	80000ac6 <_ZN6SegwayC1Ev+0x34a>
80000966:	ef 49 ff 74 	st.w	r7[-140],r9
8000096a:	ef 48 ff 70 	st.w	r7[-144],r8
8000096e:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000972:	f0 c8 fe ac 	sub	r8,r8,-340
80000976:	30 09       	mov	r9,0
80000978:	ef 49 ff cc 	st.w	r7[-52],r9
8000097c:	10 9c       	mov	r12,r8
8000097e:	f0 1f 00 69 	mcall	80000b20 <_ZN6SegwayC1Ev+0x3a4>
80000982:	ee f8 ff 70 	ld.w	r8,r7[-144]
80000986:	ee f9 ff 74 	ld.w	r9,r7[-140]
8000098a:	ef 49 ff 7c 	st.w	r7[-132],r9
8000098e:	ef 48 ff 78 	st.w	r7[-136],r8
80000992:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000996:	f0 c8 fe bc 	sub	r8,r8,-324
8000099a:	30 09       	mov	r9,0
8000099c:	ef 49 ff cc 	st.w	r7[-52],r9
800009a0:	10 9c       	mov	r12,r8
800009a2:	f0 1f 00 61 	mcall	80000b24 <_ZN6SegwayC1Ev+0x3a8>
800009a6:	ee f8 ff 78 	ld.w	r8,r7[-136]
800009aa:	ee f9 ff 7c 	ld.w	r9,r7[-132]
800009ae:	ef 49 ff 84 	st.w	r7[-124],r9
800009b2:	ef 48 ff 80 	st.w	r7[-128],r8
800009b6:	ee f8 ff fc 	ld.w	r8,r7[-4]
800009ba:	f0 c8 fe cc 	sub	r8,r8,-308
800009be:	30 09       	mov	r9,0
800009c0:	ef 49 ff cc 	st.w	r7[-52],r9
800009c4:	10 9c       	mov	r12,r8
800009c6:	f0 1f 00 58 	mcall	80000b24 <_ZN6SegwayC1Ev+0x3a8>
800009ca:	ee f8 ff 80 	ld.w	r8,r7[-128]
800009ce:	ee f9 ff 84 	ld.w	r9,r7[-124]
800009d2:	ef 49 ff 8c 	st.w	r7[-116],r9
800009d6:	ef 48 ff 88 	st.w	r7[-120],r8
800009da:	ee f8 ff fc 	ld.w	r8,r7[-4]
800009de:	f0 c8 ff 00 	sub	r8,r8,-256
800009e2:	30 09       	mov	r9,0
800009e4:	ef 49 ff cc 	st.w	r7[-52],r9
800009e8:	10 9c       	mov	r12,r8
800009ea:	f0 1f 00 50 	mcall	80000b28 <_ZN6SegwayC1Ev+0x3ac>
800009ee:	ee f8 ff 88 	ld.w	r8,r7[-120]
800009f2:	ee f9 ff 8c 	ld.w	r9,r7[-116]
800009f6:	ef 49 ff 94 	st.w	r7[-108],r9
800009fa:	ef 48 ff 90 	st.w	r7[-112],r8
800009fe:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000a02:	f0 c8 ff 34 	sub	r8,r8,-204
80000a06:	30 09       	mov	r9,0
80000a08:	ef 49 ff cc 	st.w	r7[-52],r9
80000a0c:	10 9c       	mov	r12,r8
80000a0e:	f0 1f 00 47 	mcall	80000b28 <_ZN6SegwayC1Ev+0x3ac>
80000a12:	ee f8 ff 90 	ld.w	r8,r7[-112]
80000a16:	ee f9 ff 94 	ld.w	r9,r7[-108]
80000a1a:	ef 49 ff 9c 	st.w	r7[-100],r9
80000a1e:	ef 48 ff 98 	st.w	r7[-104],r8
80000a22:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000a26:	f0 c8 ff 68 	sub	r8,r8,-152
80000a2a:	30 09       	mov	r9,0
80000a2c:	ef 49 ff cc 	st.w	r7[-52],r9
80000a30:	10 9c       	mov	r12,r8
80000a32:	f0 1f 00 3e 	mcall	80000b28 <_ZN6SegwayC1Ev+0x3ac>
80000a36:	ee f8 ff 98 	ld.w	r8,r7[-104]
80000a3a:	ee f9 ff 9c 	ld.w	r9,r7[-100]
80000a3e:	ef 49 ff a4 	st.w	r7[-92],r9
80000a42:	ef 48 ff a0 	st.w	r7[-96],r8
80000a46:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000a4a:	29 c8       	sub	r8,-100
80000a4c:	30 09       	mov	r9,0
80000a4e:	ef 49 ff cc 	st.w	r7[-52],r9
80000a52:	10 9c       	mov	r12,r8
80000a54:	f0 1f 00 35 	mcall	80000b28 <_ZN6SegwayC1Ev+0x3ac>
80000a58:	ee f8 ff a0 	ld.w	r8,r7[-96]
80000a5c:	ee f9 ff a4 	ld.w	r9,r7[-92]
80000a60:	ef 49 ff ac 	st.w	r7[-84],r9
80000a64:	ef 48 ff a8 	st.w	r7[-88],r8
80000a68:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000a6c:	2d 08       	sub	r8,-48
80000a6e:	30 09       	mov	r9,0
80000a70:	ef 49 ff cc 	st.w	r7[-52],r9
80000a74:	10 9c       	mov	r12,r8
80000a76:	f0 1f 00 2d 	mcall	80000b28 <_ZN6SegwayC1Ev+0x3ac>
80000a7a:	ee f8 ff a8 	ld.w	r8,r7[-88]
80000a7e:	ee f9 ff ac 	ld.w	r9,r7[-84]
80000a82:	ef 49 ff b4 	st.w	r7[-76],r9
80000a86:	ef 48 ff b0 	st.w	r7[-80],r8
80000a8a:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000a8e:	2e 08       	sub	r8,-32
80000a90:	30 09       	mov	r9,0
80000a92:	ef 49 ff cc 	st.w	r7[-52],r9
80000a96:	10 9c       	mov	r12,r8
80000a98:	f0 1f 00 25 	mcall	80000b2c <_ZN6SegwayC1Ev+0x3b0>
80000a9c:	ee f8 ff b0 	ld.w	r8,r7[-80]
80000aa0:	ee f9 ff b4 	ld.w	r9,r7[-76]
80000aa4:	ef 49 ff bc 	st.w	r7[-68],r9
80000aa8:	ef 48 ff b8 	st.w	r7[-72],r8
80000aac:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000ab0:	2f c8       	sub	r8,-4
80000ab2:	30 09       	mov	r9,0
80000ab4:	ef 49 ff cc 	st.w	r7[-52],r9
80000ab8:	10 9c       	mov	r12,r8
80000aba:	f0 1f 00 1e 	mcall	80000b30 <_ZN6SegwayC1Ev+0x3b4>
80000abe:	ee f8 ff b8 	ld.w	r8,r7[-72]
80000ac2:	ee f9 ff bc 	ld.w	r9,r7[-68]
80000ac6:	ef 49 ff c4 	st.w	r7[-60],r9
80000aca:	ef 48 ff c0 	st.w	r7[-64],r8
80000ace:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000ad2:	30 09       	mov	r9,0
80000ad4:	ef 49 ff cc 	st.w	r7[-52],r9
80000ad8:	10 9c       	mov	r12,r8
80000ada:	f0 1f 00 17 	mcall	80000b34 <_ZN6SegwayC1Ev+0x3b8>
80000ade:	ee f8 ff c0 	ld.w	r8,r7[-64]
80000ae2:	ee f9 ff c4 	ld.w	r9,r7[-60]
80000ae6:	3f f9       	mov	r9,-1
80000ae8:	ef 49 ff cc 	st.w	r7[-52],r9
80000aec:	10 9c       	mov	r12,r8
80000aee:	f0 1f 00 13 	mcall	80000b38 <_ZN6SegwayC1Ev+0x3bc>
80000af2:	00 00       	add	r0,r0
80000af4:	80 00       	ld.sh	r0,r0[0x0]
80000af6:	4a 94       	lddpc	r4,80000b98 <_ZN6Segway16expMovingAverageEffh+0x5c>
80000af8:	00 00       	add	r0,r0
80000afa:	00 04       	add	r4,r0
80000afc:	80 00       	ld.sh	r0,r0[0x0]
80000afe:	95 14       	st.w	r10[0x4],r4
80000b00:	80 00       	ld.sh	r0,r0[0x0]
80000b02:	33 30       	mov	r0,51
80000b04:	80 00       	ld.sh	r0,r0[0x0]
80000b06:	1b f4       	ld.ub	r4,sp[0x7]
80000b08:	80 00       	ld.sh	r0,r0[0x0]
80000b0a:	31 c0       	mov	r0,28
80000b0c:	80 00       	ld.sh	r0,r0[0x0]
80000b0e:	2d 54       	sub	r4,-43
80000b10:	80 00       	ld.sh	r0,r0[0x0]
80000b12:	1d 20       	ld.uh	r0,lr++
80000b14:	80 00       	ld.sh	r0,r0[0x0]
80000b16:	35 1c       	mov	r12,81
80000b18:	80 00       	ld.sh	r0,r0[0x0]
80000b1a:	a2 7e       	st.h	r1[0xe],lr
80000b1c:	80 00       	ld.sh	r0,r0[0x0]
80000b1e:	95 24       	st.w	r10[0x8],r4
80000b20:	80 00       	ld.sh	r0,r0[0x0]
80000b22:	35 38       	mov	r8,83
80000b24:	80 00       	ld.sh	r0,r0[0x0]
80000b26:	1d d8       	ld.ub	r8,lr[0x5]
80000b28:	80 00       	ld.sh	r0,r0[0x0]
80000b2a:	2d 78       	sub	r8,-41
80000b2c:	80 00       	ld.sh	r0,r0[0x0]
80000b2e:	31 d4       	mov	r4,29
80000b30:	80 00       	ld.sh	r0,r0[0x0]
80000b32:	1c 08       	add	r8,lr
80000b34:	80 00       	ld.sh	r0,r0[0x0]
80000b36:	33 42       	mov	r2,52
80000b38:	80 00       	ld.sh	r0,r0[0x0]
80000b3a:	96 dc       	ld.uh	r12,r11[0xa]

80000b3c <_ZN6Segway16expMovingAverageEffh>:
	\param	oldVal	[in] old/current average
	\param	newVal	[in] measured value
	\param	weightOfNewVal_permille	[in] weight factor according to function description in permille.
	\return	Exponential moving average
*/
float Segway::expMovingAverage( float oldVal, float newVal, unsigned char weightOfNewVal_permille ) {
80000b3c:	eb cd 40 c0 	pushm	r6-r7,lr
80000b40:	1a 97       	mov	r7,sp
80000b42:	20 4d       	sub	sp,16
80000b44:	ef 4c ff fc 	st.w	r7[-4],r12
80000b48:	ef 4b ff f8 	st.w	r7[-8],r11
80000b4c:	ef 4a ff f4 	st.w	r7[-12],r10
80000b50:	12 98       	mov	r8,r9
80000b52:	ef 68 ff f0 	st.b	r7[-16],r8
	return ( float( 1000 - weightOfNewVal_permille ) * oldVal + weightOfNewVal_permille * newVal ) / 1000.0;
80000b56:	ef 38 ff f0 	ld.ub	r8,r7[-16]
80000b5a:	e0 69 03 e8 	mov	r9,1000
80000b5e:	f2 08 01 08 	sub	r8,r9,r8
80000b62:	10 9c       	mov	r12,r8
80000b64:	f0 1f 00 13 	mcall	80000bb0 <_ZN6Segway16expMovingAverageEffh+0x74>
80000b68:	18 98       	mov	r8,r12
80000b6a:	ee fb ff f8 	ld.w	r11,r7[-8]
80000b6e:	10 9c       	mov	r12,r8
80000b70:	f0 1f 00 11 	mcall	80000bb4 <_ZN6Segway16expMovingAverageEffh+0x78>
80000b74:	18 98       	mov	r8,r12
80000b76:	10 96       	mov	r6,r8
80000b78:	ef 38 ff f0 	ld.ub	r8,r7[-16]
80000b7c:	10 9c       	mov	r12,r8
80000b7e:	f0 1f 00 0d 	mcall	80000bb0 <_ZN6Segway16expMovingAverageEffh+0x74>
80000b82:	18 98       	mov	r8,r12
80000b84:	ee fb ff f4 	ld.w	r11,r7[-12]
80000b88:	10 9c       	mov	r12,r8
80000b8a:	f0 1f 00 0b 	mcall	80000bb4 <_ZN6Segway16expMovingAverageEffh+0x78>
80000b8e:	18 98       	mov	r8,r12
80000b90:	10 9b       	mov	r11,r8
80000b92:	0c 9c       	mov	r12,r6
80000b94:	f0 1f 00 09 	mcall	80000bb8 <_ZN6Segway16expMovingAverageEffh+0x7c>
80000b98:	18 98       	mov	r8,r12
80000b9a:	30 0b       	mov	r11,0
80000b9c:	ea 1b 44 7a 	orh	r11,0x447a
80000ba0:	10 9c       	mov	r12,r8
80000ba2:	f0 1f 00 07 	mcall	80000bbc <_ZN6Segway16expMovingAverageEffh+0x80>
80000ba6:	18 98       	mov	r8,r12
}
80000ba8:	10 9c       	mov	r12,r8
80000baa:	2f cd       	sub	sp,-16
80000bac:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80000bb0:	80 00       	ld.sh	r0,r0[0x0]
80000bb2:	93 24       	st.w	r9[0x8],r4
80000bb4:	80 00       	ld.sh	r0,r0[0x0]
80000bb6:	92 40       	ld.sh	r0,r9[0x8]
80000bb8:	80 00       	ld.sh	r0,r0[0x0]
80000bba:	91 94       	st.w	r8[0x24],r4
80000bbc:	80 00       	ld.sh	r0,r0[0x0]
80000bbe:	8f 50       	st.w	r7[0x14],r0

80000bc0 <_ZN6Segway16limitSteeringPWMEll>:
				
	\param	steeringPotentiometerValue	[in] value returned by steering potentiometer (signed, zero means no steering)
	\param	driveSum	[in] current Speed (driveSum value in timerFunction)
	\return	steering PWM
*/
long Segway::limitSteeringPWM( long steeringPotentiometerValue, long driveSum ) {
80000bc0:	eb cd 40 c0 	pushm	r6-r7,lr
80000bc4:	1a 97       	mov	r7,sp
80000bc6:	20 4d       	sub	sp,16
80000bc8:	ef 4c ff f8 	st.w	r7[-8],r12
80000bcc:	ef 4b ff f4 	st.w	r7[-12],r11
80000bd0:	ef 4a ff f0 	st.w	r7[-16],r10
	// Limit steering potentiometer value to what is expected at maximum (ALGCFG_STEERING_MAX_STEERINGPOTI_VALUE)
	if( steeringPotentiometerValue > ALGCFG_STEERING_MAX_STEERINGPOTI_VALUE ) {
80000bd4:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000bd8:	e0 48 00 28 	cp.w	r8,40
80000bdc:	e0 8a 00 06 	brle	80000be8 <_ZN6Segway16limitSteeringPWMEll+0x28>
		steeringPotentiometerValue = ALGCFG_STEERING_MAX_STEERINGPOTI_VALUE;
80000be0:	32 88       	mov	r8,40
80000be2:	ef 48 ff f4 	st.w	r7[-12],r8
80000be6:	c0 98       	rjmp	80000bf8 <_ZN6Segway16limitSteeringPWMEll+0x38>
	} else if( steeringPotentiometerValue < -ALGCFG_STEERING_MAX_STEERINGPOTI_VALUE ) {
80000be8:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000bec:	fe 58 ff d8 	cp.w	r8,-40
80000bf0:	c0 44       	brge	80000bf8 <_ZN6Segway16limitSteeringPWMEll+0x38>
		steeringPotentiometerValue = -ALGCFG_STEERING_MAX_STEERINGPOTI_VALUE;
80000bf2:	3d 88       	mov	r8,-40
80000bf4:	ef 48 ff f4 	st.w	r7[-12],r8
	}

	// Calculate the absolute value of the current drive speed.
	long absDriveSum;
	if( driveSum < 0 ) {
80000bf8:	ee f8 ff f0 	ld.w	r8,r7[-16]
80000bfc:	58 08       	cp.w	r8,0
80000bfe:	c0 74       	brge	80000c0c <_ZN6Segway16limitSteeringPWMEll+0x4c>
		absDriveSum = -driveSum;
80000c00:	ee f8 ff f0 	ld.w	r8,r7[-16]
80000c04:	5c 38       	neg	r8
80000c06:	ef 48 ff fc 	st.w	r7[-4],r8
80000c0a:	c0 58       	rjmp	80000c14 <_ZN6Segway16limitSteeringPWMEll+0x54>
	} else	
	{
		absDriveSum = driveSum;
80000c0c:	ee f8 ff f0 	ld.w	r8,r7[-16]
80000c10:	ef 48 ff fc 	st.w	r7[-4],r8
	}
	
	static float MAMaxSteeringPWM = 0;
	
	if( absDriveSum > ALGCFG_BLOCK_STEERING_PWM * PWM_TO_DRIVESUM_FACTOR ) {
80000c14:	ee fc ff fc 	ld.w	r12,r7[-4]
80000c18:	f0 1f 00 4b 	mcall	80000d44 <_ZN6Segway16limitSteeringPWMEll+0x184>
80000c1c:	18 98       	mov	r8,r12
80000c1e:	30 06       	mov	r6,0
80000c20:	10 9b       	mov	r11,r8
80000c22:	e0 6c 3c 00 	mov	r12,15360
80000c26:	ea 1c 46 0c 	orh	r12,0x460c
80000c2a:	f0 1f 00 48 	mcall	80000d48 <_ZN6Segway16limitSteeringPWMEll+0x188>
80000c2e:	18 98       	mov	r8,r12
80000c30:	58 08       	cp.w	r8,0
80000c32:	c0 20       	breq	80000c36 <_ZN6Segway16limitSteeringPWMEll+0x76>
80000c34:	30 16       	mov	r6,1
80000c36:	f1 d6 c0 08 	bfextu	r8,r6,0x0,0x8
80000c3a:	c0 30       	breq	80000c40 <_ZN6Segway16limitSteeringPWMEll+0x80>
		// If drive speed PWM exceeds ALGCFG_BLOCK_STEERING_PWM, block steering.
		return 0;
80000c3c:	30 08       	mov	r8,0
80000c3e:	c7 e8       	rjmp	80000d3a <_ZN6Segway16limitSteeringPWMEll+0x17a>
	} else if( absDriveSum > ALGCFG_DYNAMIC_STEERING_MAX_PWM * PWM_TO_DRIVESUM_FACTOR ) {
80000c40:	ee fc ff fc 	ld.w	r12,r7[-4]
80000c44:	f0 1f 00 40 	mcall	80000d44 <_ZN6Segway16limitSteeringPWMEll+0x184>
80000c48:	18 98       	mov	r8,r12
80000c4a:	30 06       	mov	r6,0
80000c4c:	10 9b       	mov	r11,r8
80000c4e:	e0 6c 48 00 	mov	r12,18432
80000c52:	ea 1c 45 a8 	orh	r12,0x45a8
80000c56:	f0 1f 00 3d 	mcall	80000d48 <_ZN6Segway16limitSteeringPWMEll+0x188>
80000c5a:	18 98       	mov	r8,r12
80000c5c:	58 08       	cp.w	r8,0
80000c5e:	c0 20       	breq	80000c62 <_ZN6Segway16limitSteeringPWMEll+0xa2>
80000c60:	30 16       	mov	r6,1
80000c62:	f1 d6 c0 08 	bfextu	r8,r6,0x0,0x8
80000c66:	c1 00       	breq	80000c86 <_ZN6Segway16limitSteeringPWMEll+0xc6>
		// If drive speed PWM is lower than ALGCFG_BLOCK_STEERING_PWM but over ALGCFG_DYNAMIC_STEERING_MAX_PWM,
		// allow minimal steering.
		MAMaxSteeringPWM = expMovingAverage( MAMaxSteeringPWM, float( ALGCFG_DYNAMIC_STEERING_AT_MAX_PWM ), 20 );
80000c68:	4b 98       	lddpc	r8,80000d4c <_ZN6Segway16limitSteeringPWMEll+0x18c>
80000c6a:	70 08       	ld.w	r8,r8[0x0]
80000c6c:	31 49       	mov	r9,20
80000c6e:	30 0a       	mov	r10,0
80000c70:	ea 1a 40 80 	orh	r10,0x4080
80000c74:	10 9b       	mov	r11,r8
80000c76:	ee fc ff f8 	ld.w	r12,r7[-8]
80000c7a:	f0 1f 00 36 	mcall	80000d50 <_ZN6Segway16limitSteeringPWMEll+0x190>
80000c7e:	18 99       	mov	r9,r12
80000c80:	4b 38       	lddpc	r8,80000d4c <_ZN6Segway16limitSteeringPWMEll+0x18c>
80000c82:	91 09       	st.w	r8[0x0],r9
80000c84:	c2 f8       	rjmp	80000ce2 <_ZN6Segway16limitSteeringPWMEll+0x122>
	} else {
		// steeringSpeed decreases from ALGCFG_DYNAMIC_STEERING_AT_NO_SPEED to ALGCFG_DYNAMIC_STEERING_AT_MAX_PWM with increasing PWM from 0 to ALGCFG_DYNAMIC_STEERING_MAX_PWM
		MAMaxSteeringPWM = expMovingAverage( MAMaxSteeringPWM, float( ALGCFG_DYNAMIC_STEERING_AT_MAX_PWM + ( ALGCFG_DYNAMIC_STEERING_AT_NO_SPEED - ALGCFG_DYNAMIC_STEERING_AT_MAX_PWM ) * ( 1 - absDriveSum / ( ALGCFG_DYNAMIC_STEERING_MAX_PWM * PWM_TO_DRIVESUM_FACTOR ))), 20 );
80000c86:	ee fc ff fc 	ld.w	r12,r7[-4]
80000c8a:	f0 1f 00 2f 	mcall	80000d44 <_ZN6Segway16limitSteeringPWMEll+0x184>
80000c8e:	18 98       	mov	r8,r12
80000c90:	e0 6b 48 00 	mov	r11,18432
80000c94:	ea 1b c5 a8 	orh	r11,0xc5a8
80000c98:	10 9c       	mov	r12,r8
80000c9a:	f0 1f 00 2f 	mcall	80000d54 <_ZN6Segway16limitSteeringPWMEll+0x194>
80000c9e:	18 98       	mov	r8,r12
80000ca0:	30 0b       	mov	r11,0
80000ca2:	ea 1b 3f 80 	orh	r11,0x3f80
80000ca6:	10 9c       	mov	r12,r8
80000ca8:	f0 1f 00 2c 	mcall	80000d58 <_ZN6Segway16limitSteeringPWMEll+0x198>
80000cac:	18 98       	mov	r8,r12
80000cae:	30 0b       	mov	r11,0
80000cb0:	ea 1b 41 80 	orh	r11,0x4180
80000cb4:	10 9c       	mov	r12,r8
80000cb6:	f0 1f 00 2a 	mcall	80000d5c <_ZN6Segway16limitSteeringPWMEll+0x19c>
80000cba:	18 98       	mov	r8,r12
80000cbc:	30 0b       	mov	r11,0
80000cbe:	ea 1b 40 80 	orh	r11,0x4080
80000cc2:	10 9c       	mov	r12,r8
80000cc4:	f0 1f 00 25 	mcall	80000d58 <_ZN6Segway16limitSteeringPWMEll+0x198>
80000cc8:	18 98       	mov	r8,r12
80000cca:	10 9a       	mov	r10,r8
80000ccc:	4a 08       	lddpc	r8,80000d4c <_ZN6Segway16limitSteeringPWMEll+0x18c>
80000cce:	70 08       	ld.w	r8,r8[0x0]
80000cd0:	31 49       	mov	r9,20
80000cd2:	10 9b       	mov	r11,r8
80000cd4:	ee fc ff f8 	ld.w	r12,r7[-8]
80000cd8:	f0 1f 00 1e 	mcall	80000d50 <_ZN6Segway16limitSteeringPWMEll+0x190>
80000cdc:	18 99       	mov	r9,r12
80000cde:	49 c8       	lddpc	r8,80000d4c <_ZN6Segway16limitSteeringPWMEll+0x18c>
80000ce0:	91 09       	st.w	r8[0x0],r9
	}
	
	// If the maximum Steering PWM exceeds ALGCFG_DYNAMIC_STEERING_AT_NO_SPEED (should not happen ), limit it to that.
	if( MAMaxSteeringPWM > ALGCFG_DYNAMIC_STEERING_AT_NO_SPEED ) {
80000ce2:	49 b8       	lddpc	r8,80000d4c <_ZN6Segway16limitSteeringPWMEll+0x18c>
80000ce4:	70 08       	ld.w	r8,r8[0x0]
80000ce6:	30 06       	mov	r6,0
80000ce8:	10 9b       	mov	r11,r8
80000cea:	30 0c       	mov	r12,0
80000cec:	ea 1c 41 a0 	orh	r12,0x41a0
80000cf0:	f0 1f 00 16 	mcall	80000d48 <_ZN6Segway16limitSteeringPWMEll+0x188>
80000cf4:	18 98       	mov	r8,r12
80000cf6:	58 08       	cp.w	r8,0
80000cf8:	c0 20       	breq	80000cfc <_ZN6Segway16limitSteeringPWMEll+0x13c>
80000cfa:	30 16       	mov	r6,1
80000cfc:	f1 d6 c0 08 	bfextu	r8,r6,0x0,0x8
80000d00:	c0 60       	breq	80000d0c <_ZN6Segway16limitSteeringPWMEll+0x14c>
		MAMaxSteeringPWM = ALGCFG_DYNAMIC_STEERING_AT_NO_SPEED;
80000d02:	49 38       	lddpc	r8,80000d4c <_ZN6Segway16limitSteeringPWMEll+0x18c>
80000d04:	30 09       	mov	r9,0
80000d06:	ea 19 41 a0 	orh	r9,0x41a0
80000d0a:	91 09       	st.w	r8[0x0],r9
	}
	
	return ( MAMaxSteeringPWM * steeringPotentiometerValue ) / float( ALGCFG_STEERING_MAX_STEERINGPOTI_VALUE );
80000d0c:	ee fc ff f4 	ld.w	r12,r7[-12]
80000d10:	f0 1f 00 0d 	mcall	80000d44 <_ZN6Segway16limitSteeringPWMEll+0x184>
80000d14:	18 98       	mov	r8,r12
80000d16:	48 e9       	lddpc	r9,80000d4c <_ZN6Segway16limitSteeringPWMEll+0x18c>
80000d18:	72 09       	ld.w	r9,r9[0x0]
80000d1a:	12 9b       	mov	r11,r9
80000d1c:	10 9c       	mov	r12,r8
80000d1e:	f0 1f 00 10 	mcall	80000d5c <_ZN6Segway16limitSteeringPWMEll+0x19c>
80000d22:	18 98       	mov	r8,r12
80000d24:	30 0b       	mov	r11,0
80000d26:	ea 1b 42 20 	orh	r11,0x4220
80000d2a:	10 9c       	mov	r12,r8
80000d2c:	f0 1f 00 0a 	mcall	80000d54 <_ZN6Segway16limitSteeringPWMEll+0x194>
80000d30:	18 98       	mov	r8,r12
80000d32:	10 9c       	mov	r12,r8
80000d34:	f0 1f 00 0b 	mcall	80000d60 <_ZN6Segway16limitSteeringPWMEll+0x1a0>
80000d38:	18 98       	mov	r8,r12
}
80000d3a:	10 9c       	mov	r12,r8
80000d3c:	2f cd       	sub	sp,-16
80000d3e:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80000d42:	00 00       	add	r0,r0
80000d44:	80 00       	ld.sh	r0,r0[0x0]
80000d46:	93 24       	st.w	r9[0x8],r4
80000d48:	80 00       	ld.sh	r0,r0[0x0]
80000d4a:	8b fe       	st.w	r5[0x3c],lr
80000d4c:	00 00       	add	r0,r0
80000d4e:	06 18       	sub	r8,r3
80000d50:	80 00       	ld.sh	r0,r0[0x0]
80000d52:	0b 3c       	ld.ub	r12,r5++
80000d54:	80 00       	ld.sh	r0,r0[0x0]
80000d56:	8f 50       	st.w	r7[0x14],r0
80000d58:	80 00       	ld.sh	r0,r0[0x0]
80000d5a:	91 94       	st.w	r8[0x24],r4
80000d5c:	80 00       	ld.sh	r0,r0[0x0]
80000d5e:	92 40       	ld.sh	r0,r9[0x8]
80000d60:	80 00       	ld.sh	r0,r0[0x0]
80000d62:	94 08       	ld.sh	r8,r10[0x0]

80000d64 <_ZN6Segway14limitSpeedSoftEl>:
		speed, the angle remains at ALGCFG_SPEEDLIMIT_LEAN_BACK_MAX_DEGREES.
				
	\param	driveSum	[in] current Speed (driveSum value in timerFunction)
	\return	correction angle for the speed limit
*/
float Segway::limitSpeedSoft( long driveSum ) {
80000d64:	eb cd 40 c0 	pushm	r6-r7,lr
80000d68:	1a 97       	mov	r7,sp
80000d6a:	20 4d       	sub	sp,16
80000d6c:	ef 4c ff f4 	st.w	r7[-12],r12
80000d70:	ef 4b ff f0 	st.w	r7[-16],r11
	// Store current driveSum in an array for averaging.
	if( AVGSpeedLimitDriveSumArray_index >= 200 ) {
80000d74:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000d78:	f0 f8 04 80 	ld.w	r8,r8[1152]
80000d7c:	e0 48 00 c7 	cp.w	r8,199
80000d80:	e0 8a 00 07 	brle	80000d8e <_ZN6Segway14limitSpeedSoftEl+0x2a>
		AVGSpeedLimitDriveSumArray_index = 0;
80000d84:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000d88:	30 09       	mov	r9,0
80000d8a:	f1 49 04 80 	st.w	r8[1152],r9
	}
	AVGSpeedLimitDriveSumArray[AVGSpeedLimitDriveSumArray_index] = driveSum;
80000d8e:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000d92:	f0 f9 04 80 	ld.w	r9,r8[1152]
80000d96:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000d9a:	2a 89       	sub	r9,-88
80000d9c:	ee fa ff f0 	ld.w	r10,r7[-16]
80000da0:	f0 09 09 2a 	st.w	r8[r9<<0x2],r10
	AVGSpeedLimitDriveSumArray_index++;
80000da4:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000da8:	f0 f8 04 80 	ld.w	r8,r8[1152]
80000dac:	f0 c9 ff ff 	sub	r9,r8,-1
80000db0:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000db4:	f1 49 04 80 	st.w	r8[1152],r9
	
	// If speed is low, reset speed limit array data
	if( driveSum < 2 * PWM_TO_DRIVESUM_FACTOR && driveSum > -2 * PWM_TO_DRIVESUM_FACTOR ) {
80000db8:	ee fc ff f0 	ld.w	r12,r7[-16]
80000dbc:	f0 1f 00 80 	mcall	80000fbc <_ZN6Segway14limitSpeedSoftEl+0x258>
80000dc0:	18 98       	mov	r8,r12
80000dc2:	30 06       	mov	r6,0
80000dc4:	e0 6b 80 00 	mov	r11,32768
80000dc8:	ea 1b 44 33 	orh	r11,0x4433
80000dcc:	10 9c       	mov	r12,r8
80000dce:	f0 1f 00 7d 	mcall	80000fc0 <_ZN6Segway14limitSpeedSoftEl+0x25c>
80000dd2:	18 98       	mov	r8,r12
80000dd4:	58 08       	cp.w	r8,0
80000dd6:	c0 20       	breq	80000dda <_ZN6Segway14limitSpeedSoftEl+0x76>
80000dd8:	30 16       	mov	r6,1
80000dda:	f1 d6 c0 08 	bfextu	r8,r6,0x0,0x8
80000dde:	c2 50       	breq	80000e28 <_ZN6Segway14limitSpeedSoftEl+0xc4>
80000de0:	ee fc ff f0 	ld.w	r12,r7[-16]
80000de4:	f0 1f 00 76 	mcall	80000fbc <_ZN6Segway14limitSpeedSoftEl+0x258>
80000de8:	18 98       	mov	r8,r12
80000dea:	30 06       	mov	r6,0
80000dec:	10 9b       	mov	r11,r8
80000dee:	e0 6c 80 00 	mov	r12,32768
80000df2:	ea 1c c4 33 	orh	r12,0xc433
80000df6:	f0 1f 00 73 	mcall	80000fc0 <_ZN6Segway14limitSpeedSoftEl+0x25c>
80000dfa:	18 98       	mov	r8,r12
80000dfc:	58 08       	cp.w	r8,0
80000dfe:	c0 20       	breq	80000e02 <_ZN6Segway14limitSpeedSoftEl+0x9e>
80000e00:	30 16       	mov	r6,1
80000e02:	f1 d6 c0 08 	bfextu	r8,r6,0x0,0x8
80000e06:	c1 10       	breq	80000e28 <_ZN6Segway14limitSpeedSoftEl+0xc4>
		AVGSpeedLimitDriveSumArray = {0};
80000e08:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000e0c:	f0 c8 fe a0 	sub	r8,r8,-352
80000e10:	e0 69 03 20 	mov	r9,800
80000e14:	12 9a       	mov	r10,r9
80000e16:	30 0b       	mov	r11,0
80000e18:	10 9c       	mov	r12,r8
80000e1a:	f0 1f 00 6b 	mcall	80000fc4 <_ZN6Segway14limitSpeedSoftEl+0x260>
		AVGSpeedLimitDriveSumArray_index = 0;
80000e1e:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000e22:	30 09       	mov	r9,0
80000e24:	f1 49 04 80 	st.w	r8[1152],r9
	}

	// Calculate average driveSum using the array values.
	long AVGSpeedLimitDriveSum = 0;
80000e28:	30 08       	mov	r8,0
80000e2a:	ef 48 ff f8 	st.w	r7[-8],r8
	for( int i = 0; i < 200; i++ ) {
80000e2e:	30 08       	mov	r8,0
80000e30:	ef 48 ff fc 	st.w	r7[-4],r8
80000e34:	c1 38       	rjmp	80000e5a <_ZN6Segway14limitSpeedSoftEl+0xf6>
		AVGSpeedLimitDriveSum += AVGSpeedLimitDriveSumArray[i];
80000e36:	ee f9 ff fc 	ld.w	r9,r7[-4]
80000e3a:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000e3e:	2a 89       	sub	r9,-88
80000e40:	f0 09 03 28 	ld.w	r8,r8[r9<<0x2]
80000e44:	ee f9 ff f8 	ld.w	r9,r7[-8]
80000e48:	f2 08 00 08 	add	r8,r9,r8
80000e4c:	ef 48 ff f8 	st.w	r7[-8],r8
		AVGSpeedLimitDriveSumArray_index = 0;
	}

	// Calculate average driveSum using the array values.
	long AVGSpeedLimitDriveSum = 0;
	for( int i = 0; i < 200; i++ ) {
80000e50:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000e54:	2f f8       	sub	r8,-1
80000e56:	ef 48 ff fc 	st.w	r7[-4],r8
80000e5a:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000e5e:	e0 48 00 c7 	cp.w	r8,199
80000e62:	5f a8       	srle	r8
80000e64:	5c 58       	castu.b	r8
80000e66:	ce 81       	brne	80000e36 <_ZN6Segway14limitSpeedSoftEl+0xd2>
		AVGSpeedLimitDriveSum += AVGSpeedLimitDriveSumArray[i];
	}
	AVGSpeedLimitDriveSum /= 200;
80000e68:	ee fa ff f8 	ld.w	r10,r7[-8]
80000e6c:	e0 68 85 1f 	mov	r8,34079
80000e70:	ea 18 51 eb 	orh	r8,0x51eb
80000e74:	f4 08 04 48 	muls.d	r8,r10,r8
80000e78:	a7 49       	asr	r9,0x6
80000e7a:	f4 08 14 1f 	asr	r8,r10,0x1f
80000e7e:	f2 08 01 08 	sub	r8,r9,r8
80000e82:	ef 48 ff f8 	st.w	r7[-8],r8

	if( AVGSpeedLimitDriveSum > SPEEDLIMIT_END_DRIVESUM ) {
80000e86:	ee fc ff f8 	ld.w	r12,r7[-8]
80000e8a:	f0 1f 00 4d 	mcall	80000fbc <_ZN6Segway14limitSpeedSoftEl+0x258>
80000e8e:	18 98       	mov	r8,r12
80000e90:	30 06       	mov	r6,0
80000e92:	10 9b       	mov	r11,r8
80000e94:	e0 6c 0a 00 	mov	r12,2560
80000e98:	ea 1c 46 8f 	orh	r12,0x468f
80000e9c:	f0 1f 00 49 	mcall	80000fc0 <_ZN6Segway14limitSpeedSoftEl+0x25c>
80000ea0:	18 98       	mov	r8,r12
80000ea2:	58 08       	cp.w	r8,0
80000ea4:	c0 20       	breq	80000ea8 <_ZN6Segway14limitSpeedSoftEl+0x144>
80000ea6:	30 16       	mov	r6,1
80000ea8:	f1 d6 c0 08 	bfextu	r8,r6,0x0,0x8
80000eac:	c0 50       	breq	80000eb6 <_ZN6Segway14limitSpeedSoftEl+0x152>
		// maximum leaning back
		return ALGCFG_SPEEDLIMIT_LEAN_BACK_MAX_DEGREES;
80000eae:	30 08       	mov	r8,0
80000eb0:	ea 18 42 34 	orh	r8,0x4234
80000eb4:	c8 08       	rjmp	80000fb4 <_ZN6Segway14limitSpeedSoftEl+0x250>
	} else if( AVGSpeedLimitDriveSum > SPEEDLIMIT_START_DRIVESUM ) {
80000eb6:	ee fc ff f8 	ld.w	r12,r7[-8]
80000eba:	f0 1f 00 41 	mcall	80000fbc <_ZN6Segway14limitSpeedSoftEl+0x258>
80000ebe:	18 98       	mov	r8,r12
80000ec0:	30 06       	mov	r6,0
80000ec2:	10 9b       	mov	r11,r8
80000ec4:	e0 6c 0a 00 	mov	r12,2560
80000ec8:	ea 1c 46 0f 	orh	r12,0x460f
80000ecc:	f0 1f 00 3d 	mcall	80000fc0 <_ZN6Segway14limitSpeedSoftEl+0x25c>
80000ed0:	18 98       	mov	r8,r12
80000ed2:	58 08       	cp.w	r8,0
80000ed4:	c0 20       	breq	80000ed8 <_ZN6Segway14limitSpeedSoftEl+0x174>
80000ed6:	30 16       	mov	r6,1
80000ed8:	f1 d6 c0 08 	bfextu	r8,r6,0x0,0x8
80000edc:	c1 e0       	breq	80000f18 <_ZN6Segway14limitSpeedSoftEl+0x1b4>
		// leaning back according to the speed
		return ALGCFG_SPEEDLIMIT_LEAN_BACK_MAX_DEGREES * ( AVGSpeedLimitDriveSum - SPEEDLIMIT_START_DRIVESUM ) / ( SPEEDLIMIT_END_DRIVESUM-SPEEDLIMIT_START_DRIVESUM );
80000ede:	ee fc ff f8 	ld.w	r12,r7[-8]
80000ee2:	f0 1f 00 37 	mcall	80000fbc <_ZN6Segway14limitSpeedSoftEl+0x258>
80000ee6:	18 98       	mov	r8,r12
80000ee8:	e0 6b 0a 00 	mov	r11,2560
80000eec:	ea 1b 46 0f 	orh	r11,0x460f
80000ef0:	10 9c       	mov	r12,r8
80000ef2:	f0 1f 00 36 	mcall	80000fc8 <_ZN6Segway14limitSpeedSoftEl+0x264>
80000ef6:	18 98       	mov	r8,r12
80000ef8:	30 0b       	mov	r11,0
80000efa:	ea 1b 42 34 	orh	r11,0x4234
80000efe:	10 9c       	mov	r12,r8
80000f00:	f0 1f 00 33 	mcall	80000fcc <_ZN6Segway14limitSpeedSoftEl+0x268>
80000f04:	18 98       	mov	r8,r12
80000f06:	e0 6b 0a 00 	mov	r11,2560
80000f0a:	ea 1b 46 0f 	orh	r11,0x460f
80000f0e:	10 9c       	mov	r12,r8
80000f10:	f0 1f 00 30 	mcall	80000fd0 <_ZN6Segway14limitSpeedSoftEl+0x26c>
80000f14:	18 98       	mov	r8,r12
80000f16:	c4 f8       	rjmp	80000fb4 <_ZN6Segway14limitSpeedSoftEl+0x250>
	} else if( AVGSpeedLimitDriveSum < -SPEEDLIMIT_END_DRIVESUM ) {
80000f18:	ee fc ff f8 	ld.w	r12,r7[-8]
80000f1c:	f0 1f 00 28 	mcall	80000fbc <_ZN6Segway14limitSpeedSoftEl+0x258>
80000f20:	18 98       	mov	r8,r12
80000f22:	4a d9       	lddpc	r9,80000fd4 <_ZN6Segway14limitSpeedSoftEl+0x270>
80000f24:	72 09       	ld.w	r9,r9[0x0]
80000f26:	ee 19 80 00 	eorh	r9,0x8000
80000f2a:	30 06       	mov	r6,0
80000f2c:	12 9b       	mov	r11,r9
80000f2e:	10 9c       	mov	r12,r8
80000f30:	f0 1f 00 24 	mcall	80000fc0 <_ZN6Segway14limitSpeedSoftEl+0x25c>
80000f34:	18 98       	mov	r8,r12
80000f36:	58 08       	cp.w	r8,0
80000f38:	c0 20       	breq	80000f3c <_ZN6Segway14limitSpeedSoftEl+0x1d8>
80000f3a:	30 16       	mov	r6,1
80000f3c:	f1 d6 c0 08 	bfextu	r8,r6,0x0,0x8
80000f40:	c0 50       	breq	80000f4a <_ZN6Segway14limitSpeedSoftEl+0x1e6>
		// maximum leaning ahead
		return -ALGCFG_SPEEDLIMIT_LEAN_BACK_MAX_DEGREES;
80000f42:	30 08       	mov	r8,0
80000f44:	ea 18 c2 34 	orh	r8,0xc234
80000f48:	c3 68       	rjmp	80000fb4 <_ZN6Segway14limitSpeedSoftEl+0x250>
	} else if( AVGSpeedLimitDriveSum < -SPEEDLIMIT_START_DRIVESUM ) {
80000f4a:	ee fc ff f8 	ld.w	r12,r7[-8]
80000f4e:	f0 1f 00 1c 	mcall	80000fbc <_ZN6Segway14limitSpeedSoftEl+0x258>
80000f52:	18 98       	mov	r8,r12
80000f54:	4a 19       	lddpc	r9,80000fd8 <_ZN6Segway14limitSpeedSoftEl+0x274>
80000f56:	72 09       	ld.w	r9,r9[0x0]
80000f58:	ee 19 80 00 	eorh	r9,0x8000
80000f5c:	30 06       	mov	r6,0
80000f5e:	12 9b       	mov	r11,r9
80000f60:	10 9c       	mov	r12,r8
80000f62:	f0 1f 00 18 	mcall	80000fc0 <_ZN6Segway14limitSpeedSoftEl+0x25c>
80000f66:	18 98       	mov	r8,r12
80000f68:	58 08       	cp.w	r8,0
80000f6a:	c0 20       	breq	80000f6e <_ZN6Segway14limitSpeedSoftEl+0x20a>
80000f6c:	30 16       	mov	r6,1
80000f6e:	f1 d6 c0 08 	bfextu	r8,r6,0x0,0x8
80000f72:	c2 00       	breq	80000fb2 <_ZN6Segway14limitSpeedSoftEl+0x24e>
		// leaning ahead according to the speed
		return -ALGCFG_SPEEDLIMIT_LEAN_BACK_MAX_DEGREES * ( -AVGSpeedLimitDriveSum - SPEEDLIMIT_START_DRIVESUM ) / ( SPEEDLIMIT_END_DRIVESUM-SPEEDLIMIT_START_DRIVESUM );
80000f74:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000f78:	5c 38       	neg	r8
80000f7a:	10 9c       	mov	r12,r8
80000f7c:	f0 1f 00 10 	mcall	80000fbc <_ZN6Segway14limitSpeedSoftEl+0x258>
80000f80:	18 98       	mov	r8,r12
80000f82:	e0 6b 0a 00 	mov	r11,2560
80000f86:	ea 1b 46 0f 	orh	r11,0x460f
80000f8a:	10 9c       	mov	r12,r8
80000f8c:	f0 1f 00 0f 	mcall	80000fc8 <_ZN6Segway14limitSpeedSoftEl+0x264>
80000f90:	18 98       	mov	r8,r12
80000f92:	30 0b       	mov	r11,0
80000f94:	ea 1b c2 34 	orh	r11,0xc234
80000f98:	10 9c       	mov	r12,r8
80000f9a:	f0 1f 00 0d 	mcall	80000fcc <_ZN6Segway14limitSpeedSoftEl+0x268>
80000f9e:	18 98       	mov	r8,r12
80000fa0:	e0 6b 0a 00 	mov	r11,2560
80000fa4:	ea 1b 46 0f 	orh	r11,0x460f
80000fa8:	10 9c       	mov	r12,r8
80000faa:	f0 1f 00 0a 	mcall	80000fd0 <_ZN6Segway14limitSpeedSoftEl+0x26c>
80000fae:	18 98       	mov	r8,r12
80000fb0:	c0 28       	rjmp	80000fb4 <_ZN6Segway14limitSpeedSoftEl+0x250>
	}
	
	return 0;
80000fb2:	30 08       	mov	r8,0
}
80000fb4:	10 9c       	mov	r12,r8
80000fb6:	2f cd       	sub	sp,-16
80000fb8:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80000fbc:	80 00       	ld.sh	r0,r0[0x0]
80000fbe:	93 24       	st.w	r9[0x8],r4
80000fc0:	80 00       	ld.sh	r0,r0[0x0]
80000fc2:	8b fe       	st.w	r5[0x3c],lr
80000fc4:	80 00       	ld.sh	r0,r0[0x0]
80000fc6:	a2 7e       	st.h	r1[0xe],lr
80000fc8:	80 00       	ld.sh	r0,r0[0x0]
80000fca:	90 c0       	ld.uh	r0,r8[0x8]
80000fcc:	80 00       	ld.sh	r0,r0[0x0]
80000fce:	92 40       	ld.sh	r0,r9[0x8]
80000fd0:	80 00       	ld.sh	r0,r0[0x0]
80000fd2:	8f 50       	st.w	r7[0x14],r0
80000fd4:	80 00       	ld.sh	r0,r0[0x0]
80000fd6:	00 38       	cp.w	r8,r0
80000fd8:	80 00       	ld.sh	r0,r0[0x0]
80000fda:	00 34       	cp.w	r4,r0

80000fdc <_ZN6Segway13setMotorSpeedEP5Motorl>:

/*! \brief	Sets the motor's direction and speed to a given PWM value.
	\param	motor	[in] pointer to the motor object
	\param	speed	[in] signed PWM value (-255 to 255) representing the motor speed
*/
void Segway::setMotorSpeed( Motor* motor, long speed ) {
80000fdc:	eb cd 40 80 	pushm	r7,lr
80000fe0:	1a 97       	mov	r7,sp
80000fe2:	20 3d       	sub	sp,12
80000fe4:	ef 4c ff fc 	st.w	r7[-4],r12
80000fe8:	ef 4b ff f8 	st.w	r7[-8],r11
80000fec:	ef 4a ff f4 	st.w	r7[-12],r10
	if( speed < 0 ) {
80000ff0:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000ff4:	58 08       	cp.w	r8,0
80000ff6:	c1 24       	brge	8000101a <_ZN6Segway13setMotorSpeedEP5Motorl+0x3e>
		motor->setDirection( false );
80000ff8:	30 0b       	mov	r11,0
80000ffa:	ee fc ff f8 	ld.w	r12,r7[-8]
80000ffe:	f0 1f 00 10 	mcall	8000103c <_ZN6Segway13setMotorSpeedEP5Motorl+0x60>
		motor->setSpeed( -speed );
80001002:	ee f8 ff f4 	ld.w	r8,r7[-12]
80001006:	5c 58       	castu.b	r8
80001008:	5c 38       	neg	r8
8000100a:	5c 58       	castu.b	r8
8000100c:	5c 58       	castu.b	r8
8000100e:	10 9b       	mov	r11,r8
80001010:	ee fc ff f8 	ld.w	r12,r7[-8]
80001014:	f0 1f 00 0b 	mcall	80001040 <_ZN6Segway13setMotorSpeedEP5Motorl+0x64>
80001018:	c0 e8       	rjmp	80001034 <_ZN6Segway13setMotorSpeedEP5Motorl+0x58>
	} else {
		motor->setDirection( true );
8000101a:	30 1b       	mov	r11,1
8000101c:	ee fc ff f8 	ld.w	r12,r7[-8]
80001020:	f0 1f 00 07 	mcall	8000103c <_ZN6Segway13setMotorSpeedEP5Motorl+0x60>
		motor->setSpeed( speed );
80001024:	ee f8 ff f4 	ld.w	r8,r7[-12]
80001028:	5c 58       	castu.b	r8
8000102a:	10 9b       	mov	r11,r8
8000102c:	ee fc ff f8 	ld.w	r12,r7[-8]
80001030:	f0 1f 00 04 	mcall	80001040 <_ZN6Segway13setMotorSpeedEP5Motorl+0x64>
	}
}
80001034:	2f dd       	sub	sp,-12
80001036:	e3 cd 80 80 	ldm	sp++,r7,pc
8000103a:	00 00       	add	r0,r0
8000103c:	80 00       	ld.sh	r0,r0[0x0]
8000103e:	1f 40       	ld.w	r0,--pc
80001040:	80 00       	ld.sh	r0,r0[0x0]
80001042:	1f 0c       	ld.w	r12,pc++

80001044 <_ZN6Segway14doBatteryCheckEv>:

/*! \brief	Checks the battery voltage and blocks execution if it is lower then MIN_BATTERY_VOLTAGE.

		Blocking is done via displayError.
*/
void Segway::doBatteryCheck() {
80001044:	eb cd 40 c0 	pushm	r6-r7,lr
80001048:	1a 97       	mov	r7,sp
8000104a:	20 1d       	sub	sp,4
8000104c:	ef 4c ff fc 	st.w	r7[-4],r12
	// Check battery voltage
	if( batteryVoltageSensor.getIntegerValue() * MULTIPLEXSENSOR_BATTERYVOLTAGE_FACTOR_MV < MIN_BATTERY_VOLTAGE ) {
80001050:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001054:	f0 c8 ff 00 	sub	r8,r8,-256
80001058:	30 0a       	mov	r10,0
8000105a:	30 0b       	mov	r11,0
8000105c:	10 9c       	mov	r12,r8
8000105e:	f0 1f 00 13 	mcall	800010a8 <_ZN6Segway14doBatteryCheckEv+0x64>
80001062:	18 98       	mov	r8,r12
80001064:	10 9c       	mov	r12,r8
80001066:	f0 1f 00 12 	mcall	800010ac <_ZN6Segway14doBatteryCheckEv+0x68>
8000106a:	18 98       	mov	r8,r12
8000106c:	30 0b       	mov	r11,0
8000106e:	ea 1b 42 00 	orh	r11,0x4200
80001072:	10 9c       	mov	r12,r8
80001074:	f0 1f 00 0f 	mcall	800010b0 <_ZN6Segway14doBatteryCheckEv+0x6c>
80001078:	18 98       	mov	r8,r12
8000107a:	30 06       	mov	r6,0
8000107c:	e0 6b e0 00 	mov	r11,57344
80001080:	ea 1b 46 ab 	orh	r11,0x46ab
80001084:	10 9c       	mov	r12,r8
80001086:	f0 1f 00 0c 	mcall	800010b4 <_ZN6Segway14doBatteryCheckEv+0x70>
8000108a:	18 98       	mov	r8,r12
8000108c:	58 08       	cp.w	r8,0
8000108e:	c0 20       	breq	80001092 <_ZN6Segway14doBatteryCheckEv+0x4e>
80001090:	30 16       	mov	r6,1
80001092:	f1 d6 c0 08 	bfextu	r8,r6,0x0,0x8
80001096:	c0 60       	breq	800010a2 <_ZN6Segway14doBatteryCheckEv+0x5e>
		// battery voltage too low
		displayError( ERROR_CODE_INIT_LOWBATTERY );
80001098:	30 1b       	mov	r11,1
8000109a:	ee fc ff fc 	ld.w	r12,r7[-4]
8000109e:	f0 1f 00 07 	mcall	800010b8 <_ZN6Segway14doBatteryCheckEv+0x74>
	}
}
800010a2:	2f fd       	sub	sp,-4
800010a4:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800010a8:	80 00       	ld.sh	r0,r0[0x0]
800010aa:	2e 0c       	sub	r12,-32
800010ac:	80 00       	ld.sh	r0,r0[0x0]
800010ae:	93 24       	st.w	r9[0x8],r4
800010b0:	80 00       	ld.sh	r0,r0[0x0]
800010b2:	92 40       	ld.sh	r0,r9[0x8]
800010b4:	80 00       	ld.sh	r0,r0[0x0]
800010b6:	8b fe       	st.w	r5[0x3c],lr
800010b8:	80 00       	ld.sh	r0,r0[0x0]
800010ba:	18 a0       	st.w	r12++,r0

800010bc <_ZN6Segway4mainEv>:
		Before starting the timer, it is made sure that the foot switch is not pressed.
		
		While running, this function sends debug data via the bluetooth interface.
		Different debug values can be enabled by uncommenting them here and in timerFunction().
*/
void Segway::main() {
800010bc:	eb cd 40 80 	pushm	r7,lr
800010c0:	1a 97       	mov	r7,sp
800010c2:	20 1d       	sub	sp,4
800010c4:	ef 4c ff fc 	st.w	r7[-4],r12
	initHelpers();
800010c8:	ee fc ff fc 	ld.w	r12,r7[-4]
800010cc:	f0 1f 00 6e 	mcall	80001284 <_ZN6Segway4mainEv+0x1c8>
	
	// Footswitch pressed on start -> don't continue until foot switch is released
	waitForFootSwitchReleased();
800010d0:	ee fc ff fc 	ld.w	r12,r7[-4]
800010d4:	f0 1f 00 6d 	mcall	80001288 <_ZN6Segway4mainEv+0x1cc>

	
	// Calibrate steering
	setCurrentSteeringPositionAsZero();
800010d8:	ee fc ff fc 	ld.w	r12,r7[-4]
800010dc:	f0 1f 00 6c 	mcall	8000128c <_ZN6Segway4mainEv+0x1d0>
	setCurrentOrientationAsZero();
800010e0:	ee fc ff fc 	ld.w	r12,r7[-4]
800010e4:	f0 1f 00 6b 	mcall	80001290 <_ZN6Segway4mainEv+0x1d4>
	
	operationMode = _standby;
800010e8:	ee f8 ff fc 	ld.w	r8,r7[-4]
800010ec:	30 09       	mov	r9,0
800010ee:	f1 49 04 98 	st.w	r8[1176],r9
	
	// Disable motors and enable timer
	leftMotor.setEnabled( false );
800010f2:	30 0c       	mov	r12,0
800010f4:	f0 1f 00 68 	mcall	80001294 <_ZN6Segway4mainEv+0x1d8>
	rightMotor.setEnabled( false );
800010f8:	30 0c       	mov	r12,0
800010fa:	f0 1f 00 67 	mcall	80001294 <_ZN6Segway4mainEv+0x1d8>
	myTimer.setIsTimerEnabled( true );
800010fe:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001102:	30 1b       	mov	r11,1
80001104:	10 9c       	mov	r12,r8
80001106:	f0 1f 00 65 	mcall	80001298 <_ZN6Segway4mainEv+0x1dc>
	
	setStatusLED( &Configuration::greenStatusLEDConfig, true );
8000110a:	30 1a       	mov	r10,1
8000110c:	4e 4b       	lddpc	r11,8000129c <_ZN6Segway4mainEv+0x1e0>
8000110e:	ee fc ff fc 	ld.w	r12,r7[-4]
80001112:	f0 1f 00 64 	mcall	800012a0 <_ZN6Segway4mainEv+0x1e4>
	
	while( true ) {
		// Wait for new data to be available
		while( !debugData.newDataAvailable ) {
80001116:	c0 28       	rjmp	8000111a <_ZN6Segway4mainEv+0x5e>
			asm( "nop" );
80001118:	d7 03       	nop
	
	setStatusLED( &Configuration::greenStatusLEDConfig, true );
	
	while( true ) {
		// Wait for new data to be available
		while( !debugData.newDataAvailable ) {
8000111a:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000111e:	f1 38 04 9d 	ld.ub	r8,r8[1181]
80001122:	ec 18 00 01 	eorl	r8,0x1
80001126:	5c 58       	castu.b	r8
80001128:	cf 81       	brne	80001118 <_ZN6Segway4mainEv+0x5c>
			asm( "nop" );
		}
		
		// Prevent data refresh by timer
		debugData.doNotRefresh = true;
8000112a:	ee f9 ff fc 	ld.w	r9,r7[-4]
8000112e:	30 18       	mov	r8,1
80001130:	f3 68 04 9c 	st.b	r9[1180],r8
		
		debugData.newDataAvailable = false;
80001134:	ee f9 ff fc 	ld.w	r9,r7[-4]
80001138:	30 08       	mov	r8,0
8000113a:	f3 68 04 9d 	st.b	r9[1181],r8
		//	bluetoothUART.sendString( "\r\nFussschalter: true" );
		//} else {
		//	bluetoothUART.sendString( "\r\nFootswi: false" );
		//}
		//
		bluetoothUART.sendString( "\r\nbattVolt: " );
8000113e:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001142:	f0 c8 fe a8 	sub	r8,r8,-344
80001146:	4d 8b       	lddpc	r11,800012a4 <_ZN6Segway4mainEv+0x1e8>
80001148:	10 9c       	mov	r12,r8
8000114a:	f0 1f 00 58 	mcall	800012a8 <_ZN6Segway4mainEv+0x1ec>
		bluetoothUART.sendNumber( debugData.batteryVoltage );
8000114e:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001152:	f0 f9 04 b4 	ld.w	r9,r8[1204]
80001156:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000115a:	f0 c8 fe a8 	sub	r8,r8,-344
8000115e:	12 9b       	mov	r11,r9
80001160:	10 9c       	mov	r12,r8
80001162:	f0 1f 00 53 	mcall	800012ac <_ZN6Segway4mainEv+0x1f0>
		bluetoothUART.sendString( " mV" );
80001166:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000116a:	f0 c8 fe a8 	sub	r8,r8,-344
8000116e:	4d 1b       	lddpc	r11,800012b0 <_ZN6Segway4mainEv+0x1f4>
80001170:	10 9c       	mov	r12,r8
80001172:	f0 1f 00 4e 	mcall	800012a8 <_ZN6Segway4mainEv+0x1ec>
		//bluetoothUART.sendString( "\r\nMAGyro: " );
		//bluetoothUART.sendNumber( debugData.MAGyro );
		//bluetoothUART.sendString( "\r\nMAAngle: " );
		//bluetoothUART.sendNumber( debugData.MAAngle );
		//
		bluetoothUART.sendString( "\r\nDriveSum: " );
80001176:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000117a:	f0 c8 fe a8 	sub	r8,r8,-344
8000117e:	4c eb       	lddpc	r11,800012b4 <_ZN6Segway4mainEv+0x1f8>
80001180:	10 9c       	mov	r12,r8
80001182:	f0 1f 00 4a 	mcall	800012a8 <_ZN6Segway4mainEv+0x1ec>
		bluetoothUART.sendNumber( debugData.driveSum );
80001186:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000118a:	f0 f9 04 b8 	ld.w	r9,r8[1208]
8000118e:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001192:	f0 c8 fe a8 	sub	r8,r8,-344
80001196:	12 9b       	mov	r11,r9
80001198:	10 9c       	mov	r12,r8
8000119a:	f0 1f 00 45 	mcall	800012ac <_ZN6Segway4mainEv+0x1f0>
		bluetoothUART.sendString( "\r\nSteeringPWM: " );
8000119e:	ee f8 ff fc 	ld.w	r8,r7[-4]
800011a2:	f0 c8 fe a8 	sub	r8,r8,-344
800011a6:	4c 5b       	lddpc	r11,800012b8 <_ZN6Segway4mainEv+0x1fc>
800011a8:	10 9c       	mov	r12,r8
800011aa:	f0 1f 00 40 	mcall	800012a8 <_ZN6Segway4mainEv+0x1ec>
		bluetoothUART.sendNumber( debugData.steeringPWM );
800011ae:	ee f8 ff fc 	ld.w	r8,r7[-4]
800011b2:	f0 f9 04 bc 	ld.w	r9,r8[1212]
800011b6:	ee f8 ff fc 	ld.w	r8,r7[-4]
800011ba:	f0 c8 fe a8 	sub	r8,r8,-344
800011be:	12 9b       	mov	r11,r9
800011c0:	10 9c       	mov	r12,r8
800011c2:	f0 1f 00 3b 	mcall	800012ac <_ZN6Segway4mainEv+0x1f0>
		bluetoothUART.sendString( "\r\nLSpeed: " );
800011c6:	ee f8 ff fc 	ld.w	r8,r7[-4]
800011ca:	f0 c8 fe a8 	sub	r8,r8,-344
800011ce:	4b cb       	lddpc	r11,800012bc <_ZN6Segway4mainEv+0x200>
800011d0:	10 9c       	mov	r12,r8
800011d2:	f0 1f 00 36 	mcall	800012a8 <_ZN6Segway4mainEv+0x1ec>
		bluetoothUART.sendNumber( debugData.leftSpeed );
800011d6:	ee f8 ff fc 	ld.w	r8,r7[-4]
800011da:	f0 f9 04 c0 	ld.w	r9,r8[1216]
800011de:	ee f8 ff fc 	ld.w	r8,r7[-4]
800011e2:	f0 c8 fe a8 	sub	r8,r8,-344
800011e6:	12 9b       	mov	r11,r9
800011e8:	10 9c       	mov	r12,r8
800011ea:	f0 1f 00 31 	mcall	800012ac <_ZN6Segway4mainEv+0x1f0>
		bluetoothUART.sendString( "\r\nRSpeed: " );
800011ee:	ee f8 ff fc 	ld.w	r8,r7[-4]
800011f2:	f0 c8 fe a8 	sub	r8,r8,-344
800011f6:	4b 3b       	lddpc	r11,800012c0 <_ZN6Segway4mainEv+0x204>
800011f8:	10 9c       	mov	r12,r8
800011fa:	f0 1f 00 2c 	mcall	800012a8 <_ZN6Segway4mainEv+0x1ec>
		bluetoothUART.sendNumber( debugData.rightSpeed );
800011fe:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001202:	f0 f9 04 c4 	ld.w	r9,r8[1220]
80001206:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000120a:	f0 c8 fe a8 	sub	r8,r8,-344
8000120e:	12 9b       	mov	r11,r9
80001210:	10 9c       	mov	r12,r8
80001212:	f0 1f 00 27 	mcall	800012ac <_ZN6Segway4mainEv+0x1f0>
		//
		bluetoothUART.sendString( "\r\nCFTiltAngle: " );
80001216:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000121a:	f0 c8 fe a8 	sub	r8,r8,-344
8000121e:	4a ab       	lddpc	r11,800012c4 <_ZN6Segway4mainEv+0x208>
80001220:	10 9c       	mov	r12,r8
80001222:	f0 1f 00 22 	mcall	800012a8 <_ZN6Segway4mainEv+0x1ec>
		bluetoothUART.sendNumber( debugData.CFTiltAngle );
80001226:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000122a:	f0 f9 04 c8 	ld.w	r9,r8[1224]
8000122e:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001232:	f0 c8 fe a8 	sub	r8,r8,-344
80001236:	12 9b       	mov	r11,r9
80001238:	10 9c       	mov	r12,r8
8000123a:	f0 1f 00 1d 	mcall	800012ac <_ZN6Segway4mainEv+0x1f0>
		bluetoothUART.sendString( "\r\nSpeedLimitTiltAngle: " );
8000123e:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001242:	f0 c8 fe a8 	sub	r8,r8,-344
80001246:	4a 1b       	lddpc	r11,800012c8 <_ZN6Segway4mainEv+0x20c>
80001248:	10 9c       	mov	r12,r8
8000124a:	f0 1f 00 18 	mcall	800012a8 <_ZN6Segway4mainEv+0x1ec>
		bluetoothUART.sendNumber( debugData.speedLimitTiltAngle );
8000124e:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001252:	f0 f9 04 d4 	ld.w	r9,r8[1236]
80001256:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000125a:	f0 c8 fe a8 	sub	r8,r8,-344
8000125e:	12 9b       	mov	r11,r9
80001260:	10 9c       	mov	r12,r8
80001262:	f0 1f 00 13 	mcall	800012ac <_ZN6Segway4mainEv+0x1f0>
		//bluetoothUART.sendString( "\r\naccelerometerAngle: " );
		//bluetoothUART.sendNumber( debugData.accelerometerAngle );
		//bluetoothUART.sendString( "\r\nrealAngleRate: " );
		//bluetoothUART.sendNumber( debugData.realAngleRate );
		
		bluetoothUART.sendString( "\r\n\r\n" );
80001266:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000126a:	f0 c8 fe a8 	sub	r8,r8,-344
8000126e:	49 8b       	lddpc	r11,800012cc <_ZN6Segway4mainEv+0x210>
80001270:	10 9c       	mov	r12,r8
80001272:	f0 1f 00 0e 	mcall	800012a8 <_ZN6Segway4mainEv+0x1ec>
		
		// Allow data refresh by timer
		debugData.doNotRefresh = false;
80001276:	ee f9 ff fc 	ld.w	r9,r7[-4]
8000127a:	30 08       	mov	r8,0
8000127c:	f3 68 04 9c 	st.b	r9[1180],r8
	rightMotor.setEnabled( false );
	myTimer.setIsTimerEnabled( true );
	
	setStatusLED( &Configuration::greenStatusLEDConfig, true );
	
	while( true ) {
80001280:	d7 03       	nop
		// Wait for new data to be available
		while( !debugData.newDataAvailable ) {
80001282:	c4 cb       	rjmp	8000111a <_ZN6Segway4mainEv+0x5e>
80001284:	80 00       	ld.sh	r0,r0[0x0]
80001286:	12 d0       	st.w	--r9,r0
80001288:	80 00       	ld.sh	r0,r0[0x0]
8000128a:	1b 58       	ld.sh	r8,--sp
8000128c:	80 00       	ld.sh	r0,r0[0x0]
8000128e:	17 9c       	ld.ub	r12,r11[0x1]
80001290:	80 00       	ld.sh	r0,r0[0x0]
80001292:	18 24       	rsub	r4,r12
80001294:	80 00       	ld.sh	r0,r0[0x0]
80001296:	1f b4       	ld.ub	r4,pc[0x3]
80001298:	80 00       	ld.sh	r0,r0[0x0]
8000129a:	34 68       	mov	r8,70
8000129c:	00 00       	add	r0,r0
8000129e:	07 68       	ld.uh	r8,--r3
800012a0:	80 00       	ld.sh	r0,r0[0x0]
800012a2:	1a b8       	st.h	sp++,r8
800012a4:	80 00       	ld.sh	r0,r0[0x0]
800012a6:	00 3c       	cp.w	r12,r0
800012a8:	80 00       	ld.sh	r0,r0[0x0]
800012aa:	3f d4       	mov	r4,-3
800012ac:	80 00       	ld.sh	r0,r0[0x0]
800012ae:	40 1c       	lddsp	r12,sp[0x4]
800012b0:	80 00       	ld.sh	r0,r0[0x0]
800012b2:	00 4c       	or	r12,r0
800012b4:	80 00       	ld.sh	r0,r0[0x0]
800012b6:	00 50       	eor	r0,r0
800012b8:	80 00       	ld.sh	r0,r0[0x0]
800012ba:	00 60       	and	r0,r0
800012bc:	80 00       	ld.sh	r0,r0[0x0]
800012be:	00 70       	tst	r0,r0
800012c0:	80 00       	ld.sh	r0,r0[0x0]
800012c2:	00 7c       	tst	r12,r0
800012c4:	80 00       	ld.sh	r0,r0[0x0]
800012c6:	00 88       	andn	r8,r0
800012c8:	80 00       	ld.sh	r0,r0[0x0]
800012ca:	00 98       	mov	r8,r0
800012cc:	80 00       	ld.sh	r0,r0[0x0]
800012ce:	00 b0       	st.h	r0++,r0

800012d0 <_ZN6Segway11initHelpersEv>:
}


/*! \brief	Initializes the helper objects. Blocks execution on error.
*/
void Segway::initHelpers() {
800012d0:	eb cd 40 80 	pushm	r7,lr
800012d4:	1a 97       	mov	r7,sp
800012d6:	21 1d       	sub	sp,68
800012d8:	ef 4c ff bc 	st.w	r7[-68],r12
	// Initialize status LEDs
	initStatusLED( &Configuration::redStatusLEDConfig );
800012dc:	fe fb 04 48 	ld.w	r11,pc[1096]
800012e0:	ee fc ff bc 	ld.w	r12,r7[-68]
800012e4:	f0 1f 01 11 	mcall	80001728 <_ZN6Segway11initHelpersEv+0x458>
	setStatusLED( &Configuration::redStatusLEDConfig, false );
800012e8:	30 0a       	mov	r10,0
800012ea:	fe fb 04 3a 	ld.w	r11,pc[1082]
800012ee:	ee fc ff bc 	ld.w	r12,r7[-68]
800012f2:	f0 1f 01 0f 	mcall	8000172c <_ZN6Segway11initHelpersEv+0x45c>
	initStatusLED( &Configuration::greenStatusLEDConfig );
800012f6:	fe fb 04 3a 	ld.w	r11,pc[1082]
800012fa:	ee fc ff bc 	ld.w	r12,r7[-68]
800012fe:	f0 1f 01 0b 	mcall	80001728 <_ZN6Segway11initHelpersEv+0x458>
	setStatusLED( &Configuration::greenStatusLEDConfig, false );
80001302:	30 0a       	mov	r10,0
80001304:	fe fb 04 2c 	ld.w	r11,pc[1068]
80001308:	ee fc ff bc 	ld.w	r12,r7[-68]
8000130c:	f0 1f 01 08 	mcall	8000172c <_ZN6Segway11initHelpersEv+0x45c>
	// Initialize Timer at 100Hz, will be in deactivated state.
	if( !myTimer.initTimer( 100 )) {
80001310:	ee f8 ff bc 	ld.w	r8,r7[-68]
80001314:	36 4b       	mov	r11,100
80001316:	10 9c       	mov	r12,r8
80001318:	f0 1f 01 07 	mcall	80001734 <_ZN6Segway11initHelpersEv+0x464>
8000131c:	18 98       	mov	r8,r12
8000131e:	ec 18 00 01 	eorl	r8,0x1
80001322:	5c 58       	castu.b	r8
80001324:	c0 60       	breq	80001330 <_ZN6Segway11initHelpersEv+0x60>
		displayError( ERROR_CODE_INIT_TIMER );
80001326:	30 2b       	mov	r11,2
80001328:	ee fc ff bc 	ld.w	r12,r7[-68]
8000132c:	f0 1f 01 03 	mcall	80001738 <_ZN6Segway11initHelpersEv+0x468>
	}
	
	// Initialize the ADC, so it can be used by the ADCSensors
	if( !myADC.init()) {
80001330:	ee f8 ff bc 	ld.w	r8,r7[-68]
80001334:	2f c8       	sub	r8,-4
80001336:	10 9c       	mov	r12,r8
80001338:	f0 1f 01 01 	mcall	8000173c <_ZN6Segway11initHelpersEv+0x46c>
8000133c:	18 98       	mov	r8,r12
8000133e:	ec 18 00 01 	eorl	r8,0x1
80001342:	5c 58       	castu.b	r8
80001344:	c0 60       	breq	80001350 <_ZN6Segway11initHelpersEv+0x80>
		displayError( ERROR_CODE_INIT_ADC );
80001346:	30 3b       	mov	r11,3
80001348:	ee fc ff bc 	ld.w	r12,r7[-68]
8000134c:	f0 1f 00 fb 	mcall	80001738 <_ZN6Segway11initHelpersEv+0x468>
	}
		
	footSwitchSensor.init( &Configuration::footSwitchConfig );
80001350:	ee f8 ff bc 	ld.w	r8,r7[-68]
80001354:	2e 08       	sub	r8,-32
80001356:	fe fb 03 ea 	ld.w	r11,pc[1002]
8000135a:	10 9c       	mov	r12,r8
8000135c:	f0 1f 00 fa 	mcall	80001744 <_ZN6Segway11initHelpersEv+0x474>
		
	if( !orientationAccelerometer.init( &Configuration::orientationAccelerometerConfig, &myADC )) {
80001360:	ee f8 ff bc 	ld.w	r8,r7[-68]
80001364:	f0 c9 ff fc 	sub	r9,r8,-4
80001368:	ee f8 ff bc 	ld.w	r8,r7[-68]
8000136c:	2d 08       	sub	r8,-48
8000136e:	12 9a       	mov	r10,r9
80001370:	fe fb 03 d8 	ld.w	r11,pc[984]
80001374:	10 9c       	mov	r12,r8
80001376:	f0 1f 00 f6 	mcall	8000174c <_ZN6Segway11initHelpersEv+0x47c>
8000137a:	18 98       	mov	r8,r12
8000137c:	ec 18 00 01 	eorl	r8,0x1
80001380:	5c 58       	castu.b	r8
80001382:	c0 60       	breq	8000138e <_ZN6Segway11initHelpersEv+0xbe>
		displayError( ERROR_CODE_INIT_ORIENTACCEL );
80001384:	30 4b       	mov	r11,4
80001386:	ee fc ff bc 	ld.w	r12,r7[-68]
8000138a:	f0 1f 00 ec 	mcall	80001738 <_ZN6Segway11initHelpersEv+0x468>
	}
	if( !orientationGyrometer.init( &Configuration::orientationGyrometerConfig, &myADC )) {
8000138e:	ee f8 ff bc 	ld.w	r8,r7[-68]
80001392:	f0 c9 ff fc 	sub	r9,r8,-4
80001396:	ee f8 ff bc 	ld.w	r8,r7[-68]
8000139a:	29 c8       	sub	r8,-100
8000139c:	12 9a       	mov	r10,r9
8000139e:	fe fb 03 b2 	ld.w	r11,pc[946]
800013a2:	10 9c       	mov	r12,r8
800013a4:	f0 1f 00 ea 	mcall	8000174c <_ZN6Segway11initHelpersEv+0x47c>
800013a8:	18 98       	mov	r8,r12
800013aa:	ec 18 00 01 	eorl	r8,0x1
800013ae:	5c 58       	castu.b	r8
800013b0:	c0 60       	breq	800013bc <_ZN6Segway11initHelpersEv+0xec>
		displayError( ERROR_CODE_INIT_ORIENTGYRO );
800013b2:	30 5b       	mov	r11,5
800013b4:	ee fc ff bc 	ld.w	r12,r7[-68]
800013b8:	f0 1f 00 e0 	mcall	80001738 <_ZN6Segway11initHelpersEv+0x468>
	}
	if( !orientationGyrometerReference.init( &Configuration::orientationGyrometerReferenceConfig, &myADC )) {
800013bc:	ee f8 ff bc 	ld.w	r8,r7[-68]
800013c0:	f0 c9 ff fc 	sub	r9,r8,-4
800013c4:	ee f8 ff bc 	ld.w	r8,r7[-68]
800013c8:	f0 c8 ff 68 	sub	r8,r8,-152
800013cc:	12 9a       	mov	r10,r9
800013ce:	fe fb 03 86 	ld.w	r11,pc[902]
800013d2:	10 9c       	mov	r12,r8
800013d4:	f0 1f 00 de 	mcall	8000174c <_ZN6Segway11initHelpersEv+0x47c>
800013d8:	18 98       	mov	r8,r12
800013da:	ec 18 00 01 	eorl	r8,0x1
800013de:	5c 58       	castu.b	r8
800013e0:	c0 60       	breq	800013ec <_ZN6Segway11initHelpersEv+0x11c>
		displayError( ERROR_CODE_INIT_ORIENTGYROREFERENCE );
800013e2:	30 6b       	mov	r11,6
800013e4:	ee fc ff bc 	ld.w	r12,r7[-68]
800013e8:	f0 1f 00 d4 	mcall	80001738 <_ZN6Segway11initHelpersEv+0x468>
	}
	if( !steeringPotentiometer.init( &Configuration::steeringPotentiometerConfig, &myADC )) {
800013ec:	ee f8 ff bc 	ld.w	r8,r7[-68]
800013f0:	f0 c9 ff fc 	sub	r9,r8,-4
800013f4:	ee f8 ff bc 	ld.w	r8,r7[-68]
800013f8:	f0 c8 ff 34 	sub	r8,r8,-204
800013fc:	12 9a       	mov	r10,r9
800013fe:	fe fb 03 5a 	ld.w	r11,pc[858]
80001402:	10 9c       	mov	r12,r8
80001404:	f0 1f 00 d2 	mcall	8000174c <_ZN6Segway11initHelpersEv+0x47c>
80001408:	18 98       	mov	r8,r12
8000140a:	ec 18 00 01 	eorl	r8,0x1
8000140e:	5c 58       	castu.b	r8
80001410:	c0 60       	breq	8000141c <_ZN6Segway11initHelpersEv+0x14c>
		displayError( ERROR_CODE_INIT_STEERINGPOTI );
80001412:	30 7b       	mov	r11,7
80001414:	ee fc ff bc 	ld.w	r12,r7[-68]
80001418:	f0 1f 00 c8 	mcall	80001738 <_ZN6Segway11initHelpersEv+0x468>
	}
	if( !batteryVoltageSensor.init( &Configuration::batteryVoltageSensorConfig, &myADC )) {
8000141c:	ee f8 ff bc 	ld.w	r8,r7[-68]
80001420:	f0 c9 ff fc 	sub	r9,r8,-4
80001424:	ee f8 ff bc 	ld.w	r8,r7[-68]
80001428:	f0 c8 ff 00 	sub	r8,r8,-256
8000142c:	12 9a       	mov	r10,r9
8000142e:	fe fb 03 2e 	ld.w	r11,pc[814]
80001432:	10 9c       	mov	r12,r8
80001434:	f0 1f 00 c6 	mcall	8000174c <_ZN6Segway11initHelpersEv+0x47c>
80001438:	18 98       	mov	r8,r12
8000143a:	ec 18 00 01 	eorl	r8,0x1
8000143e:	5c 58       	castu.b	r8
80001440:	c0 60       	breq	8000144c <_ZN6Segway11initHelpersEv+0x17c>
		displayError( ERROR_CODE_INIT_BATTERYSENS );
80001442:	30 8b       	mov	r11,8
80001444:	ee fc ff bc 	ld.w	r12,r7[-68]
80001448:	f0 1f 00 bc 	mcall	80001738 <_ZN6Segway11initHelpersEv+0x468>
	}
	
	// init multiplexer pins
	unsigned char multiplexer_ports[] = {1, 1, 1};
8000144c:	fe f9 03 14 	ld.w	r9,pc[788]
80001450:	ee c8 00 08 	sub	r8,r7,8
80001454:	13 8a       	ld.ub	r10,r9[0x0]
80001456:	b0 8a       	st.b	r8[0x0],r10
80001458:	13 9a       	ld.ub	r10,r9[0x1]
8000145a:	b0 9a       	st.b	r8[0x1],r10
8000145c:	13 a9       	ld.ub	r9,r9[0x2]
8000145e:	b0 a9       	st.b	r8[0x2],r9
	unsigned char multiplexer_pins[] = {2, 3, 4};
80001460:	fe f9 03 04 	ld.w	r9,pc[772]
80001464:	ee c8 00 0c 	sub	r8,r7,12
80001468:	13 8a       	ld.ub	r10,r9[0x0]
8000146a:	b0 8a       	st.b	r8[0x0],r10
8000146c:	13 9a       	ld.ub	r10,r9[0x1]
8000146e:	b0 9a       	st.b	r8[0x1],r10
80001470:	13 a9       	ld.ub	r9,r9[0x2]
80001472:	b0 a9       	st.b	r8[0x2],r9
	for( unsigned char i = 0; i < 3; i++ ) {
80001474:	30 08       	mov	r8,0
80001476:	ef 68 ff fb 	st.b	r7[-5],r8
8000147a:	c7 e8       	rjmp	80001576 <_ZN6Segway11initHelpersEv+0x2a6>
		//SET_BIT( AVR32_GPIO.port[multiplexer_ports[i]].gper, multiplexer_pins[i] ); // Pin is controlled by GPIO
		SET_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + multiplexer_ports[i] * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_GPER), multiplexer_pins[i] );
8000147c:	fe f8 02 ec 	ld.w	r8,pc[748]
80001480:	70 08       	ld.w	r8,r8[0x0]
80001482:	10 99       	mov	r9,r8
80001484:	ef 38 ff fb 	ld.ub	r8,r7[-5]
80001488:	ee 08 00 08 	add	r8,r7,r8
8000148c:	f1 38 ff f8 	ld.ub	r8,r8[-8]
80001490:	a9 68       	lsl	r8,0x8
80001492:	f2 08 00 08 	add	r8,r9,r8
80001496:	fe f9 02 d2 	ld.w	r9,pc[722]
8000149a:	72 09       	ld.w	r9,r9[0x0]
8000149c:	12 9a       	mov	r10,r9
8000149e:	ef 39 ff fb 	ld.ub	r9,r7[-5]
800014a2:	ee 09 00 09 	add	r9,r7,r9
800014a6:	f3 39 ff f8 	ld.ub	r9,r9[-8]
800014aa:	a9 69       	lsl	r9,0x8
800014ac:	f4 09 00 09 	add	r9,r10,r9
800014b0:	72 0a       	ld.w	r10,r9[0x0]
800014b2:	ef 39 ff fb 	ld.ub	r9,r7[-5]
800014b6:	ee 09 00 09 	add	r9,r7,r9
800014ba:	f3 39 ff f4 	ld.ub	r9,r9[-12]
800014be:	30 1b       	mov	r11,1
800014c0:	f6 09 09 49 	lsl	r9,r11,r9
800014c4:	f5 e9 10 09 	or	r9,r10,r9
800014c8:	91 09       	st.w	r8[0x0],r9
		//SET_BIT( AVR32_GPIO.port[multiplexer_ports[i]].oder, multiplexer_pins[i] ); // Pin is driven
		SET_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + multiplexer_ports[i] * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_ODER ), multiplexer_pins[i] );
800014ca:	fe f8 02 9e 	ld.w	r8,pc[670]
800014ce:	70 09       	ld.w	r9,r8[0x0]
800014d0:	ef 38 ff fb 	ld.ub	r8,r7[-5]
800014d4:	ee 08 00 08 	add	r8,r7,r8
800014d8:	f1 38 ff f8 	ld.ub	r8,r8[-8]
800014dc:	a3 68       	lsl	r8,0x2
800014de:	2f f8       	sub	r8,-1
800014e0:	a7 68       	lsl	r8,0x6
800014e2:	f2 08 00 08 	add	r8,r9,r8
800014e6:	fe f9 02 82 	ld.w	r9,pc[642]
800014ea:	72 0a       	ld.w	r10,r9[0x0]
800014ec:	ef 39 ff fb 	ld.ub	r9,r7[-5]
800014f0:	ee 09 00 09 	add	r9,r7,r9
800014f4:	f3 39 ff f8 	ld.ub	r9,r9[-8]
800014f8:	a3 69       	lsl	r9,0x2
800014fa:	2f f9       	sub	r9,-1
800014fc:	a7 69       	lsl	r9,0x6
800014fe:	f4 09 00 09 	add	r9,r10,r9
80001502:	72 0a       	ld.w	r10,r9[0x0]
80001504:	ef 39 ff fb 	ld.ub	r9,r7[-5]
80001508:	ee 09 00 09 	add	r9,r7,r9
8000150c:	f3 39 ff f4 	ld.ub	r9,r9[-12]
80001510:	30 1b       	mov	r11,1
80001512:	f6 09 09 49 	lsl	r9,r11,r9
80001516:	f5 e9 10 09 	or	r9,r10,r9
8000151a:	91 09       	st.w	r8[0x0],r9
		//CLEAR_BIT( AVR32_GPIO.port[multiplexer_ports[i]].ovr, multiplexer_pins[i] ); // set pin to zero
		CLEAR_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + multiplexer_ports[i] * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_OVR ), multiplexer_pins[i] );
8000151c:	fe f8 02 4c 	ld.w	r8,pc[588]
80001520:	70 09       	ld.w	r9,r8[0x0]
80001522:	ef 38 ff fb 	ld.ub	r8,r7[-5]
80001526:	ee 08 00 08 	add	r8,r7,r8
8000152a:	f1 38 ff f8 	ld.ub	r8,r8[-8]
8000152e:	a9 68       	lsl	r8,0x8
80001530:	2b 08       	sub	r8,-80
80001532:	f2 08 00 08 	add	r8,r9,r8
80001536:	fe f9 02 32 	ld.w	r9,pc[562]
8000153a:	72 0a       	ld.w	r10,r9[0x0]
8000153c:	ef 39 ff fb 	ld.ub	r9,r7[-5]
80001540:	ee 09 00 09 	add	r9,r7,r9
80001544:	f3 39 ff f8 	ld.ub	r9,r9[-8]
80001548:	a9 69       	lsl	r9,0x8
8000154a:	2b 09       	sub	r9,-80
8000154c:	f4 09 00 09 	add	r9,r10,r9
80001550:	72 0a       	ld.w	r10,r9[0x0]
80001552:	ef 39 ff fb 	ld.ub	r9,r7[-5]
80001556:	ee 09 00 09 	add	r9,r7,r9
8000155a:	f3 39 ff f4 	ld.ub	r9,r9[-12]
8000155e:	30 1b       	mov	r11,1
80001560:	f6 09 09 49 	lsl	r9,r11,r9
80001564:	5c d9       	com	r9
80001566:	f5 e9 00 09 	and	r9,r10,r9
8000156a:	91 09       	st.w	r8[0x0],r9
	}
	
	// init multiplexer pins
	unsigned char multiplexer_ports[] = {1, 1, 1};
	unsigned char multiplexer_pins[] = {2, 3, 4};
	for( unsigned char i = 0; i < 3; i++ ) {
8000156c:	ef 38 ff fb 	ld.ub	r8,r7[-5]
80001570:	2f f8       	sub	r8,-1
80001572:	ef 68 ff fb 	st.b	r7[-5],r8
80001576:	ef 39 ff fb 	ld.ub	r9,r7[-5]
8000157a:	30 28       	mov	r8,2
8000157c:	f0 09 18 00 	cp.b	r9,r8
80001580:	5f 88       	srls	r8
80001582:	5c 58       	castu.b	r8
80001584:	fe 91 ff 7c 	brne	8000147c <_ZN6Segway11initHelpersEv+0x1ac>
		SET_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + multiplexer_ports[i] * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_ODER ), multiplexer_pins[i] );
		//CLEAR_BIT( AVR32_GPIO.port[multiplexer_ports[i]].ovr, multiplexer_pins[i] ); // set pin to zero
		CLEAR_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + multiplexer_ports[i] * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_OVR ), multiplexer_pins[i] );
	}
	//CLEAR_BIT( AVR32_GPIO.port[1].ovr, 2 );
	CLEAR_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + 1 * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_OVR ), 2 );
80001588:	4f 88       	lddpc	r8,80001768 <_ZN6Segway11initHelpersEv+0x498>
8000158a:	70 08       	ld.w	r8,r8[0x0]
8000158c:	f0 c8 fe b0 	sub	r8,r8,-336
80001590:	4f 69       	lddpc	r9,80001768 <_ZN6Segway11initHelpersEv+0x498>
80001592:	72 09       	ld.w	r9,r9[0x0]
80001594:	f2 c9 fe b0 	sub	r9,r9,-336
80001598:	72 09       	ld.w	r9,r9[0x0]
8000159a:	a3 c9       	cbr	r9,0x2
8000159c:	91 09       	st.w	r8[0x0],r9
	//SET_BIT( AVR32_GPIO.port[1].ovr, 3 );
	SET_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + 1 * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_OVR ), 3 );
8000159e:	4f 38       	lddpc	r8,80001768 <_ZN6Segway11initHelpersEv+0x498>
800015a0:	70 08       	ld.w	r8,r8[0x0]
800015a2:	f0 c8 fe b0 	sub	r8,r8,-336
800015a6:	4f 19       	lddpc	r9,80001768 <_ZN6Segway11initHelpersEv+0x498>
800015a8:	72 09       	ld.w	r9,r9[0x0]
800015aa:	f2 c9 fe b0 	sub	r9,r9,-336
800015ae:	72 09       	ld.w	r9,r9[0x0]
800015b0:	a3 b9       	sbr	r9,0x3
800015b2:	91 09       	st.w	r8[0x0],r9
	//CLEAR_BIT( AVR32_GPIO.port[1].ovr, 4 );
	CLEAR_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + 1 * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_OVR ), 4 );
800015b4:	4e d8       	lddpc	r8,80001768 <_ZN6Segway11initHelpersEv+0x498>
800015b6:	70 08       	ld.w	r8,r8[0x0]
800015b8:	f0 c8 fe b0 	sub	r8,r8,-336
800015bc:	4e b9       	lddpc	r9,80001768 <_ZN6Segway11initHelpersEv+0x498>
800015be:	72 09       	ld.w	r9,r9[0x0]
800015c0:	f2 c9 fe b0 	sub	r9,r9,-336
800015c4:	72 09       	ld.w	r9,r9[0x0]
800015c6:	a5 c9       	cbr	r9,0x4
800015c8:	91 09       	st.w	r8[0x0],r9
	
	
	Motor::initEnablePin();
800015ca:	f0 1f 00 69 	mcall	8000176c <_ZN6Segway11initHelpersEv+0x49c>
	if( !leftMotor.init( &Configuration::leftMotorConfig )) {
800015ce:	ee f8 ff bc 	ld.w	r8,r7[-68]
800015d2:	f0 c8 fe cc 	sub	r8,r8,-308
800015d6:	4e 7b       	lddpc	r11,80001770 <_ZN6Segway11initHelpersEv+0x4a0>
800015d8:	10 9c       	mov	r12,r8
800015da:	f0 1f 00 67 	mcall	80001774 <_ZN6Segway11initHelpersEv+0x4a4>
800015de:	18 98       	mov	r8,r12
800015e0:	ec 18 00 01 	eorl	r8,0x1
800015e4:	5c 58       	castu.b	r8
800015e6:	c0 60       	breq	800015f2 <_ZN6Segway11initHelpersEv+0x322>
		displayError( ERROR_CODE_INIT_LEFTMOTOR );
800015e8:	30 9b       	mov	r11,9
800015ea:	ee fc ff bc 	ld.w	r12,r7[-68]
800015ee:	f0 1f 00 53 	mcall	80001738 <_ZN6Segway11initHelpersEv+0x468>
	}
	if( !rightMotor.init( &Configuration::rightMotorConfig )) {
800015f2:	ee f8 ff bc 	ld.w	r8,r7[-68]
800015f6:	f0 c8 fe bc 	sub	r8,r8,-324
800015fa:	4e 0b       	lddpc	r11,80001778 <_ZN6Segway11initHelpersEv+0x4a8>
800015fc:	10 9c       	mov	r12,r8
800015fe:	f0 1f 00 5e 	mcall	80001774 <_ZN6Segway11initHelpersEv+0x4a4>
80001602:	18 98       	mov	r8,r12
80001604:	ec 18 00 01 	eorl	r8,0x1
80001608:	5c 58       	castu.b	r8
8000160a:	c0 60       	breq	80001616 <_ZN6Segway11initHelpersEv+0x346>
		displayError( ERROR_CODE_INIT_RIGHTMOTOR );
8000160c:	30 ab       	mov	r11,10
8000160e:	ee fc ff bc 	ld.w	r12,r7[-68]
80001612:	f0 1f 00 4a 	mcall	80001738 <_ZN6Segway11initHelpersEv+0x468>
	}
	
	
	if( !rs232UART.init( &Configuration::rs232UARTConfig )) {
80001616:	ee f8 ff bc 	ld.w	r8,r7[-68]
8000161a:	f0 c8 fe ac 	sub	r8,r8,-340
8000161e:	4d 8b       	lddpc	r11,8000177c <_ZN6Segway11initHelpersEv+0x4ac>
80001620:	10 9c       	mov	r12,r8
80001622:	f0 1f 00 58 	mcall	80001780 <_ZN6Segway11initHelpersEv+0x4b0>
80001626:	18 98       	mov	r8,r12
80001628:	ec 18 00 01 	eorl	r8,0x1
8000162c:	5c 58       	castu.b	r8
8000162e:	c0 60       	breq	8000163a <_ZN6Segway11initHelpersEv+0x36a>
		displayError( ERROR_CODE_INIT_RS232UART );
80001630:	30 bb       	mov	r11,11
80001632:	ee fc ff bc 	ld.w	r12,r7[-68]
80001636:	f0 1f 00 41 	mcall	80001738 <_ZN6Segway11initHelpersEv+0x468>
	}
	rs232UART.enableInPinSelector( true );
8000163a:	ee f8 ff bc 	ld.w	r8,r7[-68]
8000163e:	f0 c8 fe ac 	sub	r8,r8,-340
80001642:	30 1b       	mov	r11,1
80001644:	10 9c       	mov	r12,r8
80001646:	f0 1f 00 50 	mcall	80001784 <_ZN6Segway11initHelpersEv+0x4b4>
	
	if( !bluetoothUART.init( &Configuration::bluetoothUARTConfig )) {
8000164a:	ee f8 ff bc 	ld.w	r8,r7[-68]
8000164e:	f0 c8 fe a8 	sub	r8,r8,-344
80001652:	4c eb       	lddpc	r11,80001788 <_ZN6Segway11initHelpersEv+0x4b8>
80001654:	10 9c       	mov	r12,r8
80001656:	f0 1f 00 4b 	mcall	80001780 <_ZN6Segway11initHelpersEv+0x4b0>
8000165a:	18 98       	mov	r8,r12
8000165c:	ec 18 00 01 	eorl	r8,0x1
80001660:	5c 58       	castu.b	r8
80001662:	c0 60       	breq	8000166e <_ZN6Segway11initHelpersEv+0x39e>
		displayError( ERROR_CODE_INIT_BLUETOOTHUART );
80001664:	30 cb       	mov	r11,12
80001666:	ee fc ff bc 	ld.w	r12,r7[-68]
8000166a:	f0 1f 00 34 	mcall	80001738 <_ZN6Segway11initHelpersEv+0x468>
	}
	bluetoothUART.enableInPinSelector( true );
8000166e:	ee f8 ff bc 	ld.w	r8,r7[-68]
80001672:	f0 c8 fe a8 	sub	r8,r8,-344
80001676:	30 1b       	mov	r11,1
80001678:	10 9c       	mov	r12,r8
8000167a:	f0 1f 00 43 	mcall	80001784 <_ZN6Segway11initHelpersEv+0x4b4>
	
	// Enter command mode of bluetooth module connected to bluetoothUART
	bluetoothUART.sendString( "+++\r" );
8000167e:	ee f8 ff bc 	ld.w	r8,r7[-68]
80001682:	f0 c8 fe a8 	sub	r8,r8,-344
80001686:	4c 2b       	lddpc	r11,8000178c <_ZN6Segway11initHelpersEv+0x4bc>
80001688:	10 9c       	mov	r12,r8
8000168a:	f0 1f 00 42 	mcall	80001790 <_ZN6Segway11initHelpersEv+0x4c0>
	// Wait some time for command mode
	for( int i = 0; i < 500000; i++ ) {
8000168e:	30 08       	mov	r8,0
80001690:	ef 48 ff fc 	st.w	r7[-4],r8
80001694:	c0 78       	rjmp	800016a2 <_ZN6Segway11initHelpersEv+0x3d2>
		asm( "nop" );
80001696:	d7 03       	nop
	bluetoothUART.enableInPinSelector( true );
	
	// Enter command mode of bluetooth module connected to bluetoothUART
	bluetoothUART.sendString( "+++\r" );
	// Wait some time for command mode
	for( int i = 0; i < 500000; i++ ) {
80001698:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000169c:	2f f8       	sub	r8,-1
8000169e:	ef 48 ff fc 	st.w	r7[-4],r8
800016a2:	ee f8 ff fc 	ld.w	r8,r7[-4]
800016a6:	e6 58 a1 1f 	cp.w	r8,499999
800016aa:	5f a8       	srle	r8
800016ac:	5c 58       	castu.b	r8
800016ae:	cf 41       	brne	80001696 <_ZN6Segway11initHelpersEv+0x3c6>
		asm( "nop" );
	}
	// Set name
	char bluetoothCommand[50] = "ATN=";
800016b0:	30 08       	mov	r8,0
800016b2:	e0 69 4e 3d 	mov	r9,20029
800016b6:	ea 19 41 54 	orh	r9,0x4154
800016ba:	ee e9 ff c0 	st.d	r7[-64],r8
800016be:	ee c8 00 38 	sub	r8,r7,56
800016c2:	30 0a       	mov	r10,0
800016c4:	30 0b       	mov	r11,0
800016c6:	f0 eb 00 00 	st.d	r8[0],r10
800016ca:	2f 88       	sub	r8,-8
800016cc:	30 0a       	mov	r10,0
800016ce:	30 0b       	mov	r11,0
800016d0:	f0 eb 00 00 	st.d	r8[0],r10
800016d4:	2f 88       	sub	r8,-8
800016d6:	30 0a       	mov	r10,0
800016d8:	30 0b       	mov	r11,0
800016da:	f0 eb 00 00 	st.d	r8[0],r10
800016de:	2f 88       	sub	r8,-8
800016e0:	30 0a       	mov	r10,0
800016e2:	30 0b       	mov	r11,0
800016e4:	f0 eb 00 00 	st.d	r8[0],r10
800016e8:	2f 88       	sub	r8,-8
800016ea:	30 0a       	mov	r10,0
800016ec:	30 0b       	mov	r11,0
800016ee:	f0 eb 00 00 	st.d	r8[0],r10
800016f2:	2f 88       	sub	r8,-8
800016f4:	30 09       	mov	r9,0
800016f6:	b0 09       	st.h	r8[0x0],r9
800016f8:	2f e8       	sub	r8,-2
	strcat(bluetoothCommand, BLUETOOTH_NAME);
800016fa:	4a 78       	lddpc	r8,80001794 <_ZN6Segway11initHelpersEv+0x4c4>
800016fc:	70 09       	ld.w	r9,r8[0x0]
800016fe:	ee c8 00 40 	sub	r8,r7,64
80001702:	12 9b       	mov	r11,r9
80001704:	10 9c       	mov	r12,r8
80001706:	f0 1f 00 25 	mcall	80001798 <_ZN6Segway11initHelpersEv+0x4c8>
	
	bluetoothUART.sendString( bluetoothCommand );
8000170a:	ee f8 ff bc 	ld.w	r8,r7[-68]
8000170e:	f0 c8 fe a8 	sub	r8,r8,-344
80001712:	ee c9 00 40 	sub	r9,r7,64
80001716:	12 9b       	mov	r11,r9
80001718:	10 9c       	mov	r12,r8
8000171a:	f0 1f 00 1e 	mcall	80001790 <_ZN6Segway11initHelpersEv+0x4c0>
}
8000171e:	2e fd       	sub	sp,-68
80001720:	e3 cd 80 80 	ldm	sp++,r7,pc
80001724:	00 00       	add	r0,r0
80001726:	07 60       	ld.uh	r0,--r3
80001728:	80 00       	ld.sh	r0,r0[0x0]
8000172a:	1a 28       	rsub	r8,sp
8000172c:	80 00       	ld.sh	r0,r0[0x0]
8000172e:	1a b8       	st.h	sp++,r8
80001730:	00 00       	add	r0,r0
80001732:	07 68       	ld.uh	r8,--r3
80001734:	80 00       	ld.sh	r0,r0[0x0]
80001736:	33 fc       	mov	r12,63
80001738:	80 00       	ld.sh	r0,r0[0x0]
8000173a:	18 a0       	st.w	r12++,r0
8000173c:	80 00       	ld.sh	r0,r0[0x0]
8000173e:	1c 30       	cp.w	r0,lr
80001740:	00 00       	add	r0,r0
80001742:	06 78       	tst	r8,r3
80001744:	80 00       	ld.sh	r0,r0[0x0]
80001746:	31 f4       	mov	r4,31
80001748:	00 00       	add	r0,r0
8000174a:	06 e8       	st.h	--r3,r8
8000174c:	80 00       	ld.sh	r0,r0[0x0]
8000174e:	2d a8       	sub	r8,-38
80001750:	00 00       	add	r0,r0
80001752:	06 f8       	st.b	--r3,r8
80001754:	00 00       	add	r0,r0
80001756:	07 08       	ld.w	r8,r3++
80001758:	00 00       	add	r0,r0
8000175a:	07 18       	ld.sh	r8,r3++
8000175c:	00 00       	add	r0,r0
8000175e:	07 28       	ld.uh	r8,r3++
80001760:	80 00       	ld.sh	r0,r0[0x0]
80001762:	00 c0       	st.b	r0++,r0
80001764:	80 00       	ld.sh	r0,r0[0x0]
80001766:	00 c4       	st.b	r0++,r4
80001768:	00 00       	add	r0,r0
8000176a:	00 cc       	st.b	r0++,r12
8000176c:	80 00       	ld.sh	r0,r0[0x0]
8000176e:	1d ec       	ld.ub	r12,lr[0x6]
80001770:	00 00       	add	r0,r0
80001772:	06 4c       	or	r12,r3
80001774:	80 00       	ld.sh	r0,r0[0x0]
80001776:	1e a0       	st.w	pc++,r0
80001778:	00 00       	add	r0,r0
8000177a:	06 5c       	eor	r12,r3
8000177c:	00 00       	add	r0,r0
8000177e:	07 38       	ld.ub	r8,r3++
80001780:	80 00       	ld.sh	r0,r0[0x0]
80001782:	35 58       	mov	r8,85
80001784:	80 00       	ld.sh	r0,r0[0x0]
80001786:	38 d4       	mov	r4,-115
80001788:	00 00       	add	r0,r0
8000178a:	07 4c       	ld.w	r12,--r3
8000178c:	80 00       	ld.sh	r0,r0[0x0]
8000178e:	00 b8       	st.h	r0++,r8
80001790:	80 00       	ld.sh	r0,r0[0x0]
80001792:	3f d4       	mov	r4,-3
80001794:	00 00       	add	r0,r0
80001796:	00 d0       	st.w	--r0,r0
80001798:	80 00       	ld.sh	r0,r0[0x0]
8000179a:	a7 24       	st.d	r3++,r4

8000179c <_ZN6Segway32setCurrentSteeringPositionAsZeroEv>:
	
		If there is no offset set currently, use the current value as the new offset value.
	
		The current value is averaged over 10 measurements.
*/
void Segway::setCurrentSteeringPositionAsZero() {
8000179c:	eb cd 40 c0 	pushm	r6-r7,lr
800017a0:	1a 97       	mov	r7,sp
800017a2:	20 1d       	sub	sp,4
800017a4:	ef 4c ff fc 	st.w	r7[-4],r12
	steeringPotentiometer.setZeroOffset( true,
							( steeringPotentiometer.getZeroOffsetIsActive() ?
								  ( steeringPotentiometer.getIntegerValue( true, 10 ) + steeringPotentiometer.getZeroOffset())
								: steeringPotentiometer.getIntegerValue( true, 10 )));
800017a8:	ee f8 ff fc 	ld.w	r8,r7[-4]
800017ac:	f0 c8 ff 34 	sub	r8,r8,-204
800017b0:	10 9c       	mov	r12,r8
800017b2:	f0 1f 00 19 	mcall	80001814 <_ZN6Segway32setCurrentSteeringPositionAsZeroEv+0x78>
800017b6:	18 98       	mov	r8,r12
800017b8:	58 08       	cp.w	r8,0
800017ba:	c1 60       	breq	800017e6 <_ZN6Segway32setCurrentSteeringPositionAsZeroEv+0x4a>
800017bc:	ee f8 ff fc 	ld.w	r8,r7[-4]
800017c0:	f0 c8 ff 34 	sub	r8,r8,-204
800017c4:	30 aa       	mov	r10,10
800017c6:	30 1b       	mov	r11,1
800017c8:	10 9c       	mov	r12,r8
800017ca:	f0 1f 00 14 	mcall	80001818 <_ZN6Segway32setCurrentSteeringPositionAsZeroEv+0x7c>
800017ce:	18 96       	mov	r6,r12
800017d0:	ee f8 ff fc 	ld.w	r8,r7[-4]
800017d4:	f0 c8 ff 34 	sub	r8,r8,-204
800017d8:	10 9c       	mov	r12,r8
800017da:	f0 1f 00 11 	mcall	8000181c <_ZN6Segway32setCurrentSteeringPositionAsZeroEv+0x80>
800017de:	18 98       	mov	r8,r12
800017e0:	ec 08 00 08 	add	r8,r6,r8
800017e4:	c0 b8       	rjmp	800017fa <_ZN6Segway32setCurrentSteeringPositionAsZeroEv+0x5e>
800017e6:	ee f8 ff fc 	ld.w	r8,r7[-4]
800017ea:	f0 c8 ff 34 	sub	r8,r8,-204
800017ee:	30 aa       	mov	r10,10
800017f0:	30 1b       	mov	r11,1
800017f2:	10 9c       	mov	r12,r8
800017f4:	f0 1f 00 09 	mcall	80001818 <_ZN6Segway32setCurrentSteeringPositionAsZeroEv+0x7c>
800017f8:	18 98       	mov	r8,r12
800017fa:	ee f9 ff fc 	ld.w	r9,r7[-4]
800017fe:	f2 c9 ff 34 	sub	r9,r9,-204
80001802:	10 9a       	mov	r10,r8
80001804:	30 1b       	mov	r11,1
80001806:	12 9c       	mov	r12,r9
80001808:	f0 1f 00 06 	mcall	80001820 <_ZN6Segway32setCurrentSteeringPositionAsZeroEv+0x84>
}
8000180c:	2f fd       	sub	sp,-4
8000180e:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80001812:	00 00       	add	r0,r0
80001814:	80 00       	ld.sh	r0,r0[0x0]
80001816:	31 1e       	mov	lr,17
80001818:	80 00       	ld.sh	r0,r0[0x0]
8000181a:	2e 0c       	sub	r12,-32
8000181c:	80 00       	ld.sh	r0,r0[0x0]
8000181e:	31 3c       	mov	r12,19
80001820:	80 00       	ld.sh	r0,r0[0x0]
80001822:	30 e8       	mov	r8,14

80001824 <_ZN6Segway27setCurrentOrientationAsZeroEv>:

		If there is no offset set currently, use the current value as the new offset value.

		The current value is averaged over 10 measurements.
*/
void Segway::setCurrentOrientationAsZero() {
80001824:	eb cd 40 c0 	pushm	r6-r7,lr
80001828:	1a 97       	mov	r7,sp
8000182a:	20 1d       	sub	sp,4
8000182c:	ef 4c ff fc 	st.w	r7[-4],r12
	orientationAccelerometer.setZeroOffset( true,
							( orientationAccelerometer.getZeroOffsetIsActive() ?
								  ( orientationAccelerometer.getIntegerValue( true, 10 ) + orientationAccelerometer.getZeroOffset())
								: orientationAccelerometer.getIntegerValue( true, 10 )));
80001830:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001834:	2d 08       	sub	r8,-48
80001836:	10 9c       	mov	r12,r8
80001838:	f0 1f 00 16 	mcall	80001890 <_ZN6Segway27setCurrentOrientationAsZeroEv+0x6c>
8000183c:	18 98       	mov	r8,r12
8000183e:	58 08       	cp.w	r8,0
80001840:	c1 40       	breq	80001868 <_ZN6Segway27setCurrentOrientationAsZeroEv+0x44>
80001842:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001846:	2d 08       	sub	r8,-48
80001848:	30 aa       	mov	r10,10
8000184a:	30 1b       	mov	r11,1
8000184c:	10 9c       	mov	r12,r8
8000184e:	f0 1f 00 12 	mcall	80001894 <_ZN6Segway27setCurrentOrientationAsZeroEv+0x70>
80001852:	18 96       	mov	r6,r12
80001854:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001858:	2d 08       	sub	r8,-48
8000185a:	10 9c       	mov	r12,r8
8000185c:	f0 1f 00 0f 	mcall	80001898 <_ZN6Segway27setCurrentOrientationAsZeroEv+0x74>
80001860:	18 98       	mov	r8,r12
80001862:	ec 08 00 08 	add	r8,r6,r8
80001866:	c0 a8       	rjmp	8000187a <_ZN6Segway27setCurrentOrientationAsZeroEv+0x56>
80001868:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000186c:	2d 08       	sub	r8,-48
8000186e:	30 aa       	mov	r10,10
80001870:	30 1b       	mov	r11,1
80001872:	10 9c       	mov	r12,r8
80001874:	f0 1f 00 08 	mcall	80001894 <_ZN6Segway27setCurrentOrientationAsZeroEv+0x70>
80001878:	18 98       	mov	r8,r12
8000187a:	ee f9 ff fc 	ld.w	r9,r7[-4]
8000187e:	2d 09       	sub	r9,-48
80001880:	10 9a       	mov	r10,r8
80001882:	30 1b       	mov	r11,1
80001884:	12 9c       	mov	r12,r9
80001886:	f0 1f 00 06 	mcall	8000189c <_ZN6Segway27setCurrentOrientationAsZeroEv+0x78>
}
8000188a:	2f fd       	sub	sp,-4
8000188c:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80001890:	80 00       	ld.sh	r0,r0[0x0]
80001892:	31 1e       	mov	lr,17
80001894:	80 00       	ld.sh	r0,r0[0x0]
80001896:	2e 0c       	sub	r12,-32
80001898:	80 00       	ld.sh	r0,r0[0x0]
8000189a:	31 3c       	mov	r12,19
8000189c:	80 00       	ld.sh	r0,r0[0x0]
8000189e:	30 e8       	mov	r8,14

800018a0 <_ZN6Segway12displayErrorEh>:

/*! \brief	Displays error code. Blocks execution.

		Green LED is off. Red LED blinks errorCode times, then stays off some time and restarts.
*/
void Segway::displayError( unsigned char errorCode ) {
800018a0:	eb cd 40 80 	pushm	r7,lr
800018a4:	1a 97       	mov	r7,sp
800018a6:	20 9d       	sub	sp,36
800018a8:	ef 4c ff e0 	st.w	r7[-32],r12
800018ac:	16 98       	mov	r8,r11
800018ae:	ef 68 ff dc 	st.b	r7[-36],r8
	// turn off both LEDs
	setStatusLED( &Configuration::greenStatusLEDConfig, false );
800018b2:	30 0a       	mov	r10,0
800018b4:	4d ab       	lddpc	r11,80001a1c <_ZN6Segway12displayErrorEh+0x17c>
800018b6:	ee fc ff e0 	ld.w	r12,r7[-32]
800018ba:	f0 1f 00 5a 	mcall	80001a20 <_ZN6Segway12displayErrorEh+0x180>
	setStatusLED( &Configuration::redStatusLEDConfig, false );
800018be:	30 0a       	mov	r10,0
800018c0:	4d 9b       	lddpc	r11,80001a24 <_ZN6Segway12displayErrorEh+0x184>
800018c2:	ee fc ff e0 	ld.w	r12,r7[-32]
800018c6:	f0 1f 00 57 	mcall	80001a20 <_ZN6Segway12displayErrorEh+0x180>
	while( true ) {
		for( unsigned char i = 0; i < errorCode; i++ ) {
800018ca:	30 08       	mov	r8,0
800018cc:	ef 68 ff e7 	st.b	r7[-25],r8
800018d0:	c4 08       	rjmp	80001950 <_ZN6Segway12displayErrorEh+0xb0>
			// blink error code
			setStatusLED( &Configuration::greenStatusLEDConfig, true );
800018d2:	30 1a       	mov	r10,1
800018d4:	4d 2b       	lddpc	r11,80001a1c <_ZN6Segway12displayErrorEh+0x17c>
800018d6:	ee fc ff e0 	ld.w	r12,r7[-32]
800018da:	f0 1f 00 52 	mcall	80001a20 <_ZN6Segway12displayErrorEh+0x180>
			setStatusLED( &Configuration::redStatusLEDConfig, true );
800018de:	30 1a       	mov	r10,1
800018e0:	4d 1b       	lddpc	r11,80001a24 <_ZN6Segway12displayErrorEh+0x184>
800018e2:	ee fc ff e0 	ld.w	r12,r7[-32]
800018e6:	f0 1f 00 4f 	mcall	80001a20 <_ZN6Segway12displayErrorEh+0x180>
			for( unsigned long wait = 0; wait < 1000000; wait++ ) {
800018ea:	30 08       	mov	r8,0
800018ec:	ef 48 ff e8 	st.w	r7[-24],r8
800018f0:	c0 78       	rjmp	800018fe <_ZN6Segway12displayErrorEh+0x5e>
				asm( "nop" );
800018f2:	d7 03       	nop
	while( true ) {
		for( unsigned char i = 0; i < errorCode; i++ ) {
			// blink error code
			setStatusLED( &Configuration::greenStatusLEDConfig, true );
			setStatusLED( &Configuration::redStatusLEDConfig, true );
			for( unsigned long wait = 0; wait < 1000000; wait++ ) {
800018f4:	ee f8 ff e8 	ld.w	r8,r7[-24]
800018f8:	2f f8       	sub	r8,-1
800018fa:	ef 48 ff e8 	st.w	r7[-24],r8
800018fe:	ee f8 ff e8 	ld.w	r8,r7[-24]
80001902:	ee 58 42 3f 	cp.w	r8,999999
80001906:	5f 88       	srls	r8
80001908:	5c 58       	castu.b	r8
8000190a:	cf 41       	brne	800018f2 <_ZN6Segway12displayErrorEh+0x52>
				asm( "nop" );
			}
			setStatusLED( &Configuration::greenStatusLEDConfig, false );
8000190c:	30 0a       	mov	r10,0
8000190e:	4c 4b       	lddpc	r11,80001a1c <_ZN6Segway12displayErrorEh+0x17c>
80001910:	ee fc ff e0 	ld.w	r12,r7[-32]
80001914:	f0 1f 00 43 	mcall	80001a20 <_ZN6Segway12displayErrorEh+0x180>
			setStatusLED( &Configuration::redStatusLEDConfig, false );
80001918:	30 0a       	mov	r10,0
8000191a:	4c 3b       	lddpc	r11,80001a24 <_ZN6Segway12displayErrorEh+0x184>
8000191c:	ee fc ff e0 	ld.w	r12,r7[-32]
80001920:	f0 1f 00 40 	mcall	80001a20 <_ZN6Segway12displayErrorEh+0x180>
			for( unsigned long wait = 0; wait < 1000000; wait++ ) {
80001924:	30 08       	mov	r8,0
80001926:	ef 48 ff ec 	st.w	r7[-20],r8
8000192a:	c0 78       	rjmp	80001938 <_ZN6Segway12displayErrorEh+0x98>
				asm( "nop" );
8000192c:	d7 03       	nop
			for( unsigned long wait = 0; wait < 1000000; wait++ ) {
				asm( "nop" );
			}
			setStatusLED( &Configuration::greenStatusLEDConfig, false );
			setStatusLED( &Configuration::redStatusLEDConfig, false );
			for( unsigned long wait = 0; wait < 1000000; wait++ ) {
8000192e:	ee f8 ff ec 	ld.w	r8,r7[-20]
80001932:	2f f8       	sub	r8,-1
80001934:	ef 48 ff ec 	st.w	r7[-20],r8
80001938:	ee f8 ff ec 	ld.w	r8,r7[-20]
8000193c:	ee 58 42 3f 	cp.w	r8,999999
80001940:	5f 88       	srls	r8
80001942:	5c 58       	castu.b	r8
80001944:	cf 41       	brne	8000192c <_ZN6Segway12displayErrorEh+0x8c>
void Segway::displayError( unsigned char errorCode ) {
	// turn off both LEDs
	setStatusLED( &Configuration::greenStatusLEDConfig, false );
	setStatusLED( &Configuration::redStatusLEDConfig, false );
	while( true ) {
		for( unsigned char i = 0; i < errorCode; i++ ) {
80001946:	ef 38 ff e7 	ld.ub	r8,r7[-25]
8000194a:	2f f8       	sub	r8,-1
8000194c:	ef 68 ff e7 	st.b	r7[-25],r8
80001950:	ef 39 ff e7 	ld.ub	r9,r7[-25]
80001954:	ef 38 ff dc 	ld.ub	r8,r7[-36]
80001958:	f0 09 18 00 	cp.b	r9,r8
8000195c:	5f 38       	srlo	r8
8000195e:	5c 58       	castu.b	r8
80001960:	cb 91       	brne	800018d2 <_ZN6Segway12displayErrorEh+0x32>
			for( unsigned long wait = 0; wait < 1000000; wait++ ) {
				asm( "nop" );
			}
		}
		// blink green led only to let the user know that the error code is over
		setStatusLED( &Configuration::greenStatusLEDConfig, true );
80001962:	30 1a       	mov	r10,1
80001964:	4a eb       	lddpc	r11,80001a1c <_ZN6Segway12displayErrorEh+0x17c>
80001966:	ee fc ff e0 	ld.w	r12,r7[-32]
8000196a:	f0 1f 00 2e 	mcall	80001a20 <_ZN6Segway12displayErrorEh+0x180>
		for( unsigned long wait = 0; wait < 1000000; wait++ ) {
8000196e:	30 08       	mov	r8,0
80001970:	ef 48 ff f0 	st.w	r7[-16],r8
80001974:	c0 78       	rjmp	80001982 <_ZN6Segway12displayErrorEh+0xe2>
			asm( "nop" );
80001976:	d7 03       	nop
				asm( "nop" );
			}
		}
		// blink green led only to let the user know that the error code is over
		setStatusLED( &Configuration::greenStatusLEDConfig, true );
		for( unsigned long wait = 0; wait < 1000000; wait++ ) {
80001978:	ee f8 ff f0 	ld.w	r8,r7[-16]
8000197c:	2f f8       	sub	r8,-1
8000197e:	ef 48 ff f0 	st.w	r7[-16],r8
80001982:	ee f8 ff f0 	ld.w	r8,r7[-16]
80001986:	ee 58 42 3f 	cp.w	r8,999999
8000198a:	5f 88       	srls	r8
8000198c:	5c 58       	castu.b	r8
8000198e:	cf 41       	brne	80001976 <_ZN6Segway12displayErrorEh+0xd6>
			asm( "nop" );
		}
		setStatusLED( &Configuration::greenStatusLEDConfig, false );
80001990:	30 0a       	mov	r10,0
80001992:	4a 3b       	lddpc	r11,80001a1c <_ZN6Segway12displayErrorEh+0x17c>
80001994:	ee fc ff e0 	ld.w	r12,r7[-32]
80001998:	f0 1f 00 22 	mcall	80001a20 <_ZN6Segway12displayErrorEh+0x180>
		for( unsigned long wait = 0; wait < 1000000; wait++ ) {
8000199c:	30 08       	mov	r8,0
8000199e:	ef 48 ff f4 	st.w	r7[-12],r8
800019a2:	c0 78       	rjmp	800019b0 <_ZN6Segway12displayErrorEh+0x110>
			asm( "nop" );
800019a4:	d7 03       	nop
		setStatusLED( &Configuration::greenStatusLEDConfig, true );
		for( unsigned long wait = 0; wait < 1000000; wait++ ) {
			asm( "nop" );
		}
		setStatusLED( &Configuration::greenStatusLEDConfig, false );
		for( unsigned long wait = 0; wait < 1000000; wait++ ) {
800019a6:	ee f8 ff f4 	ld.w	r8,r7[-12]
800019aa:	2f f8       	sub	r8,-1
800019ac:	ef 48 ff f4 	st.w	r7[-12],r8
800019b0:	ee f8 ff f4 	ld.w	r8,r7[-12]
800019b4:	ee 58 42 3f 	cp.w	r8,999999
800019b8:	5f 88       	srls	r8
800019ba:	5c 58       	castu.b	r8
800019bc:	cf 41       	brne	800019a4 <_ZN6Segway12displayErrorEh+0x104>
			asm( "nop" );
		}
		setStatusLED( &Configuration::greenStatusLEDConfig, true );
800019be:	30 1a       	mov	r10,1
800019c0:	49 7b       	lddpc	r11,80001a1c <_ZN6Segway12displayErrorEh+0x17c>
800019c2:	ee fc ff e0 	ld.w	r12,r7[-32]
800019c6:	f0 1f 00 17 	mcall	80001a20 <_ZN6Segway12displayErrorEh+0x180>
		for( unsigned long wait = 0; wait < 1000000; wait++ ) {
800019ca:	30 08       	mov	r8,0
800019cc:	ef 48 ff f8 	st.w	r7[-8],r8
800019d0:	c0 78       	rjmp	800019de <_ZN6Segway12displayErrorEh+0x13e>
			asm( "nop" );
800019d2:	d7 03       	nop
		setStatusLED( &Configuration::greenStatusLEDConfig, false );
		for( unsigned long wait = 0; wait < 1000000; wait++ ) {
			asm( "nop" );
		}
		setStatusLED( &Configuration::greenStatusLEDConfig, true );
		for( unsigned long wait = 0; wait < 1000000; wait++ ) {
800019d4:	ee f8 ff f8 	ld.w	r8,r7[-8]
800019d8:	2f f8       	sub	r8,-1
800019da:	ef 48 ff f8 	st.w	r7[-8],r8
800019de:	ee f8 ff f8 	ld.w	r8,r7[-8]
800019e2:	ee 58 42 3f 	cp.w	r8,999999
800019e6:	5f 88       	srls	r8
800019e8:	5c 58       	castu.b	r8
800019ea:	cf 41       	brne	800019d2 <_ZN6Segway12displayErrorEh+0x132>
			asm( "nop" );
		}
		setStatusLED( &Configuration::greenStatusLEDConfig, false );
800019ec:	30 0a       	mov	r10,0
800019ee:	48 cb       	lddpc	r11,80001a1c <_ZN6Segway12displayErrorEh+0x17c>
800019f0:	ee fc ff e0 	ld.w	r12,r7[-32]
800019f4:	f0 1f 00 0b 	mcall	80001a20 <_ZN6Segway12displayErrorEh+0x180>
		for( unsigned long wait = 0; wait < 1000000; wait++ ) {
800019f8:	30 08       	mov	r8,0
800019fa:	ef 48 ff fc 	st.w	r7[-4],r8
800019fe:	c0 78       	rjmp	80001a0c <_ZN6Segway12displayErrorEh+0x16c>
			asm( "nop" );
80001a00:	d7 03       	nop
		setStatusLED( &Configuration::greenStatusLEDConfig, true );
		for( unsigned long wait = 0; wait < 1000000; wait++ ) {
			asm( "nop" );
		}
		setStatusLED( &Configuration::greenStatusLEDConfig, false );
		for( unsigned long wait = 0; wait < 1000000; wait++ ) {
80001a02:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001a06:	2f f8       	sub	r8,-1
80001a08:	ef 48 ff fc 	st.w	r7[-4],r8
80001a0c:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001a10:	ee 58 42 3f 	cp.w	r8,999999
80001a14:	5f 88       	srls	r8
80001a16:	5c 58       	castu.b	r8
80001a18:	cf 41       	brne	80001a00 <_ZN6Segway12displayErrorEh+0x160>
*/
void Segway::displayError( unsigned char errorCode ) {
	// turn off both LEDs
	setStatusLED( &Configuration::greenStatusLEDConfig, false );
	setStatusLED( &Configuration::redStatusLEDConfig, false );
	while( true ) {
80001a1a:	c5 8b       	rjmp	800018ca <_ZN6Segway12displayErrorEh+0x2a>
80001a1c:	00 00       	add	r0,r0
80001a1e:	07 68       	ld.uh	r8,--r3
80001a20:	80 00       	ld.sh	r0,r0[0x0]
80001a22:	1a b8       	st.h	sp++,r8
80001a24:	00 00       	add	r0,r0
80001a26:	07 60       	ld.uh	r0,--r3

80001a28 <_ZN6Segway13initStatusLEDEPN13Configuration11s_StatusLEDE>:


/*! \brief	Initializes the status LEDs.
	\param	statusLEDConfig	[in] Pointer to configuration struct for the LED to initialize.
*/
void Segway::initStatusLED( Configuration::s_StatusLED* statusLEDConfig ) {
80001a28:	eb cd 40 80 	pushm	r7,lr
80001a2c:	1a 97       	mov	r7,sp
80001a2e:	20 2d       	sub	sp,8
80001a30:	ef 4c ff fc 	st.w	r7[-4],r12
80001a34:	ef 4b ff f8 	st.w	r7[-8],r11
	//SET_BIT( AVR32_GPIO.port[statusLEDConfig->port].gpers, statusLEDConfig->pin );
	SET_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + statusLEDConfig->port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_GPER ), statusLEDConfig->pin );
80001a38:	49 f8       	lddpc	r8,80001ab4 <_ZN6Segway13initStatusLEDEPN13Configuration11s_StatusLEDE+0x8c>
80001a3a:	70 08       	ld.w	r8,r8[0x0]
80001a3c:	10 99       	mov	r9,r8
80001a3e:	ee f8 ff f8 	ld.w	r8,r7[-8]
80001a42:	11 88       	ld.ub	r8,r8[0x0]
80001a44:	a9 68       	lsl	r8,0x8
80001a46:	f2 08 00 08 	add	r8,r9,r8
80001a4a:	49 b9       	lddpc	r9,80001ab4 <_ZN6Segway13initStatusLEDEPN13Configuration11s_StatusLEDE+0x8c>
80001a4c:	72 09       	ld.w	r9,r9[0x0]
80001a4e:	12 9a       	mov	r10,r9
80001a50:	ee f9 ff f8 	ld.w	r9,r7[-8]
80001a54:	13 89       	ld.ub	r9,r9[0x0]
80001a56:	a9 69       	lsl	r9,0x8
80001a58:	f4 09 00 09 	add	r9,r10,r9
80001a5c:	72 0a       	ld.w	r10,r9[0x0]
80001a5e:	ee f9 ff f8 	ld.w	r9,r7[-8]
80001a62:	72 19       	ld.w	r9,r9[0x4]
80001a64:	30 1b       	mov	r11,1
80001a66:	f6 09 09 49 	lsl	r9,r11,r9
80001a6a:	f5 e9 10 09 	or	r9,r10,r9
80001a6e:	91 09       	st.w	r8[0x0],r9
	//SET_BIT( AVR32_GPIO.port[statusLEDConfig->port].oders, statusLEDConfig->pin );
	SET_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + statusLEDConfig->port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_ODER ), statusLEDConfig->pin );
80001a70:	49 18       	lddpc	r8,80001ab4 <_ZN6Segway13initStatusLEDEPN13Configuration11s_StatusLEDE+0x8c>
80001a72:	70 09       	ld.w	r9,r8[0x0]
80001a74:	ee f8 ff f8 	ld.w	r8,r7[-8]
80001a78:	11 88       	ld.ub	r8,r8[0x0]
80001a7a:	a3 68       	lsl	r8,0x2
80001a7c:	2f f8       	sub	r8,-1
80001a7e:	a7 68       	lsl	r8,0x6
80001a80:	f2 08 00 08 	add	r8,r9,r8
80001a84:	48 c9       	lddpc	r9,80001ab4 <_ZN6Segway13initStatusLEDEPN13Configuration11s_StatusLEDE+0x8c>
80001a86:	72 0a       	ld.w	r10,r9[0x0]
80001a88:	ee f9 ff f8 	ld.w	r9,r7[-8]
80001a8c:	13 89       	ld.ub	r9,r9[0x0]
80001a8e:	a3 69       	lsl	r9,0x2
80001a90:	2f f9       	sub	r9,-1
80001a92:	a7 69       	lsl	r9,0x6
80001a94:	f4 09 00 09 	add	r9,r10,r9
80001a98:	72 0a       	ld.w	r10,r9[0x0]
80001a9a:	ee f9 ff f8 	ld.w	r9,r7[-8]
80001a9e:	72 19       	ld.w	r9,r9[0x4]
80001aa0:	30 1b       	mov	r11,1
80001aa2:	f6 09 09 49 	lsl	r9,r11,r9
80001aa6:	f5 e9 10 09 	or	r9,r10,r9
80001aaa:	91 09       	st.w	r8[0x0],r9
}
80001aac:	2f ed       	sub	sp,-8
80001aae:	e3 cd 80 80 	ldm	sp++,r7,pc
80001ab2:	00 00       	add	r0,r0
80001ab4:	00 00       	add	r0,r0
80001ab6:	00 cc       	st.b	r0++,r12

80001ab8 <_ZN6Segway12setStatusLEDEPN13Configuration11s_StatusLEDEb>:

/*! \brief	Enables/Disables the status LEDs.
	\param	statusLEDConfig	[in] Pointer to the configuration struct for the LED to initialize.
	\param	on	[in] true = LED on, false = LED off
*/
void Segway::setStatusLED( Configuration::s_StatusLED* statusLEDConfig, bool on ) {
80001ab8:	eb cd 40 80 	pushm	r7,lr
80001abc:	1a 97       	mov	r7,sp
80001abe:	20 3d       	sub	sp,12
80001ac0:	ef 4c ff fc 	st.w	r7[-4],r12
80001ac4:	ef 4b ff f8 	st.w	r7[-8],r11
80001ac8:	14 98       	mov	r8,r10
80001aca:	ef 68 ff f4 	st.b	r7[-12],r8
	if( on ) {
80001ace:	ef 39 ff f4 	ld.ub	r9,r7[-12]
80001ad2:	30 08       	mov	r8,0
80001ad4:	f0 09 18 00 	cp.b	r9,r8
80001ad8:	c1 f0       	breq	80001b16 <_ZN6Segway12setStatusLEDEPN13Configuration11s_StatusLEDEb+0x5e>
		//CLEAR_BIT( AVR32_GPIO.port[statusLEDConfig->port].ovr, statusLEDConfig->pin );
		CLEAR_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + statusLEDConfig->port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_OVR ), statusLEDConfig->pin );
80001ada:	49 f8       	lddpc	r8,80001b54 <_ZN6Segway12setStatusLEDEPN13Configuration11s_StatusLEDEb+0x9c>
80001adc:	70 09       	ld.w	r9,r8[0x0]
80001ade:	ee f8 ff f8 	ld.w	r8,r7[-8]
80001ae2:	11 88       	ld.ub	r8,r8[0x0]
80001ae4:	a9 68       	lsl	r8,0x8
80001ae6:	2b 08       	sub	r8,-80
80001ae8:	f2 08 00 08 	add	r8,r9,r8
80001aec:	49 a9       	lddpc	r9,80001b54 <_ZN6Segway12setStatusLEDEPN13Configuration11s_StatusLEDEb+0x9c>
80001aee:	72 0a       	ld.w	r10,r9[0x0]
80001af0:	ee f9 ff f8 	ld.w	r9,r7[-8]
80001af4:	13 89       	ld.ub	r9,r9[0x0]
80001af6:	a9 69       	lsl	r9,0x8
80001af8:	2b 09       	sub	r9,-80
80001afa:	f4 09 00 09 	add	r9,r10,r9
80001afe:	72 0a       	ld.w	r10,r9[0x0]
80001b00:	ee f9 ff f8 	ld.w	r9,r7[-8]
80001b04:	72 19       	ld.w	r9,r9[0x4]
80001b06:	30 1b       	mov	r11,1
80001b08:	f6 09 09 49 	lsl	r9,r11,r9
80001b0c:	5c d9       	com	r9
80001b0e:	f5 e9 00 09 	and	r9,r10,r9
80001b12:	91 09       	st.w	r8[0x0],r9
80001b14:	c1 d8       	rjmp	80001b4e <_ZN6Segway12setStatusLEDEPN13Configuration11s_StatusLEDEb+0x96>
	} else {
		//SET_BIT( AVR32_GPIO.port[statusLEDConfig->port].ovr, statusLEDConfig->pin );
		SET_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + statusLEDConfig->port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_OVR ), statusLEDConfig->pin );
80001b16:	49 08       	lddpc	r8,80001b54 <_ZN6Segway12setStatusLEDEPN13Configuration11s_StatusLEDEb+0x9c>
80001b18:	70 09       	ld.w	r9,r8[0x0]
80001b1a:	ee f8 ff f8 	ld.w	r8,r7[-8]
80001b1e:	11 88       	ld.ub	r8,r8[0x0]
80001b20:	a9 68       	lsl	r8,0x8
80001b22:	2b 08       	sub	r8,-80
80001b24:	f2 08 00 08 	add	r8,r9,r8
80001b28:	48 b9       	lddpc	r9,80001b54 <_ZN6Segway12setStatusLEDEPN13Configuration11s_StatusLEDEb+0x9c>
80001b2a:	72 0a       	ld.w	r10,r9[0x0]
80001b2c:	ee f9 ff f8 	ld.w	r9,r7[-8]
80001b30:	13 89       	ld.ub	r9,r9[0x0]
80001b32:	a9 69       	lsl	r9,0x8
80001b34:	2b 09       	sub	r9,-80
80001b36:	f4 09 00 09 	add	r9,r10,r9
80001b3a:	72 0a       	ld.w	r10,r9[0x0]
80001b3c:	ee f9 ff f8 	ld.w	r9,r7[-8]
80001b40:	72 19       	ld.w	r9,r9[0x4]
80001b42:	30 1b       	mov	r11,1
80001b44:	f6 09 09 49 	lsl	r9,r11,r9
80001b48:	f5 e9 10 09 	or	r9,r10,r9
80001b4c:	91 09       	st.w	r8[0x0],r9
	}
}
80001b4e:	2f dd       	sub	sp,-12
80001b50:	e3 cd 80 80 	ldm	sp++,r7,pc
80001b54:	00 00       	add	r0,r0
80001b56:	00 cc       	st.b	r0++,r12

80001b58 <_ZN6Segway25waitForFootSwitchReleasedEv>:

/*! \brief	Blocks execution until the foot switch is released.
*/
void Segway::waitForFootSwitchReleased() {
80001b58:	eb cd 40 80 	pushm	r7,lr
80001b5c:	1a 97       	mov	r7,sp
80001b5e:	20 2d       	sub	sp,8
80001b60:	ef 4c ff f8 	st.w	r7[-8],r12
	// Footswitch pressed -> don't continue until foot switch is released
	if( footSwitchSensor.getValue()) {
80001b64:	ee f8 ff f8 	ld.w	r8,r7[-8]
80001b68:	2e 08       	sub	r8,-32
80001b6a:	10 9c       	mov	r12,r8
80001b6c:	f0 1f 00 1e 	mcall	80001be4 <_ZN6Segway25waitForFootSwitchReleasedEv+0x8c>
80001b70:	18 98       	mov	r8,r12
80001b72:	58 08       	cp.w	r8,0
80001b74:	c3 40       	breq	80001bdc <_ZN6Segway25waitForFootSwitchReleasedEv+0x84>
		setStatusLED( &Configuration::redStatusLEDConfig, true );
80001b76:	30 1a       	mov	r10,1
80001b78:	49 cb       	lddpc	r11,80001be8 <_ZN6Segway25waitForFootSwitchReleasedEv+0x90>
80001b7a:	ee fc ff f8 	ld.w	r12,r7[-8]
80001b7e:	f0 1f 00 1c 	mcall	80001bec <_ZN6Segway25waitForFootSwitchReleasedEv+0x94>
		setStatusLED( &Configuration::greenStatusLEDConfig, true );
80001b82:	30 1a       	mov	r10,1
80001b84:	49 bb       	lddpc	r11,80001bf0 <_ZN6Segway25waitForFootSwitchReleasedEv+0x98>
80001b86:	ee fc ff f8 	ld.w	r12,r7[-8]
80001b8a:	f0 1f 00 19 	mcall	80001bec <_ZN6Segway25waitForFootSwitchReleasedEv+0x94>
		// Block execution until the foot switch sensor is released.
		while( footSwitchSensor.getValue()) {
80001b8e:	c1 28       	rjmp	80001bb2 <_ZN6Segway25waitForFootSwitchReleasedEv+0x5a>
			for( unsigned long wait = 0; wait < 1000000; wait++ ) {
80001b90:	30 08       	mov	r8,0
80001b92:	ef 48 ff fc 	st.w	r7[-4],r8
80001b96:	c0 78       	rjmp	80001ba4 <_ZN6Segway25waitForFootSwitchReleasedEv+0x4c>
				asm( "nop" );
80001b98:	d7 03       	nop
	if( footSwitchSensor.getValue()) {
		setStatusLED( &Configuration::redStatusLEDConfig, true );
		setStatusLED( &Configuration::greenStatusLEDConfig, true );
		// Block execution until the foot switch sensor is released.
		while( footSwitchSensor.getValue()) {
			for( unsigned long wait = 0; wait < 1000000; wait++ ) {
80001b9a:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001b9e:	2f f8       	sub	r8,-1
80001ba0:	ef 48 ff fc 	st.w	r7[-4],r8
80001ba4:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001ba8:	ee 58 42 3f 	cp.w	r8,999999
80001bac:	5f 88       	srls	r8
80001bae:	5c 58       	castu.b	r8
80001bb0:	cf 41       	brne	80001b98 <_ZN6Segway25waitForFootSwitchReleasedEv+0x40>
	// Footswitch pressed -> don't continue until foot switch is released
	if( footSwitchSensor.getValue()) {
		setStatusLED( &Configuration::redStatusLEDConfig, true );
		setStatusLED( &Configuration::greenStatusLEDConfig, true );
		// Block execution until the foot switch sensor is released.
		while( footSwitchSensor.getValue()) {
80001bb2:	ee f8 ff f8 	ld.w	r8,r7[-8]
80001bb6:	2e 08       	sub	r8,-32
80001bb8:	10 9c       	mov	r12,r8
80001bba:	f0 1f 00 0b 	mcall	80001be4 <_ZN6Segway25waitForFootSwitchReleasedEv+0x8c>
80001bbe:	18 98       	mov	r8,r12
80001bc0:	58 08       	cp.w	r8,0
80001bc2:	ce 71       	brne	80001b90 <_ZN6Segway25waitForFootSwitchReleasedEv+0x38>
			for( unsigned long wait = 0; wait < 1000000; wait++ ) {
				asm( "nop" );
			}
		}
		setStatusLED( &Configuration::redStatusLEDConfig, false );
80001bc4:	30 0a       	mov	r10,0
80001bc6:	48 9b       	lddpc	r11,80001be8 <_ZN6Segway25waitForFootSwitchReleasedEv+0x90>
80001bc8:	ee fc ff f8 	ld.w	r12,r7[-8]
80001bcc:	f0 1f 00 08 	mcall	80001bec <_ZN6Segway25waitForFootSwitchReleasedEv+0x94>
		setStatusLED( &Configuration::greenStatusLEDConfig, false );
80001bd0:	30 0a       	mov	r10,0
80001bd2:	48 8b       	lddpc	r11,80001bf0 <_ZN6Segway25waitForFootSwitchReleasedEv+0x98>
80001bd4:	ee fc ff f8 	ld.w	r12,r7[-8]
80001bd8:	f0 1f 00 05 	mcall	80001bec <_ZN6Segway25waitForFootSwitchReleasedEv+0x94>
	}
}
80001bdc:	2f ed       	sub	sp,-8
80001bde:	e3 cd 80 80 	ldm	sp++,r7,pc
80001be2:	00 00       	add	r0,r0
80001be4:	80 00       	ld.sh	r0,r0[0x0]
80001be6:	32 dc       	mov	r12,45
80001be8:	00 00       	add	r0,r0
80001bea:	07 60       	ld.uh	r0,--r3
80001bec:	80 00       	ld.sh	r0,r0[0x0]
80001bee:	1a b8       	st.h	sp++,r8
80001bf0:	00 00       	add	r0,r0
80001bf2:	07 68       	ld.uh	r8,--r3

80001bf4 <_ZN3ADCC1Ev>:
#include "ADC.h"
#include <stdio.h>
#include <stdlib.h>

ADC::ADC() {
80001bf4:	eb cd 40 80 	pushm	r7,lr
80001bf8:	1a 97       	mov	r7,sp
80001bfa:	20 1d       	sub	sp,4
80001bfc:	ef 4c ff fc 	st.w	r7[-4],r12
}
80001c00:	2f fd       	sub	sp,-4
80001c02:	e3 cd 80 80 	ldm	sp++,r7,pc
80001c06:	d7 03       	nop

80001c08 <_ZN3ADCD1Ev>:
ADC::~ADC() {
80001c08:	eb cd 40 80 	pushm	r7,lr
80001c0c:	1a 97       	mov	r7,sp
80001c0e:	20 1d       	sub	sp,4
80001c10:	ef 4c ff fc 	st.w	r7[-4],r12
	
	cleanUpChannel( ID );
80001c14:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001c18:	70 38       	ld.w	r8,r8[0xc]
80001c1a:	5c 58       	castu.b	r8
80001c1c:	10 9b       	mov	r11,r8
80001c1e:	ee fc ff fc 	ld.w	r12,r7[-4]
80001c22:	f0 1f 00 03 	mcall	80001c2c <_ZN3ADCD1Ev+0x24>

}
80001c26:	2f fd       	sub	sp,-4
80001c28:	e3 cd 80 80 	ldm	sp++,r7,pc
80001c2c:	80 00       	ld.sh	r0,r0[0x0]
80001c2e:	1c b6       	st.h	lr++,r6

80001c30 <_ZN3ADC4initEv>:
 
bool ADC::init() {
80001c30:	eb cd 40 80 	pushm	r7,lr
80001c34:	1a 97       	mov	r7,sp
80001c36:	20 1d       	sub	sp,4
80001c38:	ef 4c ff fc 	st.w	r7[-4],r12
		
	//Channel enable
	*thisadc = ADC_BASE + CHANNEL_ENABLE_REGISTER_OFFSET;
80001c3c:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001c40:	70 08       	ld.w	r8,r8[0x0]
80001c42:	e0 69 3c 10 	mov	r9,15376
80001c46:	ea 19 0f ff 	orh	r9,0xfff
80001c4a:	91 09       	st.w	r8[0x0],r9
	*thisadc = *thisadc | ID;
80001c4c:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001c50:	70 08       	ld.w	r8,r8[0x0]
80001c52:	ee f9 ff fc 	ld.w	r9,r7[-4]
80001c56:	72 09       	ld.w	r9,r9[0x0]
80001c58:	72 09       	ld.w	r9,r9[0x0]
80001c5a:	12 9a       	mov	r10,r9
80001c5c:	ee f9 ff fc 	ld.w	r9,r7[-4]
80001c60:	72 39       	ld.w	r9,r9[0xc]
80001c62:	f5 e9 10 09 	or	r9,r10,r9
80001c66:	91 09       	st.w	r8[0x0],r9
	
	//10-bit Konvertierung einstellen
	*thisadc = ADC_BASE + MODE_REGISTER_OFFSET;
80001c68:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001c6c:	70 08       	ld.w	r8,r8[0x0]
80001c6e:	e0 69 3c 04 	mov	r9,15364
80001c72:	ea 19 0f ff 	orh	r9,0xfff
80001c76:	91 09       	st.w	r8[0x0],r9
	*thisadc = *thisadc & ~0b1000; 
80001c78:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001c7c:	70 08       	ld.w	r8,r8[0x0]
80001c7e:	ee f9 ff fc 	ld.w	r9,r7[-4]
80001c82:	72 09       	ld.w	r9,r9[0x0]
80001c84:	72 09       	ld.w	r9,r9[0x0]
80001c86:	a3 d9       	cbr	r9,0x3
80001c88:	91 09       	st.w	r8[0x0],r9
	
	//Konvertierung starten
	*thisadc = ADC_BASE + CONTROL_REGISTER_OFFSET;
80001c8a:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001c8e:	70 08       	ld.w	r8,r8[0x0]
80001c90:	e0 69 3c 00 	mov	r9,15360
80001c94:	ea 19 0f ff 	orh	r9,0xfff
80001c98:	91 09       	st.w	r8[0x0],r9
	*thisadc = *thisadc | 0b01;
80001c9a:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001c9e:	70 08       	ld.w	r8,r8[0x0]
80001ca0:	ee f9 ff fc 	ld.w	r9,r7[-4]
80001ca4:	72 09       	ld.w	r9,r9[0x0]
80001ca6:	72 09       	ld.w	r9,r9[0x0]
80001ca8:	a1 a9       	sbr	r9,0x0
80001caa:	91 09       	st.w	r8[0x0],r9
	
	return 1;
80001cac:	30 18       	mov	r8,1
}
80001cae:	10 9c       	mov	r12,r8
80001cb0:	2f fd       	sub	sp,-4
80001cb2:	e3 cd 80 80 	ldm	sp++,r7,pc

80001cb6 <_ZN3ADC14cleanUpChannelEh>:
	}
 
	return channelValue;
}

void ADC::cleanUpChannel( unsigned char channelID ) {
80001cb6:	eb cd 40 80 	pushm	r7,lr
80001cba:	1a 97       	mov	r7,sp
80001cbc:	20 3d       	sub	sp,12
80001cbe:	ef 4c ff f8 	st.w	r7[-8],r12
80001cc2:	16 98       	mov	r8,r11
80001cc4:	ef 68 ff f4 	st.b	r7[-12],r8
	
	//Channel2 disable
	int intChannelID = ( int ) channelID;
80001cc8:	ef 38 ff f4 	ld.ub	r8,r7[-12]
80001ccc:	ef 48 ff fc 	st.w	r7[-4],r8
	*thisadc = ADC_BASE + CHANNEL_DISABLE_REGISTER_OFFSET;
80001cd0:	ee f8 ff f8 	ld.w	r8,r7[-8]
80001cd4:	70 08       	ld.w	r8,r8[0x0]
80001cd6:	e0 69 3c 14 	mov	r9,15380
80001cda:	ea 19 0f ff 	orh	r9,0xfff
80001cde:	91 09       	st.w	r8[0x0],r9
	*thisadc = *thisadc | intChannelID; //respektive 0b10
80001ce0:	ee f8 ff f8 	ld.w	r8,r7[-8]
80001ce4:	70 08       	ld.w	r8,r8[0x0]
80001ce6:	ee f9 ff f8 	ld.w	r9,r7[-8]
80001cea:	72 09       	ld.w	r9,r9[0x0]
80001cec:	72 0a       	ld.w	r10,r9[0x0]
80001cee:	ee f9 ff fc 	ld.w	r9,r7[-4]
80001cf2:	f5 e9 10 09 	or	r9,r10,r9
80001cf6:	91 09       	st.w	r8[0x0],r9
	
	//ADC reset
	*thisadc = ADC_BASE + CONTROL_REGISTER_OFFSET;
80001cf8:	ee f8 ff f8 	ld.w	r8,r7[-8]
80001cfc:	70 08       	ld.w	r8,r8[0x0]
80001cfe:	e0 69 3c 00 	mov	r9,15360
80001d02:	ea 19 0f ff 	orh	r9,0xfff
80001d06:	91 09       	st.w	r8[0x0],r9
	*thisadc = *thisadc | 0x00;
80001d08:	ee f8 ff f8 	ld.w	r8,r7[-8]
80001d0c:	70 08       	ld.w	r8,r8[0x0]
80001d0e:	ee f9 ff f8 	ld.w	r9,r7[-8]
80001d12:	72 09       	ld.w	r9,r9[0x0]
80001d14:	72 09       	ld.w	r9,r9[0x0]
80001d16:	91 09       	st.w	r8[0x0],r9
}
80001d18:	2f dd       	sub	sp,-12
80001d1a:	e3 cd 80 80 	ldm	sp++,r7,pc
80001d1e:	d7 03       	nop

80001d20 <_ZN5MotorC1Ev>:
#include "Motor.h"

Motor::Motor() {
80001d20:	d4 31       	pushm	r0-r7,lr
80001d22:	1a 97       	mov	r7,sp
80001d24:	21 1d       	sub	sp,68
80001d26:	ef 4c ff fc 	st.w	r7[-4],r12
80001d2a:	4a 48       	lddpc	r8,80001db8 <_ZN5MotorC1Ev+0x98>
80001d2c:	ef 48 ff e0 	st.w	r7[-32],r8
80001d30:	4a 38       	lddpc	r8,80001dbc <_ZN5MotorC1Ev+0x9c>
80001d32:	ef 48 ff e4 	st.w	r7[-28],r8
80001d36:	ee c8 00 18 	sub	r8,r7,24
80001d3a:	91 07       	st.w	r8[0x0],r7
80001d3c:	fe c9 ff ca 	sub	r9,pc,-54
80001d40:	91 19       	st.w	r8[0x4],r9
80001d42:	91 2d       	st.w	r8[0x8],sp
80001d44:	ee c8 00 38 	sub	r8,r7,56
80001d48:	10 9c       	mov	r12,r8
80001d4a:	f0 1f 00 1e 	mcall	80001dc0 <_ZN5MotorC1Ev+0xa0>
    pwm = new PWM();
80001d4e:	3f f8       	mov	r8,-1
80001d50:	ef 48 ff cc 	st.w	r7[-52],r8
80001d54:	32 cc       	mov	r12,44
80001d56:	f0 1f 00 1c 	mcall	80001dc4 <_ZN5MotorC1Ev+0xa4>
80001d5a:	18 98       	mov	r8,r12
80001d5c:	ef 48 ff bc 	st.w	r7[-68],r8
80001d60:	ee f8 ff bc 	ld.w	r8,r7[-68]
80001d64:	30 19       	mov	r9,1
80001d66:	ef 49 ff cc 	st.w	r7[-52],r9
80001d6a:	10 9c       	mov	r12,r8
80001d6c:	f0 1f 00 17 	mcall	80001dc8 <_ZN5MotorC1Ev+0xa8>
80001d70:	c1 78       	rjmp	80001d9e <_ZN5MotorC1Ev+0x7e>
80001d72:	ee f8 ff d0 	ld.w	r8,r7[-48]
80001d76:	ee f9 ff d4 	ld.w	r9,r7[-44]
80001d7a:	ef 49 ff c4 	st.w	r7[-60],r9
80001d7e:	ef 48 ff c0 	st.w	r7[-64],r8
80001d82:	ee fc ff bc 	ld.w	r12,r7[-68]
80001d86:	f0 1f 00 12 	mcall	80001dcc <_ZN5MotorC1Ev+0xac>
80001d8a:	ee f8 ff c0 	ld.w	r8,r7[-64]
80001d8e:	ee f9 ff c4 	ld.w	r9,r7[-60]
80001d92:	3f f9       	mov	r9,-1
80001d94:	ef 49 ff cc 	st.w	r7[-52],r9
80001d98:	10 9c       	mov	r12,r8
80001d9a:	f0 1f 00 0e 	mcall	80001dd0 <_ZN5MotorC1Ev+0xb0>
80001d9e:	ee f9 ff bc 	ld.w	r9,r7[-68]
80001da2:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001da6:	91 09       	st.w	r8[0x0],r9
80001da8:	ee c8 00 38 	sub	r8,r7,56
80001dac:	10 9c       	mov	r12,r8
80001dae:	f0 1f 00 0a 	mcall	80001dd4 <_ZN5MotorC1Ev+0xb4>
}
80001db2:	2e fd       	sub	sp,-68
80001db4:	d8 32       	popm	r0-r7,pc
80001db6:	00 00       	add	r0,r0
80001db8:	80 00       	ld.sh	r0,r0[0x0]
80001dba:	4a 94       	lddpc	r4,80001e5c <_ZN5Motor13initEnablePinEv+0x70>
80001dbc:	00 00       	add	r0,r0
80001dbe:	00 1e       	sub	lr,r0
80001dc0:	80 00       	ld.sh	r0,r0[0x0]
80001dc2:	95 14       	st.w	r10[0x4],r4
80001dc4:	80 00       	ld.sh	r0,r0[0x0]
80001dc6:	41 e0       	lddsp	r0,sp[0x78]
80001dc8:	80 00       	ld.sh	r0,r0[0x0]
80001dca:	2a 80       	sub	r0,-88
80001dcc:	80 00       	ld.sh	r0,r0[0x0]
80001dce:	41 d0       	lddsp	r0,sp[0x74]
80001dd0:	80 00       	ld.sh	r0,r0[0x0]
80001dd2:	96 dc       	ld.uh	r12,r11[0xa]
80001dd4:	80 00       	ld.sh	r0,r0[0x0]
80001dd6:	95 24       	st.w	r10[0x8],r4

80001dd8 <_ZN5MotorD1Ev>:

Motor::~Motor() {
80001dd8:	eb cd 40 80 	pushm	r7,lr
80001ddc:	1a 97       	mov	r7,sp
80001dde:	20 1d       	sub	sp,4
80001de0:	ef 4c ff fc 	st.w	r7[-4],r12

}
80001de4:	2f fd       	sub	sp,-4
80001de6:	e3 cd 80 80 	ldm	sp++,r7,pc
80001dea:	d7 03       	nop

80001dec <_ZN5Motor13initEnablePinEv>:

void Motor::initEnablePin() {
80001dec:	eb cd 40 80 	pushm	r7,lr
80001df0:	1a 97       	mov	r7,sp
80001df2:	20 3d       	sub	sp,12
	int *GPER = (int*) (GPIO_MODULE + (Configuration::Motor_enabledPinPort ? PORT_OFFSET : 0) + GPER_OFFSET);
80001df4:	4a 98       	lddpc	r8,80001e98 <_ZN5Motor13initEnablePinEv+0xac>
80001df6:	11 88       	ld.ub	r8,r8[0x0]
80001df8:	58 08       	cp.w	r8,0
80001dfa:	c0 40       	breq	80001e02 <_ZN5Motor13initEnablePinEv+0x16>
80001dfc:	fe 78 11 00 	mov	r8,-61184
80001e00:	c0 38       	rjmp	80001e06 <_ZN5Motor13initEnablePinEv+0x1a>
80001e02:	fe 78 10 00 	mov	r8,-61440
80001e06:	ef 48 ff f4 	st.w	r7[-12],r8
	SET_BIT(*GPER, Configuration::Motor_enabledPinPin);
80001e0a:	ee f8 ff f4 	ld.w	r8,r7[-12]
80001e0e:	70 08       	ld.w	r8,r8[0x0]
80001e10:	10 99       	mov	r9,r8
80001e12:	4a 38       	lddpc	r8,80001e9c <_ZN5Motor13initEnablePinEv+0xb0>
80001e14:	70 08       	ld.w	r8,r8[0x0]
80001e16:	30 1a       	mov	r10,1
80001e18:	f4 08 09 48 	lsl	r8,r10,r8
80001e1c:	f3 e8 10 08 	or	r8,r9,r8
80001e20:	10 99       	mov	r9,r8
80001e22:	ee f8 ff f4 	ld.w	r8,r7[-12]
80001e26:	91 09       	st.w	r8[0x0],r9
	int *ODER = (int*) (GPIO_MODULE + (Configuration::Motor_enabledPinPort ? PORT_OFFSET : 0) + ODER_OFFSET);
80001e28:	49 c8       	lddpc	r8,80001e98 <_ZN5Motor13initEnablePinEv+0xac>
80001e2a:	11 88       	ld.ub	r8,r8[0x0]
80001e2c:	58 08       	cp.w	r8,0
80001e2e:	c0 40       	breq	80001e36 <_ZN5Motor13initEnablePinEv+0x4a>
80001e30:	fe 78 11 40 	mov	r8,-61120
80001e34:	c0 38       	rjmp	80001e3a <_ZN5Motor13initEnablePinEv+0x4e>
80001e36:	fe 78 10 40 	mov	r8,-61376
80001e3a:	ef 48 ff f8 	st.w	r7[-8],r8
	SET_BIT(*ODER, Configuration::Motor_enabledPinPin);
80001e3e:	ee f8 ff f8 	ld.w	r8,r7[-8]
80001e42:	70 08       	ld.w	r8,r8[0x0]
80001e44:	10 99       	mov	r9,r8
80001e46:	49 68       	lddpc	r8,80001e9c <_ZN5Motor13initEnablePinEv+0xb0>
80001e48:	70 08       	ld.w	r8,r8[0x0]
80001e4a:	30 1a       	mov	r10,1
80001e4c:	f4 08 09 48 	lsl	r8,r10,r8
80001e50:	f3 e8 10 08 	or	r8,r9,r8
80001e54:	10 99       	mov	r9,r8
80001e56:	ee f8 ff f8 	ld.w	r8,r7[-8]
80001e5a:	91 09       	st.w	r8[0x0],r9
	int *OVR = (int*) (GPIO_MODULE + (Configuration::Motor_enabledPinPort ? PORT_OFFSET : 0) + OVR_OFFSET);
80001e5c:	48 f8       	lddpc	r8,80001e98 <_ZN5Motor13initEnablePinEv+0xac>
80001e5e:	11 88       	ld.ub	r8,r8[0x0]
80001e60:	58 08       	cp.w	r8,0
80001e62:	c0 40       	breq	80001e6a <_ZN5Motor13initEnablePinEv+0x7e>
80001e64:	fe 78 11 50 	mov	r8,-61104
80001e68:	c0 38       	rjmp	80001e6e <_ZN5Motor13initEnablePinEv+0x82>
80001e6a:	fe 78 10 50 	mov	r8,-61360
80001e6e:	ef 48 ff fc 	st.w	r7[-4],r8
	CLEAR_BIT(*OVR, Configuration::Motor_enabledPinPin);
80001e72:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001e76:	70 08       	ld.w	r8,r8[0x0]
80001e78:	10 99       	mov	r9,r8
80001e7a:	48 98       	lddpc	r8,80001e9c <_ZN5Motor13initEnablePinEv+0xb0>
80001e7c:	70 08       	ld.w	r8,r8[0x0]
80001e7e:	30 1a       	mov	r10,1
80001e80:	f4 08 09 48 	lsl	r8,r10,r8
80001e84:	5c d8       	com	r8
80001e86:	f3 e8 00 08 	and	r8,r9,r8
80001e8a:	10 99       	mov	r9,r8
80001e8c:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001e90:	91 09       	st.w	r8[0x0],r9
}
80001e92:	2f dd       	sub	sp,-12
80001e94:	e3 cd 80 80 	ldm	sp++,r7,pc
80001e98:	00 00       	add	r0,r0
80001e9a:	06 6c       	and	r12,r3
80001e9c:	00 00       	add	r0,r0
80001e9e:	06 70       	tst	r0,r3

80001ea0 <_ZN5Motor4initEPN13Configuration13s_MotorConfigE>:

bool Motor::init( Configuration::s_MotorConfig* thisMotorConfig_ ) {
80001ea0:	eb cd 40 80 	pushm	r7,lr
80001ea4:	1a 97       	mov	r7,sp
80001ea6:	20 2d       	sub	sp,8
80001ea8:	ef 4c ff fc 	st.w	r7[-4],r12
80001eac:	ef 4b ff f8 	st.w	r7[-8],r11
    // init PWM
    pwm->init(thisMotorConfig_->PWMConfig);
80001eb0:	ee f8 ff f8 	ld.w	r8,r7[-8]
80001eb4:	70 39       	ld.w	r9,r8[0xc]
80001eb6:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001eba:	70 08       	ld.w	r8,r8[0x0]
80001ebc:	12 9b       	mov	r11,r9
80001ebe:	10 9c       	mov	r12,r8
80001ec0:	f0 1f 00 12 	mcall	80001f08 <_ZN5Motor4initEPN13Configuration13s_MotorConfigE+0x68>
    // init register
    OVR = (int*) (GPIO_MODULE + (thisMotorConfig_->directionPinPort ? PORT_OFFSET : 0) + OVR_OFFSET);
80001ec4:	ee f8 ff f8 	ld.w	r8,r7[-8]
80001ec8:	11 88       	ld.ub	r8,r8[0x0]
80001eca:	58 08       	cp.w	r8,0
80001ecc:	c0 40       	breq	80001ed4 <_ZN5Motor4initEPN13Configuration13s_MotorConfigE+0x34>
80001ece:	fe 78 11 50 	mov	r8,-61104
80001ed2:	c0 38       	rjmp	80001ed8 <_ZN5Motor4initEPN13Configuration13s_MotorConfigE+0x38>
80001ed4:	fe 78 10 50 	mov	r8,-61360
80001ed8:	ee f9 ff fc 	ld.w	r9,r7[-4]
80001edc:	93 18       	st.w	r9[0x4],r8
    directionPinForwardValue = thisMotorConfig_->directionPinForwardValue;
80001ede:	ee f8 ff f8 	ld.w	r8,r7[-8]
80001ee2:	f1 38 00 08 	ld.ub	r8,r8[8]
80001ee6:	ee f9 ff fc 	ld.w	r9,r7[-4]
80001eea:	f3 68 00 08 	st.b	r9[8],r8
    directionPinPin = thisMotorConfig_->directionPinPin;
80001eee:	ee f8 ff f8 	ld.w	r8,r7[-8]
80001ef2:	70 18       	ld.w	r8,r8[0x4]
80001ef4:	10 99       	mov	r9,r8
80001ef6:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001efa:	91 39       	st.w	r8[0xc],r9
	return true;
80001efc:	30 18       	mov	r8,1
}
80001efe:	10 9c       	mov	r12,r8
80001f00:	2f ed       	sub	sp,-8
80001f02:	e3 cd 80 80 	ldm	sp++,r7,pc
80001f06:	00 00       	add	r0,r0
80001f08:	80 00       	ld.sh	r0,r0[0x0]
80001f0a:	2a 94       	sub	r4,-87

80001f0c <_ZN5Motor8setSpeedEh>:

bool Motor::setSpeed( unsigned char ratioOn ) {
80001f0c:	eb cd 40 80 	pushm	r7,lr
80001f10:	1a 97       	mov	r7,sp
80001f12:	20 2d       	sub	sp,8
80001f14:	ef 4c ff fc 	st.w	r7[-4],r12
80001f18:	16 98       	mov	r8,r11
80001f1a:	ef 68 ff f8 	st.b	r7[-8],r8
    // forward call to PWM
    return pwm->setChannelPWMRatio(ratioOn);
80001f1e:	ef 39 ff f8 	ld.ub	r9,r7[-8]
80001f22:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001f26:	70 08       	ld.w	r8,r8[0x0]
80001f28:	30 0a       	mov	r10,0
80001f2a:	12 9b       	mov	r11,r9
80001f2c:	10 9c       	mov	r12,r8
80001f2e:	f0 1f 00 04 	mcall	80001f3c <_ZN5Motor8setSpeedEh+0x30>
80001f32:	18 98       	mov	r8,r12
}
80001f34:	10 9c       	mov	r12,r8
80001f36:	2f ed       	sub	sp,-8
80001f38:	e3 cd 80 80 	ldm	sp++,r7,pc
80001f3c:	80 00       	ld.sh	r0,r0[0x0]
80001f3e:	2c 6c       	sub	r12,-58

80001f40 <_ZN5Motor12setDirectionEb>:
unsigned char Motor::getSpeed() {
    // forward call to PWM
	return pwm->getChannelPWMRatio();
}

void Motor::setDirection( bool forward ) {
80001f40:	eb cd 40 80 	pushm	r7,lr
80001f44:	1a 97       	mov	r7,sp
80001f46:	20 2d       	sub	sp,8
80001f48:	ef 4c ff fc 	st.w	r7[-4],r12
80001f4c:	16 98       	mov	r8,r11
80001f4e:	ef 68 ff f8 	st.b	r7[-8],r8
    // set direction pin value
    if (forward == directionPinForwardValue) SET_BIT(*OVR, directionPinPin);
80001f52:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001f56:	f1 38 00 08 	ld.ub	r8,r8[8]
80001f5a:	ef 39 ff f8 	ld.ub	r9,r7[-8]
80001f5e:	f0 09 18 00 	cp.b	r9,r8
80001f62:	c1 31       	brne	80001f88 <_ZN5Motor12setDirectionEb+0x48>
80001f64:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001f68:	70 18       	ld.w	r8,r8[0x4]
80001f6a:	ee f9 ff fc 	ld.w	r9,r7[-4]
80001f6e:	72 19       	ld.w	r9,r9[0x4]
80001f70:	72 09       	ld.w	r9,r9[0x0]
80001f72:	12 9a       	mov	r10,r9
80001f74:	ee f9 ff fc 	ld.w	r9,r7[-4]
80001f78:	72 39       	ld.w	r9,r9[0xc]
80001f7a:	30 1b       	mov	r11,1
80001f7c:	f6 09 09 49 	lsl	r9,r11,r9
80001f80:	f5 e9 10 09 	or	r9,r10,r9
80001f84:	91 09       	st.w	r8[0x0],r9
80001f86:	c1 38       	rjmp	80001fac <_ZN5Motor12setDirectionEb+0x6c>
    else CLEAR_BIT(*OVR, directionPinPin);
80001f88:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001f8c:	70 18       	ld.w	r8,r8[0x4]
80001f8e:	ee f9 ff fc 	ld.w	r9,r7[-4]
80001f92:	72 19       	ld.w	r9,r9[0x4]
80001f94:	72 09       	ld.w	r9,r9[0x0]
80001f96:	12 9a       	mov	r10,r9
80001f98:	ee f9 ff fc 	ld.w	r9,r7[-4]
80001f9c:	72 39       	ld.w	r9,r9[0xc]
80001f9e:	30 1b       	mov	r11,1
80001fa0:	f6 09 09 49 	lsl	r9,r11,r9
80001fa4:	5c d9       	com	r9
80001fa6:	f5 e9 00 09 	and	r9,r10,r9
80001faa:	91 09       	st.w	r8[0x0],r9
}
80001fac:	2f ed       	sub	sp,-8
80001fae:	e3 cd 80 80 	ldm	sp++,r7,pc
80001fb2:	d7 03       	nop

80001fb4 <_ZN5Motor10setEnabledEb>:

void Motor::setEnabled( bool enabled ) {
80001fb4:	eb cd 40 80 	pushm	r7,lr
80001fb8:	1a 97       	mov	r7,sp
80001fba:	20 2d       	sub	sp,8
80001fbc:	18 98       	mov	r8,r12
80001fbe:	ef 68 ff f8 	st.b	r7[-8],r8
    // set enable value
    int *OVR = (int*) (GPIO_MODULE + (Configuration::Motor_enabledPinPort ? PORT_OFFSET : 0) + OVR_OFFSET);
80001fc2:	49 b8       	lddpc	r8,8000202c <_ZN5Motor10setEnabledEb+0x78>
80001fc4:	11 88       	ld.ub	r8,r8[0x0]
80001fc6:	58 08       	cp.w	r8,0
80001fc8:	c0 40       	breq	80001fd0 <_ZN5Motor10setEnabledEb+0x1c>
80001fca:	fe 78 11 50 	mov	r8,-61104
80001fce:	c0 38       	rjmp	80001fd4 <_ZN5Motor10setEnabledEb+0x20>
80001fd0:	fe 78 10 50 	mov	r8,-61360
80001fd4:	ef 48 ff fc 	st.w	r7[-4],r8
    if (enabled) SET_BIT(*OVR, Configuration::Motor_enabledPinPin);
80001fd8:	ef 39 ff f8 	ld.ub	r9,r7[-8]
80001fdc:	30 08       	mov	r8,0
80001fde:	f0 09 18 00 	cp.b	r9,r8
80001fe2:	c1 10       	breq	80002004 <_ZN5Motor10setEnabledEb+0x50>
80001fe4:	ee f8 ff fc 	ld.w	r8,r7[-4]
80001fe8:	70 08       	ld.w	r8,r8[0x0]
80001fea:	10 99       	mov	r9,r8
80001fec:	49 18       	lddpc	r8,80002030 <_ZN5Motor10setEnabledEb+0x7c>
80001fee:	70 08       	ld.w	r8,r8[0x0]
80001ff0:	30 1a       	mov	r10,1
80001ff2:	f4 08 09 48 	lsl	r8,r10,r8
80001ff6:	f3 e8 10 08 	or	r8,r9,r8
80001ffa:	10 99       	mov	r9,r8
80001ffc:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002000:	91 09       	st.w	r8[0x0],r9
80002002:	c1 18       	rjmp	80002024 <_ZN5Motor10setEnabledEb+0x70>
	else CLEAR_BIT(*OVR, Configuration::Motor_enabledPinPin);
80002004:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002008:	70 08       	ld.w	r8,r8[0x0]
8000200a:	10 99       	mov	r9,r8
8000200c:	48 98       	lddpc	r8,80002030 <_ZN5Motor10setEnabledEb+0x7c>
8000200e:	70 08       	ld.w	r8,r8[0x0]
80002010:	30 1a       	mov	r10,1
80002012:	f4 08 09 48 	lsl	r8,r10,r8
80002016:	5c d8       	com	r8
80002018:	f3 e8 00 08 	and	r8,r9,r8
8000201c:	10 99       	mov	r9,r8
8000201e:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002022:	91 09       	st.w	r8[0x0],r9
}
80002024:	2f ed       	sub	sp,-8
80002026:	e3 cd 80 80 	ldm	sp++,r7,pc
8000202a:	00 00       	add	r0,r0
8000202c:	00 00       	add	r0,r0
8000202e:	06 6c       	and	r12,r3
80002030:	00 00       	add	r0,r0
80002032:	06 70       	tst	r0,r3

80002034 <_ZN13Configuration4initEv>:
	


/*! \brief	Initializes all configuration variables.
*/
void Configuration::init() {
80002034:	eb cd 40 80 	pushm	r7,lr
80002038:	1a 97       	mov	r7,sp
	// MISC
	Oscillator_Freq = 16000000;		//Oscillator frequency in Hz
8000203a:	49 38       	lddpc	r8,80002084 <_ZN13Configuration4initEv+0x50>
8000203c:	e0 69 24 00 	mov	r9,9216
80002040:	ea 19 00 f4 	orh	r9,0xf4
80002044:	91 09       	st.w	r8[0x0],r9
	CPUCLK = Oscillator_Freq;
80002046:	49 08       	lddpc	r8,80002084 <_ZN13Configuration4initEv+0x50>
80002048:	70 09       	ld.w	r9,r8[0x0]
8000204a:	49 08       	lddpc	r8,80002088 <_ZN13Configuration4initEv+0x54>
8000204c:	91 09       	st.w	r8[0x0],r9
	PBACLK = Oscillator_Freq;
8000204e:	48 e8       	lddpc	r8,80002084 <_ZN13Configuration4initEv+0x50>
80002050:	70 09       	ld.w	r9,r8[0x0]
80002052:	48 f8       	lddpc	r8,8000208c <_ZN13Configuration4initEv+0x58>
80002054:	91 09       	st.w	r8[0x0],r9
	PWMCLK = Oscillator_Freq;
80002056:	48 c8       	lddpc	r8,80002084 <_ZN13Configuration4initEv+0x50>
80002058:	70 09       	ld.w	r9,r8[0x0]
8000205a:	48 e8       	lddpc	r8,80002090 <_ZN13Configuration4initEv+0x5c>
8000205c:	91 09       	st.w	r8[0x0],r9
	ADCCLK = Oscillator_Freq;
8000205e:	48 a8       	lddpc	r8,80002084 <_ZN13Configuration4initEv+0x50>
80002060:	70 09       	ld.w	r9,r8[0x0]
80002062:	48 d8       	lddpc	r8,80002094 <_ZN13Configuration4initEv+0x60>
80002064:	91 09       	st.w	r8[0x0],r9
	
	init_Timer();
80002066:	f0 1f 00 0d 	mcall	80002098 <_ZN13Configuration4initEv+0x64>
	init_PWM();
8000206a:	f0 1f 00 0d 	mcall	8000209c <_ZN13Configuration4initEv+0x68>
	init_Motor();
8000206e:	f0 1f 00 0d 	mcall	800020a0 <_ZN13Configuration4initEv+0x6c>
	init_Sensors();
80002072:	f0 1f 00 0d 	mcall	800020a4 <_ZN13Configuration4initEv+0x70>
	init_UART();
80002076:	f0 1f 00 0d 	mcall	800020a8 <_ZN13Configuration4initEv+0x74>
	init_StatusLEDs();
8000207a:	f0 1f 00 0d 	mcall	800020ac <_ZN13Configuration4initEv+0x78>
}
8000207e:	e3 cd 80 80 	ldm	sp++,r7,pc
80002082:	00 00       	add	r0,r0
80002084:	00 00       	add	r0,r0
80002086:	06 1c       	sub	r12,r3
80002088:	00 00       	add	r0,r0
8000208a:	06 20       	rsub	r0,r3
8000208c:	00 00       	add	r0,r0
8000208e:	06 24       	rsub	r4,r3
80002090:	00 00       	add	r0,r0
80002092:	06 28       	rsub	r8,r3
80002094:	00 00       	add	r0,r0
80002096:	06 2c       	rsub	r12,r3
80002098:	80 00       	ld.sh	r0,r0[0x0]
8000209a:	20 b0       	sub	r0,11
8000209c:	80 00       	ld.sh	r0,r0[0x0]
8000209e:	20 d0       	sub	r0,13
800020a0:	80 00       	ld.sh	r0,r0[0x0]
800020a2:	21 3c       	sub	r12,19
800020a4:	80 00       	ld.sh	r0,r0[0x0]
800020a6:	21 a8       	sub	r8,26
800020a8:	80 00       	ld.sh	r0,r0[0x0]
800020aa:	23 bc       	sub	r12,59
800020ac:	80 00       	ld.sh	r0,r0[0x0]
800020ae:	24 90       	sub	r0,73

800020b0 <_ZN13Configuration10init_TimerEv>:
/*! \brief	Initializes timer variables.

		Timer_Channel: selects which of the controller's timer channel is used.
		Timer_Clock_Connection: selects source clock and prescaler.
*/
void Configuration::init_Timer() {
800020b0:	eb cd 40 80 	pushm	r7,lr
800020b4:	1a 97       	mov	r7,sp
	Timer_Channel = 0;
800020b6:	48 59       	lddpc	r9,800020c8 <_ZN13Configuration10init_TimerEv+0x18>
800020b8:	30 08       	mov	r8,0
800020ba:	b2 88       	st.b	r9[0x0],r8
	Timer_Clock_Connection = 0x02;		// AVR32_TC_TIMER_CLOCK3 | OSC0: 16MHz, Prescaler: 8, Timer: 16 Bit => 30 Hz to 2 MHz
800020bc:	48 49       	lddpc	r9,800020cc <_ZN13Configuration10init_TimerEv+0x1c>
800020be:	30 28       	mov	r8,2
800020c0:	b2 88       	st.b	r9[0x0],r8
}
800020c2:	e3 cd 80 80 	ldm	sp++,r7,pc
800020c6:	00 00       	add	r0,r0
800020c8:	00 00       	add	r0,r0
800020ca:	06 30       	cp.w	r0,r3
800020cc:	00 00       	add	r0,r0
800020ce:	06 31       	cp.w	r1,r3

800020d0 <_ZN13Configuration8init_PWMEv>:
		frequency: PWM frequency.
		GPIO_port: GPIO port, at which the PWM signal is outputted.
		GPIO_pin: GPIO pin, at which the PWM signal is outputted.
		GPIO_multiplexRegisterValue: value for the GPIO port's multiplexer to select PWM as signal source.
*/
void Configuration::init_PWM() {
800020d0:	eb cd 40 80 	pushm	r7,lr
800020d4:	1a 97       	mov	r7,sp
	leftPWMConfig.channelID = 0;
800020d6:	49 89       	lddpc	r9,80002134 <_ZN13Configuration8init_PWMEv+0x64>
800020d8:	30 08       	mov	r8,0
800020da:	b2 88       	st.b	r9[0x0],r8
	leftPWMConfig.maxPWMRatio = 100;//204;
800020dc:	49 69       	lddpc	r9,80002134 <_ZN13Configuration8init_PWMEv+0x64>
800020de:	36 48       	mov	r8,100
800020e0:	b2 98       	st.b	r9[0x1],r8
	leftPWMConfig.frequency = 18000;
800020e2:	49 58       	lddpc	r8,80002134 <_ZN13Configuration8init_PWMEv+0x64>
800020e4:	e0 69 46 50 	mov	r9,18000
800020e8:	91 19       	st.w	r8[0x4],r9
	leftPWMConfig.GPIO_port = 0; //PA11
800020ea:	49 39       	lddpc	r9,80002134 <_ZN13Configuration8init_PWMEv+0x64>
800020ec:	30 08       	mov	r8,0
800020ee:	f3 68 00 08 	st.b	r9[8],r8
	leftPWMConfig.GPIO_pin = 11;
800020f2:	49 19       	lddpc	r9,80002134 <_ZN13Configuration8init_PWMEv+0x64>
800020f4:	30 b8       	mov	r8,11
800020f6:	f3 68 00 09 	st.b	r9[9],r8
	leftPWMConfig.GPIO_multiplexRegisterValue = 2; //0b10 -> C
800020fa:	48 f9       	lddpc	r9,80002134 <_ZN13Configuration8init_PWMEv+0x64>
800020fc:	30 28       	mov	r8,2
800020fe:	f3 68 00 0a 	st.b	r9[10],r8
	
	rightPWMConfig.channelID = 1;
80002102:	48 e9       	lddpc	r9,80002138 <_ZN13Configuration8init_PWMEv+0x68>
80002104:	30 18       	mov	r8,1
80002106:	b2 88       	st.b	r9[0x0],r8
	rightPWMConfig.maxPWMRatio = 100;//204;
80002108:	48 c9       	lddpc	r9,80002138 <_ZN13Configuration8init_PWMEv+0x68>
8000210a:	36 48       	mov	r8,100
8000210c:	b2 98       	st.b	r9[0x1],r8
	rightPWMConfig.frequency = 18000;
8000210e:	48 b8       	lddpc	r8,80002138 <_ZN13Configuration8init_PWMEv+0x68>
80002110:	e0 69 46 50 	mov	r9,18000
80002114:	91 19       	st.w	r8[0x4],r9
	rightPWMConfig.GPIO_port = 0; //PA12
80002116:	48 99       	lddpc	r9,80002138 <_ZN13Configuration8init_PWMEv+0x68>
80002118:	30 08       	mov	r8,0
8000211a:	f3 68 00 08 	st.b	r9[8],r8
	rightPWMConfig.GPIO_pin = 12;
8000211e:	48 79       	lddpc	r9,80002138 <_ZN13Configuration8init_PWMEv+0x68>
80002120:	30 c8       	mov	r8,12
80002122:	f3 68 00 09 	st.b	r9[9],r8
	rightPWMConfig.GPIO_multiplexRegisterValue = 2; //0b10 -> C
80002126:	48 59       	lddpc	r9,80002138 <_ZN13Configuration8init_PWMEv+0x68>
80002128:	30 28       	mov	r8,2
8000212a:	f3 68 00 0a 	st.b	r9[10],r8
}
8000212e:	e3 cd 80 80 	ldm	sp++,r7,pc
80002132:	00 00       	add	r0,r0
80002134:	00 00       	add	r0,r0
80002136:	06 34       	cp.w	r4,r3
80002138:	00 00       	add	r0,r0
8000213a:	06 40       	or	r0,r3

8000213c <_ZN13Configuration10init_MotorEv>:
		directionPinForwardValue: 1: high output = forward, 0: low output = forward.
		directionPinPort: GPIO port, at which the direction signal is outputted.
		directionPinPin: GPIO pin, at which the direction signal is outputted.
		PWMConfig: Pointer to the motor's PWM config.
*/
void Configuration::init_Motor() {
8000213c:	eb cd 40 80 	pushm	r7,lr
80002140:	1a 97       	mov	r7,sp
	Motor_enabledPinEnabledValue = 1;
80002142:	49 39       	lddpc	r9,8000218c <_ZN13Configuration10init_MotorEv+0x50>
80002144:	30 18       	mov	r8,1
80002146:	b2 88       	st.b	r9[0x0],r8
	Motor_enabledPinPort = 0; //PA16
80002148:	49 29       	lddpc	r9,80002190 <_ZN13Configuration10init_MotorEv+0x54>
8000214a:	30 08       	mov	r8,0
8000214c:	b2 88       	st.b	r9[0x0],r8
	Motor_enabledPinPin = 16;
8000214e:	49 28       	lddpc	r8,80002194 <_ZN13Configuration10init_MotorEv+0x58>
80002150:	31 09       	mov	r9,16
80002152:	91 09       	st.w	r8[0x0],r9
	
	rightMotorConfig.directionPinForwardValue = 1;
80002154:	49 19       	lddpc	r9,80002198 <_ZN13Configuration10init_MotorEv+0x5c>
80002156:	30 18       	mov	r8,1
80002158:	f3 68 00 08 	st.b	r9[8],r8
	rightMotorConfig.directionPinPort = 0; //PA14
8000215c:	48 f9       	lddpc	r9,80002198 <_ZN13Configuration10init_MotorEv+0x5c>
8000215e:	30 08       	mov	r8,0
80002160:	b2 88       	st.b	r9[0x0],r8
	rightMotorConfig.directionPinPin = 14;
80002162:	48 e8       	lddpc	r8,80002198 <_ZN13Configuration10init_MotorEv+0x5c>
80002164:	30 e9       	mov	r9,14
80002166:	91 19       	st.w	r8[0x4],r9
	rightMotorConfig.PWMConfig = &leftPWMConfig;
80002168:	48 c8       	lddpc	r8,80002198 <_ZN13Configuration10init_MotorEv+0x5c>
8000216a:	48 d9       	lddpc	r9,8000219c <_ZN13Configuration10init_MotorEv+0x60>
8000216c:	91 39       	st.w	r8[0xc],r9
	
	leftMotorConfig.directionPinForwardValue = 1;
8000216e:	48 d9       	lddpc	r9,800021a0 <_ZN13Configuration10init_MotorEv+0x64>
80002170:	30 18       	mov	r8,1
80002172:	f3 68 00 08 	st.b	r9[8],r8
	leftMotorConfig.directionPinPort = 0; //PA15
80002176:	48 b9       	lddpc	r9,800021a0 <_ZN13Configuration10init_MotorEv+0x64>
80002178:	30 08       	mov	r8,0
8000217a:	b2 88       	st.b	r9[0x0],r8
	leftMotorConfig.directionPinPin = 15;
8000217c:	48 98       	lddpc	r8,800021a0 <_ZN13Configuration10init_MotorEv+0x64>
8000217e:	30 f9       	mov	r9,15
80002180:	91 19       	st.w	r8[0x4],r9
	leftMotorConfig.PWMConfig = &rightPWMConfig;
80002182:	48 88       	lddpc	r8,800021a0 <_ZN13Configuration10init_MotorEv+0x64>
80002184:	48 89       	lddpc	r9,800021a4 <_ZN13Configuration10init_MotorEv+0x68>
80002186:	91 39       	st.w	r8[0xc],r9
}
80002188:	e3 cd 80 80 	ldm	sp++,r7,pc
8000218c:	00 00       	add	r0,r0
8000218e:	06 74       	tst	r4,r3
80002190:	00 00       	add	r0,r0
80002192:	06 6c       	and	r12,r3
80002194:	00 00       	add	r0,r0
80002196:	06 70       	tst	r0,r3
80002198:	00 00       	add	r0,r0
8000219a:	06 5c       	eor	r12,r3
8000219c:	00 00       	add	r0,r0
8000219e:	06 34       	cp.w	r4,r3
800021a0:	00 00       	add	r0,r0
800021a2:	06 4c       	or	r12,r3
800021a4:	00 00       	add	r0,r0
800021a6:	06 40       	or	r0,r3

800021a8 <_ZN13Configuration12init_SensorsEv>:
		ADC_Internal_Clock:	Target value for ADC internal clock (Clock used for the AD conversion).
							For 10 bit conversion this clock must not exceed 5 MHz.
							The prescaler is automatically chosen by the ADC class to set this clock
							to the closest value available, which is lower than ADC_Internal_Clock.
*/
void Configuration::init_Sensors() {
800021a8:	eb cd 40 80 	pushm	r7,lr
800021ac:	1a 97       	mov	r7,sp
	// GPIO-Sensors
	init_Sensor_FootSwitch();
800021ae:	f0 1f 00 0b 	mcall	800021d8 <_ZN13Configuration12init_SensorsEv+0x30>
	
	// ADC-Sensors
	ADC_Internal_Clock = 5000000;	
800021b2:	48 b8       	lddpc	r8,800021dc <_ZN13Configuration12init_SensorsEv+0x34>
800021b4:	e0 69 4b 40 	mov	r9,19264
800021b8:	ea 19 00 4c 	orh	r9,0x4c
800021bc:	91 09       	st.w	r8[0x0],r9
	
	init_Sensor_OrientationAccelerometer();
800021be:	f0 1f 00 09 	mcall	800021e0 <_ZN13Configuration12init_SensorsEv+0x38>
	init_Sensor_OrientationGyrometer();
800021c2:	f0 1f 00 09 	mcall	800021e4 <_ZN13Configuration12init_SensorsEv+0x3c>
	init_Sensor_OrientationGyrometerReference();
800021c6:	f0 1f 00 09 	mcall	800021e8 <_ZN13Configuration12init_SensorsEv+0x40>
	init_Sensor_SteeringPotentiometer();
800021ca:	f0 1f 00 09 	mcall	800021ec <_ZN13Configuration12init_SensorsEv+0x44>
	init_Sensor_BatteryVoltage();
800021ce:	f0 1f 00 09 	mcall	800021f0 <_ZN13Configuration12init_SensorsEv+0x48>
}
800021d2:	e3 cd 80 80 	ldm	sp++,r7,pc
800021d6:	00 00       	add	r0,r0
800021d8:	80 00       	ld.sh	r0,r0[0x0]
800021da:	21 f4       	sub	r4,31
800021dc:	00 00       	add	r0,r0
800021de:	06 84       	andn	r4,r3
800021e0:	80 00       	ld.sh	r0,r0[0x0]
800021e2:	22 18       	sub	r8,33
800021e4:	80 00       	ld.sh	r0,r0[0x0]
800021e6:	22 6c       	sub	r12,38
800021e8:	80 00       	ld.sh	r0,r0[0x0]
800021ea:	22 c0       	sub	r0,44
800021ec:	80 00       	ld.sh	r0,r0[0x0]
800021ee:	23 14       	sub	r4,49
800021f0:	80 00       	ld.sh	r0,r0[0x0]
800021f2:	23 68       	sub	r8,54

800021f4 <_ZN13Configuration22init_Sensor_FootSwitchEv>:
		
		port: GPIO port, at which the foot switch signal is measured.
		pin: GPIO pin, at which the foot switch signal is measured.
		pullupEnabled: Enable GPIO pull up resistor..
*/
void Configuration::init_Sensor_FootSwitch() {
800021f4:	eb cd 40 80 	pushm	r7,lr
800021f8:	1a 97       	mov	r7,sp
	footSwitchConfig.port = 1; //PB06
800021fa:	48 79       	lddpc	r9,80002214 <_ZN13Configuration22init_Sensor_FootSwitchEv+0x20>
800021fc:	30 18       	mov	r8,1
800021fe:	b2 88       	st.b	r9[0x0],r8
	footSwitchConfig.pin = 6;
80002200:	48 58       	lddpc	r8,80002214 <_ZN13Configuration22init_Sensor_FootSwitchEv+0x20>
80002202:	30 69       	mov	r9,6
80002204:	91 19       	st.w	r8[0x4],r9
	footSwitchConfig.pullupEnabled = true;
80002206:	48 49       	lddpc	r9,80002214 <_ZN13Configuration22init_Sensor_FootSwitchEv+0x20>
80002208:	30 18       	mov	r8,1
8000220a:	f3 68 00 08 	st.b	r9[8],r8
}
8000220e:	e3 cd 80 80 	ldm	sp++,r7,pc
80002212:	00 00       	add	r0,r0
80002214:	00 00       	add	r0,r0
80002216:	06 78       	tst	r8,r3

80002218 <_ZN13Configuration36init_Sensor_OrientationAccelerometerEv>:
		useSlopeFactor: enable multiplication of the measured value by slopeFactor.
		slopeFactor: factor to multiply the measured value with.
		useZeroOffset: enable the subtraction of zeroOffset from the measured value before slopeFactor is applied.
		zeroOffset: offset to subtract from the measured value.
*/
void Configuration::init_Sensor_OrientationAccelerometer() {
80002218:	eb cd 40 80 	pushm	r7,lr
8000221c:	1a 97       	mov	r7,sp
	ADC_gpioMultiplexData[3].configured = true;
8000221e:	49 29       	lddpc	r9,80002264 <_ZN13Configuration36init_Sensor_OrientationAccelerometerEv+0x4c>
80002220:	30 18       	mov	r8,1
80002222:	f3 68 00 24 	st.b	r9[36],r8
	ADC_gpioMultiplexData[3].port = 0; //PA06
80002226:	49 09       	lddpc	r9,80002264 <_ZN13Configuration36init_Sensor_OrientationAccelerometerEv+0x4c>
80002228:	30 08       	mov	r8,0
8000222a:	f3 68 00 25 	st.b	r9[37],r8
	ADC_gpioMultiplexData[3].pin = 6;
8000222e:	48 e8       	lddpc	r8,80002264 <_ZN13Configuration36init_Sensor_OrientationAccelerometerEv+0x4c>
80002230:	30 69       	mov	r9,6
80002232:	91 a9       	st.w	r8[0x28],r9
	ADC_gpioMultiplexData[3].multiplexRegisterValue = 1; //0b01 -> B
80002234:	48 c9       	lddpc	r9,80002264 <_ZN13Configuration36init_Sensor_OrientationAccelerometerEv+0x4c>
80002236:	30 18       	mov	r8,1
80002238:	f3 68 00 2c 	st.b	r9[44],r8
	
	orientationAccelerometerConfig.ADCChannelID = 3;
8000223c:	48 b8       	lddpc	r8,80002268 <_ZN13Configuration36init_Sensor_OrientationAccelerometerEv+0x50>
8000223e:	30 39       	mov	r9,3
80002240:	91 09       	st.w	r8[0x0],r9
	orientationAccelerometerConfig.useSlopeFactor = false;
80002242:	48 a9       	lddpc	r9,80002268 <_ZN13Configuration36init_Sensor_OrientationAccelerometerEv+0x50>
80002244:	30 08       	mov	r8,0
80002246:	f3 68 00 0d 	st.b	r9[13],r8
	orientationAccelerometerConfig.slopeFactor = 0;
8000224a:	48 88       	lddpc	r8,80002268 <_ZN13Configuration36init_Sensor_OrientationAccelerometerEv+0x50>
8000224c:	30 09       	mov	r9,0
8000224e:	91 29       	st.w	r8[0x8],r9
	orientationAccelerometerConfig.useZeroOffset = false;
80002250:	48 69       	lddpc	r9,80002268 <_ZN13Configuration36init_Sensor_OrientationAccelerometerEv+0x50>
80002252:	30 08       	mov	r8,0
80002254:	f3 68 00 0c 	st.b	r9[12],r8
	orientationAccelerometerConfig.zeroOffset = 0;
80002258:	48 48       	lddpc	r8,80002268 <_ZN13Configuration36init_Sensor_OrientationAccelerometerEv+0x50>
8000225a:	30 09       	mov	r9,0
8000225c:	91 19       	st.w	r8[0x4],r9
}
8000225e:	e3 cd 80 80 	ldm	sp++,r7,pc
80002262:	00 00       	add	r0,r0
80002264:	00 00       	add	r0,r0
80002266:	06 88       	andn	r8,r3
80002268:	00 00       	add	r0,r0
8000226a:	06 e8       	st.h	--r3,r8

8000226c <_ZN13Configuration32init_Sensor_OrientationGyrometerEv>:
		useSlopeFactor: enable multiplication of the measured value by slopeFactor.
		slopeFactor: factor to multiply the measured value with.
		useZeroOffset: enable the subtraction of zeroOffset from the measured value before slopeFactor is applied.
		zeroOffset: offset to subtract from the measured value.
*/
void Configuration::init_Sensor_OrientationGyrometer() {
8000226c:	eb cd 40 80 	pushm	r7,lr
80002270:	1a 97       	mov	r7,sp
	ADC_gpioMultiplexData[1].configured = true;
80002272:	49 29       	lddpc	r9,800022b8 <_ZN13Configuration32init_Sensor_OrientationGyrometerEv+0x4c>
80002274:	30 18       	mov	r8,1
80002276:	f3 68 00 0c 	st.b	r9[12],r8
	ADC_gpioMultiplexData[1].port = 0;
8000227a:	49 09       	lddpc	r9,800022b8 <_ZN13Configuration32init_Sensor_OrientationGyrometerEv+0x4c>
8000227c:	30 08       	mov	r8,0
8000227e:	f3 68 00 0d 	st.b	r9[13],r8
	ADC_gpioMultiplexData[1].pin = 4;
80002282:	48 e8       	lddpc	r8,800022b8 <_ZN13Configuration32init_Sensor_OrientationGyrometerEv+0x4c>
80002284:	30 49       	mov	r9,4
80002286:	91 49       	st.w	r8[0x10],r9
	ADC_gpioMultiplexData[1].multiplexRegisterValue = 0; //0b00 -> A
80002288:	48 c9       	lddpc	r9,800022b8 <_ZN13Configuration32init_Sensor_OrientationGyrometerEv+0x4c>
8000228a:	30 08       	mov	r8,0
8000228c:	f3 68 00 14 	st.b	r9[20],r8
	
	orientationGyrometerConfig.ADCChannelID = 1;
80002290:	48 b8       	lddpc	r8,800022bc <_ZN13Configuration32init_Sensor_OrientationGyrometerEv+0x50>
80002292:	30 19       	mov	r9,1
80002294:	91 09       	st.w	r8[0x0],r9
	orientationGyrometerConfig.useSlopeFactor = false;
80002296:	48 a9       	lddpc	r9,800022bc <_ZN13Configuration32init_Sensor_OrientationGyrometerEv+0x50>
80002298:	30 08       	mov	r8,0
8000229a:	f3 68 00 0d 	st.b	r9[13],r8
	orientationGyrometerConfig.slopeFactor = 0;
8000229e:	48 88       	lddpc	r8,800022bc <_ZN13Configuration32init_Sensor_OrientationGyrometerEv+0x50>
800022a0:	30 09       	mov	r9,0
800022a2:	91 29       	st.w	r8[0x8],r9
	orientationGyrometerConfig.useZeroOffset = false;
800022a4:	48 69       	lddpc	r9,800022bc <_ZN13Configuration32init_Sensor_OrientationGyrometerEv+0x50>
800022a6:	30 08       	mov	r8,0
800022a8:	f3 68 00 0c 	st.b	r9[12],r8
	orientationGyrometerConfig.zeroOffset = 0;
800022ac:	48 48       	lddpc	r8,800022bc <_ZN13Configuration32init_Sensor_OrientationGyrometerEv+0x50>
800022ae:	30 09       	mov	r9,0
800022b0:	91 19       	st.w	r8[0x4],r9
}
800022b2:	e3 cd 80 80 	ldm	sp++,r7,pc
800022b6:	00 00       	add	r0,r0
800022b8:	00 00       	add	r0,r0
800022ba:	06 88       	andn	r8,r3
800022bc:	00 00       	add	r0,r0
800022be:	06 f8       	st.b	--r3,r8

800022c0 <_ZN13Configuration41init_Sensor_OrientationGyrometerReferenceEv>:
		useSlopeFactor: enable multiplication of the measured value by slopeFactor.
		slopeFactor: factor to multiply the measured value with.
		useZeroOffset: enable the subtraction of zeroOffset from the measured value before slopeFactor is applied.
		zeroOffset: offset to subtract from the measured value.
*/
void Configuration::init_Sensor_OrientationGyrometerReference() {
800022c0:	eb cd 40 80 	pushm	r7,lr
800022c4:	1a 97       	mov	r7,sp
	ADC_gpioMultiplexData[2].configured = true;
800022c6:	49 29       	lddpc	r9,8000230c <_ZN13Configuration41init_Sensor_OrientationGyrometerReferenceEv+0x4c>
800022c8:	30 18       	mov	r8,1
800022ca:	f3 68 00 18 	st.b	r9[24],r8
	ADC_gpioMultiplexData[2].port = 0;
800022ce:	49 09       	lddpc	r9,8000230c <_ZN13Configuration41init_Sensor_OrientationGyrometerReferenceEv+0x4c>
800022d0:	30 08       	mov	r8,0
800022d2:	f3 68 00 19 	st.b	r9[25],r8
	ADC_gpioMultiplexData[2].pin = 5;
800022d6:	48 e8       	lddpc	r8,8000230c <_ZN13Configuration41init_Sensor_OrientationGyrometerReferenceEv+0x4c>
800022d8:	30 59       	mov	r9,5
800022da:	91 79       	st.w	r8[0x1c],r9
	ADC_gpioMultiplexData[2].multiplexRegisterValue = 1; //0b01 -> B
800022dc:	48 c9       	lddpc	r9,8000230c <_ZN13Configuration41init_Sensor_OrientationGyrometerReferenceEv+0x4c>
800022de:	30 18       	mov	r8,1
800022e0:	f3 68 00 20 	st.b	r9[32],r8
	
	orientationGyrometerReferenceConfig.ADCChannelID = 2;
800022e4:	48 b8       	lddpc	r8,80002310 <_ZN13Configuration41init_Sensor_OrientationGyrometerReferenceEv+0x50>
800022e6:	30 29       	mov	r9,2
800022e8:	91 09       	st.w	r8[0x0],r9
	orientationGyrometerReferenceConfig.useSlopeFactor = false;
800022ea:	48 a9       	lddpc	r9,80002310 <_ZN13Configuration41init_Sensor_OrientationGyrometerReferenceEv+0x50>
800022ec:	30 08       	mov	r8,0
800022ee:	f3 68 00 0d 	st.b	r9[13],r8
	orientationGyrometerReferenceConfig.slopeFactor = 0;
800022f2:	48 88       	lddpc	r8,80002310 <_ZN13Configuration41init_Sensor_OrientationGyrometerReferenceEv+0x50>
800022f4:	30 09       	mov	r9,0
800022f6:	91 29       	st.w	r8[0x8],r9
	orientationGyrometerReferenceConfig.useZeroOffset = false;
800022f8:	48 69       	lddpc	r9,80002310 <_ZN13Configuration41init_Sensor_OrientationGyrometerReferenceEv+0x50>
800022fa:	30 08       	mov	r8,0
800022fc:	f3 68 00 0c 	st.b	r9[12],r8
	orientationGyrometerReferenceConfig.zeroOffset = 0;
80002300:	48 48       	lddpc	r8,80002310 <_ZN13Configuration41init_Sensor_OrientationGyrometerReferenceEv+0x50>
80002302:	30 09       	mov	r9,0
80002304:	91 19       	st.w	r8[0x4],r9
}
80002306:	e3 cd 80 80 	ldm	sp++,r7,pc
8000230a:	00 00       	add	r0,r0
8000230c:	00 00       	add	r0,r0
8000230e:	06 88       	andn	r8,r3
80002310:	00 00       	add	r0,r0
80002312:	07 08       	ld.w	r8,r3++

80002314 <_ZN13Configuration33init_Sensor_SteeringPotentiometerEv>:
		useSlopeFactor: enable multiplication of the measured value by slopeFactor.
		slopeFactor: factor to multiply the measured value with.
		useZeroOffset: enable the subtraction of zeroOffset from the measured value before slopeFactor is applied.
		zeroOffset: offset to subtract from the measured value.
*/
void Configuration::init_Sensor_SteeringPotentiometer() {
80002314:	eb cd 40 80 	pushm	r7,lr
80002318:	1a 97       	mov	r7,sp
	ADC_gpioMultiplexData[6].configured = true;
8000231a:	49 29       	lddpc	r9,80002360 <_ZN13Configuration33init_Sensor_SteeringPotentiometerEv+0x4c>
8000231c:	30 18       	mov	r8,1
8000231e:	f3 68 00 48 	st.b	r9[72],r8
	ADC_gpioMultiplexData[6].port = 0;
80002322:	49 09       	lddpc	r9,80002360 <_ZN13Configuration33init_Sensor_SteeringPotentiometerEv+0x4c>
80002324:	30 08       	mov	r8,0
80002326:	f3 68 00 49 	st.b	r9[73],r8
	ADC_gpioMultiplexData[6].pin = 30;
8000232a:	48 e8       	lddpc	r8,80002360 <_ZN13Configuration33init_Sensor_SteeringPotentiometerEv+0x4c>
8000232c:	31 e9       	mov	r9,30
8000232e:	f1 49 00 4c 	st.w	r8[76],r9
	ADC_gpioMultiplexData[6].multiplexRegisterValue = 0; //0b00 -> A
80002332:	48 c9       	lddpc	r9,80002360 <_ZN13Configuration33init_Sensor_SteeringPotentiometerEv+0x4c>
80002334:	30 08       	mov	r8,0
80002336:	f3 68 00 50 	st.b	r9[80],r8
	
	steeringPotentiometerConfig.ADCChannelID = 6;
8000233a:	48 b8       	lddpc	r8,80002364 <_ZN13Configuration33init_Sensor_SteeringPotentiometerEv+0x50>
8000233c:	30 69       	mov	r9,6
8000233e:	91 09       	st.w	r8[0x0],r9
	steeringPotentiometerConfig.useSlopeFactor = false;
80002340:	48 99       	lddpc	r9,80002364 <_ZN13Configuration33init_Sensor_SteeringPotentiometerEv+0x50>
80002342:	30 08       	mov	r8,0
80002344:	f3 68 00 0d 	st.b	r9[13],r8
	steeringPotentiometerConfig.slopeFactor = 0;
80002348:	48 78       	lddpc	r8,80002364 <_ZN13Configuration33init_Sensor_SteeringPotentiometerEv+0x50>
8000234a:	30 09       	mov	r9,0
8000234c:	91 29       	st.w	r8[0x8],r9
	steeringPotentiometerConfig.useZeroOffset = false;
8000234e:	48 69       	lddpc	r9,80002364 <_ZN13Configuration33init_Sensor_SteeringPotentiometerEv+0x50>
80002350:	30 08       	mov	r8,0
80002352:	f3 68 00 0c 	st.b	r9[12],r8
	steeringPotentiometerConfig.zeroOffset = 0;
80002356:	48 48       	lddpc	r8,80002364 <_ZN13Configuration33init_Sensor_SteeringPotentiometerEv+0x50>
80002358:	30 09       	mov	r9,0
8000235a:	91 19       	st.w	r8[0x4],r9
}
8000235c:	e3 cd 80 80 	ldm	sp++,r7,pc
80002360:	00 00       	add	r0,r0
80002362:	06 88       	andn	r8,r3
80002364:	00 00       	add	r0,r0
80002366:	07 18       	ld.sh	r8,r3++

80002368 <_ZN13Configuration26init_Sensor_BatteryVoltageEv>:
		useSlopeFactor: enable multiplication of the measured value by slopeFactor.
		slopeFactor: factor to multiply the measured value with.
		useZeroOffset: enable the subtraction of zeroOffset from the measured value before slopeFactor is applied.
		zeroOffset: offset to subtract from the measured value.
*/
void Configuration::init_Sensor_BatteryVoltage() {
80002368:	eb cd 40 80 	pushm	r7,lr
8000236c:	1a 97       	mov	r7,sp
	ADC_gpioMultiplexData[7].configured = true;
8000236e:	49 29       	lddpc	r9,800023b4 <_ZN13Configuration26init_Sensor_BatteryVoltageEv+0x4c>
80002370:	30 18       	mov	r8,1
80002372:	f3 68 00 54 	st.b	r9[84],r8
	ADC_gpioMultiplexData[7].port = 0;
80002376:	49 09       	lddpc	r9,800023b4 <_ZN13Configuration26init_Sensor_BatteryVoltageEv+0x4c>
80002378:	30 08       	mov	r8,0
8000237a:	f3 68 00 55 	st.b	r9[85],r8
	ADC_gpioMultiplexData[7].pin = 31;
8000237e:	48 e8       	lddpc	r8,800023b4 <_ZN13Configuration26init_Sensor_BatteryVoltageEv+0x4c>
80002380:	31 f9       	mov	r9,31
80002382:	f1 49 00 58 	st.w	r8[88],r9
	ADC_gpioMultiplexData[7].multiplexRegisterValue = 0; //0b00 -> A
80002386:	48 c9       	lddpc	r9,800023b4 <_ZN13Configuration26init_Sensor_BatteryVoltageEv+0x4c>
80002388:	30 08       	mov	r8,0
8000238a:	f3 68 00 5c 	st.b	r9[92],r8
	
	batteryVoltageSensorConfig.ADCChannelID = 7;
8000238e:	48 b8       	lddpc	r8,800023b8 <_ZN13Configuration26init_Sensor_BatteryVoltageEv+0x50>
80002390:	30 79       	mov	r9,7
80002392:	91 09       	st.w	r8[0x0],r9
	batteryVoltageSensorConfig.useSlopeFactor = false;
80002394:	48 99       	lddpc	r9,800023b8 <_ZN13Configuration26init_Sensor_BatteryVoltageEv+0x50>
80002396:	30 08       	mov	r8,0
80002398:	f3 68 00 0d 	st.b	r9[13],r8
	batteryVoltageSensorConfig.slopeFactor = 0;
8000239c:	48 78       	lddpc	r8,800023b8 <_ZN13Configuration26init_Sensor_BatteryVoltageEv+0x50>
8000239e:	30 09       	mov	r9,0
800023a0:	91 29       	st.w	r8[0x8],r9
	batteryVoltageSensorConfig.useZeroOffset = false;
800023a2:	48 69       	lddpc	r9,800023b8 <_ZN13Configuration26init_Sensor_BatteryVoltageEv+0x50>
800023a4:	30 08       	mov	r8,0
800023a6:	f3 68 00 0c 	st.b	r9[12],r8
	batteryVoltageSensorConfig.zeroOffset = 0;
800023aa:	48 48       	lddpc	r8,800023b8 <_ZN13Configuration26init_Sensor_BatteryVoltageEv+0x50>
800023ac:	30 09       	mov	r9,0
800023ae:	91 19       	st.w	r8[0x4],r9
}
800023b0:	e3 cd 80 80 	ldm	sp++,r7,pc
800023b4:	00 00       	add	r0,r0
800023b6:	06 88       	andn	r8,r3
800023b8:	00 00       	add	r0,r0
800023ba:	07 28       	ld.uh	r8,r3++

800023bc <_ZN13Configuration9init_UARTEv>:
		RX_GPIO_multiplexRegisterValue: value for the receiving GPIO port's multiplexer to select USART as destination.
		TX_GPIO_port: sending GPIO port
		TX_GPIO_pin: sending GPIO pin
		TX_GPIO_multiplexRegisterValue: value for the sending GPIO port's multiplexer to select USART as destination.
*/
void Configuration::init_UART() {
800023bc:	eb cd 40 80 	pushm	r7,lr
800023c0:	1a 97       	mov	r7,sp
	bluetoothUARTConfig.baudRate = 19200;
800023c2:	4b 28       	lddpc	r8,80002488 <_ZN13Configuration9init_UARTEv+0xcc>
800023c4:	e0 69 4b 00 	mov	r9,19200
800023c8:	91 19       	st.w	r8[0x4],r9
	bluetoothUARTConfig.channelmode = 0; // normal channel mode
800023ca:	4b 09       	lddpc	r9,80002488 <_ZN13Configuration9init_UARTEv+0xcc>
800023cc:	30 08       	mov	r8,0
800023ce:	f3 68 00 0a 	st.b	r9[10],r8
	bluetoothUARTConfig.charlength = 8; // 8 bit word length
800023d2:	4a e9       	lddpc	r9,80002488 <_ZN13Configuration9init_UARTEv+0xcc>
800023d4:	30 88       	mov	r8,8
800023d6:	f3 68 00 08 	st.b	r9[8],r8
	bluetoothUARTConfig.paritytype = 0x04; // AVR32_USART_PAR_NONE | no parity bits
800023da:	4a c9       	lddpc	r9,80002488 <_ZN13Configuration9init_UARTEv+0xcc>
800023dc:	30 48       	mov	r8,4
800023de:	f3 68 00 09 	st.b	r9[9],r8
	bluetoothUARTConfig.stopbits = 0; // 1 stop bit
800023e2:	4a a9       	lddpc	r9,80002488 <_ZN13Configuration9init_UARTEv+0xcc>
800023e4:	30 08       	mov	r8,0
800023e6:	f3 68 00 0b 	st.b	r9[11],r8
	bluetoothUARTConfig.usart_address = ( char* ) 0xFFFF1400;
800023ea:	4a 88       	lddpc	r8,80002488 <_ZN13Configuration9init_UARTEv+0xcc>
800023ec:	fe 79 14 00 	mov	r9,-60416
800023f0:	91 09       	st.w	r8[0x0],r9
	bluetoothUARTConfig.RX_GPIO_port = 1;
800023f2:	4a 69       	lddpc	r9,80002488 <_ZN13Configuration9init_UARTEv+0xcc>
800023f4:	30 18       	mov	r8,1
800023f6:	f3 68 00 0c 	st.b	r9[12],r8
	bluetoothUARTConfig.RX_GPIO_pin = 10;
800023fa:	4a 49       	lddpc	r9,80002488 <_ZN13Configuration9init_UARTEv+0xcc>
800023fc:	30 a8       	mov	r8,10
800023fe:	f3 68 00 0d 	st.b	r9[13],r8
	bluetoothUARTConfig.RX_GPIO_multiplexRegisterValue = 2; //0b10 -> C
80002402:	4a 29       	lddpc	r9,80002488 <_ZN13Configuration9init_UARTEv+0xcc>
80002404:	30 28       	mov	r8,2
80002406:	f3 68 00 0e 	st.b	r9[14],r8
	bluetoothUARTConfig.TX_GPIO_port = 1;
8000240a:	4a 09       	lddpc	r9,80002488 <_ZN13Configuration9init_UARTEv+0xcc>
8000240c:	30 18       	mov	r8,1
8000240e:	f3 68 00 0f 	st.b	r9[15],r8
	bluetoothUARTConfig.TX_GPIO_pin = 11;
80002412:	49 e9       	lddpc	r9,80002488 <_ZN13Configuration9init_UARTEv+0xcc>
80002414:	30 b8       	mov	r8,11
80002416:	f3 68 00 10 	st.b	r9[16],r8
	bluetoothUARTConfig.TX_GPIO_multiplexRegisterValue = 2; //0b10 -> C
8000241a:	49 c9       	lddpc	r9,80002488 <_ZN13Configuration9init_UARTEv+0xcc>
8000241c:	30 28       	mov	r8,2
8000241e:	f3 68 00 11 	st.b	r9[17],r8

	rs232UARTConfig.baudRate = 38400;
80002422:	49 b8       	lddpc	r8,8000248c <_ZN13Configuration9init_UARTEv+0xd0>
80002424:	e0 69 96 00 	mov	r9,38400
80002428:	91 19       	st.w	r8[0x4],r9
	rs232UARTConfig.channelmode = 0; // normal channel mode
8000242a:	49 99       	lddpc	r9,8000248c <_ZN13Configuration9init_UARTEv+0xd0>
8000242c:	30 08       	mov	r8,0
8000242e:	f3 68 00 0a 	st.b	r9[10],r8
	rs232UARTConfig.charlength = 8; // 8 bit word length
80002432:	49 79       	lddpc	r9,8000248c <_ZN13Configuration9init_UARTEv+0xd0>
80002434:	30 88       	mov	r8,8
80002436:	f3 68 00 08 	st.b	r9[8],r8
	rs232UARTConfig.paritytype = 0x04; // AVR32_USART_PAR_NONE | no parity bits
8000243a:	49 59       	lddpc	r9,8000248c <_ZN13Configuration9init_UARTEv+0xd0>
8000243c:	30 48       	mov	r8,4
8000243e:	f3 68 00 09 	st.b	r9[9],r8
	rs232UARTConfig.stopbits = 0; // 1 stop bit
80002442:	49 39       	lddpc	r9,8000248c <_ZN13Configuration9init_UARTEv+0xd0>
80002444:	30 08       	mov	r8,0
80002446:	f3 68 00 0b 	st.b	r9[11],r8
	rs232UARTConfig.usart_address = ( char* ) 0xFFFF1C00;
8000244a:	49 18       	lddpc	r8,8000248c <_ZN13Configuration9init_UARTEv+0xd0>
8000244c:	fe 79 1c 00 	mov	r9,-58368
80002450:	91 09       	st.w	r8[0x0],r9
	rs232UARTConfig.RX_GPIO_port = 0;
80002452:	48 f9       	lddpc	r9,8000248c <_ZN13Configuration9init_UARTEv+0xd0>
80002454:	30 08       	mov	r8,0
80002456:	f3 68 00 0c 	st.b	r9[12],r8
	rs232UARTConfig.RX_GPIO_pin = 26;
8000245a:	48 d9       	lddpc	r9,8000248c <_ZN13Configuration9init_UARTEv+0xd0>
8000245c:	31 a8       	mov	r8,26
8000245e:	f3 68 00 0d 	st.b	r9[13],r8
	rs232UARTConfig.RX_GPIO_multiplexRegisterValue = 1; //0b01 -> B
80002462:	48 b9       	lddpc	r9,8000248c <_ZN13Configuration9init_UARTEv+0xd0>
80002464:	30 18       	mov	r8,1
80002466:	f3 68 00 0e 	st.b	r9[14],r8
	rs232UARTConfig.TX_GPIO_port = 0;
8000246a:	48 99       	lddpc	r9,8000248c <_ZN13Configuration9init_UARTEv+0xd0>
8000246c:	30 08       	mov	r8,0
8000246e:	f3 68 00 0f 	st.b	r9[15],r8
	rs232UARTConfig.TX_GPIO_pin = 27;
80002472:	48 79       	lddpc	r9,8000248c <_ZN13Configuration9init_UARTEv+0xd0>
80002474:	31 b8       	mov	r8,27
80002476:	f3 68 00 10 	st.b	r9[16],r8
	rs232UARTConfig.TX_GPIO_multiplexRegisterValue = 1; //0b10 -> B
8000247a:	48 59       	lddpc	r9,8000248c <_ZN13Configuration9init_UARTEv+0xd0>
8000247c:	30 18       	mov	r8,1
8000247e:	f3 68 00 11 	st.b	r9[17],r8
}
80002482:	e3 cd 80 80 	ldm	sp++,r7,pc
80002486:	00 00       	add	r0,r0
80002488:	00 00       	add	r0,r0
8000248a:	07 4c       	ld.w	r12,--r3
8000248c:	00 00       	add	r0,r0
8000248e:	07 38       	ld.ub	r8,r3++

80002490 <_ZN13Configuration15init_StatusLEDsEv>:
/*! \brief	Initializes status LED configuration variables.
		
		port: GPIO port
		pin: GPIO pin
*/
void Configuration::init_StatusLEDs() {
80002490:	eb cd 40 80 	pushm	r7,lr
80002494:	1a 97       	mov	r7,sp
	// Status LEDs
	redStatusLEDConfig.port = 1;
80002496:	48 89       	lddpc	r9,800024b4 <_ZN13Configuration15init_StatusLEDsEv+0x24>
80002498:	30 18       	mov	r8,1
8000249a:	b2 88       	st.b	r9[0x0],r8
	redStatusLEDConfig.pin = 0;
8000249c:	48 68       	lddpc	r8,800024b4 <_ZN13Configuration15init_StatusLEDsEv+0x24>
8000249e:	30 09       	mov	r9,0
800024a0:	91 19       	st.w	r8[0x4],r9
	greenStatusLEDConfig.port = 1;
800024a2:	48 69       	lddpc	r9,800024b8 <_ZN13Configuration15init_StatusLEDsEv+0x28>
800024a4:	30 18       	mov	r8,1
800024a6:	b2 88       	st.b	r9[0x0],r8
	greenStatusLEDConfig.pin = 1;
800024a8:	48 48       	lddpc	r8,800024b8 <_ZN13Configuration15init_StatusLEDsEv+0x28>
800024aa:	30 19       	mov	r9,1
800024ac:	91 19       	st.w	r8[0x4],r9
}
800024ae:	e3 cd 80 80 	ldm	sp++,r7,pc
800024b2:	00 00       	add	r0,r0
800024b4:	00 00       	add	r0,r0
800024b6:	07 60       	ld.uh	r0,--r3
800024b8:	00 00       	add	r0,r0
800024ba:	07 68       	ld.uh	r8,--r3

800024bc <_get_interrupt_handler>:
extern "C" void _evba(), _int0(), _int1(), _int2(), _int3();

/*! \brief	Interrupt handler, called when an interrupt occurs. Selects timer interrupts and calls timer function.
	\return	zero, so no further action is taken.
*/
extern "C" void* _get_interrupt_handler( unsigned long int_level ) {
800024bc:	eb cd 40 80 	pushm	r7,lr
800024c0:	1a 97       	mov	r7,sp
800024c2:	20 1d       	sub	sp,4
800024c4:	ef 4c ff fc 	st.w	r7[-4],r12
	if( int_level == 0 ) {
800024c8:	ee f8 ff fc 	ld.w	r8,r7[-4]
800024cc:	58 08       	cp.w	r8,0
800024ce:	c0 c1       	brne	800024e6 <_get_interrupt_handler+0x2a>
		// If mySegway is present, call it's timer function.
		if( mySegway != 0 ) {
800024d0:	48 88       	lddpc	r8,800024f0 <_get_interrupt_handler+0x34>
800024d2:	70 08       	ld.w	r8,r8[0x0]
800024d4:	58 08       	cp.w	r8,0
800024d6:	c0 60       	breq	800024e2 <_get_interrupt_handler+0x26>
			mySegway->timerFunction();
800024d8:	48 68       	lddpc	r8,800024f0 <_get_interrupt_handler+0x34>
800024da:	70 08       	ld.w	r8,r8[0x0]
800024dc:	10 9c       	mov	r12,r8
800024de:	f0 1f 00 06 	mcall	800024f4 <_get_interrupt_handler+0x38>
		}
		
		// Reset interrupt flag
		Timer::resetInterruptFlag();
800024e2:	f0 1f 00 06 	mcall	800024f8 <_get_interrupt_handler+0x3c>
	}
	
	return 0;
800024e6:	30 08       	mov	r8,0
}
800024e8:	10 9c       	mov	r12,r8
800024ea:	2f fd       	sub	sp,-4
800024ec:	e3 cd 80 80 	ldm	sp++,r7,pc
800024f0:	00 00       	add	r0,r0
800024f2:	07 70       	ld.ub	r0,--r3
800024f4:	80 00       	ld.sh	r0,r0[0x0]
800024f6:	00 c8       	st.b	r0++,r8
800024f8:	80 00       	ld.sh	r0,r0[0x0]
800024fa:	35 08       	mov	r8,80

800024fc <_Z17init_system_clockv>:

/*! \brief	Switches system clock to external OSC0
*/
void init_system_clock() {
800024fc:	eb cd 40 80 	pushm	r7,lr
80002500:	1a 97       	mov	r7,sp
	// Set oscillator gain class "G3" (as f_OSC >= 8 MHz)
	//AVR32_PM.OSCCTRL0.mode = AVR32_PM_OSCCTRL0_MODE_CRYSTAL_G3;
	SET_BITS(*( volatile unsigned int* ) ( MYAVR32_PM_ADDRESS + MYAVR32_PM_OFFSET_OSCCTL0 ), ( 0x007 << 0 ));
80002502:	49 b8       	lddpc	r8,8000256c <_Z17init_system_clockv+0x70>
80002504:	70 08       	ld.w	r8,r8[0x0]
80002506:	2d 88       	sub	r8,-40
80002508:	49 99       	lddpc	r9,8000256c <_Z17init_system_clockv+0x70>
8000250a:	72 09       	ld.w	r9,r9[0x0]
8000250c:	2d 89       	sub	r9,-40
8000250e:	72 09       	ld.w	r9,r9[0x0]
80002510:	e8 19 00 07 	orl	r9,0x7
80002514:	91 09       	st.w	r8[0x0],r9
	// Startup time: 4096 cycles
	//AVR32_PM.OSCCTRL0.startup = AVR32_PM_OSCCTRL0_STARTUP_0_RCOSC;
	CLEAR_BITS(*( volatile unsigned int* ) ( MYAVR32_PM_ADDRESS + MYAVR32_PM_OFFSET_OSCCTL0 ), ( 0x007 << 8 ));
80002516:	49 68       	lddpc	r8,8000256c <_Z17init_system_clockv+0x70>
80002518:	70 08       	ld.w	r8,r8[0x0]
8000251a:	2d 88       	sub	r8,-40
8000251c:	49 49       	lddpc	r9,8000256c <_Z17init_system_clockv+0x70>
8000251e:	72 09       	ld.w	r9,r9[0x0]
80002520:	2d 89       	sub	r9,-40
80002522:	72 09       	ld.w	r9,r9[0x0]
80002524:	e0 19 f8 ff 	andl	r9,0xf8ff
80002528:	91 09       	st.w	r8[0x0],r9
	// Enable Oscillator 0
	//AVR32_PM.MCCTRL.osc0en = 1;
	SET_BIT(*( volatile unsigned int* ) ( MYAVR32_PM_ADDRESS + MYAVR32_PM_OFFSET_MCCTRL ), 2);
8000252a:	49 18       	lddpc	r8,8000256c <_Z17init_system_clockv+0x70>
8000252c:	70 08       	ld.w	r8,r8[0x0]
8000252e:	49 09       	lddpc	r9,8000256c <_Z17init_system_clockv+0x70>
80002530:	72 09       	ld.w	r9,r9[0x0]
80002532:	72 09       	ld.w	r9,r9[0x0]
80002534:	a3 a9       	sbr	r9,0x2
80002536:	91 09       	st.w	r8[0x0],r9
	// Wait for oscillator 0 to be ready
	//while(!AVR32_PM.POSCSR.osc0rdy);
	while( !BIT_IS_SET( *( volatile unsigned int* ) ( MYAVR32_PM_ADDRESS + MYAVR32_PM_OFFSET_POSCSR ), 7 ));
80002538:	48 d8       	lddpc	r8,8000256c <_Z17init_system_clockv+0x70>
8000253a:	70 08       	ld.w	r8,r8[0x0]
8000253c:	2a c8       	sub	r8,-84
8000253e:	70 08       	ld.w	r8,r8[0x0]
80002540:	e2 18 00 80 	andl	r8,0x80,COH
80002544:	5f 08       	sreq	r8
80002546:	5c 58       	castu.b	r8
80002548:	cf 81       	brne	80002538 <_Z17init_system_clockv+0x3c>
	// Select oscillator 0 as source for the main clock
	//AVR32_PM.MCCTRL.mcsel = 1;
	CLEAR_BITS(*( volatile unsigned int* ) ( MYAVR32_PM_ADDRESS + MYAVR32_PM_OFFSET_MCCTRL ), ( 0x003 << 0 ));
8000254a:	48 98       	lddpc	r8,8000256c <_Z17init_system_clockv+0x70>
8000254c:	70 08       	ld.w	r8,r8[0x0]
8000254e:	48 89       	lddpc	r9,8000256c <_Z17init_system_clockv+0x70>
80002550:	72 09       	ld.w	r9,r9[0x0]
80002552:	72 09       	ld.w	r9,r9[0x0]
80002554:	e0 19 ff fc 	andl	r9,0xfffc
80002558:	91 09       	st.w	r8[0x0],r9
	SET_BIT(*( volatile unsigned int* ) ( MYAVR32_PM_ADDRESS + MYAVR32_PM_OFFSET_MCCTRL ), 0);
8000255a:	48 58       	lddpc	r8,8000256c <_Z17init_system_clockv+0x70>
8000255c:	70 08       	ld.w	r8,r8[0x0]
8000255e:	48 49       	lddpc	r9,8000256c <_Z17init_system_clockv+0x70>
80002560:	72 09       	ld.w	r9,r9[0x0]
80002562:	72 09       	ld.w	r9,r9[0x0]
80002564:	a1 a9       	sbr	r9,0x0
80002566:	91 09       	st.w	r8[0x0],r9
}
80002568:	e3 cd 80 80 	ldm	sp++,r7,pc
8000256c:	00 00       	add	r0,r0
8000256e:	00 d4       	st.w	--r0,r4

80002570 <_Z21init_interrupt_systemv>:

/*! \brief	Initializes the interrupt system to redirect timer interrupts to _int0(), which is implemented in assembler.
*/
void init_interrupt_system() {
80002570:	eb cd 40 80 	pushm	r7,lr
80002574:	1a 97       	mov	r7,sp
	// Set exception handler (defined in exception.s)
	__builtin_mtsr( 0x0004, ( unsigned long )&_evba );
80002576:	49 a8       	lddpc	r8,800025dc <_Z21init_interrupt_systemv+0x6c>
80002578:	e3 b8 00 01 	mtsr	0x4,r8

	// The timer's interrupt group is 14 for all timers.
	// Set the interrupt level of the timer's interrupt group to 0.
	//AVR32_INTC.IPR[14].intlevel = AVR32_INTC_INT0;
	CLEAR_BITS(*( volatile unsigned int* ) ( MYAVR32_INTC_ADDRESS + MYAVR32_INTC_OFFSET_IPR0 + 14 * MYAVR32_INTC_SIZE_IPR ), ( 0x003 << 30 ));
8000257c:	49 98       	lddpc	r8,800025e0 <_Z21init_interrupt_systemv+0x70>
8000257e:	70 08       	ld.w	r8,r8[0x0]
80002580:	2c 88       	sub	r8,-56
80002582:	49 89       	lddpc	r9,800025e0 <_Z21init_interrupt_systemv+0x70>
80002584:	72 09       	ld.w	r9,r9[0x0]
80002586:	2c 89       	sub	r9,-56
80002588:	72 09       	ld.w	r9,r9[0x0]
8000258a:	f3 d9 c0 1e 	bfextu	r9,r9,0x0,0x1e
8000258e:	91 09       	st.w	r8[0x0],r9
	
	// Set the interrupt handler offset of timer's interrupt group. => Timer interrupts will be called having int_level = 0.
	//AVR32_INTC.IPR[14].autovector = ( int )&_int0 - ( int )&_evba;
	CLEAR_BITS(*( volatile unsigned int* ) ( MYAVR32_INTC_ADDRESS + MYAVR32_INTC_OFFSET_IPR0 + 14 * MYAVR32_INTC_SIZE_IPR ), ( 0x3FFF << 0 ));
80002590:	49 48       	lddpc	r8,800025e0 <_Z21init_interrupt_systemv+0x70>
80002592:	70 08       	ld.w	r8,r8[0x0]
80002594:	2c 88       	sub	r8,-56
80002596:	49 39       	lddpc	r9,800025e0 <_Z21init_interrupt_systemv+0x70>
80002598:	72 09       	ld.w	r9,r9[0x0]
8000259a:	2c 89       	sub	r9,-56
8000259c:	72 09       	ld.w	r9,r9[0x0]
8000259e:	e0 19 c0 00 	andl	r9,0xc000
800025a2:	91 09       	st.w	r8[0x0],r9
	SET_BITS(*( volatile unsigned int* ) ( MYAVR32_INTC_ADDRESS + MYAVR32_INTC_OFFSET_IPR0 + 14 * MYAVR32_INTC_SIZE_IPR ), ((( int )&_int0 - ( int )&_evba ) << 0 ));
800025a4:	48 f8       	lddpc	r8,800025e0 <_Z21init_interrupt_systemv+0x70>
800025a6:	70 08       	ld.w	r8,r8[0x0]
800025a8:	2c 88       	sub	r8,-56
800025aa:	48 e9       	lddpc	r9,800025e0 <_Z21init_interrupt_systemv+0x70>
800025ac:	72 09       	ld.w	r9,r9[0x0]
800025ae:	2c 89       	sub	r9,-56
800025b0:	72 0a       	ld.w	r10,r9[0x0]
800025b2:	48 db       	lddpc	r11,800025e4 <_Z21init_interrupt_systemv+0x74>
800025b4:	48 a9       	lddpc	r9,800025dc <_Z21init_interrupt_systemv+0x6c>
800025b6:	f6 09 01 09 	sub	r9,r11,r9
800025ba:	f5 e9 10 09 	or	r9,r10,r9
800025be:	91 09       	st.w	r8[0x0],r9
	
	// Low Priority for interrupts caused by the PWM controller
	//AVR32_INTC.IPR[12].intlevel = AVR32_INTC_INT3;
	SET_BITS(*( volatile unsigned int* ) ( MYAVR32_INTC_ADDRESS + MYAVR32_INTC_OFFSET_IPR0 + 12 * MYAVR32_INTC_SIZE_IPR ), ( 0x003 << 30 ));
800025c0:	48 88       	lddpc	r8,800025e0 <_Z21init_interrupt_systemv+0x70>
800025c2:	70 08       	ld.w	r8,r8[0x0]
800025c4:	2d 08       	sub	r8,-48
800025c6:	48 79       	lddpc	r9,800025e0 <_Z21init_interrupt_systemv+0x70>
800025c8:	72 09       	ld.w	r9,r9[0x0]
800025ca:	2d 09       	sub	r9,-48
800025cc:	72 09       	ld.w	r9,r9[0x0]
800025ce:	ea 19 c0 00 	orh	r9,0xc000
800025d2:	91 09       	st.w	r8[0x0],r9
	
	// Globally enable interrupts
	cpu_irq_enable();
800025d4:	d5 03       	csrf	0x10
}
800025d6:	e3 cd 80 80 	ldm	sp++,r7,pc
800025da:	00 00       	add	r0,r0
800025dc:	80 00       	ld.sh	r0,r0[0x0]
800025de:	f2 00 00 00 	add	r0,r9,r0
800025e2:	00 d8       	st.w	--r0,r8
800025e4:	80 00       	ld.sh	r0,r0[0x0]
800025e6:	f3 04 d4 31 	ld.sh	r4,r9[-11215]

800025e8 <_ZN6SegwayD1Ev>:
#include "../Sensor/ADC.h"
#include "../Sensor/ADCSensor.h"
#include "../Sensor/GPIOSensor.h"
#include "../UART/UART.h"

class Segway {
800025e8:	d4 31       	pushm	r0-r7,lr
800025ea:	1a 97       	mov	r7,sp
800025ec:	fa cd 00 90 	sub	sp,sp,144
800025f0:	ef 4c ff fc 	st.w	r7[-4],r12
800025f4:	fe f8 03 14 	ld.w	r8,pc[788]
800025f8:	ef 48 ff e0 	st.w	r7[-32],r8
800025fc:	fe f8 03 10 	ld.w	r8,pc[784]
80002600:	ef 48 ff e4 	st.w	r7[-28],r8
80002604:	ee c8 00 18 	sub	r8,r7,24
80002608:	91 07       	st.w	r8[0x0],r7
8000260a:	fe c9 ff d8 	sub	r9,pc,-40
8000260e:	91 19       	st.w	r8[0x4],r9
80002610:	91 2d       	st.w	r8[0x8],sp
80002612:	ee c8 00 38 	sub	r8,r7,56
80002616:	10 9c       	mov	r12,r8
80002618:	f0 1f 00 be 	mcall	80002910 <_ZN6SegwayD1Ev+0x328>
8000261c:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002620:	f0 c8 fe a8 	sub	r8,r8,-344
80002624:	30 19       	mov	r9,1
80002626:	ef 49 ff cc 	st.w	r7[-52],r9
8000262a:	10 9c       	mov	r12,r8
8000262c:	f0 1f 00 ba 	mcall	80002914 <_ZN6SegwayD1Ev+0x32c>
80002630:	c3 58       	rjmp	8000269a <_ZN6SegwayD1Ev+0xb2>
80002632:	ee fa ff cc 	ld.w	r10,r7[-52]
80002636:	ee f8 ff d0 	ld.w	r8,r7[-48]
8000263a:	ee f9 ff d4 	ld.w	r9,r7[-44]
8000263e:	58 1a       	cp.w	r10,1
80002640:	c3 80       	breq	800026b0 <_ZN6SegwayD1Ev+0xc8>
80002642:	58 2a       	cp.w	r10,2
80002644:	c5 40       	breq	800026ec <_ZN6SegwayD1Ev+0x104>
80002646:	58 3a       	cp.w	r10,3
80002648:	c7 00       	breq	80002728 <_ZN6SegwayD1Ev+0x140>
8000264a:	58 4a       	cp.w	r10,4
8000264c:	e0 80 00 8c 	breq	80002764 <_ZN6SegwayD1Ev+0x17c>
80002650:	58 5a       	cp.w	r10,5
80002652:	e0 80 00 a7 	breq	800027a0 <_ZN6SegwayD1Ev+0x1b8>
80002656:	58 6a       	cp.w	r10,6
80002658:	e0 80 00 c2 	breq	800027dc <_ZN6SegwayD1Ev+0x1f4>
8000265c:	58 7a       	cp.w	r10,7
8000265e:	e0 80 00 db 	breq	80002814 <_ZN6SegwayD1Ev+0x22c>
80002662:	58 8a       	cp.w	r10,8
80002664:	e0 80 00 f4 	breq	8000284c <_ZN6SegwayD1Ev+0x264>
80002668:	58 9a       	cp.w	r10,9
8000266a:	e0 80 01 0d 	breq	80002884 <_ZN6SegwayD1Ev+0x29c>
8000266e:	58 aa       	cp.w	r10,10
80002670:	e0 80 01 26 	breq	800028bc <_ZN6SegwayD1Ev+0x2d4>
80002674:	ef 49 ff 74 	st.w	r7[-140],r9
80002678:	ef 48 ff 70 	st.w	r7[-144],r8
8000267c:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002680:	f0 c8 fe ac 	sub	r8,r8,-340
80002684:	30 09       	mov	r9,0
80002686:	ef 49 ff cc 	st.w	r7[-52],r9
8000268a:	10 9c       	mov	r12,r8
8000268c:	f0 1f 00 a2 	mcall	80002914 <_ZN6SegwayD1Ev+0x32c>
80002690:	ee f8 ff 70 	ld.w	r8,r7[-144]
80002694:	ee f9 ff 74 	ld.w	r9,r7[-140]
80002698:	c0 c8       	rjmp	800026b0 <_ZN6SegwayD1Ev+0xc8>
8000269a:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000269e:	f0 c8 fe ac 	sub	r8,r8,-340
800026a2:	30 29       	mov	r9,2
800026a4:	ef 49 ff cc 	st.w	r7[-52],r9
800026a8:	10 9c       	mov	r12,r8
800026aa:	f0 1f 00 9b 	mcall	80002914 <_ZN6SegwayD1Ev+0x32c>
800026ae:	c1 48       	rjmp	800026d6 <_ZN6SegwayD1Ev+0xee>
800026b0:	ef 49 ff 7c 	st.w	r7[-132],r9
800026b4:	ef 48 ff 78 	st.w	r7[-136],r8
800026b8:	ee f8 ff fc 	ld.w	r8,r7[-4]
800026bc:	f0 c8 fe bc 	sub	r8,r8,-324
800026c0:	30 09       	mov	r9,0
800026c2:	ef 49 ff cc 	st.w	r7[-52],r9
800026c6:	10 9c       	mov	r12,r8
800026c8:	f0 1f 00 94 	mcall	80002918 <_ZN6SegwayD1Ev+0x330>
800026cc:	ee f8 ff 78 	ld.w	r8,r7[-136]
800026d0:	ee f9 ff 7c 	ld.w	r9,r7[-132]
800026d4:	c0 c8       	rjmp	800026ec <_ZN6SegwayD1Ev+0x104>
800026d6:	ee f8 ff fc 	ld.w	r8,r7[-4]
800026da:	f0 c8 fe bc 	sub	r8,r8,-324
800026de:	30 39       	mov	r9,3
800026e0:	ef 49 ff cc 	st.w	r7[-52],r9
800026e4:	10 9c       	mov	r12,r8
800026e6:	f0 1f 00 8d 	mcall	80002918 <_ZN6SegwayD1Ev+0x330>
800026ea:	c1 48       	rjmp	80002712 <_ZN6SegwayD1Ev+0x12a>
800026ec:	ef 49 ff 84 	st.w	r7[-124],r9
800026f0:	ef 48 ff 80 	st.w	r7[-128],r8
800026f4:	ee f8 ff fc 	ld.w	r8,r7[-4]
800026f8:	f0 c8 fe cc 	sub	r8,r8,-308
800026fc:	30 09       	mov	r9,0
800026fe:	ef 49 ff cc 	st.w	r7[-52],r9
80002702:	10 9c       	mov	r12,r8
80002704:	f0 1f 00 85 	mcall	80002918 <_ZN6SegwayD1Ev+0x330>
80002708:	ee f8 ff 80 	ld.w	r8,r7[-128]
8000270c:	ee f9 ff 84 	ld.w	r9,r7[-124]
80002710:	c0 c8       	rjmp	80002728 <_ZN6SegwayD1Ev+0x140>
80002712:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002716:	f0 c8 fe cc 	sub	r8,r8,-308
8000271a:	30 49       	mov	r9,4
8000271c:	ef 49 ff cc 	st.w	r7[-52],r9
80002720:	10 9c       	mov	r12,r8
80002722:	f0 1f 00 7e 	mcall	80002918 <_ZN6SegwayD1Ev+0x330>
80002726:	c1 48       	rjmp	8000274e <_ZN6SegwayD1Ev+0x166>
80002728:	ef 49 ff 8c 	st.w	r7[-116],r9
8000272c:	ef 48 ff 88 	st.w	r7[-120],r8
80002730:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002734:	f0 c8 ff 00 	sub	r8,r8,-256
80002738:	30 09       	mov	r9,0
8000273a:	ef 49 ff cc 	st.w	r7[-52],r9
8000273e:	10 9c       	mov	r12,r8
80002740:	f0 1f 00 77 	mcall	8000291c <_ZN6SegwayD1Ev+0x334>
80002744:	ee f8 ff 88 	ld.w	r8,r7[-120]
80002748:	ee f9 ff 8c 	ld.w	r9,r7[-116]
8000274c:	c0 c8       	rjmp	80002764 <_ZN6SegwayD1Ev+0x17c>
8000274e:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002752:	f0 c8 ff 00 	sub	r8,r8,-256
80002756:	30 59       	mov	r9,5
80002758:	ef 49 ff cc 	st.w	r7[-52],r9
8000275c:	10 9c       	mov	r12,r8
8000275e:	f0 1f 00 70 	mcall	8000291c <_ZN6SegwayD1Ev+0x334>
80002762:	c1 48       	rjmp	8000278a <_ZN6SegwayD1Ev+0x1a2>
80002764:	ef 49 ff 94 	st.w	r7[-108],r9
80002768:	ef 48 ff 90 	st.w	r7[-112],r8
8000276c:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002770:	f0 c8 ff 34 	sub	r8,r8,-204
80002774:	30 09       	mov	r9,0
80002776:	ef 49 ff cc 	st.w	r7[-52],r9
8000277a:	10 9c       	mov	r12,r8
8000277c:	f0 1f 00 68 	mcall	8000291c <_ZN6SegwayD1Ev+0x334>
80002780:	ee f8 ff 90 	ld.w	r8,r7[-112]
80002784:	ee f9 ff 94 	ld.w	r9,r7[-108]
80002788:	c0 c8       	rjmp	800027a0 <_ZN6SegwayD1Ev+0x1b8>
8000278a:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000278e:	f0 c8 ff 34 	sub	r8,r8,-204
80002792:	30 69       	mov	r9,6
80002794:	ef 49 ff cc 	st.w	r7[-52],r9
80002798:	10 9c       	mov	r12,r8
8000279a:	f0 1f 00 61 	mcall	8000291c <_ZN6SegwayD1Ev+0x334>
8000279e:	c1 48       	rjmp	800027c6 <_ZN6SegwayD1Ev+0x1de>
800027a0:	ef 49 ff 9c 	st.w	r7[-100],r9
800027a4:	ef 48 ff 98 	st.w	r7[-104],r8
800027a8:	ee f8 ff fc 	ld.w	r8,r7[-4]
800027ac:	f0 c8 ff 68 	sub	r8,r8,-152
800027b0:	30 09       	mov	r9,0
800027b2:	ef 49 ff cc 	st.w	r7[-52],r9
800027b6:	10 9c       	mov	r12,r8
800027b8:	f0 1f 00 59 	mcall	8000291c <_ZN6SegwayD1Ev+0x334>
800027bc:	ee f8 ff 98 	ld.w	r8,r7[-104]
800027c0:	ee f9 ff 9c 	ld.w	r9,r7[-100]
800027c4:	c0 c8       	rjmp	800027dc <_ZN6SegwayD1Ev+0x1f4>
800027c6:	ee f8 ff fc 	ld.w	r8,r7[-4]
800027ca:	f0 c8 ff 68 	sub	r8,r8,-152
800027ce:	30 79       	mov	r9,7
800027d0:	ef 49 ff cc 	st.w	r7[-52],r9
800027d4:	10 9c       	mov	r12,r8
800027d6:	f0 1f 00 52 	mcall	8000291c <_ZN6SegwayD1Ev+0x334>
800027da:	c1 38       	rjmp	80002800 <_ZN6SegwayD1Ev+0x218>
800027dc:	ef 49 ff a4 	st.w	r7[-92],r9
800027e0:	ef 48 ff a0 	st.w	r7[-96],r8
800027e4:	ee f8 ff fc 	ld.w	r8,r7[-4]
800027e8:	29 c8       	sub	r8,-100
800027ea:	30 09       	mov	r9,0
800027ec:	ef 49 ff cc 	st.w	r7[-52],r9
800027f0:	10 9c       	mov	r12,r8
800027f2:	f0 1f 00 4b 	mcall	8000291c <_ZN6SegwayD1Ev+0x334>
800027f6:	ee f8 ff a0 	ld.w	r8,r7[-96]
800027fa:	ee f9 ff a4 	ld.w	r9,r7[-92]
800027fe:	c0 b8       	rjmp	80002814 <_ZN6SegwayD1Ev+0x22c>
80002800:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002804:	29 c8       	sub	r8,-100
80002806:	30 89       	mov	r9,8
80002808:	ef 49 ff cc 	st.w	r7[-52],r9
8000280c:	10 9c       	mov	r12,r8
8000280e:	f0 1f 00 44 	mcall	8000291c <_ZN6SegwayD1Ev+0x334>
80002812:	c1 38       	rjmp	80002838 <_ZN6SegwayD1Ev+0x250>
80002814:	ef 49 ff ac 	st.w	r7[-84],r9
80002818:	ef 48 ff a8 	st.w	r7[-88],r8
8000281c:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002820:	2d 08       	sub	r8,-48
80002822:	30 09       	mov	r9,0
80002824:	ef 49 ff cc 	st.w	r7[-52],r9
80002828:	10 9c       	mov	r12,r8
8000282a:	f0 1f 00 3d 	mcall	8000291c <_ZN6SegwayD1Ev+0x334>
8000282e:	ee f8 ff a8 	ld.w	r8,r7[-88]
80002832:	ee f9 ff ac 	ld.w	r9,r7[-84]
80002836:	c0 b8       	rjmp	8000284c <_ZN6SegwayD1Ev+0x264>
80002838:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000283c:	2d 08       	sub	r8,-48
8000283e:	30 99       	mov	r9,9
80002840:	ef 49 ff cc 	st.w	r7[-52],r9
80002844:	10 9c       	mov	r12,r8
80002846:	f0 1f 00 36 	mcall	8000291c <_ZN6SegwayD1Ev+0x334>
8000284a:	c1 38       	rjmp	80002870 <_ZN6SegwayD1Ev+0x288>
8000284c:	ef 49 ff b4 	st.w	r7[-76],r9
80002850:	ef 48 ff b0 	st.w	r7[-80],r8
80002854:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002858:	2e 08       	sub	r8,-32
8000285a:	30 09       	mov	r9,0
8000285c:	ef 49 ff cc 	st.w	r7[-52],r9
80002860:	10 9c       	mov	r12,r8
80002862:	f0 1f 00 30 	mcall	80002920 <_ZN6SegwayD1Ev+0x338>
80002866:	ee f8 ff b0 	ld.w	r8,r7[-80]
8000286a:	ee f9 ff b4 	ld.w	r9,r7[-76]
8000286e:	c0 b8       	rjmp	80002884 <_ZN6SegwayD1Ev+0x29c>
80002870:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002874:	2e 08       	sub	r8,-32
80002876:	30 a9       	mov	r9,10
80002878:	ef 49 ff cc 	st.w	r7[-52],r9
8000287c:	10 9c       	mov	r12,r8
8000287e:	f0 1f 00 29 	mcall	80002920 <_ZN6SegwayD1Ev+0x338>
80002882:	c1 38       	rjmp	800028a8 <_ZN6SegwayD1Ev+0x2c0>
80002884:	ef 49 ff bc 	st.w	r7[-68],r9
80002888:	ef 48 ff b8 	st.w	r7[-72],r8
8000288c:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002890:	2f c8       	sub	r8,-4
80002892:	30 09       	mov	r9,0
80002894:	ef 49 ff cc 	st.w	r7[-52],r9
80002898:	10 9c       	mov	r12,r8
8000289a:	f0 1f 00 23 	mcall	80002924 <_ZN6SegwayD1Ev+0x33c>
8000289e:	ee f8 ff b8 	ld.w	r8,r7[-72]
800028a2:	ee f9 ff bc 	ld.w	r9,r7[-68]
800028a6:	c0 b8       	rjmp	800028bc <_ZN6SegwayD1Ev+0x2d4>
800028a8:	ee f8 ff fc 	ld.w	r8,r7[-4]
800028ac:	2f c8       	sub	r8,-4
800028ae:	30 b9       	mov	r9,11
800028b0:	ef 49 ff cc 	st.w	r7[-52],r9
800028b4:	10 9c       	mov	r12,r8
800028b6:	f0 1f 00 1c 	mcall	80002924 <_ZN6SegwayD1Ev+0x33c>
800028ba:	c1 78       	rjmp	800028e8 <_ZN6SegwayD1Ev+0x300>
800028bc:	ef 49 ff c4 	st.w	r7[-60],r9
800028c0:	ef 48 ff c0 	st.w	r7[-64],r8
800028c4:	ee f8 ff fc 	ld.w	r8,r7[-4]
800028c8:	30 09       	mov	r9,0
800028ca:	ef 49 ff cc 	st.w	r7[-52],r9
800028ce:	10 9c       	mov	r12,r8
800028d0:	f0 1f 00 16 	mcall	80002928 <_ZN6SegwayD1Ev+0x340>
800028d4:	ee f8 ff c0 	ld.w	r8,r7[-64]
800028d8:	ee f9 ff c4 	ld.w	r9,r7[-60]
800028dc:	3f f9       	mov	r9,-1
800028de:	ef 49 ff cc 	st.w	r7[-52],r9
800028e2:	10 9c       	mov	r12,r8
800028e4:	f0 1f 00 12 	mcall	8000292c <_ZN6SegwayD1Ev+0x344>
800028e8:	ee f8 ff fc 	ld.w	r8,r7[-4]
800028ec:	3f f9       	mov	r9,-1
800028ee:	ef 49 ff cc 	st.w	r7[-52],r9
800028f2:	10 9c       	mov	r12,r8
800028f4:	f0 1f 00 0d 	mcall	80002928 <_ZN6SegwayD1Ev+0x340>
800028f8:	ee c8 00 38 	sub	r8,r7,56
800028fc:	10 9c       	mov	r12,r8
800028fe:	f0 1f 00 0d 	mcall	80002930 <_ZN6SegwayD1Ev+0x348>
80002902:	2d cd       	sub	sp,-144
80002904:	d8 32       	popm	r0-r7,pc
80002906:	00 00       	add	r0,r0
80002908:	80 00       	ld.sh	r0,r0[0x0]
8000290a:	4a 94       	lddpc	r4,800029ac <main+0x78>
8000290c:	00 00       	add	r0,r0
8000290e:	00 24       	rsub	r4,r0
80002910:	80 00       	ld.sh	r0,r0[0x0]
80002912:	95 14       	st.w	r10[0x4],r4
80002914:	80 00       	ld.sh	r0,r0[0x0]
80002916:	35 38       	mov	r8,83
80002918:	80 00       	ld.sh	r0,r0[0x0]
8000291a:	1d d8       	ld.ub	r8,lr[0x5]
8000291c:	80 00       	ld.sh	r0,r0[0x0]
8000291e:	2d 78       	sub	r8,-41
80002920:	80 00       	ld.sh	r0,r0[0x0]
80002922:	31 d4       	mov	r4,29
80002924:	80 00       	ld.sh	r0,r0[0x0]
80002926:	1c 08       	add	r8,lr
80002928:	80 00       	ld.sh	r0,r0[0x0]
8000292a:	33 42       	mov	r2,52
8000292c:	80 00       	ld.sh	r0,r0[0x0]
8000292e:	96 dc       	ld.uh	r12,r11[0xa]
80002930:	80 00       	ld.sh	r0,r0[0x0]
80002932:	95 24       	st.w	r10[0x8],r4

80002934 <main>:

/*! \brief	Interrupt handler, called when an interrupt occurs. Selects timer interrupts and calls timer function.
	\return	zero
*/
int main( void ) {
80002934:	d4 31       	pushm	r0-r7,lr
80002936:	1a 97       	mov	r7,sp
80002938:	21 1d       	sub	sp,68
8000293a:	4b 38       	lddpc	r8,80002a04 <main+0xd0>
8000293c:	ef 48 ff e4 	st.w	r7[-28],r8
80002940:	4b 28       	lddpc	r8,80002a08 <main+0xd4>
80002942:	ef 48 ff e8 	st.w	r7[-24],r8
80002946:	ee c8 00 14 	sub	r8,r7,20
8000294a:	91 07       	st.w	r8[0x0],r7
8000294c:	fe c9 ff b6 	sub	r9,pc,-74
80002950:	91 19       	st.w	r8[0x4],r9
80002952:	91 2d       	st.w	r8[0x8],sp
80002954:	ee c8 00 34 	sub	r8,r7,52
80002958:	10 9c       	mov	r12,r8
8000295a:	f0 1f 00 2d 	mcall	80002a0c <main+0xd8>
	// Use external OSC0
	init_system_clock();
8000295e:	f0 1f 00 2d 	mcall	80002a10 <main+0xdc>
	// Prepare interrupt handler (needed for the timer)
	init_interrupt_system();
80002962:	f0 1f 00 2d 	mcall	80002a14 <main+0xe0>
	// Initialize configuration
	Configuration::init();
80002966:	3f f8       	mov	r8,-1
80002968:	ef 48 ff d0 	st.w	r7[-48],r8
8000296c:	f0 1f 00 2b 	mcall	80002a18 <main+0xe4>
		// Enter Simulation mode
		Simulation mySimulation;
		mySimulation.main();
#else
		// Enter Segway mode
		mySegway = new Segway;
80002970:	3f f8       	mov	r8,-1
80002972:	ef 48 ff d0 	st.w	r7[-48],r8
80002976:	e0 6c 04 d8 	mov	r12,1240
8000297a:	f0 1f 00 29 	mcall	80002a1c <main+0xe8>
8000297e:	18 98       	mov	r8,r12
80002980:	ef 48 ff bc 	st.w	r7[-68],r8
80002984:	ee f8 ff bc 	ld.w	r8,r7[-68]
80002988:	30 19       	mov	r9,1
8000298a:	ef 49 ff d0 	st.w	r7[-48],r9
8000298e:	10 9c       	mov	r12,r8
80002990:	f0 1f 00 24 	mcall	80002a20 <main+0xec>
80002994:	c1 78       	rjmp	800029c2 <main+0x8e>
80002996:	ee f8 ff d4 	ld.w	r8,r7[-44]
8000299a:	ee f9 ff d8 	ld.w	r9,r7[-40]
8000299e:	ef 49 ff c8 	st.w	r7[-56],r9
800029a2:	ef 48 ff c4 	st.w	r7[-60],r8
800029a6:	ee fc ff bc 	ld.w	r12,r7[-68]
800029aa:	f0 1f 00 1f 	mcall	80002a24 <main+0xf0>
800029ae:	ee f8 ff c4 	ld.w	r8,r7[-60]
800029b2:	ee f9 ff c8 	ld.w	r9,r7[-56]
800029b6:	3f f9       	mov	r9,-1
800029b8:	ef 49 ff d0 	st.w	r7[-48],r9
800029bc:	10 9c       	mov	r12,r8
800029be:	f0 1f 00 1b 	mcall	80002a28 <main+0xf4>
800029c2:	ee f9 ff bc 	ld.w	r9,r7[-68]
800029c6:	49 a8       	lddpc	r8,80002a2c <main+0xf8>
800029c8:	91 09       	st.w	r8[0x0],r9
		mySegway->main();
800029ca:	49 98       	lddpc	r8,80002a2c <main+0xf8>
800029cc:	70 08       	ld.w	r8,r8[0x0]
800029ce:	3f f9       	mov	r9,-1
800029d0:	ef 49 ff d0 	st.w	r7[-48],r9
800029d4:	10 9c       	mov	r12,r8
800029d6:	f0 1f 00 17 	mcall	80002a30 <main+0xfc>
		delete mySegway;
800029da:	49 58       	lddpc	r8,80002a2c <main+0xf8>
800029dc:	70 08       	ld.w	r8,r8[0x0]
800029de:	ef 48 ff c0 	st.w	r7[-64],r8
800029e2:	ee f8 ff c0 	ld.w	r8,r7[-64]
800029e6:	58 08       	cp.w	r8,0
800029e8:	c0 90       	breq	800029fa <main+0xc6>
800029ea:	ee fc ff c0 	ld.w	r12,r7[-64]
800029ee:	f0 1f 00 12 	mcall	80002a34 <main+0x100>
800029f2:	ee fc ff c0 	ld.w	r12,r7[-64]
800029f6:	f0 1f 00 0c 	mcall	80002a24 <main+0xf0>
		mySegway = 0;
800029fa:	48 d8       	lddpc	r8,80002a2c <main+0xf8>
800029fc:	30 09       	mov	r9,0
800029fe:	91 09       	st.w	r8[0x0],r9
	// Prepare interrupt handler (needed for the timer)
	init_interrupt_system();
	// Initialize configuration
	Configuration::init();
	
	while( true ) {
80002a00:	cb 8b       	rjmp	80002970 <main+0x3c>
80002a02:	00 00       	add	r0,r0
80002a04:	80 00       	ld.sh	r0,r0[0x0]
80002a06:	4a 94       	lddpc	r4,80002aa8 <_ZN3PWM4initEPN13Configuration11s_PWMConfigE+0x14>
80002a08:	00 00       	add	r0,r0
80002a0a:	00 3e       	cp.w	lr,r0
80002a0c:	80 00       	ld.sh	r0,r0[0x0]
80002a0e:	95 14       	st.w	r10[0x4],r4
80002a10:	80 00       	ld.sh	r0,r0[0x0]
80002a12:	24 fc       	sub	r12,79
80002a14:	80 00       	ld.sh	r0,r0[0x0]
80002a16:	25 70       	sub	r0,87
80002a18:	80 00       	ld.sh	r0,r0[0x0]
80002a1a:	20 34       	sub	r4,3
80002a1c:	80 00       	ld.sh	r0,r0[0x0]
80002a1e:	41 e0       	lddsp	r0,sp[0x78]
80002a20:	80 00       	ld.sh	r0,r0[0x0]
80002a22:	07 7c       	ld.ub	r12,--r3
80002a24:	80 00       	ld.sh	r0,r0[0x0]
80002a26:	41 d0       	lddsp	r0,sp[0x74]
80002a28:	80 00       	ld.sh	r0,r0[0x0]
80002a2a:	96 dc       	ld.uh	r12,r11[0xa]
80002a2c:	00 00       	add	r0,r0
80002a2e:	07 70       	ld.ub	r0,--r3
80002a30:	80 00       	ld.sh	r0,r0[0x0]
80002a32:	10 bc       	st.h	r8++,r12
80002a34:	80 00       	ld.sh	r0,r0[0x0]
80002a36:	25 e8       	sub	r8,94

80002a38 <_stext>:

  .global _stext
  .type _stext, @function
_stext:
  // Set initial stack pointer.
  lda.w   sp, _estack
80002a38:	48 bd       	lddpc	sp,80002a64 <udata_clear_loop_end+0x4>
//  // Set up EVBA so interrupts can be enabled.
//  lda.w   r0, _evba
//  mtsr    AVR32_EVBA, r0

  // Enable the exception processing.
  csrf    AVR32_SR_EM_OFFSET
80002a3a:	d5 53       	csrf	0x15

  // Load initialized data having a global lifetime from the data LMA.
  lda.w   r0, _data
80002a3c:	48 b0       	lddpc	r0,80002a68 <udata_clear_loop_end+0x8>
  lda.w   r1, _edata
80002a3e:	48 c1       	lddpc	r1,80002a6c <udata_clear_loop_end+0xc>
  cp      r0, r1
80002a40:	02 30       	cp.w	r0,r1
  brhs    idata_load_loop_end
80002a42:	c0 62       	brcc	80002a4e <idata_load_loop_end>
  lda.w   r2, _data_lma
80002a44:	48 b2       	lddpc	r2,80002a70 <udata_clear_loop_end+0x10>

80002a46 <idata_load_loop>:
idata_load_loop:
  ld.d    r4, r2++
80002a46:	a5 05       	ld.d	r4,r2++
  st.d    r0++, r4
80002a48:	a1 24       	st.d	r0++,r4
  cp      r0, r1
80002a4a:	02 30       	cp.w	r0,r1
  brlo    idata_load_loop
80002a4c:	cf d3       	brcs	80002a46 <idata_load_loop>

80002a4e <idata_load_loop_end>:
idata_load_loop_end:

  // Clear uninitialized data having a global lifetime in the blank static storage section.
  lda.w   r0, __bss_start
80002a4e:	48 a0       	lddpc	r0,80002a74 <udata_clear_loop_end+0x14>
  lda.w   r1, _end
80002a50:	48 a1       	lddpc	r1,80002a78 <udata_clear_loop_end+0x18>
  cp      r0, r1
80002a52:	02 30       	cp.w	r0,r1
  brhs    udata_clear_loop_end
80002a54:	c0 62       	brcc	80002a60 <udata_clear_loop_end>
  mov     r2, 0
80002a56:	30 02       	mov	r2,0
  mov     r3, 0
80002a58:	30 03       	mov	r3,0

80002a5a <udata_clear_loop>:
udata_clear_loop:
  st.d    r0++, r2
80002a5a:	a1 22       	st.d	r0++,r2
  cp      r0, r1
80002a5c:	02 30       	cp.w	r0,r1
  brlo    udata_clear_loop
80002a5e:	cf e3       	brcs	80002a5a <udata_clear_loop>

80002a60 <udata_clear_loop_end>:
  // Safety: Set the default "return" @ to the exit routine address.
  lda.w   lr, exit
#endif

  // Start the show.
  lda.w   pc, main
80002a60:	48 7f       	lddpc	pc,80002a7c <udata_clear_loop_end+0x1c>
80002a62:	00 00       	add	r0,r0
80002a64:	00 00       	add	r0,r0
80002a66:	80 00       	ld.sh	r0,r0[0x0]
80002a68:	00 00       	add	r0,r0
80002a6a:	00 04       	add	r4,r0
80002a6c:	00 00       	add	r0,r0
80002a6e:	06 18       	sub	r8,r3
80002a70:	80 01       	ld.sh	r1,r0[0x0]
80002a72:	03 00       	ld.w	r0,r1++
80002a74:	00 00       	add	r0,r0
80002a76:	06 18       	sub	r8,r3
80002a78:	00 00       	add	r0,r0
80002a7a:	0f c8       	ld.ub	r8,r7[0x4]
80002a7c:	80 00       	ld.sh	r0,r0[0x0]
80002a7e:	29 34       	sub	r4,-109

80002a80 <_ZN3PWMC1Ev>:
#include "PWM.h"

PWM::PWM() {
80002a80:	eb cd 40 80 	pushm	r7,lr
80002a84:	1a 97       	mov	r7,sp
80002a86:	20 1d       	sub	sp,4
80002a88:	ef 4c ff fc 	st.w	r7[-4],r12

}
80002a8c:	2f fd       	sub	sp,-4
80002a8e:	e3 cd 80 80 	ldm	sp++,r7,pc
80002a92:	d7 03       	nop

80002a94 <_ZN3PWM4initEPN13Configuration11s_PWMConfigE>:

PWM::~PWM() {
	cleanUp();
}

bool PWM::init( Configuration::s_PWMConfig* thisPWMConfig_ ) {
80002a94:	eb cd 40 80 	pushm	r7,lr
80002a98:	1a 97       	mov	r7,sp
80002a9a:	20 5d       	sub	sp,20
80002a9c:	ef 4c ff f0 	st.w	r7[-16],r12
80002aa0:	ef 4b ff ec 	st.w	r7[-20],r11
    pin = thisPWMConfig_->GPIO_pin;
80002aa4:	ee f8 ff ec 	ld.w	r8,r7[-20]
80002aa8:	f1 38 00 09 	ld.ub	r8,r8[9]
80002aac:	10 99       	mov	r9,r8
80002aae:	ee f8 ff f0 	ld.w	r8,r7[-16]
80002ab2:	91 09       	st.w	r8[0x0],r9
	int *GPER = (int*) (GPIO_MODULE + (thisPWMConfig_->GPIO_port ? PORT_OFFSET : 0) + GPER_OFFSET);
80002ab4:	ee f8 ff ec 	ld.w	r8,r7[-20]
80002ab8:	f1 38 00 08 	ld.ub	r8,r8[8]
80002abc:	58 08       	cp.w	r8,0
80002abe:	c0 40       	breq	80002ac6 <_ZN3PWM4initEPN13Configuration11s_PWMConfigE+0x32>
80002ac0:	fe 78 11 00 	mov	r8,-61184
80002ac4:	c0 38       	rjmp	80002aca <_ZN3PWM4initEPN13Configuration11s_PWMConfigE+0x36>
80002ac6:	fe 78 10 00 	mov	r8,-61440
80002aca:	ef 48 ff f4 	st.w	r7[-12],r8
    // init register
    int* PMR0 = (int*) (GPIO_MODULE + (thisPWMConfig_->GPIO_port ? PORT_OFFSET : 0) + PMR0_OFFSET);
80002ace:	ee f8 ff ec 	ld.w	r8,r7[-20]
80002ad2:	f1 38 00 08 	ld.ub	r8,r8[8]
80002ad6:	58 08       	cp.w	r8,0
80002ad8:	c0 40       	breq	80002ae0 <_ZN3PWM4initEPN13Configuration11s_PWMConfigE+0x4c>
80002ada:	fe 78 11 10 	mov	r8,-61168
80002ade:	c0 38       	rjmp	80002ae4 <_ZN3PWM4initEPN13Configuration11s_PWMConfigE+0x50>
80002ae0:	fe 78 10 10 	mov	r8,-61424
80002ae4:	ef 48 ff f8 	st.w	r7[-8],r8
    int* PMR1 = (int*) (GPIO_MODULE + (thisPWMConfig_->GPIO_port ? PORT_OFFSET : 0) + PMR1_OFFSET);
80002ae8:	ee f8 ff ec 	ld.w	r8,r7[-20]
80002aec:	f1 38 00 08 	ld.ub	r8,r8[8]
80002af0:	58 08       	cp.w	r8,0
80002af2:	c0 40       	breq	80002afa <_ZN3PWM4initEPN13Configuration11s_PWMConfigE+0x66>
80002af4:	fe 78 11 20 	mov	r8,-61152
80002af8:	c0 38       	rjmp	80002afe <_ZN3PWM4initEPN13Configuration11s_PWMConfigE+0x6a>
80002afa:	fe 78 10 20 	mov	r8,-61408
80002afe:	ef 48 ff fc 	st.w	r7[-4],r8
    // disable GPIO
    CLEAR_BIT(*GPER, pin);
80002b02:	ee f8 ff f4 	ld.w	r8,r7[-12]
80002b06:	70 08       	ld.w	r8,r8[0x0]
80002b08:	10 99       	mov	r9,r8
80002b0a:	ee f8 ff f0 	ld.w	r8,r7[-16]
80002b0e:	70 08       	ld.w	r8,r8[0x0]
80002b10:	30 1a       	mov	r10,1
80002b12:	f4 08 09 48 	lsl	r8,r10,r8
80002b16:	5c d8       	com	r8
80002b18:	f3 e8 00 08 	and	r8,r9,r8
80002b1c:	10 99       	mov	r9,r8
80002b1e:	ee f8 ff f4 	ld.w	r8,r7[-12]
80002b22:	91 09       	st.w	r8[0x0],r9
    // set peripheral function
    if (BIT_IS_SET(thisPWMConfig_->GPIO_multiplexRegisterValue, 0)) SET_BIT(*PMR0, pin);
80002b24:	ee f8 ff ec 	ld.w	r8,r7[-20]
80002b28:	f1 38 00 0a 	ld.ub	r8,r8[10]
80002b2c:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80002b30:	5c 58       	castu.b	r8
80002b32:	c1 20       	breq	80002b56 <_ZN3PWM4initEPN13Configuration11s_PWMConfigE+0xc2>
80002b34:	ee f8 ff f8 	ld.w	r8,r7[-8]
80002b38:	70 08       	ld.w	r8,r8[0x0]
80002b3a:	10 99       	mov	r9,r8
80002b3c:	ee f8 ff f0 	ld.w	r8,r7[-16]
80002b40:	70 08       	ld.w	r8,r8[0x0]
80002b42:	30 1a       	mov	r10,1
80002b44:	f4 08 09 48 	lsl	r8,r10,r8
80002b48:	f3 e8 10 08 	or	r8,r9,r8
80002b4c:	10 99       	mov	r9,r8
80002b4e:	ee f8 ff f8 	ld.w	r8,r7[-8]
80002b52:	91 09       	st.w	r8[0x0],r9
80002b54:	c1 28       	rjmp	80002b78 <_ZN3PWM4initEPN13Configuration11s_PWMConfigE+0xe4>
    else CLEAR_BIT(*PMR0, pin);
80002b56:	ee f8 ff f8 	ld.w	r8,r7[-8]
80002b5a:	70 08       	ld.w	r8,r8[0x0]
80002b5c:	10 99       	mov	r9,r8
80002b5e:	ee f8 ff f0 	ld.w	r8,r7[-16]
80002b62:	70 08       	ld.w	r8,r8[0x0]
80002b64:	30 1a       	mov	r10,1
80002b66:	f4 08 09 48 	lsl	r8,r10,r8
80002b6a:	5c d8       	com	r8
80002b6c:	f3 e8 00 08 	and	r8,r9,r8
80002b70:	10 99       	mov	r9,r8
80002b72:	ee f8 ff f8 	ld.w	r8,r7[-8]
80002b76:	91 09       	st.w	r8[0x0],r9
    if (BIT_IS_SET(thisPWMConfig_->GPIO_multiplexRegisterValue, 1)) SET_BIT(*PMR1, pin);
80002b78:	ee f8 ff ec 	ld.w	r8,r7[-20]
80002b7c:	f1 38 00 0a 	ld.ub	r8,r8[10]
80002b80:	e2 18 00 02 	andl	r8,0x2,COH
80002b84:	c1 20       	breq	80002ba8 <_ZN3PWM4initEPN13Configuration11s_PWMConfigE+0x114>
80002b86:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002b8a:	70 08       	ld.w	r8,r8[0x0]
80002b8c:	10 99       	mov	r9,r8
80002b8e:	ee f8 ff f0 	ld.w	r8,r7[-16]
80002b92:	70 08       	ld.w	r8,r8[0x0]
80002b94:	30 1a       	mov	r10,1
80002b96:	f4 08 09 48 	lsl	r8,r10,r8
80002b9a:	f3 e8 10 08 	or	r8,r9,r8
80002b9e:	10 99       	mov	r9,r8
80002ba0:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002ba4:	91 09       	st.w	r8[0x0],r9
80002ba6:	c1 28       	rjmp	80002bca <_ZN3PWM4initEPN13Configuration11s_PWMConfigE+0x136>
    else CLEAR_BIT(*PMR1, pin);
80002ba8:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002bac:	70 08       	ld.w	r8,r8[0x0]
80002bae:	10 99       	mov	r9,r8
80002bb0:	ee f8 ff f0 	ld.w	r8,r7[-16]
80002bb4:	70 08       	ld.w	r8,r8[0x0]
80002bb6:	30 1a       	mov	r10,1
80002bb8:	f4 08 09 48 	lsl	r8,r10,r8
80002bbc:	5c d8       	com	r8
80002bbe:	f3 e8 00 08 	and	r8,r9,r8
80002bc2:	10 99       	mov	r9,r8
80002bc4:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002bc8:	91 09       	st.w	r8[0x0],r9
    channelID = thisPWMConfig_->channelID;
80002bca:	ee f8 ff ec 	ld.w	r8,r7[-20]
80002bce:	11 88       	ld.ub	r8,r8[0x0]
80002bd0:	10 99       	mov	r9,r8
80002bd2:	ee f8 ff f0 	ld.w	r8,r7[-16]
80002bd6:	91 19       	st.w	r8[0x4],r9
    // init register
	ENA = (int*) (PWM_MODULE + ENA_OFFSET);
80002bd8:	ee f8 ff f0 	ld.w	r8,r7[-16]
80002bdc:	fe 79 30 04 	mov	r9,-53244
80002be0:	91 39       	st.w	r8[0xc],r9
	DIS = (int*) (PWM_MODULE + DIS_OFFSET);
80002be2:	ee f8 ff f0 	ld.w	r8,r7[-16]
80002be6:	fe 79 30 08 	mov	r9,-53240
80002bea:	91 49       	st.w	r8[0x10],r9
	SR = (int*) (PWM_MODULE +SR_OFFSET);
80002bec:	ee f8 ff f0 	ld.w	r8,r7[-16]
80002bf0:	fe 79 30 0c 	mov	r9,-53236
80002bf4:	91 59       	st.w	r8[0x14],r9
    CMR0 = (int*) (PWM_MODULE + CMR0_OFFSET);
80002bf6:	ee f8 ff f0 	ld.w	r8,r7[-16]
80002bfa:	fe 79 32 00 	mov	r9,-52736
80002bfe:	91 69       	st.w	r8[0x18],r9
    CUPD0 = (int*) (PWM_MODULE + CMR0_OFFSET + CHANNEL_OFFSET * channelID + CUPD0_OFFSET);
80002c00:	ee f8 ff f0 	ld.w	r8,r7[-16]
80002c04:	70 18       	ld.w	r8,r8[0x4]
80002c06:	a5 78       	lsl	r8,0x5
80002c08:	e0 28 cd f0 	sub	r8,52720
80002c0c:	10 99       	mov	r9,r8
80002c0e:	ee f8 ff f0 	ld.w	r8,r7[-16]
80002c12:	91 a9       	st.w	r8[0x28],r9
    CPRD0 = (int*) (PWM_MODULE + CMR0_OFFSET + CHANNEL_OFFSET * channelID + CPRD0_OFFSET);
80002c14:	ee f8 ff f0 	ld.w	r8,r7[-16]
80002c18:	70 18       	ld.w	r8,r8[0x4]
80002c1a:	a5 78       	lsl	r8,0x5
80002c1c:	e0 28 cd f8 	sub	r8,52728
80002c20:	10 99       	mov	r9,r8
80002c22:	ee f8 ff f0 	ld.w	r8,r7[-16]
80002c26:	91 89       	st.w	r8[0x20],r9
    *CPRD0 = (int) Configuration::CPUCLK / thisPWMConfig_->frequency;
80002c28:	ee f8 ff f0 	ld.w	r8,r7[-16]
80002c2c:	70 8a       	ld.w	r10,r8[0x20]
80002c2e:	48 f8       	lddpc	r8,80002c68 <_ZN3PWM4initEPN13Configuration11s_PWMConfigE+0x1d4>
80002c30:	70 08       	ld.w	r8,r8[0x0]
80002c32:	ee f9 ff ec 	ld.w	r9,r7[-20]
80002c36:	72 19       	ld.w	r9,r9[0x4]
80002c38:	f0 09 0d 08 	divu	r8,r8,r9
80002c3c:	95 08       	st.w	r10[0x0],r8
    CDTY0 = (int*) (PWM_MODULE + CMR0_OFFSET + CHANNEL_OFFSET * channelID + CDTY0_OFFSET);
80002c3e:	ee f8 ff f0 	ld.w	r8,r7[-16]
80002c42:	70 18       	ld.w	r8,r8[0x4]
80002c44:	a5 78       	lsl	r8,0x5
80002c46:	e0 28 cd fc 	sub	r8,52732
80002c4a:	10 99       	mov	r9,r8
80002c4c:	ee f8 ff f0 	ld.w	r8,r7[-16]
80002c50:	91 99       	st.w	r8[0x24],r9
    // set maxPWMRatio
    maxPWMRatio = thisPWMConfig_->maxPWMRatio;
80002c52:	ee f8 ff ec 	ld.w	r8,r7[-20]
80002c56:	11 98       	ld.ub	r8,r8[0x1]
80002c58:	10 99       	mov	r9,r8
80002c5a:	ee f8 ff f0 	ld.w	r8,r7[-16]
80002c5e:	91 29       	st.w	r8[0x8],r9
}
80002c60:	2f bd       	sub	sp,-20
80002c62:	e3 cd 80 80 	ldm	sp++,r7,pc
80002c66:	00 00       	add	r0,r0
80002c68:	00 00       	add	r0,r0
80002c6a:	06 20       	rsub	r0,r3

80002c6c <_ZN3PWM18setChannelPWMRatioEhb>:

bool PWM::setChannelPWMRatio( unsigned char ratioOn, bool capRatioOn ) {
80002c6c:	eb cd 40 e0 	pushm	r5-r7,lr
80002c70:	1a 97       	mov	r7,sp
80002c72:	20 3d       	sub	sp,12
80002c74:	ef 4c ff fc 	st.w	r7[-4],r12
80002c78:	16 99       	mov	r9,r11
80002c7a:	14 98       	mov	r8,r10
80002c7c:	ef 69 ff f8 	st.b	r7[-8],r9
80002c80:	ef 68 ff f4 	st.b	r7[-12],r8
    if (0 < ratioOn || ratioOn > maxPWMRatio) return false;
80002c84:	ef 39 ff f8 	ld.ub	r9,r7[-8]
80002c88:	30 08       	mov	r8,0
80002c8a:	f0 09 18 00 	cp.b	r9,r8
80002c8e:	c0 91       	brne	80002ca0 <_ZN3PWM18setChannelPWMRatioEhb+0x34>
80002c90:	ef 39 ff f8 	ld.ub	r9,r7[-8]
80002c94:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002c98:	70 28       	ld.w	r8,r8[0x8]
80002c9a:	10 39       	cp.w	r9,r8
80002c9c:	e0 8a 00 04 	brle	80002ca4 <_ZN3PWM18setChannelPWMRatioEhb+0x38>
80002ca0:	30 08       	mov	r8,0
80002ca2:	c4 98       	rjmp	80002d34 <_ZN3PWM18setChannelPWMRatioEhb+0xc8>
    // set new duty cycle value
    *CUPD0 = (int) (((1 - (float) ratioOn / 255) * maxPWMRatio / 255) * *CPRD0);
80002ca4:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002ca8:	70 a6       	ld.w	r6,r8[0x28]
80002caa:	ef 38 ff f8 	ld.ub	r8,r7[-8]
80002cae:	10 9c       	mov	r12,r8
80002cb0:	f0 1f 00 23 	mcall	80002d3c <_ZN3PWM18setChannelPWMRatioEhb+0xd0>
80002cb4:	18 98       	mov	r8,r12
80002cb6:	30 0b       	mov	r11,0
80002cb8:	ea 1b c3 7f 	orh	r11,0xc37f
80002cbc:	10 9c       	mov	r12,r8
80002cbe:	f0 1f 00 21 	mcall	80002d40 <_ZN3PWM18setChannelPWMRatioEhb+0xd4>
80002cc2:	18 98       	mov	r8,r12
80002cc4:	30 0b       	mov	r11,0
80002cc6:	ea 1b 3f 80 	orh	r11,0x3f80
80002cca:	10 9c       	mov	r12,r8
80002ccc:	f0 1f 00 1e 	mcall	80002d44 <_ZN3PWM18setChannelPWMRatioEhb+0xd8>
80002cd0:	18 98       	mov	r8,r12
80002cd2:	10 95       	mov	r5,r8
80002cd4:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002cd8:	70 28       	ld.w	r8,r8[0x8]
80002cda:	10 9c       	mov	r12,r8
80002cdc:	f0 1f 00 1b 	mcall	80002d48 <_ZN3PWM18setChannelPWMRatioEhb+0xdc>
80002ce0:	18 98       	mov	r8,r12
80002ce2:	10 9b       	mov	r11,r8
80002ce4:	0a 9c       	mov	r12,r5
80002ce6:	f0 1f 00 1a 	mcall	80002d4c <_ZN3PWM18setChannelPWMRatioEhb+0xe0>
80002cea:	18 98       	mov	r8,r12
80002cec:	30 0b       	mov	r11,0
80002cee:	ea 1b 43 7f 	orh	r11,0x437f
80002cf2:	10 9c       	mov	r12,r8
80002cf4:	f0 1f 00 13 	mcall	80002d40 <_ZN3PWM18setChannelPWMRatioEhb+0xd4>
80002cf8:	18 98       	mov	r8,r12
80002cfa:	10 95       	mov	r5,r8
80002cfc:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002d00:	70 88       	ld.w	r8,r8[0x20]
80002d02:	70 08       	ld.w	r8,r8[0x0]
80002d04:	10 9c       	mov	r12,r8
80002d06:	f0 1f 00 11 	mcall	80002d48 <_ZN3PWM18setChannelPWMRatioEhb+0xdc>
80002d0a:	18 98       	mov	r8,r12
80002d0c:	10 9b       	mov	r11,r8
80002d0e:	0a 9c       	mov	r12,r5
80002d10:	f0 1f 00 0f 	mcall	80002d4c <_ZN3PWM18setChannelPWMRatioEhb+0xe0>
80002d14:	18 98       	mov	r8,r12
80002d16:	10 9c       	mov	r12,r8
80002d18:	f0 1f 00 0e 	mcall	80002d50 <_ZN3PWM18setChannelPWMRatioEhb+0xe4>
80002d1c:	18 98       	mov	r8,r12
80002d1e:	8d 08       	st.w	r6[0x0],r8
    // reset mode register pin 10 to initiate duty cycle update
    CLEAR_BIT(*CMR0, 10);
80002d20:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002d24:	70 68       	ld.w	r8,r8[0x18]
80002d26:	ee f9 ff fc 	ld.w	r9,r7[-4]
80002d2a:	72 69       	ld.w	r9,r9[0x18]
80002d2c:	72 09       	ld.w	r9,r9[0x0]
80002d2e:	ab c9       	cbr	r9,0xa
80002d30:	91 09       	st.w	r8[0x0],r9
    return true;
80002d32:	30 18       	mov	r8,1
}
80002d34:	10 9c       	mov	r12,r8
80002d36:	2f dd       	sub	sp,-12
80002d38:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
80002d3c:	80 00       	ld.sh	r0,r0[0x0]
80002d3e:	93 98       	st.w	r9[0x24],r8
80002d40:	80 00       	ld.sh	r0,r0[0x0]
80002d42:	8f 50       	st.w	r7[0x14],r0
80002d44:	80 00       	ld.sh	r0,r0[0x0]
80002d46:	91 94       	st.w	r8[0x24],r4
80002d48:	80 00       	ld.sh	r0,r0[0x0]
80002d4a:	93 24       	st.w	r9[0x8],r4
80002d4c:	80 00       	ld.sh	r0,r0[0x0]
80002d4e:	92 40       	ld.sh	r0,r9[0x8]
80002d50:	80 00       	ld.sh	r0,r0[0x0]
80002d52:	94 08       	ld.sh	r8,r10[0x0]

80002d54 <_ZN9ADCSensorC1Ev>:
#include "ADCSensor.h"

ADCSensor::ADCSensor() {
80002d54:	eb cd 40 80 	pushm	r7,lr
80002d58:	1a 97       	mov	r7,sp
80002d5a:	20 1d       	sub	sp,4
80002d5c:	ef 4c ff fc 	st.w	r7[-4],r12
80002d60:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002d64:	2f c8       	sub	r8,-4
80002d66:	10 9c       	mov	r12,r8
80002d68:	f0 1f 00 03 	mcall	80002d74 <_ZN9ADCSensorC1Ev+0x20>

}
80002d6c:	2f fd       	sub	sp,-4
80002d6e:	e3 cd 80 80 	ldm	sp++,r7,pc
80002d72:	00 00       	add	r0,r0
80002d74:	80 00       	ld.sh	r0,r0[0x0]
80002d76:	1b f4       	ld.ub	r4,sp[0x7]

80002d78 <_ZN9ADCSensorD1Ev>:

ADCSensor::~ADCSensor() {
80002d78:	eb cd 40 80 	pushm	r7,lr
80002d7c:	1a 97       	mov	r7,sp
80002d7e:	20 1d       	sub	sp,4
80002d80:	ef 4c ff fc 	st.w	r7[-4],r12

	cleanUp();
80002d84:	ee fc ff fc 	ld.w	r12,r7[-4]
80002d88:	f0 1f 00 06 	mcall	80002da0 <_ZN9ADCSensorD1Ev+0x28>
}
80002d8c:	ee f8 ff fc 	ld.w	r8,r7[-4]
80002d90:	2f c8       	sub	r8,-4
80002d92:	10 9c       	mov	r12,r8
80002d94:	f0 1f 00 04 	mcall	80002da4 <_ZN9ADCSensorD1Ev+0x2c>
80002d98:	2f fd       	sub	sp,-4
80002d9a:	e3 cd 80 80 	ldm	sp++,r7,pc
80002d9e:	00 00       	add	r0,r0
80002da0:	80 00       	ld.sh	r0,r0[0x0]
80002da2:	31 58       	mov	r8,21
80002da4:	80 00       	ld.sh	r0,r0[0x0]
80002da6:	1c 08       	add	r8,lr

80002da8 <_ZN9ADCSensor4initEPN13Configuration17s_ADCSensorConfigEP3ADC>:

bool ADCSensor::init( Configuration::s_ADCSensorConfig* thisADCSensorConfig_, ADC* ADCController_ ) {
80002da8:	eb cd 40 80 	pushm	r7,lr
80002dac:	1a 97       	mov	r7,sp
80002dae:	20 3d       	sub	sp,12
80002db0:	ef 4c ff fc 	st.w	r7[-4],r12
80002db4:	ef 4b ff f8 	st.w	r7[-8],r11
80002db8:	ef 4a ff f4 	st.w	r7[-12],r10
	
	ADCController_->ID = thisADCSensorConfig_->ADCChannelID;
80002dbc:	ee f8 ff f8 	ld.w	r8,r7[-8]
80002dc0:	70 09       	ld.w	r9,r8[0x0]
80002dc2:	ee f8 ff f4 	ld.w	r8,r7[-12]
80002dc6:	91 39       	st.w	r8[0xc],r9
	ADCController_->offsetValue = thisADCSensorConfig_->zeroOffset;
80002dc8:	ee f8 ff f8 	ld.w	r8,r7[-8]
80002dcc:	70 19       	ld.w	r9,r8[0x4]
80002dce:	ee f8 ff f4 	ld.w	r8,r7[-12]
80002dd2:	91 49       	st.w	r8[0x10],r9
	ADCController_->ADCSlopeFactor = thisADCSensorConfig_->slopeFactor;
80002dd4:	ee f8 ff f8 	ld.w	r8,r7[-8]
80002dd8:	70 29       	ld.w	r9,r8[0x8]
80002dda:	ee f8 ff f4 	ld.w	r8,r7[-12]
80002dde:	91 59       	st.w	r8[0x14],r9
	ADCController_->useADCSlopeFactor = thisADCSensorConfig_->useSlopeFactor;
80002de0:	ee f8 ff f8 	ld.w	r8,r7[-8]
80002de4:	f1 38 00 0d 	ld.ub	r8,r8[13]
80002de8:	ee f9 ff f4 	ld.w	r9,r7[-12]
80002dec:	f3 68 00 19 	st.b	r9[25],r8
	ADCController_->useADCZeroOffset = thisADCSensorConfig_->useZeroOffset;
80002df0:	ee f8 ff f8 	ld.w	r8,r7[-8]
80002df4:	f1 38 00 0c 	ld.ub	r8,r8[12]
80002df8:	ee f9 ff f4 	ld.w	r9,r7[-12]
80002dfc:	f3 68 00 18 	st.b	r9[24],r8
	
	return 1;
80002e00:	30 18       	mov	r8,1
}
80002e02:	10 9c       	mov	r12,r8
80002e04:	2f dd       	sub	sp,-12
80002e06:	e3 cd 80 80 	ldm	sp++,r7,pc
80002e0a:	d7 03       	nop

80002e0c <_ZN9ADCSensor15getIntegerValueEbm>:

signed long ADCSensor::getIntegerValue( bool average, unsigned long numberOfValuesForAverage ) {
80002e0c:	d4 31       	pushm	r0-r7,lr
80002e0e:	1a 97       	mov	r7,sp
80002e10:	21 fd       	sub	sp,124
80002e12:	ef 4c ff ec 	st.w	r7[-20],r12
80002e16:	16 98       	mov	r8,r11
80002e18:	ef 4a ff e4 	st.w	r7[-28],r10
80002e1c:	ef 68 ff e8 	st.b	r7[-24],r8
80002e20:	fe f8 02 ac 	ld.w	r8,pc[684]
80002e24:	ef 48 ff c8 	st.w	r7[-56],r8
80002e28:	fe f8 02 a8 	ld.w	r8,pc[680]
80002e2c:	ef 48 ff cc 	st.w	r7[-52],r8
80002e30:	ee c8 00 30 	sub	r8,r7,48
80002e34:	91 07       	st.w	r8[0x0],r7
80002e36:	fe c9 fe 00 	sub	r9,pc,-512
80002e3a:	91 19       	st.w	r8[0x4],r9
80002e3c:	91 2d       	st.w	r8[0x8],sp
80002e3e:	ee c8 00 50 	sub	r8,r7,80
80002e42:	10 9c       	mov	r12,r8
80002e44:	f0 1f 00 a4 	mcall	800030d4 <_ZN9ADCSensor15getIntegerValueEbm+0x2c8>
		
		return integerValue;
		
	}

}
80002e48:	ef 4d ff 84 	st.w	r7[-124],sp
	return 1;
}

signed long ADCSensor::getIntegerValue( bool average, unsigned long numberOfValuesForAverage ) {
	
	channelID = adcSensor->ADCChannelID;
80002e4c:	ee f8 ff ec 	ld.w	r8,r7[-20]
80002e50:	70 08       	ld.w	r8,r8[0x0]
80002e52:	70 09       	ld.w	r9,r8[0x0]
80002e54:	ee f8 ff ec 	ld.w	r8,r7[-20]
80002e58:	91 b9       	st.w	r8[0x2c],r9
	//Wert des ADC ausgeben; Messen im ADC durch polling -> andauernd messen; 
	
	//controller.init();:ADC enable, 10 bit konvertierung einstellen (Mode Register), konvertierung starten (control Register), siehe ADC.cpp
	//controller ist vom Typ ADC

	if ( average == true ) {
80002e5a:	ef 39 ff e8 	ld.ub	r9,r7[-24]
80002e5e:	30 08       	mov	r8,0
80002e60:	f0 09 18 00 	cp.b	r9,r8
80002e64:	e0 80 00 f5 	breq	8000304e <_ZN9ADCSensor15getIntegerValueEbm+0x242>
80002e68:	1a 98       	mov	r8,sp
80002e6a:	ef 48 ff ac 	st.w	r7[-84],r8
		
		signed long *values [ numberOfValuesForAverage ];
80002e6e:	ee f8 ff e4 	ld.w	r8,r7[-28]
80002e72:	f0 ca 00 01 	sub	r10,r8,1
80002e76:	ef 4a ff f0 	st.w	r7[-16],r10
80002e7a:	14 98       	mov	r8,r10
80002e7c:	ef 48 ff 90 	st.w	r7[-112],r8
80002e80:	30 0c       	mov	r12,0
80002e82:	ef 4c ff 8c 	st.w	r7[-116],r12
80002e86:	3f f8       	mov	r8,-1
80002e88:	30 f9       	mov	r9,15
80002e8a:	ee e4 ff 8c 	ld.d	r4,r7[-116]
80002e8e:	10 64       	and	r4,r8
80002e90:	12 65       	and	r5,r9
80002e92:	ee e5 ff 8c 	st.d	r7[-116],r4
80002e96:	30 18       	mov	r8,1
80002e98:	30 09       	mov	r9,0
80002e9a:	ee e4 ff 8c 	ld.d	r4,r7[-116]
80002e9e:	e8 08 00 08 	add	r8,r4,r8
80002ea2:	ea 09 00 49 	adc	r9,r5,r9
80002ea6:	3f f2       	mov	r2,-1
80002ea8:	30 f3       	mov	r3,15
80002eaa:	04 68       	and	r8,r2
80002eac:	06 69       	and	r9,r3
80002eae:	f0 0b 16 1b 	lsr	r11,r8,0x1b
80002eb2:	f2 04 15 05 	lsl	r4,r9,0x5
80002eb6:	ef 44 ff 94 	st.w	r7[-108],r4
80002eba:	ee fc ff 94 	ld.w	r12,r7[-108]
80002ebe:	f7 ec 10 0c 	or	r12,r11,r12
80002ec2:	ef 4c ff 94 	st.w	r7[-108],r12
80002ec6:	f0 0b 15 05 	lsl	r11,r8,0x5
80002eca:	ef 4b ff 98 	st.w	r7[-104],r11
80002ece:	3f f8       	mov	r8,-1
80002ed0:	30 f9       	mov	r9,15
80002ed2:	ee e4 ff 94 	ld.d	r4,r7[-108]
80002ed6:	10 64       	and	r4,r8
80002ed8:	12 65       	and	r5,r9
80002eda:	14 98       	mov	r8,r10
80002edc:	ef 48 ff a0 	st.w	r7[-96],r8
80002ee0:	30 04       	mov	r4,0
80002ee2:	ef 44 ff 9c 	st.w	r7[-100],r4
80002ee6:	3f f8       	mov	r8,-1
80002ee8:	30 f9       	mov	r9,15
80002eea:	ee e4 ff 9c 	ld.d	r4,r7[-100]
80002eee:	10 64       	and	r4,r8
80002ef0:	12 65       	and	r5,r9
80002ef2:	ee e5 ff 9c 	st.d	r7[-100],r4
80002ef6:	30 18       	mov	r8,1
80002ef8:	30 09       	mov	r9,0
80002efa:	ee e4 ff 9c 	ld.d	r4,r7[-100]
80002efe:	e8 08 00 08 	add	r8,r4,r8
80002f02:	ea 09 00 49 	adc	r9,r5,r9
80002f06:	3f f2       	mov	r2,-1
80002f08:	30 f3       	mov	r3,15
80002f0a:	04 68       	and	r8,r2
80002f0c:	06 69       	and	r9,r3
80002f0e:	f0 0b 16 1b 	lsr	r11,r8,0x1b
80002f12:	f2 04 15 05 	lsl	r4,r9,0x5
80002f16:	ef 44 ff a4 	st.w	r7[-92],r4
80002f1a:	ee fc ff a4 	ld.w	r12,r7[-92]
80002f1e:	f7 ec 10 0c 	or	r12,r11,r12
80002f22:	ef 4c ff a4 	st.w	r7[-92],r12
80002f26:	f0 0b 15 05 	lsl	r11,r8,0x5
80002f2a:	ef 4b ff a8 	st.w	r7[-88],r11
80002f2e:	3f f8       	mov	r8,-1
80002f30:	30 f9       	mov	r9,15
80002f32:	ee e4 ff a4 	ld.d	r4,r7[-92]
80002f36:	10 64       	and	r4,r8
80002f38:	12 65       	and	r5,r9
80002f3a:	14 98       	mov	r8,r10
80002f3c:	2f f8       	sub	r8,-1
80002f3e:	a3 68       	lsl	r8,0x2
80002f40:	2f d8       	sub	r8,-3
80002f42:	2f d8       	sub	r8,-3
80002f44:	a3 88       	lsr	r8,0x2
80002f46:	a3 68       	lsl	r8,0x2
80002f48:	10 1d       	sub	sp,r8
80002f4a:	1a 98       	mov	r8,sp
80002f4c:	2f d8       	sub	r8,-3
80002f4e:	a3 88       	lsr	r8,0x2
80002f50:	a3 68       	lsl	r8,0x2
80002f52:	ef 48 ff f4 	st.w	r7[-12],r8
		
		//In jedem Schleifendurchgang wird der ADC initialisiert (d.h. eine Konvertierung gestartet),
		//der letzte Wert wird ausgelesen und in dem array values gespeichert. Danach wird der ADC wird zurückgesetzt.
		//Falls ein Offset verwendet wird, wird dieser vom ausgelesenen wert abgezogen.
		
		for ( unsigned int i = 0; i < numberOfValuesForAverage; i++ ){
80002f56:	30 08       	mov	r8,0
80002f58:	ef 48 ff f8 	st.w	r7[-8],r8
80002f5c:	c5 48       	rjmp	80003004 <_ZN9ADCSensor15getIntegerValueEbm+0x1f8>
			
			controller.init();
80002f5e:	ee f8 ff ec 	ld.w	r8,r7[-20]
80002f62:	2f c8       	sub	r8,-4
80002f64:	30 19       	mov	r9,1
80002f66:	ef 49 ff b4 	st.w	r7[-76],r9
80002f6a:	10 9c       	mov	r12,r8
80002f6c:	f0 1f 00 5b 	mcall	800030d8 <_ZN9ADCSensor15getIntegerValueEbm+0x2cc>
			
			values [ i ] = (signed long*) ADC_BASE + LAST_CONVERTED_DATA_REGISTER_OFFSET * channelID;
80002f70:	ee f9 ff f8 	ld.w	r9,r7[-8]
80002f74:	ee f8 ff ec 	ld.w	r8,r7[-20]
80002f78:	70 b8       	ld.w	r8,r8[0x2c]
80002f7a:	f0 0a 15 07 	lsl	r10,r8,0x7
80002f7e:	e0 68 3c 00 	mov	r8,15360
80002f82:	ea 18 0f ff 	orh	r8,0xfff
80002f86:	10 0a       	add	r10,r8
80002f88:	ee f8 ff f4 	ld.w	r8,r7[-12]
80002f8c:	f0 09 09 2a 	st.w	r8[r9<<0x2],r10
			
			controller.cleanUpChannel( channelID );
80002f90:	ee f8 ff ec 	ld.w	r8,r7[-20]
80002f94:	70 b8       	ld.w	r8,r8[0x2c]
80002f96:	5c 58       	castu.b	r8
80002f98:	10 99       	mov	r9,r8
80002f9a:	ee f8 ff ec 	ld.w	r8,r7[-20]
80002f9e:	2f c8       	sub	r8,-4
80002fa0:	12 9b       	mov	r11,r9
80002fa2:	10 9c       	mov	r12,r8
80002fa4:	f0 1f 00 4e 	mcall	800030dc <_ZN9ADCSensor15getIntegerValueEbm+0x2d0>
			
			if ( adcSensor->zeroOffset == 0 ) {
80002fa8:	ee f8 ff ec 	ld.w	r8,r7[-20]
80002fac:	70 08       	ld.w	r8,r8[0x0]
80002fae:	70 18       	ld.w	r8,r8[0x4]
80002fb0:	58 08       	cp.w	r8,0
80002fb2:	c1 01       	brne	80002fd2 <_ZN9ADCSensor15getIntegerValueEbm+0x1c6>
			
				integerValue += *values [ i ];
80002fb4:	ee f8 ff ec 	ld.w	r8,r7[-20]
80002fb8:	70 99       	ld.w	r9,r8[0x24]
80002fba:	ee fa ff f8 	ld.w	r10,r7[-8]
80002fbe:	ee f8 ff f4 	ld.w	r8,r7[-12]
80002fc2:	f0 0a 03 28 	ld.w	r8,r8[r10<<0x2]
80002fc6:	70 08       	ld.w	r8,r8[0x0]
80002fc8:	10 09       	add	r9,r8
80002fca:	ee f8 ff ec 	ld.w	r8,r7[-20]
80002fce:	91 99       	st.w	r8[0x24],r9
80002fd0:	c1 58       	rjmp	80002ffa <_ZN9ADCSensor15getIntegerValueEbm+0x1ee>
			
			} else {
				
				integerValue += *values [ i ] - adcSensor->zeroOffset;
80002fd2:	ee f8 ff ec 	ld.w	r8,r7[-20]
80002fd6:	70 99       	ld.w	r9,r8[0x24]
80002fd8:	ee fa ff f8 	ld.w	r10,r7[-8]
80002fdc:	ee f8 ff f4 	ld.w	r8,r7[-12]
80002fe0:	f0 0a 03 28 	ld.w	r8,r8[r10<<0x2]
80002fe4:	70 0a       	ld.w	r10,r8[0x0]
80002fe6:	ee f8 ff ec 	ld.w	r8,r7[-20]
80002fea:	70 08       	ld.w	r8,r8[0x0]
80002fec:	70 18       	ld.w	r8,r8[0x4]
80002fee:	f4 08 01 08 	sub	r8,r10,r8
80002ff2:	10 09       	add	r9,r8
80002ff4:	ee f8 ff ec 	ld.w	r8,r7[-20]
80002ff8:	91 99       	st.w	r8[0x24],r9
		
		//In jedem Schleifendurchgang wird der ADC initialisiert (d.h. eine Konvertierung gestartet),
		//der letzte Wert wird ausgelesen und in dem array values gespeichert. Danach wird der ADC wird zurückgesetzt.
		//Falls ein Offset verwendet wird, wird dieser vom ausgelesenen wert abgezogen.
		
		for ( unsigned int i = 0; i < numberOfValuesForAverage; i++ ){
80002ffa:	ee f8 ff f8 	ld.w	r8,r7[-8]
80002ffe:	2f f8       	sub	r8,-1
80003000:	ef 48 ff f8 	st.w	r7[-8],r8
80003004:	ee f9 ff f8 	ld.w	r9,r7[-8]
80003008:	ee f8 ff e4 	ld.w	r8,r7[-28]
8000300c:	10 39       	cp.w	r9,r8
8000300e:	5f 38       	srlo	r8
80003010:	5c 58       	castu.b	r8
80003012:	ca 61       	brne	80002f5e <_ZN9ADCSensor15getIntegerValueEbm+0x152>
				
				integerValue += *values [ i ] - adcSensor->zeroOffset;
			}
		}
		
		integerValue = integerValue / numberOfValuesForAverage;
80003014:	ee f8 ff ec 	ld.w	r8,r7[-20]
80003018:	70 98       	ld.w	r8,r8[0x24]
8000301a:	ee f9 ff e4 	ld.w	r9,r7[-28]
8000301e:	f0 09 0d 08 	divu	r8,r8,r9
80003022:	10 99       	mov	r9,r8
80003024:	ee f8 ff ec 	ld.w	r8,r7[-20]
80003028:	91 99       	st.w	r8[0x24],r9
		
		return integerValue;
8000302a:	ee f8 ff ec 	ld.w	r8,r7[-20]
8000302e:	70 98       	ld.w	r8,r8[0x24]
80003030:	ee fd ff ac 	ld.w	sp,r7[-84]
80003034:	c3 e8       	rjmp	800030b0 <_ZN9ADCSensor15getIntegerValueEbm+0x2a4>
80003036:	ee f8 ff b8 	ld.w	r8,r7[-72]
8000303a:	ee f9 ff bc 	ld.w	r9,r7[-68]
8000303e:	ee fd ff ac 	ld.w	sp,r7[-84]
80003042:	3f f9       	mov	r9,-1
80003044:	ef 49 ff b4 	st.w	r7[-76],r9
80003048:	10 9c       	mov	r12,r8
8000304a:	f0 1f 00 26 	mcall	800030e0 <_ZN9ADCSensor15getIntegerValueEbm+0x2d4>
		
	} else {
		
		controller.init();
8000304e:	ee f8 ff ec 	ld.w	r8,r7[-20]
80003052:	2f c8       	sub	r8,-4
80003054:	3f f9       	mov	r9,-1
80003056:	ef 49 ff b4 	st.w	r7[-76],r9
8000305a:	10 9c       	mov	r12,r8
8000305c:	f0 1f 00 1f 	mcall	800030d8 <_ZN9ADCSensor15getIntegerValueEbm+0x2cc>
		
		//letzten Wert auslesen
		int* getValue = (int*) ADC_BASE + LAST_CONVERTED_DATA_REGISTER_OFFSET * channelID;
80003060:	ee f8 ff ec 	ld.w	r8,r7[-20]
80003064:	70 b8       	ld.w	r8,r8[0x2c]
80003066:	f0 09 15 07 	lsl	r9,r8,0x7
8000306a:	e0 68 3c 00 	mov	r8,15360
8000306e:	ea 18 0f ff 	orh	r8,0xfff
80003072:	f2 08 00 08 	add	r8,r9,r8
80003076:	ef 48 ff fc 	st.w	r7[-4],r8
		
		if ( adcSensor->zeroOffset == 0 ){
8000307a:	ee f8 ff ec 	ld.w	r8,r7[-20]
8000307e:	70 08       	ld.w	r8,r8[0x0]
80003080:	70 18       	ld.w	r8,r8[0x4]
80003082:	58 08       	cp.w	r8,0
80003084:	c0 81       	brne	80003094 <_ZN9ADCSensor15getIntegerValueEbm+0x288>
			
			integerValue = *getValue;
80003086:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000308a:	70 09       	ld.w	r9,r8[0x0]
8000308c:	ee f8 ff ec 	ld.w	r8,r7[-20]
80003090:	91 99       	st.w	r8[0x24],r9
80003092:	c0 c8       	rjmp	800030aa <_ZN9ADCSensor15getIntegerValueEbm+0x29e>
			
		} else {
		
		integerValue = *getValue - adcSensor->zeroOffset;
80003094:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003098:	70 09       	ld.w	r9,r8[0x0]
8000309a:	ee f8 ff ec 	ld.w	r8,r7[-20]
8000309e:	70 08       	ld.w	r8,r8[0x0]
800030a0:	70 18       	ld.w	r8,r8[0x4]
800030a2:	10 19       	sub	r9,r8
800030a4:	ee f8 ff ec 	ld.w	r8,r7[-20]
800030a8:	91 99       	st.w	r8[0x24],r9
		
		}
		
		return integerValue;
800030aa:	ee f8 ff ec 	ld.w	r8,r7[-20]
800030ae:	70 98       	ld.w	r8,r8[0x24]
800030b0:	ef 48 ff 88 	st.w	r7[-120],r8
800030b4:	ee c8 00 50 	sub	r8,r7,80
800030b8:	10 9c       	mov	r12,r8
800030ba:	f0 1f 00 0b 	mcall	800030e4 <_ZN9ADCSensor15getIntegerValueEbm+0x2d8>
		
	}

}
800030be:	ee fc ff 88 	ld.w	r12,r7[-120]
800030c2:	ee fd ff 84 	ld.w	sp,r7[-124]
800030c6:	2e 1d       	sub	sp,-124
800030c8:	d8 32       	popm	r0-r7,pc
800030ca:	00 00       	add	r0,r0
800030cc:	80 00       	ld.sh	r0,r0[0x0]
800030ce:	4a 94       	lddpc	r4,80003170 <_ZN9ADCSensor7cleanUpEv+0x18>
800030d0:	00 00       	add	r0,r0
800030d2:	00 44       	or	r4,r0
800030d4:	80 00       	ld.sh	r0,r0[0x0]
800030d6:	95 14       	st.w	r10[0x4],r4
800030d8:	80 00       	ld.sh	r0,r0[0x0]
800030da:	1c 30       	cp.w	r0,lr
800030dc:	80 00       	ld.sh	r0,r0[0x0]
800030de:	1c b6       	st.h	lr++,r6
800030e0:	80 00       	ld.sh	r0,r0[0x0]
800030e2:	96 dc       	ld.uh	r12,r11[0xa]
800030e4:	80 00       	ld.sh	r0,r0[0x0]
800030e6:	95 24       	st.w	r10[0x8],r4

800030e8 <_ZN9ADCSensor13setZeroOffsetEbl>:


void ADCSensor::setZeroOffset( bool active, signed long offset ) {
800030e8:	eb cd 40 80 	pushm	r7,lr
800030ec:	1a 97       	mov	r7,sp
800030ee:	20 3d       	sub	sp,12
800030f0:	ef 4c ff fc 	st.w	r7[-4],r12
800030f4:	16 98       	mov	r8,r11
800030f6:	ef 4a ff f4 	st.w	r7[-12],r10
800030fa:	ef 68 ff f8 	st.b	r7[-8],r8
	
	adcSensor->zeroOffset = offset;
800030fe:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003102:	70 08       	ld.w	r8,r8[0x0]
80003104:	ee f9 ff f4 	ld.w	r9,r7[-12]
80003108:	91 19       	st.w	r8[0x4],r9
	adcSensor->useZeroOffset = active;	
8000310a:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000310e:	70 09       	ld.w	r9,r8[0x0]
80003110:	ef 38 ff f8 	ld.ub	r8,r7[-8]
80003114:	f3 68 00 0c 	st.b	r9[12],r8

}
80003118:	2f dd       	sub	sp,-12
8000311a:	e3 cd 80 80 	ldm	sp++,r7,pc

8000311e <_ZN9ADCSensor21getZeroOffsetIsActiveEv>:

bool ADCSensor::getZeroOffsetIsActive() {
8000311e:	eb cd 40 80 	pushm	r7,lr
80003122:	1a 97       	mov	r7,sp
80003124:	20 1d       	sub	sp,4
80003126:	ef 4c ff fc 	st.w	r7[-4],r12
	
	return adcSensor->useZeroOffset;
8000312a:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000312e:	70 08       	ld.w	r8,r8[0x0]
80003130:	f1 38 00 0c 	ld.ub	r8,r8[12]
}
80003134:	10 9c       	mov	r12,r8
80003136:	2f fd       	sub	sp,-4
80003138:	e3 cd 80 80 	ldm	sp++,r7,pc

8000313c <_ZN9ADCSensor13getZeroOffsetEv>:

signed long ADCSensor::getZeroOffset() {
8000313c:	eb cd 40 80 	pushm	r7,lr
80003140:	1a 97       	mov	r7,sp
80003142:	20 1d       	sub	sp,4
80003144:	ef 4c ff fc 	st.w	r7[-4],r12
	
	return adcSensor->zeroOffset;
80003148:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000314c:	70 08       	ld.w	r8,r8[0x0]
8000314e:	70 18       	ld.w	r8,r8[0x4]
}
80003150:	10 9c       	mov	r12,r8
80003152:	2f fd       	sub	sp,-4
80003154:	e3 cd 80 80 	ldm	sp++,r7,pc

80003158 <_ZN9ADCSensor7cleanUpEv>:
	return adcSensor->slopeFactor;
	
}


void ADCSensor::cleanUp( void ) {
80003158:	eb cd 40 80 	pushm	r7,lr
8000315c:	1a 97       	mov	r7,sp
8000315e:	20 1d       	sub	sp,4
80003160:	ef 4c ff fc 	st.w	r7[-4],r12
	
	//deaktiviert den Ausgangspin
	*disable = ADC_BASE + CHANNEL_DISABLE_REGISTER_OFFSET * adcSensor->ADCChannelID;;
80003164:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003168:	70 ca       	ld.w	r10,r8[0x30]
8000316a:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000316e:	70 08       	ld.w	r8,r8[0x0]
80003170:	70 09       	ld.w	r9,r8[0x0]
80003172:	12 98       	mov	r8,r9
80003174:	a3 68       	lsl	r8,0x2
80003176:	12 08       	add	r8,r9
80003178:	a3 68       	lsl	r8,0x2
8000317a:	10 99       	mov	r9,r8
8000317c:	e0 68 3c 00 	mov	r8,15360
80003180:	ea 18 0f ff 	orh	r8,0xfff
80003184:	f2 08 00 08 	add	r8,r9,r8
80003188:	95 08       	st.w	r10[0x0],r8
	*disable = *disable | adcSensor->ADCChannelID;
8000318a:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000318e:	70 c8       	ld.w	r8,r8[0x30]
80003190:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003194:	72 c9       	ld.w	r9,r9[0x30]
80003196:	72 09       	ld.w	r9,r9[0x0]
80003198:	12 9a       	mov	r10,r9
8000319a:	ee f9 ff fc 	ld.w	r9,r7[-4]
8000319e:	72 09       	ld.w	r9,r9[0x0]
800031a0:	72 09       	ld.w	r9,r9[0x0]
800031a2:	f5 e9 10 09 	or	r9,r10,r9
800031a6:	91 09       	st.w	r8[0x0],r9
	
	//löscht die Variablen
	delete adcSensor;
800031a8:	ee f8 ff fc 	ld.w	r8,r7[-4]
800031ac:	70 08       	ld.w	r8,r8[0x0]
800031ae:	10 9c       	mov	r12,r8
800031b0:	f0 1f 00 03 	mcall	800031bc <_ZN9ADCSensor7cleanUpEv+0x64>
}
800031b4:	2f fd       	sub	sp,-4
800031b6:	e3 cd 80 80 	ldm	sp++,r7,pc
800031ba:	00 00       	add	r0,r0
800031bc:	80 00       	ld.sh	r0,r0[0x0]
800031be:	41 d0       	lddsp	r0,sp[0x74]

800031c0 <_ZN10GPIOSensorC1Ev>:
#include "GPIOSensor.h"


GPIOSensor::GPIOSensor() {
800031c0:	eb cd 40 80 	pushm	r7,lr
800031c4:	1a 97       	mov	r7,sp
800031c6:	20 1d       	sub	sp,4
800031c8:	ef 4c ff fc 	st.w	r7[-4],r12

}
800031cc:	2f fd       	sub	sp,-4
800031ce:	e3 cd 80 80 	ldm	sp++,r7,pc
800031d2:	d7 03       	nop

800031d4 <_ZN10GPIOSensorD1Ev>:

GPIOSensor::~GPIOSensor() {
800031d4:	eb cd 40 80 	pushm	r7,lr
800031d8:	1a 97       	mov	r7,sp
800031da:	20 1d       	sub	sp,4
800031dc:	ef 4c ff fc 	st.w	r7[-4],r12
	cleanUp();
800031e0:	ee fc ff fc 	ld.w	r12,r7[-4]
800031e4:	f0 1f 00 03 	mcall	800031f0 <_ZN10GPIOSensorD1Ev+0x1c>
}
800031e8:	2f fd       	sub	sp,-4
800031ea:	e3 cd 80 80 	ldm	sp++,r7,pc
800031ee:	00 00       	add	r0,r0
800031f0:	80 00       	ld.sh	r0,r0[0x0]
800031f2:	33 0a       	mov	r10,48

800031f4 <_ZN10GPIOSensor4initEPN13Configuration18s_GPIOSensorConfigE>:

void GPIOSensor::init( Configuration::s_GPIOSensorConfig* thisGPIOSensorConfig_ ) {
800031f4:	eb cd 40 80 	pushm	r7,lr
800031f8:	1a 97       	mov	r7,sp
800031fa:	20 2d       	sub	sp,8
800031fc:	ef 4c ff fc 	st.w	r7[-4],r12
80003200:	ef 4b ff f8 	st.w	r7[-8],r11
	pin = thisGPIOSensorConfig_->pin;
80003204:	ee f8 ff f8 	ld.w	r8,r7[-8]
80003208:	70 18       	ld.w	r8,r8[0x4]
8000320a:	10 99       	mov	r9,r8
8000320c:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003210:	91 09       	st.w	r8[0x0],r9
	PVR = (int*) (GPIO_MODULE + (thisGPIOSensorConfig_->port ? PORT_OFFSET : 0) + PVR_OFFSET);
80003212:	ee f8 ff f8 	ld.w	r8,r7[-8]
80003216:	11 88       	ld.ub	r8,r8[0x0]
80003218:	58 08       	cp.w	r8,0
8000321a:	c0 40       	breq	80003222 <_ZN10GPIOSensor4initEPN13Configuration18s_GPIOSensorConfigE+0x2e>
8000321c:	fe 78 11 60 	mov	r8,-61088
80003220:	c0 38       	rjmp	80003226 <_ZN10GPIOSensor4initEPN13Configuration18s_GPIOSensorConfigE+0x32>
80003222:	fe 78 10 60 	mov	r8,-61344
80003226:	ee f9 ff fc 	ld.w	r9,r7[-4]
8000322a:	93 38       	st.w	r9[0xc],r8
	PUER = (int*) (GPIO_MODULE + (thisGPIOSensorConfig_->port ? PORT_OFFSET : 0) + PUER_OFFSET);
8000322c:	ee f8 ff f8 	ld.w	r8,r7[-8]
80003230:	11 88       	ld.ub	r8,r8[0x0]
80003232:	58 08       	cp.w	r8,0
80003234:	c0 40       	breq	8000323c <_ZN10GPIOSensor4initEPN13Configuration18s_GPIOSensorConfigE+0x48>
80003236:	fe 78 11 70 	mov	r8,-61072
8000323a:	c0 38       	rjmp	80003240 <_ZN10GPIOSensor4initEPN13Configuration18s_GPIOSensorConfigE+0x4c>
8000323c:	fe 78 10 70 	mov	r8,-61328
80003240:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003244:	93 18       	st.w	r9[0x4],r8
	GFER = (int*) (GPIO_MODULE + (thisGPIOSensorConfig_->port ? PORT_OFFSET : 0) + GFER_OFFSET);
80003246:	ee f8 ff f8 	ld.w	r8,r7[-8]
8000324a:	11 88       	ld.ub	r8,r8[0x0]
8000324c:	58 08       	cp.w	r8,0
8000324e:	c0 40       	breq	80003256 <_ZN10GPIOSensor4initEPN13Configuration18s_GPIOSensorConfigE+0x62>
80003250:	fe 78 11 c0 	mov	r8,-60992
80003254:	c0 38       	rjmp	8000325a <_ZN10GPIOSensor4initEPN13Configuration18s_GPIOSensorConfigE+0x66>
80003256:	fe 78 10 c0 	mov	r8,-61248
8000325a:	ee f9 ff fc 	ld.w	r9,r7[-4]
8000325e:	93 28       	st.w	r9[0x8],r8
	// set pullup bit dependent on input
	if (thisGPIOSensorConfig_->pullupEnabled) SET_BIT(*PUER, pin);
80003260:	ee f8 ff f8 	ld.w	r8,r7[-8]
80003264:	f1 38 00 08 	ld.ub	r8,r8[8]
80003268:	58 08       	cp.w	r8,0
8000326a:	c1 30       	breq	80003290 <_ZN10GPIOSensor4initEPN13Configuration18s_GPIOSensorConfigE+0x9c>
8000326c:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003270:	70 18       	ld.w	r8,r8[0x4]
80003272:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003276:	72 19       	ld.w	r9,r9[0x4]
80003278:	72 09       	ld.w	r9,r9[0x0]
8000327a:	12 9a       	mov	r10,r9
8000327c:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003280:	72 09       	ld.w	r9,r9[0x0]
80003282:	30 1b       	mov	r11,1
80003284:	f6 09 09 49 	lsl	r9,r11,r9
80003288:	f5 e9 10 09 	or	r9,r10,r9
8000328c:	91 09       	st.w	r8[0x0],r9
8000328e:	c1 38       	rjmp	800032b4 <_ZN10GPIOSensor4initEPN13Configuration18s_GPIOSensorConfigE+0xc0>
	else CLEAR_BIT(*PUER, pin);
80003290:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003294:	70 18       	ld.w	r8,r8[0x4]
80003296:	ee f9 ff fc 	ld.w	r9,r7[-4]
8000329a:	72 19       	ld.w	r9,r9[0x4]
8000329c:	72 09       	ld.w	r9,r9[0x0]
8000329e:	12 9a       	mov	r10,r9
800032a0:	ee f9 ff fc 	ld.w	r9,r7[-4]
800032a4:	72 09       	ld.w	r9,r9[0x0]
800032a6:	30 1b       	mov	r11,1
800032a8:	f6 09 09 49 	lsl	r9,r11,r9
800032ac:	5c d9       	com	r9
800032ae:	f5 e9 00 09 	and	r9,r10,r9
800032b2:	91 09       	st.w	r8[0x0],r9
	// enable glitch filter
	SET_BIT(*GFER, pin);
800032b4:	ee f8 ff fc 	ld.w	r8,r7[-4]
800032b8:	70 28       	ld.w	r8,r8[0x8]
800032ba:	ee f9 ff fc 	ld.w	r9,r7[-4]
800032be:	72 29       	ld.w	r9,r9[0x8]
800032c0:	72 09       	ld.w	r9,r9[0x0]
800032c2:	12 9a       	mov	r10,r9
800032c4:	ee f9 ff fc 	ld.w	r9,r7[-4]
800032c8:	72 09       	ld.w	r9,r9[0x0]
800032ca:	30 1b       	mov	r11,1
800032cc:	f6 09 09 49 	lsl	r9,r11,r9
800032d0:	f5 e9 10 09 	or	r9,r10,r9
800032d4:	91 09       	st.w	r8[0x0],r9
}
800032d6:	2f ed       	sub	sp,-8
800032d8:	e3 cd 80 80 	ldm	sp++,r7,pc

800032dc <_ZN10GPIOSensor8getValueEv>:

bool GPIOSensor::getValue() {
800032dc:	eb cd 40 80 	pushm	r7,lr
800032e0:	1a 97       	mov	r7,sp
800032e2:	20 1d       	sub	sp,4
800032e4:	ef 4c ff fc 	st.w	r7[-4],r12
	return BIT_IS_SET(*PVR, pin);
800032e8:	ee f8 ff fc 	ld.w	r8,r7[-4]
800032ec:	70 38       	ld.w	r8,r8[0xc]
800032ee:	70 08       	ld.w	r8,r8[0x0]
800032f0:	10 99       	mov	r9,r8
800032f2:	ee f8 ff fc 	ld.w	r8,r7[-4]
800032f6:	70 08       	ld.w	r8,r8[0x0]
800032f8:	f2 08 0a 48 	lsr	r8,r9,r8
800032fc:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80003300:	5c 58       	castu.b	r8
}
80003302:	10 9c       	mov	r12,r8
80003304:	2f fd       	sub	sp,-4
80003306:	e3 cd 80 80 	ldm	sp++,r7,pc

8000330a <_ZN10GPIOSensor7cleanUpEv>:
	
void GPIOSensor::cleanUp() {
8000330a:	eb cd 40 80 	pushm	r7,lr
8000330e:	1a 97       	mov	r7,sp
80003310:	20 1d       	sub	sp,4
80003312:	ef 4c ff fc 	st.w	r7[-4],r12
	// reset value to zero for PUER register
	*PUER = 0;
80003316:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000331a:	70 18       	ld.w	r8,r8[0x4]
8000331c:	30 09       	mov	r9,0
8000331e:	91 09       	st.w	r8[0x0],r9
	// reset value to zero for GFER register
	*GFER = 0;
80003320:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003324:	70 28       	ld.w	r8,r8[0x8]
80003326:	30 09       	mov	r9,0
80003328:	91 09       	st.w	r8[0x0],r9
8000332a:	2f fd       	sub	sp,-4
8000332c:	e3 cd 80 80 	ldm	sp++,r7,pc

80003330 <_ZN5TimerC1Ev>:
volatile unsigned int* SR0= (volatile unsigned int*) 0xFFF3820; //Channel Status Register
volatile unsigned int* IER0= (volatile unsigned int*) 0xFFF3824; //Channel Interrupt Enable Register
volatile unsigned int* IDR0= (volatile unsigned int*) 0xFFF3828;
volatile unsigned int* IMR0= (volatile unsigned int*) 0xFFF382C;

Timer::Timer() {
80003330:	eb cd 40 80 	pushm	r7,lr
80003334:	1a 97       	mov	r7,sp
80003336:	20 1d       	sub	sp,4
80003338:	ef 4c ff fc 	st.w	r7[-4],r12

}
8000333c:	2f fd       	sub	sp,-4
8000333e:	e3 cd 80 80 	ldm	sp++,r7,pc

80003342 <_ZN5TimerD1Ev>:

Timer::~Timer() {
80003342:	eb cd 40 80 	pushm	r7,lr
80003346:	1a 97       	mov	r7,sp
80003348:	20 1d       	sub	sp,4
8000334a:	ef 4c ff fc 	st.w	r7[-4],r12

}
8000334e:	2f fd       	sub	sp,-4
80003350:	e3 cd 80 80 	ldm	sp++,r7,pc

80003354 <_ZN5Timer12prepareTimerEm>:

// RC value will determinate
bool Timer::prepareTimer(unsigned long frequency){
80003354:	eb cd 40 80 	pushm	r7,lr
80003358:	1a 97       	mov	r7,sp
8000335a:	20 2d       	sub	sp,8
8000335c:	ef 4c ff fc 	st.w	r7[-4],r12
80003360:	ef 4b ff f8 	st.w	r7[-8],r11
	setIsTimerInterruptEnabled(true);
80003364:	30 1b       	mov	r11,1
80003366:	ee fc ff fc 	ld.w	r12,r7[-4]
8000336a:	f0 1f 00 22 	mcall	800033f0 <_ZN5Timer12prepareTimerEm+0x9c>
	SET_BIT(*CMR0,15); //*CMR0 |= 1 << 15; // WAVE: Waveform mode is enabled
8000336e:	4a 28       	lddpc	r8,800033f4 <_ZN5Timer12prepareTimerEm+0xa0>
80003370:	70 08       	ld.w	r8,r8[0x0]
80003372:	4a 19       	lddpc	r9,800033f4 <_ZN5Timer12prepareTimerEm+0xa0>
80003374:	72 09       	ld.w	r9,r9[0x0]
80003376:	72 09       	ld.w	r9,r9[0x0]
80003378:	af b9       	sbr	r9,0xf
8000337a:	91 09       	st.w	r8[0x0],r9
	SET_BIT(*CMR0,14); //*CMR0 |= 1 << 14; // WAVSEL: RC is chosen as the maximum value (UP mode with automatic trigger on RC Compare)
8000337c:	49 e8       	lddpc	r8,800033f4 <_ZN5Timer12prepareTimerEm+0xa0>
8000337e:	70 08       	ld.w	r8,r8[0x0]
80003380:	49 d9       	lddpc	r9,800033f4 <_ZN5Timer12prepareTimerEm+0xa0>
80003382:	72 09       	ld.w	r9,r9[0x0]
80003384:	72 09       	ld.w	r9,r9[0x0]
80003386:	af a9       	sbr	r9,0xe
80003388:	91 09       	st.w	r8[0x0],r9
	SET_BIT(*CMR0,1); //*CMR0 |= 1 << 1; // TCCLKS: TIMER_CLOCK3 is chosen, the clock choise is define in Configuration.cpp
8000338a:	49 b8       	lddpc	r8,800033f4 <_ZN5Timer12prepareTimerEm+0xa0>
8000338c:	70 08       	ld.w	r8,r8[0x0]
8000338e:	49 a9       	lddpc	r9,800033f4 <_ZN5Timer12prepareTimerEm+0xa0>
80003390:	72 09       	ld.w	r9,r9[0x0]
80003392:	72 09       	ld.w	r9,r9[0x0]
80003394:	a1 b9       	sbr	r9,0x1
80003396:	91 09       	st.w	r8[0x0],r9
	if (2000000/frequency <= 65535){  // > 2^16 - 1 -> There are only 16 bits availabe
80003398:	e0 68 84 80 	mov	r8,33920
8000339c:	ea 18 00 1e 	orh	r8,0x1e
800033a0:	ee f9 ff f8 	ld.w	r9,r7[-8]
800033a4:	f0 09 0d 08 	divu	r8,r8,r9
800033a8:	e0 48 ff ff 	cp.w	r8,65535
800033ac:	e0 8b 00 0f 	brhi	800033ca <_ZN5Timer12prepareTimerEm+0x76>
		*RC0 = 2000000/frequency; // frequency will hand over // One Interrupt per second happens when RC=2 MHz, if we want 5 Interrupts (f=5 Hz) we have to divide 2 MHz with 5
800033b0:	49 28       	lddpc	r8,800033f8 <_ZN5Timer12prepareTimerEm+0xa4>
800033b2:	70 0a       	ld.w	r10,r8[0x0]
800033b4:	e0 68 84 80 	mov	r8,33920
800033b8:	ea 18 00 1e 	orh	r8,0x1e
800033bc:	ee f9 ff f8 	ld.w	r9,r7[-8]
800033c0:	f0 09 0d 08 	divu	r8,r8,r9
800033c4:	95 08       	st.w	r10[0x0],r8
		return true;	
800033c6:	30 18       	mov	r8,1
800033c8:	c1 08       	rjmp	800033e8 <_ZN5Timer12prepareTimerEm+0x94>
	}
	else if (2000000/frequency > 65535){
800033ca:	e0 68 84 80 	mov	r8,33920
800033ce:	ea 18 00 1e 	orh	r8,0x1e
800033d2:	ee f9 ff f8 	ld.w	r9,r7[-8]
800033d6:	f0 09 0d 08 	divu	r8,r8,r9
800033da:	e0 48 ff ff 	cp.w	r8,65535
800033de:	e0 88 00 04 	brls	800033e6 <_ZN5Timer12prepareTimerEm+0x92>
		return false;
800033e2:	30 08       	mov	r8,0
800033e4:	c0 28       	rjmp	800033e8 <_ZN5Timer12prepareTimerEm+0x94>
800033e6:	c0 18       	rjmp	800033e8 <_ZN5Timer12prepareTimerEm+0x94>
	}
}
800033e8:	10 9c       	mov	r12,r8
800033ea:	2f ed       	sub	sp,-8
800033ec:	e3 cd 80 80 	ldm	sp++,r7,pc
800033f0:	80 00       	ld.sh	r0,r0[0x0]
800033f2:	34 bc       	mov	r12,75
800033f4:	00 00       	add	r0,r0
800033f6:	00 e4       	st.h	--r0,r4
800033f8:	00 00       	add	r0,r0
800033fa:	00 f4       	st.b	--r0,r4

800033fc <_ZN5Timer9initTimerEm>:
	*IER0 = 0x0;
	*IDR0 = 0x0;
	*IMR0 =0x0;
}

bool Timer::initTimer( unsigned long frequency ) {
800033fc:	eb cd 40 80 	pushm	r7,lr
80003400:	1a 97       	mov	r7,sp
80003402:	20 2d       	sub	sp,8
80003404:	ef 4c ff fc 	st.w	r7[-4],r12
80003408:	ef 4b ff f8 	st.w	r7[-8],r11
	if (prepareTimer(frequency) == true){
8000340c:	ee fb ff f8 	ld.w	r11,r7[-8]
80003410:	ee fc ff fc 	ld.w	r12,r7[-4]
80003414:	f0 1f 00 12 	mcall	8000345c <_ZN5Timer9initTimerEm+0x60>
80003418:	18 98       	mov	r8,r12
8000341a:	58 08       	cp.w	r8,0
8000341c:	c0 d0       	breq	80003436 <_ZN5Timer9initTimerEm+0x3a>
		setIsTimerEnabled(true);
8000341e:	30 1b       	mov	r11,1
80003420:	ee fc ff fc 	ld.w	r12,r7[-4]
80003424:	f0 1f 00 0f 	mcall	80003460 <_ZN5Timer9initTimerEm+0x64>
		setIsTimerInterruptEnabled(true);
80003428:	30 1b       	mov	r11,1
8000342a:	ee fc ff fc 	ld.w	r12,r7[-4]
8000342e:	f0 1f 00 0e 	mcall	80003464 <_ZN5Timer9initTimerEm+0x68>
		return true;
80003432:	30 18       	mov	r8,1
80003434:	c0 f8       	rjmp	80003452 <_ZN5Timer9initTimerEm+0x56>
	}
	else if (prepareTimer(frequency) == false){
80003436:	ee fb ff f8 	ld.w	r11,r7[-8]
8000343a:	ee fc ff fc 	ld.w	r12,r7[-4]
8000343e:	f0 1f 00 08 	mcall	8000345c <_ZN5Timer9initTimerEm+0x60>
80003442:	18 98       	mov	r8,r12
80003444:	ec 18 00 01 	eorl	r8,0x1
80003448:	5c 58       	castu.b	r8
8000344a:	c0 30       	breq	80003450 <_ZN5Timer9initTimerEm+0x54>
		return false;	
8000344c:	30 08       	mov	r8,0
8000344e:	c0 28       	rjmp	80003452 <_ZN5Timer9initTimerEm+0x56>
80003450:	c0 18       	rjmp	80003452 <_ZN5Timer9initTimerEm+0x56>
	}
}
80003452:	10 9c       	mov	r12,r8
80003454:	2f ed       	sub	sp,-8
80003456:	e3 cd 80 80 	ldm	sp++,r7,pc
8000345a:	00 00       	add	r0,r0
8000345c:	80 00       	ld.sh	r0,r0[0x0]
8000345e:	33 54       	mov	r4,53
80003460:	80 00       	ld.sh	r0,r0[0x0]
80003462:	34 68       	mov	r8,70
80003464:	80 00       	ld.sh	r0,r0[0x0]
80003466:	34 bc       	mov	r12,75

80003468 <_ZN5Timer17setIsTimerEnabledEb>:

void Timer::setIsTimerEnabled( bool enabled ) {
80003468:	eb cd 40 80 	pushm	r7,lr
8000346c:	1a 97       	mov	r7,sp
8000346e:	20 2d       	sub	sp,8
80003470:	ef 4c ff fc 	st.w	r7[-4],r12
80003474:	16 98       	mov	r8,r11
80003476:	ef 68 ff f8 	st.b	r7[-8],r8
if (enabled == true){
8000347a:	ef 39 ff f8 	ld.ub	r9,r7[-8]
8000347e:	30 08       	mov	r8,0
80003480:	f0 09 18 00 	cp.b	r9,r8
80003484:	c1 00       	breq	800034a4 <_ZN5Timer17setIsTimerEnabledEb+0x3c>
	SET_BIT(*CCR0, 0); //Entpricht: *CCR0 |= 1; CLKEN: This bit will enable the clock 
80003486:	48 d8       	lddpc	r8,800034b8 <_ZN5Timer17setIsTimerEnabledEb+0x50>
80003488:	70 08       	ld.w	r8,r8[0x0]
8000348a:	48 c9       	lddpc	r9,800034b8 <_ZN5Timer17setIsTimerEnabledEb+0x50>
8000348c:	72 09       	ld.w	r9,r9[0x0]
8000348e:	72 09       	ld.w	r9,r9[0x0]
80003490:	a1 a9       	sbr	r9,0x0
80003492:	91 09       	st.w	r8[0x0],r9
	SET_BIT(*CCR0, 2); //Entspricht: *CCR0 |= 1 << 2; SWTRG: The clock is started
80003494:	48 98       	lddpc	r8,800034b8 <_ZN5Timer17setIsTimerEnabledEb+0x50>
80003496:	70 08       	ld.w	r8,r8[0x0]
80003498:	48 89       	lddpc	r9,800034b8 <_ZN5Timer17setIsTimerEnabledEb+0x50>
8000349a:	72 09       	ld.w	r9,r9[0x0]
8000349c:	72 09       	ld.w	r9,r9[0x0]
8000349e:	a3 a9       	sbr	r9,0x2
800034a0:	91 09       	st.w	r8[0x0],r9
800034a2:	c0 88       	rjmp	800034b2 <_ZN5Timer17setIsTimerEnabledEb+0x4a>
}
else{
	SET_BIT(*CCR0, 1); //Entspricht: *CCR0 |= 1 << 1; CLKDIS: This bit will disable the clock
800034a4:	48 58       	lddpc	r8,800034b8 <_ZN5Timer17setIsTimerEnabledEb+0x50>
800034a6:	70 08       	ld.w	r8,r8[0x0]
800034a8:	48 49       	lddpc	r9,800034b8 <_ZN5Timer17setIsTimerEnabledEb+0x50>
800034aa:	72 09       	ld.w	r9,r9[0x0]
800034ac:	72 09       	ld.w	r9,r9[0x0]
800034ae:	a1 b9       	sbr	r9,0x1
800034b0:	91 09       	st.w	r8[0x0],r9
}
}
800034b2:	2f ed       	sub	sp,-8
800034b4:	e3 cd 80 80 	ldm	sp++,r7,pc
800034b8:	00 00       	add	r0,r0
800034ba:	00 e0       	st.h	--r0,r0

800034bc <_ZN5Timer26setIsTimerInterruptEnabledEb>:

void Timer::setIsTimerInterruptEnabled( bool enabled ) {
800034bc:	eb cd 40 80 	pushm	r7,lr
800034c0:	1a 97       	mov	r7,sp
800034c2:	20 2d       	sub	sp,8
800034c4:	ef 4c ff fc 	st.w	r7[-4],r12
800034c8:	16 98       	mov	r8,r11
800034ca:	ef 68 ff f8 	st.b	r7[-8],r8
if (enabled == true){
800034ce:	ef 39 ff f8 	ld.ub	r9,r7[-8]
800034d2:	30 08       	mov	r8,0
800034d4:	f0 09 18 00 	cp.b	r9,r8
800034d8:	c0 90       	breq	800034ea <_ZN5Timer26setIsTimerInterruptEnabledEb+0x2e>
	SET_BIT(*IER0, 4); //Entspricht *IER0 |= 1 << 4; // CPCS:This bit is set when an RC Compare has occured 
800034da:	48 a8       	lddpc	r8,80003500 <_ZN5Timer26setIsTimerInterruptEnabledEb+0x44>
800034dc:	70 08       	ld.w	r8,r8[0x0]
800034de:	48 99       	lddpc	r9,80003500 <_ZN5Timer26setIsTimerInterruptEnabledEb+0x44>
800034e0:	72 09       	ld.w	r9,r9[0x0]
800034e2:	72 09       	ld.w	r9,r9[0x0]
800034e4:	a5 a9       	sbr	r9,0x4
800034e6:	91 09       	st.w	r8[0x0],r9
800034e8:	c0 88       	rjmp	800034f8 <_ZN5Timer26setIsTimerInterruptEnabledEb+0x3c>
}
else{
	SET_BIT(*IDR0, 4); //Entspricht: *IDR0 |= 1 << 4; //CPCS: This bit ill clear the sorresponding bit in IMR (Interrupt Mask Register, read-only)
800034ea:	48 78       	lddpc	r8,80003504 <_ZN5Timer26setIsTimerInterruptEnabledEb+0x48>
800034ec:	70 08       	ld.w	r8,r8[0x0]
800034ee:	48 69       	lddpc	r9,80003504 <_ZN5Timer26setIsTimerInterruptEnabledEb+0x48>
800034f0:	72 09       	ld.w	r9,r9[0x0]
800034f2:	72 09       	ld.w	r9,r9[0x0]
800034f4:	a5 a9       	sbr	r9,0x4
800034f6:	91 09       	st.w	r8[0x0],r9
}
}
800034f8:	2f ed       	sub	sp,-8
800034fa:	e3 cd 80 80 	ldm	sp++,r7,pc
800034fe:	00 00       	add	r0,r0
80003500:	00 00       	add	r0,r0
80003502:	00 fc       	st.b	--r0,r12
80003504:	00 00       	add	r0,r0
80003506:	01 00       	ld.w	r0,r0++

80003508 <_ZN5Timer18resetInterruptFlagEv>:

void Timer::resetInterruptFlag(void) {
80003508:	eb cd 40 80 	pushm	r7,lr
8000350c:	1a 97       	mov	r7,sp
	*SR0; //Reading the Status Register will also clear the interrupt bit for the corresponding interrupts.
8000350e:	48 38       	lddpc	r8,80003518 <_ZN5Timer18resetInterruptFlagEv+0x10>
80003510:	70 08       	ld.w	r8,r8[0x0]
80003512:	70 08       	ld.w	r8,r8[0x0]
}
80003514:	e3 cd 80 80 	ldm	sp++,r7,pc
80003518:	00 00       	add	r0,r0
8000351a:	00 f8       	st.b	--r0,r8

8000351c <_ZN4UARTC1Ev>:
const unsigned int UART::MYAVR32_GPIO_OFFSET_PUER = 0x70;
const unsigned int UART::MYAVR32_GPIO_OFFSET_PMR0 = 0x10;
const unsigned int UART::MYAVR32_GPIO_OFFSET_PMR1 = 0x20;


UART::UART() {
8000351c:	eb cd 40 80 	pushm	r7,lr
80003520:	1a 97       	mov	r7,sp
80003522:	20 1d       	sub	sp,4
80003524:	ef 4c ff fc 	st.w	r7[-4],r12
	thisUARTConfig = 0;
80003528:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000352c:	30 09       	mov	r9,0
8000352e:	91 09       	st.w	r8[0x0],r9
}
80003530:	2f fd       	sub	sp,-4
80003532:	e3 cd 80 80 	ldm	sp++,r7,pc
80003536:	d7 03       	nop

80003538 <_ZN4UARTD1Ev>:


UART::~UART() {
80003538:	eb cd 40 80 	pushm	r7,lr
8000353c:	1a 97       	mov	r7,sp
8000353e:	20 1d       	sub	sp,4
80003540:	ef 4c ff fc 	st.w	r7[-4],r12
	cleanUp();
80003544:	ee fc ff fc 	ld.w	r12,r7[-4]
80003548:	f0 1f 00 03 	mcall	80003554 <_ZN4UARTD1Ev+0x1c>
}
8000354c:	2f fd       	sub	sp,-4
8000354e:	e3 cd 80 80 	ldm	sp++,r7,pc
80003552:	00 00       	add	r0,r0
80003554:	80 00       	ld.sh	r0,r0[0x0]
80003556:	41 38       	lddsp	r8,sp[0x4c]

80003558 <_ZN4UART4initEPN13Configuration12s_UARTConfigE>:


// Initializes the USART registers.
// Returns zero if specified baud rate cannot be achieved.
bool UART::init( Configuration::s_UARTConfig* thisUARTConfig_ ) {
80003558:	eb cd 40 80 	pushm	r7,lr
8000355c:	1a 97       	mov	r7,sp
8000355e:	20 6d       	sub	sp,24
80003560:	ef 4c ff ec 	st.w	r7[-20],r12
80003564:	ef 4b ff e8 	st.w	r7[-24],r11
	thisUARTConfig = thisUARTConfig_;
80003568:	ee f8 ff ec 	ld.w	r8,r7[-20]
8000356c:	ee f9 ff e8 	ld.w	r9,r7[-24]
80003570:	91 09       	st.w	r8[0x0],r9
	
	// Reset previous configuration
	cleanUp();
80003572:	ee fc ff ec 	ld.w	r12,r7[-20]
80003576:	f0 1f 00 d6 	mcall	800038cc <_ZN4UART4initEPN13Configuration12s_UARTConfigE+0x374>
	
	// Initialization code taken from http://asf.atmel.com/docs/latest/avr32.drivers.intc.example.evk1101/html/group__group__avr32__drivers__usart.html#gaf8b81384234af455b491c44447d896f1
	
	// Calculate Baudrate Prescaler
	unsigned int over = ( Configuration::PBACLK >= 16 * thisUARTConfig->baudRate ) ? 16 : 8;
8000357a:	ee f8 ff ec 	ld.w	r8,r7[-20]
8000357e:	70 08       	ld.w	r8,r8[0x0]
80003580:	70 18       	ld.w	r8,r8[0x4]
80003582:	f0 09 15 04 	lsl	r9,r8,0x4
80003586:	fe f8 03 4a 	ld.w	r8,pc[842]
8000358a:	70 08       	ld.w	r8,r8[0x0]
8000358c:	10 39       	cp.w	r9,r8
8000358e:	e0 8b 00 04 	brhi	80003596 <_ZN4UART4initEPN13Configuration12s_UARTConfigE+0x3e>
80003592:	31 08       	mov	r8,16
80003594:	c0 28       	rjmp	80003598 <_ZN4UART4initEPN13Configuration12s_UARTConfigE+0x40>
80003596:	30 88       	mov	r8,8
80003598:	ef 48 ff f0 	st.w	r7[-16],r8
	unsigned int cd_fp = (( 1 << 3 ) * Configuration::PBACLK + ( over * thisUARTConfig->baudRate ) / 2 ) / ( over * thisUARTConfig->baudRate );
8000359c:	fe f8 03 34 	ld.w	r8,pc[820]
800035a0:	70 08       	ld.w	r8,r8[0x0]
800035a2:	f0 09 15 03 	lsl	r9,r8,0x3
800035a6:	ee f8 ff ec 	ld.w	r8,r7[-20]
800035aa:	70 08       	ld.w	r8,r8[0x0]
800035ac:	70 1a       	ld.w	r10,r8[0x4]
800035ae:	ee f8 ff f0 	ld.w	r8,r7[-16]
800035b2:	f4 08 02 48 	mul	r8,r10,r8
800035b6:	a1 98       	lsr	r8,0x1
800035b8:	f2 08 00 08 	add	r8,r9,r8
800035bc:	ee f9 ff ec 	ld.w	r9,r7[-20]
800035c0:	72 09       	ld.w	r9,r9[0x0]
800035c2:	72 1a       	ld.w	r10,r9[0x4]
800035c4:	ee f9 ff f0 	ld.w	r9,r7[-16]
800035c8:	f4 09 02 49 	mul	r9,r10,r9
800035cc:	f0 09 0d 08 	divu	r8,r8,r9
800035d0:	ef 48 ff f4 	st.w	r7[-12],r8
	unsigned int cd = cd_fp >> 3;
800035d4:	ee f8 ff f4 	ld.w	r8,r7[-12]
800035d8:	a3 98       	lsr	r8,0x3
800035da:	ef 48 ff f8 	st.w	r7[-8],r8
	unsigned int fp = cd_fp & (( 1 << 3 ) - 1 );
800035de:	ee f8 ff f4 	ld.w	r8,r7[-12]
800035e2:	f1 d8 c0 03 	bfextu	r8,r8,0x0,0x3
800035e6:	ef 48 ff fc 	st.w	r7[-4],r8

	if( cd < 1 || cd > ( 1 << 16 ) - 1 ) {
800035ea:	ee f8 ff f8 	ld.w	r8,r7[-8]
800035ee:	58 08       	cp.w	r8,0
800035f0:	c0 70       	breq	800035fe <_ZN4UART4initEPN13Configuration12s_UARTConfigE+0xa6>
800035f2:	ee f8 ff f8 	ld.w	r8,r7[-8]
800035f6:	e0 48 ff ff 	cp.w	r8,65535
800035fa:	e0 88 00 04 	brls	80003602 <_ZN4UART4initEPN13Configuration12s_UARTConfigE+0xaa>
		return false;
800035fe:	30 08       	mov	r8,0
80003600:	c6 29       	rjmp	800038c4 <_ZN4UART4initEPN13Configuration12s_UARTConfigE+0x36c>
	}

	//thisUARTConfig->usart->MR.sync = 0; // Async mode
	CLEAR_BIT( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_MR ), 8 );
80003602:	ee f8 ff ec 	ld.w	r8,r7[-20]
80003606:	70 08       	ld.w	r8,r8[0x0]
80003608:	70 08       	ld.w	r8,r8[0x0]
8000360a:	2f c8       	sub	r8,-4
8000360c:	ee f9 ff ec 	ld.w	r9,r7[-20]
80003610:	72 09       	ld.w	r9,r9[0x0]
80003612:	72 09       	ld.w	r9,r9[0x0]
80003614:	2f c9       	sub	r9,-4
80003616:	72 09       	ld.w	r9,r9[0x0]
80003618:	a9 c9       	cbr	r9,0x8
8000361a:	91 09       	st.w	r8[0x0],r9
	//thisUARTConfig->usart->MR.usclks = 0; // use CLK_USART (peripheral clock)
	CLEAR_BIT( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_MR ), 5 );
8000361c:	ee f8 ff ec 	ld.w	r8,r7[-20]
80003620:	70 08       	ld.w	r8,r8[0x0]
80003622:	70 08       	ld.w	r8,r8[0x0]
80003624:	2f c8       	sub	r8,-4
80003626:	ee f9 ff ec 	ld.w	r9,r7[-20]
8000362a:	72 09       	ld.w	r9,r9[0x0]
8000362c:	72 09       	ld.w	r9,r9[0x0]
8000362e:	2f c9       	sub	r9,-4
80003630:	72 09       	ld.w	r9,r9[0x0]
80003632:	a5 d9       	cbr	r9,0x5
80003634:	91 09       	st.w	r8[0x0],r9
	CLEAR_BIT( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_MR ), 4 );
80003636:	ee f8 ff ec 	ld.w	r8,r7[-20]
8000363a:	70 08       	ld.w	r8,r8[0x0]
8000363c:	70 08       	ld.w	r8,r8[0x0]
8000363e:	2f c8       	sub	r8,-4
80003640:	ee f9 ff ec 	ld.w	r9,r7[-20]
80003644:	72 09       	ld.w	r9,r9[0x0]
80003646:	72 09       	ld.w	r9,r9[0x0]
80003648:	2f c9       	sub	r9,-4
8000364a:	72 09       	ld.w	r9,r9[0x0]
8000364c:	a5 c9       	cbr	r9,0x4
8000364e:	91 09       	st.w	r8[0x0],r9
	//thisUARTConfig->usart->MR.over = ( over == 8 ); // oversampling: 1 -> 8 times, 0 -> 16 times
	if( over == 8 ) {
80003650:	ee f8 ff f0 	ld.w	r8,r7[-16]
80003654:	58 88       	cp.w	r8,8
80003656:	c0 f1       	brne	80003674 <_ZN4UART4initEPN13Configuration12s_UARTConfigE+0x11c>
		SET_BIT( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_MR ), 19 );
80003658:	ee f8 ff ec 	ld.w	r8,r7[-20]
8000365c:	70 08       	ld.w	r8,r8[0x0]
8000365e:	70 08       	ld.w	r8,r8[0x0]
80003660:	2f c8       	sub	r8,-4
80003662:	ee f9 ff ec 	ld.w	r9,r7[-20]
80003666:	72 09       	ld.w	r9,r9[0x0]
80003668:	72 09       	ld.w	r9,r9[0x0]
8000366a:	2f c9       	sub	r9,-4
8000366c:	72 09       	ld.w	r9,r9[0x0]
8000366e:	b3 b9       	sbr	r9,0x13
80003670:	91 09       	st.w	r8[0x0],r9
80003672:	c0 e8       	rjmp	8000368e <_ZN4UART4initEPN13Configuration12s_UARTConfigE+0x136>
	} else {
		CLEAR_BIT( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_MR ), 19 );
80003674:	ee f8 ff ec 	ld.w	r8,r7[-20]
80003678:	70 08       	ld.w	r8,r8[0x0]
8000367a:	70 08       	ld.w	r8,r8[0x0]
8000367c:	2f c8       	sub	r8,-4
8000367e:	ee f9 ff ec 	ld.w	r9,r7[-20]
80003682:	72 09       	ld.w	r9,r9[0x0]
80003684:	72 09       	ld.w	r9,r9[0x0]
80003686:	2f c9       	sub	r9,-4
80003688:	72 09       	ld.w	r9,r9[0x0]
8000368a:	b3 d9       	cbr	r9,0x13
8000368c:	91 09       	st.w	r8[0x0],r9
	}

	//thisUARTConfig->usart->BRGR.cd = cd; // Baudrate generator config
	CLEAR_BITS( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_BRGR ), 0xFFFF );
8000368e:	ee f8 ff ec 	ld.w	r8,r7[-20]
80003692:	70 08       	ld.w	r8,r8[0x0]
80003694:	70 08       	ld.w	r8,r8[0x0]
80003696:	2e 08       	sub	r8,-32
80003698:	ee f9 ff ec 	ld.w	r9,r7[-20]
8000369c:	72 09       	ld.w	r9,r9[0x0]
8000369e:	72 09       	ld.w	r9,r9[0x0]
800036a0:	2e 09       	sub	r9,-32
800036a2:	72 09       	ld.w	r9,r9[0x0]
800036a4:	e0 19 00 00 	andl	r9,0x0
800036a8:	91 09       	st.w	r8[0x0],r9
	SET_BITS( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_BRGR ), cd & 0xFFFF );
800036aa:	ee f8 ff ec 	ld.w	r8,r7[-20]
800036ae:	70 08       	ld.w	r8,r8[0x0]
800036b0:	70 08       	ld.w	r8,r8[0x0]
800036b2:	2e 08       	sub	r8,-32
800036b4:	ee f9 ff ec 	ld.w	r9,r7[-20]
800036b8:	72 09       	ld.w	r9,r9[0x0]
800036ba:	72 09       	ld.w	r9,r9[0x0]
800036bc:	2e 09       	sub	r9,-32
800036be:	72 0a       	ld.w	r10,r9[0x0]
800036c0:	ee f9 ff f8 	ld.w	r9,r7[-8]
800036c4:	f3 d9 c0 10 	bfextu	r9,r9,0x0,0x10
800036c8:	f5 e9 10 09 	or	r9,r10,r9
800036cc:	91 09       	st.w	r8[0x0],r9
	//thisUARTConfig->usart->BRGR.fp = fp; // Baudrate generator config
	CLEAR_BITS( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_BRGR ), 0x07 << 16 );
800036ce:	ee f8 ff ec 	ld.w	r8,r7[-20]
800036d2:	70 08       	ld.w	r8,r8[0x0]
800036d4:	70 08       	ld.w	r8,r8[0x0]
800036d6:	2e 08       	sub	r8,-32
800036d8:	ee f9 ff ec 	ld.w	r9,r7[-20]
800036dc:	72 09       	ld.w	r9,r9[0x0]
800036de:	72 09       	ld.w	r9,r9[0x0]
800036e0:	2e 09       	sub	r9,-32
800036e2:	72 09       	ld.w	r9,r9[0x0]
800036e4:	e4 19 ff f8 	andh	r9,0xfff8
800036e8:	91 09       	st.w	r8[0x0],r9
	SET_BITS( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_BRGR ), ( fp & 0x07 ) << 16 );
800036ea:	ee f8 ff ec 	ld.w	r8,r7[-20]
800036ee:	70 08       	ld.w	r8,r8[0x0]
800036f0:	70 08       	ld.w	r8,r8[0x0]
800036f2:	2e 08       	sub	r8,-32
800036f4:	ee f9 ff ec 	ld.w	r9,r7[-20]
800036f8:	72 09       	ld.w	r9,r9[0x0]
800036fa:	72 09       	ld.w	r9,r9[0x0]
800036fc:	2e 09       	sub	r9,-32
800036fe:	72 0a       	ld.w	r10,r9[0x0]
80003700:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003704:	f3 d9 c0 03 	bfextu	r9,r9,0x0,0x3
80003708:	b1 69       	lsl	r9,0x10
8000370a:	f5 e9 10 09 	or	r9,r10,r9
8000370e:	91 09       	st.w	r8[0x0],r9
	
	
	
	if( thisUARTConfig->charlength == 9 ) {
80003710:	ee f8 ff ec 	ld.w	r8,r7[-20]
80003714:	70 08       	ld.w	r8,r8[0x0]
80003716:	f1 39 00 08 	ld.ub	r9,r8[8]
8000371a:	30 98       	mov	r8,9
8000371c:	f0 09 18 00 	cp.b	r9,r8
80003720:	c0 f1       	brne	8000373e <_ZN4UART4initEPN13Configuration12s_UARTConfigE+0x1e6>
		// Character length set to 9 bits. MODE9 dominates CHRL.
		//thisUARTConfig->usart->MR.mode9 = 1;
		SET_BIT( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_MR ), 17 );
80003722:	ee f8 ff ec 	ld.w	r8,r7[-20]
80003726:	70 08       	ld.w	r8,r8[0x0]
80003728:	70 08       	ld.w	r8,r8[0x0]
8000372a:	2f c8       	sub	r8,-4
8000372c:	ee f9 ff ec 	ld.w	r9,r7[-20]
80003730:	72 09       	ld.w	r9,r9[0x0]
80003732:	72 09       	ld.w	r9,r9[0x0]
80003734:	2f c9       	sub	r9,-4
80003736:	72 09       	ld.w	r9,r9[0x0]
80003738:	b1 b9       	sbr	r9,0x11
8000373a:	91 09       	st.w	r8[0x0],r9
8000373c:	c3 38       	rjmp	800037a2 <_ZN4UART4initEPN13Configuration12s_UARTConfigE+0x24a>
	} else {
		// CHRL gives the character length (- 5) when MODE9 = 0.
		//thisUARTConfig->usart->MR.mode9 = 0;
		CLEAR_BIT( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_MR ), 17 );
8000373e:	ee f8 ff ec 	ld.w	r8,r7[-20]
80003742:	70 08       	ld.w	r8,r8[0x0]
80003744:	70 08       	ld.w	r8,r8[0x0]
80003746:	2f c8       	sub	r8,-4
80003748:	ee f9 ff ec 	ld.w	r9,r7[-20]
8000374c:	72 09       	ld.w	r9,r9[0x0]
8000374e:	72 09       	ld.w	r9,r9[0x0]
80003750:	2f c9       	sub	r9,-4
80003752:	72 09       	ld.w	r9,r9[0x0]
80003754:	b1 d9       	cbr	r9,0x11
80003756:	91 09       	st.w	r8[0x0],r9
		//thisUARTConfig->usart->MR.chrl = thisUARTConfig->charlength - 5;
		CLEAR_BITS( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_MR ), 0x03 << 6 );
80003758:	ee f8 ff ec 	ld.w	r8,r7[-20]
8000375c:	70 08       	ld.w	r8,r8[0x0]
8000375e:	70 08       	ld.w	r8,r8[0x0]
80003760:	2f c8       	sub	r8,-4
80003762:	ee f9 ff ec 	ld.w	r9,r7[-20]
80003766:	72 09       	ld.w	r9,r9[0x0]
80003768:	72 09       	ld.w	r9,r9[0x0]
8000376a:	2f c9       	sub	r9,-4
8000376c:	72 09       	ld.w	r9,r9[0x0]
8000376e:	e0 19 ff 3f 	andl	r9,0xff3f
80003772:	91 09       	st.w	r8[0x0],r9
		SET_BITS( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_MR ), (( thisUARTConfig->charlength - 5 ) & 0x03 ) << 6 );
80003774:	ee f8 ff ec 	ld.w	r8,r7[-20]
80003778:	70 08       	ld.w	r8,r8[0x0]
8000377a:	70 08       	ld.w	r8,r8[0x0]
8000377c:	2f c8       	sub	r8,-4
8000377e:	ee f9 ff ec 	ld.w	r9,r7[-20]
80003782:	72 09       	ld.w	r9,r9[0x0]
80003784:	72 09       	ld.w	r9,r9[0x0]
80003786:	2f c9       	sub	r9,-4
80003788:	72 0a       	ld.w	r10,r9[0x0]
8000378a:	ee f9 ff ec 	ld.w	r9,r7[-20]
8000378e:	72 09       	ld.w	r9,r9[0x0]
80003790:	f3 39 00 08 	ld.ub	r9,r9[8]
80003794:	20 59       	sub	r9,5
80003796:	a7 69       	lsl	r9,0x6
80003798:	f3 d9 c0 08 	bfextu	r9,r9,0x0,0x8
8000379c:	f5 e9 10 09 	or	r9,r10,r9
800037a0:	91 09       	st.w	r8[0x0],r9
	}

	//thisUARTConfig->usart->MR.par = thisUARTConfig->paritytype;
	CLEAR_BITS( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_MR ), 0x07 << 9 );
800037a2:	ee f8 ff ec 	ld.w	r8,r7[-20]
800037a6:	70 08       	ld.w	r8,r8[0x0]
800037a8:	70 08       	ld.w	r8,r8[0x0]
800037aa:	2f c8       	sub	r8,-4
800037ac:	ee f9 ff ec 	ld.w	r9,r7[-20]
800037b0:	72 09       	ld.w	r9,r9[0x0]
800037b2:	72 09       	ld.w	r9,r9[0x0]
800037b4:	2f c9       	sub	r9,-4
800037b6:	72 09       	ld.w	r9,r9[0x0]
800037b8:	e0 19 f1 ff 	andl	r9,0xf1ff
800037bc:	91 09       	st.w	r8[0x0],r9
	SET_BITS( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_MR ), ( thisUARTConfig->paritytype & 0x07 ) << 9 );
800037be:	ee f8 ff ec 	ld.w	r8,r7[-20]
800037c2:	70 08       	ld.w	r8,r8[0x0]
800037c4:	70 08       	ld.w	r8,r8[0x0]
800037c6:	2f c8       	sub	r8,-4
800037c8:	ee f9 ff ec 	ld.w	r9,r7[-20]
800037cc:	72 09       	ld.w	r9,r9[0x0]
800037ce:	72 09       	ld.w	r9,r9[0x0]
800037d0:	2f c9       	sub	r9,-4
800037d2:	72 0a       	ld.w	r10,r9[0x0]
800037d4:	ee f9 ff ec 	ld.w	r9,r7[-20]
800037d8:	72 09       	ld.w	r9,r9[0x0]
800037da:	f3 39 00 09 	ld.ub	r9,r9[9]
800037de:	f3 d9 c0 03 	bfextu	r9,r9,0x0,0x3
800037e2:	a9 79       	lsl	r9,0x9
800037e4:	f5 e9 10 09 	or	r9,r10,r9
800037e8:	91 09       	st.w	r8[0x0],r9
	//thisUARTConfig->usart->MR.chmode = thisUARTConfig->channelmode;
	CLEAR_BITS( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_MR ), 0x03 << 14 );
800037ea:	ee f8 ff ec 	ld.w	r8,r7[-20]
800037ee:	70 08       	ld.w	r8,r8[0x0]
800037f0:	70 08       	ld.w	r8,r8[0x0]
800037f2:	2f c8       	sub	r8,-4
800037f4:	ee f9 ff ec 	ld.w	r9,r7[-20]
800037f8:	72 09       	ld.w	r9,r9[0x0]
800037fa:	72 09       	ld.w	r9,r9[0x0]
800037fc:	2f c9       	sub	r9,-4
800037fe:	72 09       	ld.w	r9,r9[0x0]
80003800:	e0 19 3f ff 	andl	r9,0x3fff
80003804:	91 09       	st.w	r8[0x0],r9
	SET_BITS( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_MR ), ( thisUARTConfig->channelmode & 0x03 ) << 14 );
80003806:	ee f8 ff ec 	ld.w	r8,r7[-20]
8000380a:	70 08       	ld.w	r8,r8[0x0]
8000380c:	70 08       	ld.w	r8,r8[0x0]
8000380e:	2f c8       	sub	r8,-4
80003810:	ee f9 ff ec 	ld.w	r9,r7[-20]
80003814:	72 09       	ld.w	r9,r9[0x0]
80003816:	72 09       	ld.w	r9,r9[0x0]
80003818:	2f c9       	sub	r9,-4
8000381a:	72 0a       	ld.w	r10,r9[0x0]
8000381c:	ee f9 ff ec 	ld.w	r9,r7[-20]
80003820:	72 09       	ld.w	r9,r9[0x0]
80003822:	f3 39 00 0a 	ld.ub	r9,r9[10]
80003826:	af 69       	lsl	r9,0xe
80003828:	f3 d9 c0 10 	bfextu	r9,r9,0x0,0x10
8000382c:	f5 e9 10 09 	or	r9,r10,r9
80003830:	91 09       	st.w	r8[0x0],r9

	// Insert 1 (stopbits=0), 1.5 (stopbits=1) or 2 (stopbits=2) stop bits.
	//thisUARTConfig->usart->MR.nbstop = thisUARTConfig->stopbits;
	CLEAR_BITS( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_MR ), 0x03 << 12 );
80003832:	ee f8 ff ec 	ld.w	r8,r7[-20]
80003836:	70 08       	ld.w	r8,r8[0x0]
80003838:	70 08       	ld.w	r8,r8[0x0]
8000383a:	2f c8       	sub	r8,-4
8000383c:	ee f9 ff ec 	ld.w	r9,r7[-20]
80003840:	72 09       	ld.w	r9,r9[0x0]
80003842:	72 09       	ld.w	r9,r9[0x0]
80003844:	2f c9       	sub	r9,-4
80003846:	72 09       	ld.w	r9,r9[0x0]
80003848:	e0 19 cf ff 	andl	r9,0xcfff
8000384c:	91 09       	st.w	r8[0x0],r9
	SET_BITS( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_MR ), ( thisUARTConfig->stopbits & 0x03 ) << 12 );
8000384e:	ee f8 ff ec 	ld.w	r8,r7[-20]
80003852:	70 08       	ld.w	r8,r8[0x0]
80003854:	70 08       	ld.w	r8,r8[0x0]
80003856:	2f c8       	sub	r8,-4
80003858:	ee f9 ff ec 	ld.w	r9,r7[-20]
8000385c:	72 09       	ld.w	r9,r9[0x0]
8000385e:	72 09       	ld.w	r9,r9[0x0]
80003860:	2f c9       	sub	r9,-4
80003862:	72 0a       	ld.w	r10,r9[0x0]
80003864:	ee f9 ff ec 	ld.w	r9,r7[-20]
80003868:	72 09       	ld.w	r9,r9[0x0]
8000386a:	f3 39 00 0b 	ld.ub	r9,r9[11]
8000386e:	f3 d9 c0 02 	bfextu	r9,r9,0x0,0x2
80003872:	ad 69       	lsl	r9,0xc
80003874:	f5 e9 10 09 	or	r9,r10,r9
80003878:	91 09       	st.w	r8[0x0],r9
	
	// Set normal mode.
	//thisUARTConfig->usart->MR.mode = 0;
	CLEAR_BITS( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_MR ), 0x0F );
8000387a:	ee f8 ff ec 	ld.w	r8,r7[-20]
8000387e:	70 08       	ld.w	r8,r8[0x0]
80003880:	70 08       	ld.w	r8,r8[0x0]
80003882:	2f c8       	sub	r8,-4
80003884:	ee f9 ff ec 	ld.w	r9,r7[-20]
80003888:	72 09       	ld.w	r9,r9[0x0]
8000388a:	72 09       	ld.w	r9,r9[0x0]
8000388c:	2f c9       	sub	r9,-4
8000388e:	72 09       	ld.w	r9,r9[0x0]
80003890:	e0 19 ff f0 	andl	r9,0xfff0
80003894:	91 09       	st.w	r8[0x0],r9

	// Setup complete; enable communication.
	// Enable input and output.
	//thisUARTConfig->usart->CR.rxen = 1;
	SET_BIT( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_CR ), 4 );
80003896:	ee f8 ff ec 	ld.w	r8,r7[-20]
8000389a:	70 08       	ld.w	r8,r8[0x0]
8000389c:	70 08       	ld.w	r8,r8[0x0]
8000389e:	ee f9 ff ec 	ld.w	r9,r7[-20]
800038a2:	72 09       	ld.w	r9,r9[0x0]
800038a4:	72 09       	ld.w	r9,r9[0x0]
800038a6:	72 09       	ld.w	r9,r9[0x0]
800038a8:	a5 a9       	sbr	r9,0x4
800038aa:	91 09       	st.w	r8[0x0],r9
	//thisUARTConfig->usart->CR.txen = 1;
	SET_BIT( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_CR ), 6 );
800038ac:	ee f8 ff ec 	ld.w	r8,r7[-20]
800038b0:	70 08       	ld.w	r8,r8[0x0]
800038b2:	70 08       	ld.w	r8,r8[0x0]
800038b4:	ee f9 ff ec 	ld.w	r9,r7[-20]
800038b8:	72 09       	ld.w	r9,r9[0x0]
800038ba:	72 09       	ld.w	r9,r9[0x0]
800038bc:	72 09       	ld.w	r9,r9[0x0]
800038be:	a7 a9       	sbr	r9,0x6
800038c0:	91 09       	st.w	r8[0x0],r9
	
	return true;
800038c2:	30 18       	mov	r8,1
}
800038c4:	10 9c       	mov	r12,r8
800038c6:	2f ad       	sub	sp,-24
800038c8:	e3 cd 80 80 	ldm	sp++,r7,pc
800038cc:	80 00       	ld.sh	r0,r0[0x0]
800038ce:	41 38       	lddsp	r8,sp[0x4c]
800038d0:	00 00       	add	r0,r0
800038d2:	06 24       	rsub	r4,r3

800038d4 <_ZN4UART19enableInPinSelectorEb>:


bool UART::enableInPinSelector( bool enabled ) {
800038d4:	eb cd 40 80 	pushm	r7,lr
800038d8:	1a 97       	mov	r7,sp
800038da:	20 2d       	sub	sp,8
800038dc:	ef 4c ff fc 	st.w	r7[-4],r12
800038e0:	16 98       	mov	r8,r11
800038e2:	ef 68 ff f8 	st.b	r7[-8],r8
	if( thisUARTConfig == 0 ) {
800038e6:	ee f8 ff fc 	ld.w	r8,r7[-4]
800038ea:	70 08       	ld.w	r8,r8[0x0]
800038ec:	58 08       	cp.w	r8,0
800038ee:	c0 41       	brne	800038f6 <_ZN4UART19enableInPinSelectorEb+0x22>
		return false;
800038f0:	30 08       	mov	r8,0
800038f2:	e0 8f 03 21 	bral	80003f34 <_ZN4UART19enableInPinSelectorEb+0x660>
	}
	
	if( enabled ) {
800038f6:	ef 39 ff f8 	ld.ub	r9,r7[-8]
800038fa:	30 08       	mov	r8,0
800038fc:	f0 09 18 00 	cp.b	r9,r8
80003900:	e0 80 01 f4 	breq	80003ce8 <_ZN4UART19enableInPinSelectorEb+0x414>
		// Pin is controlled by function, not by GPIO
		//CLEAR_BIT( AVR32_GPIO.port[thisUARTConfig->RX_GPIO_port].gper, thisUARTConfig->RX_GPIO_pin );
		CLEAR_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + thisUARTConfig->RX_GPIO_port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_GPER ), thisUARTConfig->RX_GPIO_pin );
80003904:	fe f8 06 38 	ld.w	r8,pc[1592]
80003908:	70 08       	ld.w	r8,r8[0x0]
8000390a:	10 99       	mov	r9,r8
8000390c:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003910:	70 08       	ld.w	r8,r8[0x0]
80003912:	f1 38 00 0c 	ld.ub	r8,r8[12]
80003916:	a9 68       	lsl	r8,0x8
80003918:	f2 08 00 08 	add	r8,r9,r8
8000391c:	fe f9 06 20 	ld.w	r9,pc[1568]
80003920:	72 09       	ld.w	r9,r9[0x0]
80003922:	12 9a       	mov	r10,r9
80003924:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003928:	72 09       	ld.w	r9,r9[0x0]
8000392a:	f3 39 00 0c 	ld.ub	r9,r9[12]
8000392e:	a9 69       	lsl	r9,0x8
80003930:	f4 09 00 09 	add	r9,r10,r9
80003934:	72 0a       	ld.w	r10,r9[0x0]
80003936:	ee f9 ff fc 	ld.w	r9,r7[-4]
8000393a:	72 09       	ld.w	r9,r9[0x0]
8000393c:	f3 39 00 0d 	ld.ub	r9,r9[13]
80003940:	30 1b       	mov	r11,1
80003942:	f6 09 09 49 	lsl	r9,r11,r9
80003946:	5c d9       	com	r9
80003948:	f5 e9 00 09 	and	r9,r10,r9
8000394c:	91 09       	st.w	r8[0x0],r9
		//CLEAR_BIT( AVR32_GPIO.port[thisUARTConfig->TX_GPIO_port].gper, thisUARTConfig->TX_GPIO_pin );
		CLEAR_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + thisUARTConfig->TX_GPIO_port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_GPER ), thisUARTConfig->TX_GPIO_pin );
8000394e:	fe f8 05 ee 	ld.w	r8,pc[1518]
80003952:	70 08       	ld.w	r8,r8[0x0]
80003954:	10 99       	mov	r9,r8
80003956:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000395a:	70 08       	ld.w	r8,r8[0x0]
8000395c:	f1 38 00 0f 	ld.ub	r8,r8[15]
80003960:	a9 68       	lsl	r8,0x8
80003962:	f2 08 00 08 	add	r8,r9,r8
80003966:	fe f9 05 d6 	ld.w	r9,pc[1494]
8000396a:	72 09       	ld.w	r9,r9[0x0]
8000396c:	12 9a       	mov	r10,r9
8000396e:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003972:	72 09       	ld.w	r9,r9[0x0]
80003974:	f3 39 00 0f 	ld.ub	r9,r9[15]
80003978:	a9 69       	lsl	r9,0x8
8000397a:	f4 09 00 09 	add	r9,r10,r9
8000397e:	72 0a       	ld.w	r10,r9[0x0]
80003980:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003984:	72 09       	ld.w	r9,r9[0x0]
80003986:	f3 39 00 10 	ld.ub	r9,r9[16]
8000398a:	30 1b       	mov	r11,1
8000398c:	f6 09 09 49 	lsl	r9,r11,r9
80003990:	5c d9       	com	r9
80003992:	f5 e9 00 09 	and	r9,r10,r9
80003996:	91 09       	st.w	r8[0x0],r9
		
		// TX Pin is driven, RX Pin is not driven
		//CLEAR_BIT( AVR32_GPIO.port[thisUARTConfig->RX_GPIO_port].oder, thisUARTConfig->RX_GPIO_pin );
		CLEAR_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + thisUARTConfig->RX_GPIO_port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_ODER ), thisUARTConfig->RX_GPIO_pin );
80003998:	fe f8 05 a4 	ld.w	r8,pc[1444]
8000399c:	70 09       	ld.w	r9,r8[0x0]
8000399e:	ee f8 ff fc 	ld.w	r8,r7[-4]
800039a2:	70 08       	ld.w	r8,r8[0x0]
800039a4:	f1 38 00 0c 	ld.ub	r8,r8[12]
800039a8:	a3 68       	lsl	r8,0x2
800039aa:	2f f8       	sub	r8,-1
800039ac:	a7 68       	lsl	r8,0x6
800039ae:	f2 08 00 08 	add	r8,r9,r8
800039b2:	fe f9 05 8a 	ld.w	r9,pc[1418]
800039b6:	72 0a       	ld.w	r10,r9[0x0]
800039b8:	ee f9 ff fc 	ld.w	r9,r7[-4]
800039bc:	72 09       	ld.w	r9,r9[0x0]
800039be:	f3 39 00 0c 	ld.ub	r9,r9[12]
800039c2:	a3 69       	lsl	r9,0x2
800039c4:	2f f9       	sub	r9,-1
800039c6:	a7 69       	lsl	r9,0x6
800039c8:	f4 09 00 09 	add	r9,r10,r9
800039cc:	72 0a       	ld.w	r10,r9[0x0]
800039ce:	ee f9 ff fc 	ld.w	r9,r7[-4]
800039d2:	72 09       	ld.w	r9,r9[0x0]
800039d4:	f3 39 00 0d 	ld.ub	r9,r9[13]
800039d8:	30 1b       	mov	r11,1
800039da:	f6 09 09 49 	lsl	r9,r11,r9
800039de:	5c d9       	com	r9
800039e0:	f5 e9 00 09 	and	r9,r10,r9
800039e4:	91 09       	st.w	r8[0x0],r9
		//SET_BIT( AVR32_GPIO.port[thisUARTConfig->TX_GPIO_port].oder, thisUARTConfig->TX_GPIO_pin );
		SET_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + thisUARTConfig->TX_GPIO_port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_ODER ), thisUARTConfig->TX_GPIO_pin );
800039e6:	fe f8 05 56 	ld.w	r8,pc[1366]
800039ea:	70 09       	ld.w	r9,r8[0x0]
800039ec:	ee f8 ff fc 	ld.w	r8,r7[-4]
800039f0:	70 08       	ld.w	r8,r8[0x0]
800039f2:	f1 38 00 0f 	ld.ub	r8,r8[15]
800039f6:	a3 68       	lsl	r8,0x2
800039f8:	2f f8       	sub	r8,-1
800039fa:	a7 68       	lsl	r8,0x6
800039fc:	f2 08 00 08 	add	r8,r9,r8
80003a00:	fe f9 05 3c 	ld.w	r9,pc[1340]
80003a04:	72 0a       	ld.w	r10,r9[0x0]
80003a06:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003a0a:	72 09       	ld.w	r9,r9[0x0]
80003a0c:	f3 39 00 0f 	ld.ub	r9,r9[15]
80003a10:	a3 69       	lsl	r9,0x2
80003a12:	2f f9       	sub	r9,-1
80003a14:	a7 69       	lsl	r9,0x6
80003a16:	f4 09 00 09 	add	r9,r10,r9
80003a1a:	72 0a       	ld.w	r10,r9[0x0]
80003a1c:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003a20:	72 09       	ld.w	r9,r9[0x0]
80003a22:	f3 39 00 10 	ld.ub	r9,r9[16]
80003a26:	30 1b       	mov	r11,1
80003a28:	f6 09 09 49 	lsl	r9,r11,r9
80003a2c:	f5 e9 10 09 	or	r9,r10,r9
80003a30:	91 09       	st.w	r8[0x0],r9
		
		// Select function
		if( BIT_IS_SET( thisUARTConfig->RX_GPIO_multiplexRegisterValue, 1 )) {
80003a32:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003a36:	70 08       	ld.w	r8,r8[0x0]
80003a38:	f1 38 00 0e 	ld.ub	r8,r8[14]
80003a3c:	e2 18 00 02 	andl	r8,0x2,COH
80003a40:	c2 80       	breq	80003a90 <_ZN4UART19enableInPinSelectorEb+0x1bc>
			//SET_BIT( AVR32_GPIO.port[thisUARTConfig->RX_GPIO_port].pmr1, thisUARTConfig->RX_GPIO_pin );
			SET_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + thisUARTConfig->RX_GPIO_port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_PMR1 ), thisUARTConfig->RX_GPIO_pin );
80003a42:	fe f8 04 fa 	ld.w	r8,pc[1274]
80003a46:	70 09       	ld.w	r9,r8[0x0]
80003a48:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003a4c:	70 08       	ld.w	r8,r8[0x0]
80003a4e:	f1 38 00 0c 	ld.ub	r8,r8[12]
80003a52:	a3 78       	lsl	r8,0x3
80003a54:	2f f8       	sub	r8,-1
80003a56:	a5 78       	lsl	r8,0x5
80003a58:	f2 08 00 08 	add	r8,r9,r8
80003a5c:	fe f9 04 e0 	ld.w	r9,pc[1248]
80003a60:	72 0a       	ld.w	r10,r9[0x0]
80003a62:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003a66:	72 09       	ld.w	r9,r9[0x0]
80003a68:	f3 39 00 0c 	ld.ub	r9,r9[12]
80003a6c:	a3 79       	lsl	r9,0x3
80003a6e:	2f f9       	sub	r9,-1
80003a70:	a5 79       	lsl	r9,0x5
80003a72:	f4 09 00 09 	add	r9,r10,r9
80003a76:	72 0a       	ld.w	r10,r9[0x0]
80003a78:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003a7c:	72 09       	ld.w	r9,r9[0x0]
80003a7e:	f3 39 00 0d 	ld.ub	r9,r9[13]
80003a82:	30 1b       	mov	r11,1
80003a84:	f6 09 09 49 	lsl	r9,r11,r9
80003a88:	f5 e9 10 09 	or	r9,r10,r9
80003a8c:	91 09       	st.w	r8[0x0],r9
80003a8e:	c2 88       	rjmp	80003ade <_ZN4UART19enableInPinSelectorEb+0x20a>
		} else {
			//CLEAR_BIT( AVR32_GPIO.port[thisUARTConfig->RX_GPIO_port].pmr1, thisUARTConfig->RX_GPIO_pin );
			CLEAR_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + thisUARTConfig->RX_GPIO_port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_PMR1 ), thisUARTConfig->RX_GPIO_pin );
80003a90:	fe f8 04 ac 	ld.w	r8,pc[1196]
80003a94:	70 09       	ld.w	r9,r8[0x0]
80003a96:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003a9a:	70 08       	ld.w	r8,r8[0x0]
80003a9c:	f1 38 00 0c 	ld.ub	r8,r8[12]
80003aa0:	a3 78       	lsl	r8,0x3
80003aa2:	2f f8       	sub	r8,-1
80003aa4:	a5 78       	lsl	r8,0x5
80003aa6:	f2 08 00 08 	add	r8,r9,r8
80003aaa:	fe f9 04 92 	ld.w	r9,pc[1170]
80003aae:	72 0a       	ld.w	r10,r9[0x0]
80003ab0:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003ab4:	72 09       	ld.w	r9,r9[0x0]
80003ab6:	f3 39 00 0c 	ld.ub	r9,r9[12]
80003aba:	a3 79       	lsl	r9,0x3
80003abc:	2f f9       	sub	r9,-1
80003abe:	a5 79       	lsl	r9,0x5
80003ac0:	f4 09 00 09 	add	r9,r10,r9
80003ac4:	72 0a       	ld.w	r10,r9[0x0]
80003ac6:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003aca:	72 09       	ld.w	r9,r9[0x0]
80003acc:	f3 39 00 0d 	ld.ub	r9,r9[13]
80003ad0:	30 1b       	mov	r11,1
80003ad2:	f6 09 09 49 	lsl	r9,r11,r9
80003ad6:	5c d9       	com	r9
80003ad8:	f5 e9 00 09 	and	r9,r10,r9
80003adc:	91 09       	st.w	r8[0x0],r9
		}
		
		// Select function
		if( BIT_IS_SET( thisUARTConfig->RX_GPIO_multiplexRegisterValue, 0 )) {
80003ade:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003ae2:	70 08       	ld.w	r8,r8[0x0]
80003ae4:	f1 38 00 0e 	ld.ub	r8,r8[14]
80003ae8:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80003aec:	5c 58       	castu.b	r8
80003aee:	c2 80       	breq	80003b3e <_ZN4UART19enableInPinSelectorEb+0x26a>
			//SET_BIT( AVR32_GPIO.port[thisUARTConfig->RX_GPIO_port].pmr0, thisUARTConfig->RX_GPIO_pin );
			SET_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + thisUARTConfig->RX_GPIO_port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_PMR0 ), thisUARTConfig->RX_GPIO_pin );
80003af0:	fe f8 04 4c 	ld.w	r8,pc[1100]
80003af4:	70 09       	ld.w	r9,r8[0x0]
80003af6:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003afa:	70 08       	ld.w	r8,r8[0x0]
80003afc:	f1 38 00 0c 	ld.ub	r8,r8[12]
80003b00:	a5 68       	lsl	r8,0x4
80003b02:	2f f8       	sub	r8,-1
80003b04:	a5 68       	lsl	r8,0x4
80003b06:	f2 08 00 08 	add	r8,r9,r8
80003b0a:	fe f9 04 32 	ld.w	r9,pc[1074]
80003b0e:	72 0a       	ld.w	r10,r9[0x0]
80003b10:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003b14:	72 09       	ld.w	r9,r9[0x0]
80003b16:	f3 39 00 0c 	ld.ub	r9,r9[12]
80003b1a:	a5 69       	lsl	r9,0x4
80003b1c:	2f f9       	sub	r9,-1
80003b1e:	a5 69       	lsl	r9,0x4
80003b20:	f4 09 00 09 	add	r9,r10,r9
80003b24:	72 0a       	ld.w	r10,r9[0x0]
80003b26:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003b2a:	72 09       	ld.w	r9,r9[0x0]
80003b2c:	f3 39 00 0d 	ld.ub	r9,r9[13]
80003b30:	30 1b       	mov	r11,1
80003b32:	f6 09 09 49 	lsl	r9,r11,r9
80003b36:	f5 e9 10 09 	or	r9,r10,r9
80003b3a:	91 09       	st.w	r8[0x0],r9
80003b3c:	c2 88       	rjmp	80003b8c <_ZN4UART19enableInPinSelectorEb+0x2b8>
		} else {
			//CLEAR_BIT( AVR32_GPIO.port[thisUARTConfig->RX_GPIO_port].pmr0, thisUARTConfig->RX_GPIO_pin );
			CLEAR_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + thisUARTConfig->RX_GPIO_port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_PMR0 ), thisUARTConfig->RX_GPIO_pin );
80003b3e:	fe f8 03 fe 	ld.w	r8,pc[1022]
80003b42:	70 09       	ld.w	r9,r8[0x0]
80003b44:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003b48:	70 08       	ld.w	r8,r8[0x0]
80003b4a:	f1 38 00 0c 	ld.ub	r8,r8[12]
80003b4e:	a5 68       	lsl	r8,0x4
80003b50:	2f f8       	sub	r8,-1
80003b52:	a5 68       	lsl	r8,0x4
80003b54:	f2 08 00 08 	add	r8,r9,r8
80003b58:	fe f9 03 e4 	ld.w	r9,pc[996]
80003b5c:	72 0a       	ld.w	r10,r9[0x0]
80003b5e:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003b62:	72 09       	ld.w	r9,r9[0x0]
80003b64:	f3 39 00 0c 	ld.ub	r9,r9[12]
80003b68:	a5 69       	lsl	r9,0x4
80003b6a:	2f f9       	sub	r9,-1
80003b6c:	a5 69       	lsl	r9,0x4
80003b6e:	f4 09 00 09 	add	r9,r10,r9
80003b72:	72 0a       	ld.w	r10,r9[0x0]
80003b74:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003b78:	72 09       	ld.w	r9,r9[0x0]
80003b7a:	f3 39 00 0d 	ld.ub	r9,r9[13]
80003b7e:	30 1b       	mov	r11,1
80003b80:	f6 09 09 49 	lsl	r9,r11,r9
80003b84:	5c d9       	com	r9
80003b86:	f5 e9 00 09 	and	r9,r10,r9
80003b8a:	91 09       	st.w	r8[0x0],r9
		}
	
		// Select function
		if( BIT_IS_SET( thisUARTConfig->TX_GPIO_multiplexRegisterValue, 1 )) {
80003b8c:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003b90:	70 08       	ld.w	r8,r8[0x0]
80003b92:	f1 38 00 11 	ld.ub	r8,r8[17]
80003b96:	e2 18 00 02 	andl	r8,0x2,COH
80003b9a:	c2 80       	breq	80003bea <_ZN4UART19enableInPinSelectorEb+0x316>
			//SET_BIT( AVR32_GPIO.port[thisUARTConfig->TX_GPIO_port].pmr1, thisUARTConfig->TX_GPIO_pin );
			SET_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + thisUARTConfig->TX_GPIO_port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_PMR1 ), thisUARTConfig->TX_GPIO_pin );
80003b9c:	fe f8 03 a0 	ld.w	r8,pc[928]
80003ba0:	70 09       	ld.w	r9,r8[0x0]
80003ba2:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003ba6:	70 08       	ld.w	r8,r8[0x0]
80003ba8:	f1 38 00 0f 	ld.ub	r8,r8[15]
80003bac:	a3 78       	lsl	r8,0x3
80003bae:	2f f8       	sub	r8,-1
80003bb0:	a5 78       	lsl	r8,0x5
80003bb2:	f2 08 00 08 	add	r8,r9,r8
80003bb6:	fe f9 03 86 	ld.w	r9,pc[902]
80003bba:	72 0a       	ld.w	r10,r9[0x0]
80003bbc:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003bc0:	72 09       	ld.w	r9,r9[0x0]
80003bc2:	f3 39 00 0f 	ld.ub	r9,r9[15]
80003bc6:	a3 79       	lsl	r9,0x3
80003bc8:	2f f9       	sub	r9,-1
80003bca:	a5 79       	lsl	r9,0x5
80003bcc:	f4 09 00 09 	add	r9,r10,r9
80003bd0:	72 0a       	ld.w	r10,r9[0x0]
80003bd2:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003bd6:	72 09       	ld.w	r9,r9[0x0]
80003bd8:	f3 39 00 10 	ld.ub	r9,r9[16]
80003bdc:	30 1b       	mov	r11,1
80003bde:	f6 09 09 49 	lsl	r9,r11,r9
80003be2:	f5 e9 10 09 	or	r9,r10,r9
80003be6:	91 09       	st.w	r8[0x0],r9
80003be8:	c2 88       	rjmp	80003c38 <_ZN4UART19enableInPinSelectorEb+0x364>
		} else {
			//CLEAR_BIT( AVR32_GPIO.port[thisUARTConfig->TX_GPIO_port].pmr1, thisUARTConfig->TX_GPIO_pin );
			CLEAR_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + thisUARTConfig->TX_GPIO_port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_PMR1 ), thisUARTConfig->TX_GPIO_pin );
80003bea:	fe f8 03 52 	ld.w	r8,pc[850]
80003bee:	70 09       	ld.w	r9,r8[0x0]
80003bf0:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003bf4:	70 08       	ld.w	r8,r8[0x0]
80003bf6:	f1 38 00 0f 	ld.ub	r8,r8[15]
80003bfa:	a3 78       	lsl	r8,0x3
80003bfc:	2f f8       	sub	r8,-1
80003bfe:	a5 78       	lsl	r8,0x5
80003c00:	f2 08 00 08 	add	r8,r9,r8
80003c04:	fe f9 03 38 	ld.w	r9,pc[824]
80003c08:	72 0a       	ld.w	r10,r9[0x0]
80003c0a:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003c0e:	72 09       	ld.w	r9,r9[0x0]
80003c10:	f3 39 00 0f 	ld.ub	r9,r9[15]
80003c14:	a3 79       	lsl	r9,0x3
80003c16:	2f f9       	sub	r9,-1
80003c18:	a5 79       	lsl	r9,0x5
80003c1a:	f4 09 00 09 	add	r9,r10,r9
80003c1e:	72 0a       	ld.w	r10,r9[0x0]
80003c20:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003c24:	72 09       	ld.w	r9,r9[0x0]
80003c26:	f3 39 00 10 	ld.ub	r9,r9[16]
80003c2a:	30 1b       	mov	r11,1
80003c2c:	f6 09 09 49 	lsl	r9,r11,r9
80003c30:	5c d9       	com	r9
80003c32:	f5 e9 00 09 	and	r9,r10,r9
80003c36:	91 09       	st.w	r8[0x0],r9
		}
	
		// Select function
		if( BIT_IS_SET( thisUARTConfig->TX_GPIO_multiplexRegisterValue, 0 )) {
80003c38:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003c3c:	70 08       	ld.w	r8,r8[0x0]
80003c3e:	f1 38 00 11 	ld.ub	r8,r8[17]
80003c42:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80003c46:	5c 58       	castu.b	r8
80003c48:	c2 80       	breq	80003c98 <_ZN4UART19enableInPinSelectorEb+0x3c4>
			//SET_BIT( AVR32_GPIO.port[thisUARTConfig->TX_GPIO_port].pmr0, thisUARTConfig->TX_GPIO_pin );
			SET_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + thisUARTConfig->TX_GPIO_port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_PMR0 ), thisUARTConfig->TX_GPIO_pin );
80003c4a:	fe f8 02 f2 	ld.w	r8,pc[754]
80003c4e:	70 09       	ld.w	r9,r8[0x0]
80003c50:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003c54:	70 08       	ld.w	r8,r8[0x0]
80003c56:	f1 38 00 0f 	ld.ub	r8,r8[15]
80003c5a:	a5 68       	lsl	r8,0x4
80003c5c:	2f f8       	sub	r8,-1
80003c5e:	a5 68       	lsl	r8,0x4
80003c60:	f2 08 00 08 	add	r8,r9,r8
80003c64:	fe f9 02 d8 	ld.w	r9,pc[728]
80003c68:	72 0a       	ld.w	r10,r9[0x0]
80003c6a:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003c6e:	72 09       	ld.w	r9,r9[0x0]
80003c70:	f3 39 00 0f 	ld.ub	r9,r9[15]
80003c74:	a5 69       	lsl	r9,0x4
80003c76:	2f f9       	sub	r9,-1
80003c78:	a5 69       	lsl	r9,0x4
80003c7a:	f4 09 00 09 	add	r9,r10,r9
80003c7e:	72 0a       	ld.w	r10,r9[0x0]
80003c80:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003c84:	72 09       	ld.w	r9,r9[0x0]
80003c86:	f3 39 00 10 	ld.ub	r9,r9[16]
80003c8a:	30 1b       	mov	r11,1
80003c8c:	f6 09 09 49 	lsl	r9,r11,r9
80003c90:	f5 e9 10 09 	or	r9,r10,r9
80003c94:	91 09       	st.w	r8[0x0],r9
80003c96:	c4 e9       	rjmp	80003f32 <_ZN4UART19enableInPinSelectorEb+0x65e>
		} else {
			//CLEAR_BIT( AVR32_GPIO.port[thisUARTConfig->TX_GPIO_port].pmr0, thisUARTConfig->TX_GPIO_pin );
			CLEAR_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + thisUARTConfig->TX_GPIO_port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_PMR0 ), thisUARTConfig->TX_GPIO_pin );
80003c98:	fe f8 02 a4 	ld.w	r8,pc[676]
80003c9c:	70 09       	ld.w	r9,r8[0x0]
80003c9e:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003ca2:	70 08       	ld.w	r8,r8[0x0]
80003ca4:	f1 38 00 0f 	ld.ub	r8,r8[15]
80003ca8:	a5 68       	lsl	r8,0x4
80003caa:	2f f8       	sub	r8,-1
80003cac:	a5 68       	lsl	r8,0x4
80003cae:	f2 08 00 08 	add	r8,r9,r8
80003cb2:	fe f9 02 8a 	ld.w	r9,pc[650]
80003cb6:	72 0a       	ld.w	r10,r9[0x0]
80003cb8:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003cbc:	72 09       	ld.w	r9,r9[0x0]
80003cbe:	f3 39 00 0f 	ld.ub	r9,r9[15]
80003cc2:	a5 69       	lsl	r9,0x4
80003cc4:	2f f9       	sub	r9,-1
80003cc6:	a5 69       	lsl	r9,0x4
80003cc8:	f4 09 00 09 	add	r9,r10,r9
80003ccc:	72 0a       	ld.w	r10,r9[0x0]
80003cce:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003cd2:	72 09       	ld.w	r9,r9[0x0]
80003cd4:	f3 39 00 10 	ld.ub	r9,r9[16]
80003cd8:	30 1b       	mov	r11,1
80003cda:	f6 09 09 49 	lsl	r9,r11,r9
80003cde:	5c d9       	com	r9
80003ce0:	f5 e9 00 09 	and	r9,r10,r9
80003ce4:	91 09       	st.w	r8[0x0],r9
80003ce6:	c2 69       	rjmp	80003f32 <_ZN4UART19enableInPinSelectorEb+0x65e>
		}
	} else {
		// Handle Pin Control to GPIO
		//SET_BIT( AVR32_GPIO.port[thisUARTConfig->RX_GPIO_port].gper, thisUARTConfig->RX_GPIO_pin );
		SET_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + thisUARTConfig->RX_GPIO_port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_GPER ), thisUARTConfig->RX_GPIO_pin );
80003ce8:	fe f8 02 54 	ld.w	r8,pc[596]
80003cec:	70 08       	ld.w	r8,r8[0x0]
80003cee:	10 99       	mov	r9,r8
80003cf0:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003cf4:	70 08       	ld.w	r8,r8[0x0]
80003cf6:	f1 38 00 0c 	ld.ub	r8,r8[12]
80003cfa:	a9 68       	lsl	r8,0x8
80003cfc:	f2 08 00 08 	add	r8,r9,r8
80003d00:	fe f9 02 3c 	ld.w	r9,pc[572]
80003d04:	72 09       	ld.w	r9,r9[0x0]
80003d06:	12 9a       	mov	r10,r9
80003d08:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003d0c:	72 09       	ld.w	r9,r9[0x0]
80003d0e:	f3 39 00 0c 	ld.ub	r9,r9[12]
80003d12:	a9 69       	lsl	r9,0x8
80003d14:	f4 09 00 09 	add	r9,r10,r9
80003d18:	72 0a       	ld.w	r10,r9[0x0]
80003d1a:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003d1e:	72 09       	ld.w	r9,r9[0x0]
80003d20:	f3 39 00 0d 	ld.ub	r9,r9[13]
80003d24:	30 1b       	mov	r11,1
80003d26:	f6 09 09 49 	lsl	r9,r11,r9
80003d2a:	f5 e9 10 09 	or	r9,r10,r9
80003d2e:	91 09       	st.w	r8[0x0],r9
		//SET_BIT( AVR32_GPIO.port[thisUARTConfig->TX_GPIO_port].gper, thisUARTConfig->TX_GPIO_pin );
		SET_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + thisUARTConfig->TX_GPIO_port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_GPER ), thisUARTConfig->TX_GPIO_pin );
80003d30:	fe f8 02 0c 	ld.w	r8,pc[524]
80003d34:	70 08       	ld.w	r8,r8[0x0]
80003d36:	10 99       	mov	r9,r8
80003d38:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003d3c:	70 08       	ld.w	r8,r8[0x0]
80003d3e:	f1 38 00 0f 	ld.ub	r8,r8[15]
80003d42:	a9 68       	lsl	r8,0x8
80003d44:	f2 08 00 08 	add	r8,r9,r8
80003d48:	4f d9       	lddpc	r9,80003f3c <_ZN4UART19enableInPinSelectorEb+0x668>
80003d4a:	72 09       	ld.w	r9,r9[0x0]
80003d4c:	12 9a       	mov	r10,r9
80003d4e:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003d52:	72 09       	ld.w	r9,r9[0x0]
80003d54:	f3 39 00 0f 	ld.ub	r9,r9[15]
80003d58:	a9 69       	lsl	r9,0x8
80003d5a:	f4 09 00 09 	add	r9,r10,r9
80003d5e:	72 0a       	ld.w	r10,r9[0x0]
80003d60:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003d64:	72 09       	ld.w	r9,r9[0x0]
80003d66:	f3 39 00 10 	ld.ub	r9,r9[16]
80003d6a:	30 1b       	mov	r11,1
80003d6c:	f6 09 09 49 	lsl	r9,r11,r9
80003d70:	f5 e9 10 09 	or	r9,r10,r9
80003d74:	91 09       	st.w	r8[0x0],r9
		
		// Pin is not driven anymore
		//CLEAR_BIT( AVR32_GPIO.port[thisUARTConfig->RX_GPIO_port].oder, thisUARTConfig->RX_GPIO_pin );
		CLEAR_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + thisUARTConfig->RX_GPIO_port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_ODER ), thisUARTConfig->RX_GPIO_pin );
80003d76:	4f 28       	lddpc	r8,80003f3c <_ZN4UART19enableInPinSelectorEb+0x668>
80003d78:	70 09       	ld.w	r9,r8[0x0]
80003d7a:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003d7e:	70 08       	ld.w	r8,r8[0x0]
80003d80:	f1 38 00 0c 	ld.ub	r8,r8[12]
80003d84:	a3 68       	lsl	r8,0x2
80003d86:	2f f8       	sub	r8,-1
80003d88:	a7 68       	lsl	r8,0x6
80003d8a:	f2 08 00 08 	add	r8,r9,r8
80003d8e:	4e c9       	lddpc	r9,80003f3c <_ZN4UART19enableInPinSelectorEb+0x668>
80003d90:	72 0a       	ld.w	r10,r9[0x0]
80003d92:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003d96:	72 09       	ld.w	r9,r9[0x0]
80003d98:	f3 39 00 0c 	ld.ub	r9,r9[12]
80003d9c:	a3 69       	lsl	r9,0x2
80003d9e:	2f f9       	sub	r9,-1
80003da0:	a7 69       	lsl	r9,0x6
80003da2:	f4 09 00 09 	add	r9,r10,r9
80003da6:	72 0a       	ld.w	r10,r9[0x0]
80003da8:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003dac:	72 09       	ld.w	r9,r9[0x0]
80003dae:	f3 39 00 0d 	ld.ub	r9,r9[13]
80003db2:	30 1b       	mov	r11,1
80003db4:	f6 09 09 49 	lsl	r9,r11,r9
80003db8:	5c d9       	com	r9
80003dba:	f5 e9 00 09 	and	r9,r10,r9
80003dbe:	91 09       	st.w	r8[0x0],r9
		//CLEAR_BIT( AVR32_GPIO.port[thisUARTConfig->TX_GPIO_port].oder, thisUARTConfig->TX_GPIO_pin );
		CLEAR_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + thisUARTConfig->TX_GPIO_port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_ODER ), thisUARTConfig->TX_GPIO_pin );
80003dc0:	4d f8       	lddpc	r8,80003f3c <_ZN4UART19enableInPinSelectorEb+0x668>
80003dc2:	70 09       	ld.w	r9,r8[0x0]
80003dc4:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003dc8:	70 08       	ld.w	r8,r8[0x0]
80003dca:	f1 38 00 0f 	ld.ub	r8,r8[15]
80003dce:	a3 68       	lsl	r8,0x2
80003dd0:	2f f8       	sub	r8,-1
80003dd2:	a7 68       	lsl	r8,0x6
80003dd4:	f2 08 00 08 	add	r8,r9,r8
80003dd8:	4d 99       	lddpc	r9,80003f3c <_ZN4UART19enableInPinSelectorEb+0x668>
80003dda:	72 0a       	ld.w	r10,r9[0x0]
80003ddc:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003de0:	72 09       	ld.w	r9,r9[0x0]
80003de2:	f3 39 00 0f 	ld.ub	r9,r9[15]
80003de6:	a3 69       	lsl	r9,0x2
80003de8:	2f f9       	sub	r9,-1
80003dea:	a7 69       	lsl	r9,0x6
80003dec:	f4 09 00 09 	add	r9,r10,r9
80003df0:	72 0a       	ld.w	r10,r9[0x0]
80003df2:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003df6:	72 09       	ld.w	r9,r9[0x0]
80003df8:	f3 39 00 10 	ld.ub	r9,r9[16]
80003dfc:	30 1b       	mov	r11,1
80003dfe:	f6 09 09 49 	lsl	r9,r11,r9
80003e02:	5c d9       	com	r9
80003e04:	f5 e9 00 09 	and	r9,r10,r9
80003e08:	91 09       	st.w	r8[0x0],r9
		
		// Reset Mutiplex Register Values
		//CLEAR_BIT( AVR32_GPIO.port[thisUARTConfig->RX_GPIO_port].pmr1, thisUARTConfig->RX_GPIO_pin );
		CLEAR_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + thisUARTConfig->RX_GPIO_port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_PMR1 ), thisUARTConfig->RX_GPIO_pin );
80003e0a:	4c d8       	lddpc	r8,80003f3c <_ZN4UART19enableInPinSelectorEb+0x668>
80003e0c:	70 09       	ld.w	r9,r8[0x0]
80003e0e:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003e12:	70 08       	ld.w	r8,r8[0x0]
80003e14:	f1 38 00 0c 	ld.ub	r8,r8[12]
80003e18:	a3 78       	lsl	r8,0x3
80003e1a:	2f f8       	sub	r8,-1
80003e1c:	a5 78       	lsl	r8,0x5
80003e1e:	f2 08 00 08 	add	r8,r9,r8
80003e22:	4c 79       	lddpc	r9,80003f3c <_ZN4UART19enableInPinSelectorEb+0x668>
80003e24:	72 0a       	ld.w	r10,r9[0x0]
80003e26:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003e2a:	72 09       	ld.w	r9,r9[0x0]
80003e2c:	f3 39 00 0c 	ld.ub	r9,r9[12]
80003e30:	a3 79       	lsl	r9,0x3
80003e32:	2f f9       	sub	r9,-1
80003e34:	a5 79       	lsl	r9,0x5
80003e36:	f4 09 00 09 	add	r9,r10,r9
80003e3a:	72 0a       	ld.w	r10,r9[0x0]
80003e3c:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003e40:	72 09       	ld.w	r9,r9[0x0]
80003e42:	f3 39 00 0d 	ld.ub	r9,r9[13]
80003e46:	30 1b       	mov	r11,1
80003e48:	f6 09 09 49 	lsl	r9,r11,r9
80003e4c:	5c d9       	com	r9
80003e4e:	f5 e9 00 09 	and	r9,r10,r9
80003e52:	91 09       	st.w	r8[0x0],r9
		//CLEAR_BIT( AVR32_GPIO.port[thisUARTConfig->RX_GPIO_port].pmr0, thisUARTConfig->RX_GPIO_pin );
		CLEAR_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + thisUARTConfig->RX_GPIO_port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_PMR0 ), thisUARTConfig->RX_GPIO_pin );
80003e54:	4b a8       	lddpc	r8,80003f3c <_ZN4UART19enableInPinSelectorEb+0x668>
80003e56:	70 09       	ld.w	r9,r8[0x0]
80003e58:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003e5c:	70 08       	ld.w	r8,r8[0x0]
80003e5e:	f1 38 00 0c 	ld.ub	r8,r8[12]
80003e62:	a5 68       	lsl	r8,0x4
80003e64:	2f f8       	sub	r8,-1
80003e66:	a5 68       	lsl	r8,0x4
80003e68:	f2 08 00 08 	add	r8,r9,r8
80003e6c:	4b 49       	lddpc	r9,80003f3c <_ZN4UART19enableInPinSelectorEb+0x668>
80003e6e:	72 0a       	ld.w	r10,r9[0x0]
80003e70:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003e74:	72 09       	ld.w	r9,r9[0x0]
80003e76:	f3 39 00 0c 	ld.ub	r9,r9[12]
80003e7a:	a5 69       	lsl	r9,0x4
80003e7c:	2f f9       	sub	r9,-1
80003e7e:	a5 69       	lsl	r9,0x4
80003e80:	f4 09 00 09 	add	r9,r10,r9
80003e84:	72 0a       	ld.w	r10,r9[0x0]
80003e86:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003e8a:	72 09       	ld.w	r9,r9[0x0]
80003e8c:	f3 39 00 0d 	ld.ub	r9,r9[13]
80003e90:	30 1b       	mov	r11,1
80003e92:	f6 09 09 49 	lsl	r9,r11,r9
80003e96:	5c d9       	com	r9
80003e98:	f5 e9 00 09 	and	r9,r10,r9
80003e9c:	91 09       	st.w	r8[0x0],r9
		//CLEAR_BIT( AVR32_GPIO.port[thisUARTConfig->TX_GPIO_port].pmr1, thisUARTConfig->TX_GPIO_pin );
		CLEAR_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + thisUARTConfig->TX_GPIO_port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_PMR1 ), thisUARTConfig->TX_GPIO_pin );
80003e9e:	4a 88       	lddpc	r8,80003f3c <_ZN4UART19enableInPinSelectorEb+0x668>
80003ea0:	70 09       	ld.w	r9,r8[0x0]
80003ea2:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003ea6:	70 08       	ld.w	r8,r8[0x0]
80003ea8:	f1 38 00 0f 	ld.ub	r8,r8[15]
80003eac:	a3 78       	lsl	r8,0x3
80003eae:	2f f8       	sub	r8,-1
80003eb0:	a5 78       	lsl	r8,0x5
80003eb2:	f2 08 00 08 	add	r8,r9,r8
80003eb6:	4a 29       	lddpc	r9,80003f3c <_ZN4UART19enableInPinSelectorEb+0x668>
80003eb8:	72 0a       	ld.w	r10,r9[0x0]
80003eba:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003ebe:	72 09       	ld.w	r9,r9[0x0]
80003ec0:	f3 39 00 0f 	ld.ub	r9,r9[15]
80003ec4:	a3 79       	lsl	r9,0x3
80003ec6:	2f f9       	sub	r9,-1
80003ec8:	a5 79       	lsl	r9,0x5
80003eca:	f4 09 00 09 	add	r9,r10,r9
80003ece:	72 0a       	ld.w	r10,r9[0x0]
80003ed0:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003ed4:	72 09       	ld.w	r9,r9[0x0]
80003ed6:	f3 39 00 10 	ld.ub	r9,r9[16]
80003eda:	30 1b       	mov	r11,1
80003edc:	f6 09 09 49 	lsl	r9,r11,r9
80003ee0:	5c d9       	com	r9
80003ee2:	f5 e9 00 09 	and	r9,r10,r9
80003ee6:	91 09       	st.w	r8[0x0],r9
		//CLEAR_BIT( AVR32_GPIO.port[thisUARTConfig->TX_GPIO_port].pmr0, thisUARTConfig->TX_GPIO_pin );
		CLEAR_BIT( *( volatile unsigned int* ) ( MYAVR32_GPIO_ADDRESS + thisUARTConfig->TX_GPIO_port * MYAVR32_GPIO_SIZE_PORT + MYAVR32_GPIO_OFFSET_PMR0 ), thisUARTConfig->TX_GPIO_pin );
80003ee8:	49 58       	lddpc	r8,80003f3c <_ZN4UART19enableInPinSelectorEb+0x668>
80003eea:	70 09       	ld.w	r9,r8[0x0]
80003eec:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003ef0:	70 08       	ld.w	r8,r8[0x0]
80003ef2:	f1 38 00 0f 	ld.ub	r8,r8[15]
80003ef6:	a5 68       	lsl	r8,0x4
80003ef8:	2f f8       	sub	r8,-1
80003efa:	a5 68       	lsl	r8,0x4
80003efc:	f2 08 00 08 	add	r8,r9,r8
80003f00:	48 f9       	lddpc	r9,80003f3c <_ZN4UART19enableInPinSelectorEb+0x668>
80003f02:	72 0a       	ld.w	r10,r9[0x0]
80003f04:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003f08:	72 09       	ld.w	r9,r9[0x0]
80003f0a:	f3 39 00 0f 	ld.ub	r9,r9[15]
80003f0e:	a5 69       	lsl	r9,0x4
80003f10:	2f f9       	sub	r9,-1
80003f12:	a5 69       	lsl	r9,0x4
80003f14:	f4 09 00 09 	add	r9,r10,r9
80003f18:	72 0a       	ld.w	r10,r9[0x0]
80003f1a:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003f1e:	72 09       	ld.w	r9,r9[0x0]
80003f20:	f3 39 00 10 	ld.ub	r9,r9[16]
80003f24:	30 1b       	mov	r11,1
80003f26:	f6 09 09 49 	lsl	r9,r11,r9
80003f2a:	5c d9       	com	r9
80003f2c:	f5 e9 00 09 	and	r9,r10,r9
80003f30:	91 09       	st.w	r8[0x0],r9
	}
	
	return true;
80003f32:	30 18       	mov	r8,1
}
80003f34:	10 9c       	mov	r12,r8
80003f36:	2f ed       	sub	sp,-8
80003f38:	e3 cd 80 80 	ldm	sp++,r7,pc
80003f3c:	00 00       	add	r0,r0
80003f3e:	01 08       	ld.w	r8,r0++

80003f40 <_ZN4UART17isSendBufferReadyEv>:
	return *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_RHR ) & 0x1FF;
}


// Returns true if sendChar can be used.
bool UART::isSendBufferReady() {
80003f40:	eb cd 40 80 	pushm	r7,lr
80003f44:	1a 97       	mov	r7,sp
80003f46:	20 1d       	sub	sp,4
80003f48:	ef 4c ff fc 	st.w	r7[-4],r12
	//return thisUARTConfig->usart->CSR.txrdy;
	return BIT_IS_SET( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_CSR ), 1 );
80003f4c:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003f50:	70 08       	ld.w	r8,r8[0x0]
80003f52:	70 08       	ld.w	r8,r8[0x0]
80003f54:	2e c8       	sub	r8,-20
80003f56:	70 08       	ld.w	r8,r8[0x0]
80003f58:	e2 18 00 02 	andl	r8,0x2,COH
80003f5c:	5f 18       	srne	r8
80003f5e:	5c 58       	castu.b	r8
}
80003f60:	10 9c       	mov	r12,r8
80003f62:	2f fd       	sub	sp,-4
80003f64:	e3 cd 80 80 	ldm	sp++,r7,pc

80003f68 <_ZN4UART8sendCharEm>:


// Sends data. Blocks until data can be sent.
void UART::sendChar( unsigned long data ) {
80003f68:	eb cd 40 80 	pushm	r7,lr
80003f6c:	1a 97       	mov	r7,sp
80003f6e:	20 2d       	sub	sp,8
80003f70:	ef 4c ff fc 	st.w	r7[-4],r12
80003f74:	ef 4b ff f8 	st.w	r7[-8],r11
	while( !isSendBufferReady());
80003f78:	ee fc ff fc 	ld.w	r12,r7[-4]
80003f7c:	f0 1f 00 15 	mcall	80003fd0 <_ZN4UART8sendCharEm+0x68>
80003f80:	18 98       	mov	r8,r12
80003f82:	ec 18 00 01 	eorl	r8,0x1
80003f86:	5c 58       	castu.b	r8
80003f88:	cf 81       	brne	80003f78 <_ZN4UART8sendCharEm+0x10>
	
	//thisUARTConfig->usart->THR.txchr = data;
	CLEAR_BITS( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_THR ), 0x1FF );
80003f8a:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003f8e:	70 08       	ld.w	r8,r8[0x0]
80003f90:	70 08       	ld.w	r8,r8[0x0]
80003f92:	2e 48       	sub	r8,-28
80003f94:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003f98:	72 09       	ld.w	r9,r9[0x0]
80003f9a:	72 09       	ld.w	r9,r9[0x0]
80003f9c:	2e 49       	sub	r9,-28
80003f9e:	72 09       	ld.w	r9,r9[0x0]
80003fa0:	e0 19 fe 00 	andl	r9,0xfe00
80003fa4:	91 09       	st.w	r8[0x0],r9
	SET_BITS( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_THR ), data & 0x1FF );
80003fa6:	ee f8 ff fc 	ld.w	r8,r7[-4]
80003faa:	70 08       	ld.w	r8,r8[0x0]
80003fac:	70 08       	ld.w	r8,r8[0x0]
80003fae:	2e 48       	sub	r8,-28
80003fb0:	ee f9 ff fc 	ld.w	r9,r7[-4]
80003fb4:	72 09       	ld.w	r9,r9[0x0]
80003fb6:	72 09       	ld.w	r9,r9[0x0]
80003fb8:	2e 49       	sub	r9,-28
80003fba:	72 0a       	ld.w	r10,r9[0x0]
80003fbc:	ee f9 ff f8 	ld.w	r9,r7[-8]
80003fc0:	f3 d9 c0 09 	bfextu	r9,r9,0x0,0x9
80003fc4:	f5 e9 10 09 	or	r9,r10,r9
80003fc8:	91 09       	st.w	r8[0x0],r9
}
80003fca:	2f ed       	sub	sp,-8
80003fcc:	e3 cd 80 80 	ldm	sp++,r7,pc
80003fd0:	80 00       	ld.sh	r0,r0[0x0]
80003fd2:	3f 40       	mov	r0,-12

80003fd4 <_ZN4UART10sendStringEPKc>:


// Sends text. Blocks until data can be sent.
void UART::sendString( const char* text ) {
80003fd4:	eb cd 40 80 	pushm	r7,lr
80003fd8:	1a 97       	mov	r7,sp
80003fda:	20 2d       	sub	sp,8
80003fdc:	ef 4c ff fc 	st.w	r7[-4],r12
80003fe0:	ef 4b ff f8 	st.w	r7[-8],r11
	while( *text != 0 ) {
80003fe4:	c0 e8       	rjmp	80004000 <_ZN4UART10sendStringEPKc+0x2c>
		sendChar( *text );
80003fe6:	ee f8 ff f8 	ld.w	r8,r7[-8]
80003fea:	11 88       	ld.ub	r8,r8[0x0]
80003fec:	10 9b       	mov	r11,r8
80003fee:	ee fc ff fc 	ld.w	r12,r7[-4]
80003ff2:	f0 1f 00 0a 	mcall	80004018 <_ZN4UART10sendStringEPKc+0x44>
		text++;
80003ff6:	ee f8 ff f8 	ld.w	r8,r7[-8]
80003ffa:	2f f8       	sub	r8,-1
80003ffc:	ef 48 ff f8 	st.w	r7[-8],r8
}


// Sends text. Blocks until data can be sent.
void UART::sendString( const char* text ) {
	while( *text != 0 ) {
80004000:	ee f8 ff f8 	ld.w	r8,r7[-8]
80004004:	11 89       	ld.ub	r9,r8[0x0]
80004006:	30 08       	mov	r8,0
80004008:	f0 09 18 00 	cp.b	r9,r8
8000400c:	5f 18       	srne	r8
8000400e:	5c 58       	castu.b	r8
80004010:	ce b1       	brne	80003fe6 <_ZN4UART10sendStringEPKc+0x12>
		sendChar( *text );
		text++;
	}
}
80004012:	2f ed       	sub	sp,-8
80004014:	e3 cd 80 80 	ldm	sp++,r7,pc
80004018:	80 00       	ld.sh	r0,r0[0x0]
8000401a:	3f 68       	mov	r8,-10

8000401c <_ZN4UART10sendNumberEl>:


// Converts number to ascii text and sends it. Blocks until data can be sent.
void UART::sendNumber( long number ) {
8000401c:	eb cd 40 80 	pushm	r7,lr
80004020:	1a 97       	mov	r7,sp
80004022:	20 2d       	sub	sp,8
80004024:	ef 4c ff fc 	st.w	r7[-4],r12
80004028:	ef 4b ff f8 	st.w	r7[-8],r11
	if( number < 0 ) {
8000402c:	ee f8 ff f8 	ld.w	r8,r7[-8]
80004030:	58 08       	cp.w	r8,0
80004032:	c0 f4       	brge	80004050 <_ZN4UART10sendNumberEl+0x34>
		sendChar( '-' );
80004034:	32 db       	mov	r11,45
80004036:	ee fc ff fc 	ld.w	r12,r7[-4]
8000403a:	f0 1f 00 0b 	mcall	80004064 <_ZN4UART10sendNumberEl+0x48>
		sendNumber(( unsigned long ) (( -1 ) * number ));
8000403e:	ee f8 ff f8 	ld.w	r8,r7[-8]
80004042:	5c 38       	neg	r8
80004044:	10 9b       	mov	r11,r8
80004046:	ee fc ff fc 	ld.w	r12,r7[-4]
8000404a:	f0 1f 00 08 	mcall	80004068 <_ZN4UART10sendNumberEl+0x4c>
8000404e:	c0 88       	rjmp	8000405e <_ZN4UART10sendNumberEl+0x42>
	} else {
		sendNumber(( unsigned long ) number );
80004050:	ee f8 ff f8 	ld.w	r8,r7[-8]
80004054:	10 9b       	mov	r11,r8
80004056:	ee fc ff fc 	ld.w	r12,r7[-4]
8000405a:	f0 1f 00 04 	mcall	80004068 <_ZN4UART10sendNumberEl+0x4c>
	}	
}
8000405e:	2f ed       	sub	sp,-8
80004060:	e3 cd 80 80 	ldm	sp++,r7,pc
80004064:	80 00       	ld.sh	r0,r0[0x0]
80004066:	3f 68       	mov	r8,-10
80004068:	80 00       	ld.sh	r0,r0[0x0]
8000406a:	40 6c       	lddsp	r12,sp[0x18]

8000406c <_ZN4UART10sendNumberEm>:


// Converts number to ascii text and sends it. Blocks until data can be sent.
void UART::sendNumber( unsigned long number ) {
8000406c:	eb cd 40 80 	pushm	r7,lr
80004070:	1a 97       	mov	r7,sp
80004072:	20 7d       	sub	sp,28
80004074:	ef 4c ff e8 	st.w	r7[-24],r12
80004078:	ef 4b ff e4 	st.w	r7[-28],r11
	if( number == 0 ) {
8000407c:	ee f8 ff e4 	ld.w	r8,r7[-28]
80004080:	58 08       	cp.w	r8,0
80004082:	c0 71       	brne	80004090 <_ZN4UART10sendNumberEm+0x24>
		sendChar( '0' );
80004084:	33 0b       	mov	r11,48
80004086:	ee fc ff e8 	ld.w	r12,r7[-24]
8000408a:	f0 1f 00 2b 	mcall	80004134 <_ZN4UART10sendNumberEm+0xc8>
		return;
8000408e:	c5 08       	rjmp	8000412e <_ZN4UART10sendNumberEm+0xc2>
	}
	
	char buffer[10]; // max value of long is 4.294.967.295 -> 10 digits
	unsigned long tmpNumber = number;
80004090:	ee f8 ff e4 	ld.w	r8,r7[-28]
80004094:	ef 48 ff f8 	st.w	r7[-8],r8
	unsigned char i = 0;
80004098:	30 08       	mov	r8,0
8000409a:	ef 68 ff ff 	st.b	r7[-1],r8
	
	do {
		buffer[i] = '0' + tmpNumber % 10; // store least significant digit as ascii char
8000409e:	ef 3b ff ff 	ld.ub	r11,r7[-1]
800040a2:	ee fa ff f8 	ld.w	r10,r7[-8]
800040a6:	e0 68 cc cd 	mov	r8,52429
800040aa:	ea 18 cc cc 	orh	r8,0xcccc
800040ae:	f4 08 06 48 	mulu.d	r8,r10,r8
800040b2:	a3 99       	lsr	r9,0x3
800040b4:	12 98       	mov	r8,r9
800040b6:	a3 68       	lsl	r8,0x2
800040b8:	12 08       	add	r8,r9
800040ba:	a1 78       	lsl	r8,0x1
800040bc:	f4 08 01 09 	sub	r9,r10,r8
800040c0:	f1 d9 c0 08 	bfextu	r8,r9,0x0,0x8
800040c4:	2d 08       	sub	r8,-48
800040c6:	5c 58       	castu.b	r8
800040c8:	ee 0b 00 09 	add	r9,r7,r11
800040cc:	f3 68 ff ec 	st.b	r9[-20],r8
		i++;
800040d0:	ef 38 ff ff 	ld.ub	r8,r7[-1]
800040d4:	2f f8       	sub	r8,-1
800040d6:	ef 68 ff ff 	st.b	r7[-1],r8
		tmpNumber /= 10; // remove least significant digit
800040da:	ee f9 ff f8 	ld.w	r9,r7[-8]
800040de:	e0 68 cc cd 	mov	r8,52429
800040e2:	ea 18 cc cc 	orh	r8,0xcccc
800040e6:	f2 08 06 48 	mulu.d	r8,r9,r8
800040ea:	f2 08 16 03 	lsr	r8,r9,0x3
800040ee:	ef 48 ff f8 	st.w	r7[-8],r8
	
	char buffer[10]; // max value of long is 4.294.967.295 -> 10 digits
	unsigned long tmpNumber = number;
	unsigned char i = 0;
	
	do {
800040f2:	ee f8 ff f8 	ld.w	r8,r7[-8]
800040f6:	58 08       	cp.w	r8,0
800040f8:	5f 18       	srne	r8
800040fa:	5c 58       	castu.b	r8
800040fc:	cd 11       	brne	8000409e <_ZN4UART10sendNumberEm+0x32>
		tmpNumber /= 10; // remove least significant digit
	} while( tmpNumber > 0 );
	
	// send buffer ( buffer contains number as ascii, but reversed: number: 123 --> buffer: 321 )
	do {
		i--;
800040fe:	ef 38 ff ff 	ld.ub	r8,r7[-1]
80004102:	20 18       	sub	r8,1
80004104:	ef 68 ff ff 	st.b	r7[-1],r8
		sendChar( buffer[i] );
80004108:	ef 38 ff ff 	ld.ub	r8,r7[-1]
8000410c:	ee 08 00 08 	add	r8,r7,r8
80004110:	f1 38 ff ec 	ld.ub	r8,r8[-20]
80004114:	10 9b       	mov	r11,r8
80004116:	ee fc ff e8 	ld.w	r12,r7[-24]
8000411a:	f0 1f 00 07 	mcall	80004134 <_ZN4UART10sendNumberEm+0xc8>
		i++;
		tmpNumber /= 10; // remove least significant digit
	} while( tmpNumber > 0 );
	
	// send buffer ( buffer contains number as ascii, but reversed: number: 123 --> buffer: 321 )
	do {
8000411e:	ef 39 ff ff 	ld.ub	r9,r7[-1]
80004122:	30 08       	mov	r8,0
80004124:	f0 09 18 00 	cp.b	r9,r8
80004128:	5f 18       	srne	r8
8000412a:	5c 58       	castu.b	r8
8000412c:	ce 91       	brne	800040fe <_ZN4UART10sendNumberEm+0x92>
		i--;
		sendChar( buffer[i] );
	} while( i != 0 );
}
8000412e:	2f 9d       	sub	sp,-28
80004130:	e3 cd 80 80 	ldm	sp++,r7,pc
80004134:	80 00       	ld.sh	r0,r0[0x0]
80004136:	3f 68       	mov	r8,-10

80004138 <_ZN4UART7cleanUpEv>:


// Cleans up the USART registers.
void UART::cleanUp() {
80004138:	eb cd 40 80 	pushm	r7,lr
8000413c:	1a 97       	mov	r7,sp
8000413e:	20 1d       	sub	sp,4
80004140:	ef 4c ff fc 	st.w	r7[-4],r12
	if( thisUARTConfig == 0 ) {
80004144:	ee f8 ff fc 	ld.w	r8,r7[-4]
80004148:	70 08       	ld.w	r8,r8[0x0]
8000414a:	58 08       	cp.w	r8,0
8000414c:	c3 e0       	breq	800041c8 <_ZN4UART7cleanUpEv+0x90>
	//							AVR32_USART_CR_RSTSTA_MASK  |
	//							AVR32_USART_CR_RSTIT_MASK   |
	//							AVR32_USART_CR_RSTNACK_MASK |
	//							AVR32_USART_CR_DTRDIS_MASK  |
	//							AVR32_USART_CR_RTSDIS_MASK;
	SET_BITS( *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_CR ), ( 0x04 | 0x08 | 0x0100 | 0x2000 | 0x4000 | 0x20000 | 0x80000 ) );
8000414e:	ee f8 ff fc 	ld.w	r8,r7[-4]
80004152:	70 08       	ld.w	r8,r8[0x0]
80004154:	70 08       	ld.w	r8,r8[0x0]
80004156:	ee f9 ff fc 	ld.w	r9,r7[-4]
8000415a:	72 09       	ld.w	r9,r9[0x0]
8000415c:	72 09       	ld.w	r9,r9[0x0]
8000415e:	72 09       	ld.w	r9,r9[0x0]
80004160:	ea 19 00 0a 	orh	r9,0xa
80004164:	e8 19 61 0c 	orl	r9,0x610c
80004168:	91 09       	st.w	r8[0x0],r9
								
	//thisUARTConfig->usart->mr = 0;
	*( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_MR ) = 0;
8000416a:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000416e:	70 08       	ld.w	r8,r8[0x0]
80004170:	70 08       	ld.w	r8,r8[0x0]
80004172:	2f c8       	sub	r8,-4
80004174:	30 09       	mov	r9,0
80004176:	91 09       	st.w	r8[0x0],r9
	//thisUARTConfig->usart->idr = thisUARTConfig->usart->imr;
	*( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_IDR ) = *( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_IMR );
80004178:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000417c:	70 08       	ld.w	r8,r8[0x0]
8000417e:	70 08       	ld.w	r8,r8[0x0]
80004180:	2f 48       	sub	r8,-12
80004182:	ee f9 ff fc 	ld.w	r9,r7[-4]
80004186:	72 09       	ld.w	r9,r9[0x0]
80004188:	72 09       	ld.w	r9,r9[0x0]
8000418a:	2f 09       	sub	r9,-16
8000418c:	72 09       	ld.w	r9,r9[0x0]
8000418e:	91 09       	st.w	r8[0x0],r9
	//thisUARTConfig->usart->csr; // read status register
	*( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_CSR );
80004190:	ee f8 ff fc 	ld.w	r8,r7[-4]
80004194:	70 08       	ld.w	r8,r8[0x0]
80004196:	70 08       	ld.w	r8,r8[0x0]
80004198:	2e c8       	sub	r8,-20
8000419a:	70 08       	ld.w	r8,r8[0x0]
	//thisUARTConfig->usart->brgr = 0;
	*( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_BRGR ) = 0;
8000419c:	ee f8 ff fc 	ld.w	r8,r7[-4]
800041a0:	70 08       	ld.w	r8,r8[0x0]
800041a2:	70 08       	ld.w	r8,r8[0x0]
800041a4:	2e 08       	sub	r8,-32
800041a6:	30 09       	mov	r9,0
800041a8:	91 09       	st.w	r8[0x0],r9
	//thisUARTConfig->usart->rtor = 0;
	*( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_RTOR ) = 0;
800041aa:	ee f8 ff fc 	ld.w	r8,r7[-4]
800041ae:	70 08       	ld.w	r8,r8[0x0]
800041b0:	70 08       	ld.w	r8,r8[0x0]
800041b2:	2d c8       	sub	r8,-36
800041b4:	30 09       	mov	r9,0
800041b6:	91 09       	st.w	r8[0x0],r9
	//thisUARTConfig->usart->ttgr = 0;
	*( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_TTGR ) = 0;
800041b8:	ee f8 ff fc 	ld.w	r8,r7[-4]
800041bc:	70 08       	ld.w	r8,r8[0x0]
800041be:	70 08       	ld.w	r8,r8[0x0]
800041c0:	2d 88       	sub	r8,-40
800041c2:	30 09       	mov	r9,0
800041c4:	91 09       	st.w	r8[0x0],r9
800041c6:	c0 28       	rjmp	800041ca <_ZN4UART7cleanUpEv+0x92>


// Cleans up the USART registers.
void UART::cleanUp() {
	if( thisUARTConfig == 0 ) {
		return;
800041c8:	d7 03       	nop
	*( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_BRGR ) = 0;
	//thisUARTConfig->usart->rtor = 0;
	*( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_RTOR ) = 0;
	//thisUARTConfig->usart->ttgr = 0;
	*( volatile unsigned int* ) ( thisUARTConfig->usart_address + MYAVR32_UART_OFFSET_TTGR ) = 0;
800041ca:	2f fd       	sub	sp,-4
800041cc:	e3 cd 80 80 	ldm	sp++,r7,pc

800041d0 <_ZdlPv>:
800041d0:	d4 01       	pushm	lr
800041d2:	58 0c       	cp.w	r12,0
800041d4:	c0 30       	breq	800041da <_ZdlPv+0xa>
800041d6:	f0 1f 00 02 	mcall	800041dc <_ZdlPv+0xc>
800041da:	d8 02       	popm	pc
800041dc:	80 00       	ld.sh	r0,r0[0x0]
800041de:	9c 40       	ld.sh	r0,lr[0x8]

800041e0 <_Znwm>:
800041e0:	eb cd 40 81 	pushm	r0,r7,lr
800041e4:	20 fd       	sub	sp,60
800041e6:	fa c9 ff c4 	sub	r9,sp,-60
800041ea:	fa c8 ff d8 	sub	r8,sp,-40
800041ee:	91 09       	st.w	r8[0x0],r9
800041f0:	91 2d       	st.w	r8[0x8],sp
800041f2:	4a 19       	lddpc	r9,80004274 <_Znwm+0x94>
800041f4:	50 89       	stdsp	sp[0x20],r9
800041f6:	4a 19       	lddpc	r9,80004278 <_Znwm+0x98>
800041f8:	50 99       	stdsp	sp[0x24],r9
800041fa:	4a 19       	lddpc	r9,8000427c <_Znwm+0x9c>
800041fc:	50 1c       	stdsp	sp[0x4],r12
800041fe:	91 19       	st.w	r8[0x4],r9
80004200:	fa cc ff f8 	sub	r12,sp,-8
80004204:	f0 1f 00 1f 	mcall	80004280 <_Znwm+0xa0>
80004208:	40 18       	lddsp	r8,sp[0x4]
8000420a:	58 08       	cp.w	r8,0
8000420c:	f9 b8 00 01 	moveq	r8,1
80004210:	50 18       	stdsp	sp[0x4],r8
80004212:	10 9c       	mov	r12,r8
80004214:	f0 1f 00 1c 	mcall	80004284 <_Znwm+0xa4>
80004218:	50 0c       	stdsp	sp[0x0],r12
8000421a:	c0 d1       	brne	80004234 <_Znwm+0x54>
8000421c:	49 b9       	lddpc	r9,80004288 <_Znwm+0xa8>
8000421e:	72 08       	ld.w	r8,r9[0x0]
80004220:	58 08       	cp.w	r8,0
80004222:	c1 10       	breq	80004244 <_Znwm+0x64>
80004224:	30 19       	mov	r9,1
80004226:	50 39       	stdsp	sp[0xc],r9
80004228:	5d 18       	icall	r8
8000422a:	40 1c       	lddsp	r12,sp[0x4]
8000422c:	f0 1f 00 16 	mcall	80004284 <_Znwm+0xa4>
80004230:	50 0c       	stdsp	sp[0x0],r12
80004232:	cf 50       	breq	8000421c <_Znwm+0x3c>
80004234:	fa cc ff f8 	sub	r12,sp,-8
80004238:	f0 1f 00 15 	mcall	8000428c <_Znwm+0xac>
8000423c:	40 0c       	lddsp	r12,sp[0x0]
8000423e:	2f 1d       	sub	sp,-60
80004240:	e3 cd 80 81 	ldm	sp++,r0,r7,pc
80004244:	30 4c       	mov	r12,4
80004246:	f0 1f 00 13 	mcall	80004290 <_Znwm+0xb0>
8000424a:	49 38       	lddpc	r8,80004294 <_Znwm+0xb4>
8000424c:	2f 88       	sub	r8,-8
8000424e:	99 08       	st.w	r12[0x0],r8
80004250:	30 18       	mov	r8,1
80004252:	49 2a       	lddpc	r10,80004298 <_Znwm+0xb8>
80004254:	50 38       	stdsp	sp[0xc],r8
80004256:	49 2b       	lddpc	r11,8000429c <_Znwm+0xbc>
80004258:	f0 1f 00 12 	mcall	800042a0 <_Znwm+0xc0>
8000425c:	40 4c       	lddsp	r12,sp[0x10]
8000425e:	40 58       	lddsp	r8,sp[0x14]
80004260:	5b f8       	cp.w	r8,-1
80004262:	c0 50       	breq	8000426c <_Znwm+0x8c>
80004264:	3f f8       	mov	r8,-1
80004266:	50 38       	stdsp	sp[0xc],r8
80004268:	f0 1f 00 0f 	mcall	800042a4 <_Znwm+0xc4>
8000426c:	50 38       	stdsp	sp[0xc],r8
8000426e:	f0 1f 00 0f 	mcall	800042a8 <_Znwm+0xc8>
80004272:	00 00       	add	r0,r0
80004274:	80 00       	ld.sh	r0,r0[0x0]
80004276:	4a 94       	lddpc	r4,80004318 <__cxa_free_exception+0x20>
80004278:	00 00       	add	r0,r0
8000427a:	00 4c       	or	r12,r0
8000427c:	80 00       	ld.sh	r0,r0[0x0]
8000427e:	42 5c       	lddsp	r12,sp[0x94]
80004280:	80 00       	ld.sh	r0,r0[0x0]
80004282:	95 14       	st.w	r10[0x4],r4
80004284:	80 00       	ld.sh	r0,r0[0x0]
80004286:	9c 58       	ld.sh	r8,lr[0xa]
80004288:	00 00       	add	r0,r0
8000428a:	07 74       	ld.ub	r4,--r3
8000428c:	80 00       	ld.sh	r0,r0[0x0]
8000428e:	95 24       	st.w	r10[0x8],r4
80004290:	80 00       	ld.sh	r0,r0[0x0]
80004292:	43 38       	lddsp	r8,sp[0xcc]
80004294:	80 00       	ld.sh	r0,r0[0x0]
80004296:	f4 00       	*unknown*
80004298:	80 00       	ld.sh	r0,r0[0x0]
8000429a:	42 b4       	lddsp	r4,sp[0xac]
8000429c:	80 00       	ld.sh	r0,r0[0x0]
8000429e:	f4 24 80 00 	sub	r4,-753664
800042a2:	45 94       	lddsp	r4,sp[0x164]
800042a4:	80 00       	ld.sh	r0,r0[0x0]
800042a6:	96 dc       	ld.uh	r12,r11[0xa]
800042a8:	80 00       	ld.sh	r0,r0[0x0]
800042aa:	49 54       	lddpc	r4,800042fc <__cxa_free_exception+0x4>

800042ac <_ZNKSt9bad_alloc4whatEv>:
800042ac:	48 1c       	lddpc	r12,800042b0 <_ZNKSt9bad_alloc4whatEv+0x4>
800042ae:	5e fc       	retal	r12
800042b0:	80 00       	ld.sh	r0,r0[0x0]
800042b2:	f4 30 d4 01 	sub	r0,-666623

800042b4 <_ZNSt9bad_allocD1Ev>:
800042b4:	d4 01       	pushm	lr
800042b6:	48 48       	lddpc	r8,800042c4 <_ZNSt9bad_allocD1Ev+0x10>
800042b8:	2f 88       	sub	r8,-8
800042ba:	99 08       	st.w	r12[0x0],r8
800042bc:	f0 1f 00 03 	mcall	800042c8 <_ZNSt9bad_allocD1Ev+0x14>
800042c0:	d8 02       	popm	pc
800042c2:	00 00       	add	r0,r0
800042c4:	80 00       	ld.sh	r0,r0[0x0]
800042c6:	f4 00       	*unknown*
800042c8:	80 00       	ld.sh	r0,r0[0x0]
800042ca:	4e 9c       	lddpc	r12,8000446c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastElNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x8>

800042cc <_ZNSt9bad_allocD0Ev>:
800042cc:	eb cd 40 80 	pushm	r7,lr
800042d0:	48 68       	lddpc	r8,800042e8 <_ZNSt9bad_allocD0Ev+0x1c>
800042d2:	2f 88       	sub	r8,-8
800042d4:	18 97       	mov	r7,r12
800042d6:	99 08       	st.w	r12[0x0],r8
800042d8:	f0 1f 00 05 	mcall	800042ec <_ZNSt9bad_allocD0Ev+0x20>
800042dc:	0e 9c       	mov	r12,r7
800042de:	f0 1f 00 05 	mcall	800042f0 <_ZNSt9bad_allocD0Ev+0x24>
800042e2:	e3 cd 80 80 	ldm	sp++,r7,pc
800042e6:	00 00       	add	r0,r0
800042e8:	80 00       	ld.sh	r0,r0[0x0]
800042ea:	f4 00       	*unknown*
800042ec:	80 00       	ld.sh	r0,r0[0x0]
800042ee:	4e 9c       	lddpc	r12,80004490 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastElNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2c>
800042f0:	80 00       	ld.sh	r0,r0[0x0]
800042f2:	41 d0       	lddsp	r0,sp[0x74]

800042f4 <_GLOBAL__I___cxa_allocate_exception>:
800042f4:	5e fc       	retal	r12
800042f6:	d7 03       	nop

800042f8 <__cxa_free_exception>:
800042f8:	d4 01       	pushm	lr
800042fa:	48 d8       	lddpc	r8,8000432c <__cxa_free_exception+0x34>
800042fc:	18 38       	cp.w	r8,r12
800042fe:	e0 8b 00 06 	brhi	8000430a <__cxa_free_exception+0x12>
80004302:	f0 c9 f8 00 	sub	r9,r8,-2048
80004306:	12 3c       	cp.w	r12,r9
80004308:	c0 53       	brcs	80004312 <__cxa_free_exception+0x1a>
8000430a:	24 4c       	sub	r12,68
8000430c:	f0 1f 00 09 	mcall	80004330 <__cxa_free_exception+0x38>
80004310:	d8 02       	popm	pc
80004312:	f8 08 01 08 	sub	r8,r12,r8
80004316:	48 89       	lddpc	r9,80004334 <__cxa_free_exception+0x3c>
80004318:	a9 98       	lsr	r8,0x9
8000431a:	72 0a       	ld.w	r10,r9[0x0]
8000431c:	30 1c       	mov	r12,1
8000431e:	f8 08 09 48 	lsl	r8,r12,r8
80004322:	5c d8       	com	r8
80004324:	14 68       	and	r8,r10
80004326:	93 08       	st.w	r9[0x0],r8
80004328:	d8 02       	popm	pc
8000432a:	00 00       	add	r0,r0
8000432c:	00 00       	add	r0,r0
8000432e:	07 7c       	ld.ub	r12,--r3
80004330:	80 00       	ld.sh	r0,r0[0x0]
80004332:	9c 40       	ld.sh	r0,lr[0x8]
80004334:	00 00       	add	r0,r0
80004336:	07 78       	ld.ub	r8,--r3

80004338 <__cxa_allocate_exception>:
80004338:	eb cd 40 81 	pushm	r0,r7,lr
8000433c:	21 1d       	sub	sp,68
8000433e:	fa c9 ff bc 	sub	r9,sp,-68
80004342:	fa c8 ff d0 	sub	r8,sp,-48
80004346:	91 09       	st.w	r8[0x0],r9
80004348:	91 2d       	st.w	r8[0x8],sp
8000434a:	4b 19       	lddpc	r9,8000440c <__cxa_allocate_exception+0xd4>
8000434c:	50 a9       	stdsp	sp[0x28],r9
8000434e:	4b 19       	lddpc	r9,80004410 <__cxa_allocate_exception+0xd8>
80004350:	50 b9       	stdsp	sp[0x2c],r9
80004352:	4b 19       	lddpc	r9,80004414 <__cxa_allocate_exception+0xdc>
80004354:	50 2c       	stdsp	sp[0x8],r12
80004356:	91 19       	st.w	r8[0x4],r9
80004358:	fa cc ff f0 	sub	r12,sp,-16
8000435c:	f0 1f 00 2f 	mcall	80004418 <__cxa_allocate_exception+0xe0>
80004360:	40 28       	lddsp	r8,sp[0x8]
80004362:	2b c8       	sub	r8,-68
80004364:	50 18       	stdsp	sp[0x4],r8
80004366:	10 9c       	mov	r12,r8
80004368:	f0 1f 00 2d 	mcall	8000441c <__cxa_allocate_exception+0xe4>
8000436c:	50 0c       	stdsp	sp[0x0],r12
8000436e:	c1 60       	breq	8000439a <__cxa_allocate_exception+0x62>
80004370:	f0 1f 00 2c 	mcall	80004420 <__cxa_allocate_exception+0xe8>
80004374:	78 18       	ld.w	r8,r12[0x4]
80004376:	2f f8       	sub	r8,-1
80004378:	34 4a       	mov	r10,68
8000437a:	99 18       	st.w	r12[0x4],r8
8000437c:	30 0b       	mov	r11,0
8000437e:	40 0c       	lddsp	r12,sp[0x0]
80004380:	f0 1f 00 29 	mcall	80004424 <__cxa_allocate_exception+0xec>
80004384:	40 08       	lddsp	r8,sp[0x0]
80004386:	2b c8       	sub	r8,-68
80004388:	fa cc ff f0 	sub	r12,sp,-16
8000438c:	50 38       	stdsp	sp[0xc],r8
8000438e:	f0 1f 00 27 	mcall	80004428 <__cxa_allocate_exception+0xf0>
80004392:	40 3c       	lddsp	r12,sp[0xc]
80004394:	2e fd       	sub	sp,-68
80004396:	e3 cd 80 81 	ldm	sp++,r0,r7,pc
8000439a:	4a 58       	lddpc	r8,8000442c <__cxa_allocate_exception+0xf4>
8000439c:	40 19       	lddsp	r9,sp[0x4]
8000439e:	70 08       	ld.w	r8,r8[0x0]
800043a0:	e0 49 02 00 	cp.w	r9,512
800043a4:	e0 88 00 06 	brls	800043b0 <__cxa_allocate_exception+0x78>
800043a8:	30 18       	mov	r8,1
800043aa:	50 58       	stdsp	sp[0x14],r8
800043ac:	f0 1f 00 21 	mcall	80004430 <__cxa_allocate_exception+0xf8>
800043b0:	f3 d8 c0 01 	bfextu	r9,r8,0x0,0x1
800043b4:	c0 f0       	breq	800043d2 <__cxa_allocate_exception+0x9a>
800043b6:	ed b8 00 01 	bld	r8,0x1
800043ba:	c1 71       	brne	800043e8 <__cxa_allocate_exception+0xb0>
800043bc:	f0 09 16 02 	lsr	r9,r8,0x2
800043c0:	ed b9 00 00 	bld	r9,0x0
800043c4:	c1 51       	brne	800043ee <__cxa_allocate_exception+0xb6>
800043c6:	ed b9 00 01 	bld	r9,0x1
800043ca:	ce f0       	breq	800043a8 <__cxa_allocate_exception+0x70>
800043cc:	30 8a       	mov	r10,8
800043ce:	30 39       	mov	r9,3
800043d0:	c0 28       	rjmp	800043d4 <__cxa_allocate_exception+0x9c>
800043d2:	30 1a       	mov	r10,1
800043d4:	f5 e8 10 08 	or	r8,r10,r8
800043d8:	a9 79       	lsl	r9,0x9
800043da:	49 5a       	lddpc	r10,8000442c <__cxa_allocate_exception+0xf4>
800043dc:	95 08       	st.w	r10[0x0],r8
800043de:	49 68       	lddpc	r8,80004434 <__cxa_allocate_exception+0xfc>
800043e0:	f0 09 00 09 	add	r9,r8,r9
800043e4:	50 09       	stdsp	sp[0x0],r9
800043e6:	cc 5b       	rjmp	80004370 <__cxa_allocate_exception+0x38>
800043e8:	30 2a       	mov	r10,2
800043ea:	30 19       	mov	r9,1
800043ec:	cf 4b       	rjmp	800043d4 <__cxa_allocate_exception+0x9c>
800043ee:	30 4a       	mov	r10,4
800043f0:	30 29       	mov	r9,2
800043f2:	cf 1b       	rjmp	800043d4 <__cxa_allocate_exception+0x9c>
800043f4:	40 6c       	lddsp	r12,sp[0x18]
800043f6:	40 78       	lddsp	r8,sp[0x1c]
800043f8:	5b f8       	cp.w	r8,-1
800043fa:	c0 50       	breq	80004404 <__cxa_allocate_exception+0xcc>
800043fc:	3f f8       	mov	r8,-1
800043fe:	50 58       	stdsp	sp[0x14],r8
80004400:	f0 1f 00 0e 	mcall	80004438 <__cxa_allocate_exception+0x100>
80004404:	50 58       	stdsp	sp[0x14],r8
80004406:	f0 1f 00 0e 	mcall	8000443c <__cxa_allocate_exception+0x104>
8000440a:	00 00       	add	r0,r0
8000440c:	80 00       	ld.sh	r0,r0[0x0]
8000440e:	4a 94       	lddpc	r4,800044b0 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastElNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x4c>
80004410:	00 00       	add	r0,r0
80004412:	00 60       	and	r0,r0
80004414:	80 00       	ld.sh	r0,r0[0x0]
80004416:	43 f4       	lddsp	r4,sp[0xfc]
80004418:	80 00       	ld.sh	r0,r0[0x0]
8000441a:	95 14       	st.w	r10[0x4],r4
8000441c:	80 00       	ld.sh	r0,r0[0x0]
8000441e:	9c 58       	ld.sh	r8,lr[0xa]
80004420:	80 00       	ld.sh	r0,r0[0x0]
80004422:	4f 08       	lddpc	r8,800045e0 <__cxa_throw+0x4c>
80004424:	80 00       	ld.sh	r0,r0[0x0]
80004426:	a2 7e       	st.h	r1[0xe],lr
80004428:	80 00       	ld.sh	r0,r0[0x0]
8000442a:	95 24       	st.w	r10[0x8],r4
8000442c:	00 00       	add	r0,r0
8000442e:	07 78       	ld.ub	r8,--r3
80004430:	80 00       	ld.sh	r0,r0[0x0]
80004432:	4f 90       	lddpc	r0,80004614 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x20>
80004434:	00 00       	add	r0,r0
80004436:	07 7c       	ld.ub	r12,--r3
80004438:	80 00       	ld.sh	r0,r0[0x0]
8000443a:	96 dc       	ld.uh	r12,r11[0xa]
8000443c:	80 00       	ld.sh	r0,r0[0x0]
8000443e:	49 54       	lddpc	r4,80004490 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastElNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2c>

80004440 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcElPKvPKNS_17__class_type_infoES2_>:
80004440:	eb cd 40 80 	pushm	r7,lr
80004444:	14 38       	cp.w	r8,r10
80004446:	c0 80       	breq	80004456 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcElPKvPKNS_17__class_type_infoES2_+0x16>
80004448:	78 27       	ld.w	r7,r12[0x8]
8000444a:	0e 9c       	mov	r12,r7
8000444c:	6e 07       	ld.w	r7,r7[0x0]
8000444e:	6e 87       	ld.w	r7,r7[0x20]
80004450:	5d 17       	icall	r7
80004452:	e3 cd 80 80 	ldm	sp++,r7,pc
80004456:	78 1e       	ld.w	lr,r12[0x4]
80004458:	72 17       	ld.w	r7,r9[0x4]
8000445a:	0e 3e       	cp.w	lr,r7
8000445c:	cf 61       	brne	80004448 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcElPKvPKNS_17__class_type_infoES2_+0x8>
8000445e:	30 6c       	mov	r12,6
80004460:	e3 cd 80 80 	ldm	sp++,r7,pc

80004464 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastElNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
80004464:	d4 21       	pushm	r4-r7,lr
80004466:	fa c4 ff ec 	sub	r4,sp,-20
8000446a:	72 15       	ld.w	r5,r9[0x4]
8000446c:	68 2e       	ld.w	lr,r4[0x8]
8000446e:	68 06       	ld.w	r6,r4[0x0]
80004470:	68 17       	ld.w	r7,r4[0x4]
80004472:	78 14       	ld.w	r4,r12[0x4]
80004474:	0a 34       	cp.w	r4,r5
80004476:	c0 d0       	breq	80004490 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastElNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2c>
80004478:	0e 38       	cp.w	r8,r7
8000447a:	c1 90       	breq	800044ac <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastElNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x48>
8000447c:	78 24       	ld.w	r4,r12[0x8]
8000447e:	08 9c       	mov	r12,r4
80004480:	68 04       	ld.w	r4,r4[0x0]
80004482:	1a de       	st.w	--sp,lr
80004484:	1a d7       	st.w	--sp,r7
80004486:	1a d6       	st.w	--sp,r6
80004488:	68 77       	ld.w	r7,r4[0x1c]
8000448a:	5d 17       	icall	r7
8000448c:	2f dd       	sub	sp,-12
8000448e:	d8 22       	popm	r4-r7,pc
80004490:	9d 1a       	st.w	lr[0x4],r10
80004492:	9d 08       	st.w	lr[0x0],r8
80004494:	58 0b       	cp.w	r11,0
80004496:	c1 05       	brlt	800044b6 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastElNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x52>
80004498:	f0 0b 00 0b 	add	r11,r8,r11
8000449c:	30 0c       	mov	r12,0
8000449e:	16 37       	cp.w	r7,r11
800044a0:	f9 b7 00 06 	moveq	r7,6
800044a4:	f9 b7 01 01 	movne	r7,1
800044a8:	9d 37       	st.w	lr[0xc],r7
800044aa:	d8 22       	popm	r4-r7,pc
800044ac:	6c 15       	ld.w	r5,r6[0x4]
800044ae:	0a 34       	cp.w	r4,r5
800044b0:	ce 61       	brne	8000447c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastElNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x18>
800044b2:	9d 2a       	st.w	lr[0x8],r10
800044b4:	d8 2a       	popm	r4-r7,pc,r12=0
800044b6:	5b eb       	cp.w	r11,-2
800044b8:	c0 20       	breq	800044bc <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastElNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x58>
800044ba:	d8 2a       	popm	r4-r7,pc,r12=0
800044bc:	30 18       	mov	r8,1
800044be:	9d 38       	st.w	lr[0xc],r8
800044c0:	cf db       	rjmp	800044ba <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastElNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x56>
800044c2:	d7 03       	nop

800044c4 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
800044c4:	d4 21       	pushm	r4-r7,lr
800044c6:	18 94       	mov	r4,r12
800044c8:	16 97       	mov	r7,r11
800044ca:	14 96       	mov	r6,r10
800044cc:	12 95       	mov	r5,r9
800044ce:	f0 1f 00 07 	mcall	800044e8 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x24>
800044d2:	c0 20       	breq	800044d6 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x12>
800044d4:	da 2a       	popm	r4-r7,pc,r12=1
800044d6:	68 28       	ld.w	r8,r4[0x8]
800044d8:	0a 99       	mov	r9,r5
800044da:	0c 9a       	mov	r10,r6
800044dc:	0e 9b       	mov	r11,r7
800044de:	10 9c       	mov	r12,r8
800044e0:	70 08       	ld.w	r8,r8[0x0]
800044e2:	70 68       	ld.w	r8,r8[0x18]
800044e4:	5d 18       	icall	r8
800044e6:	d8 22       	popm	r4-r7,pc
800044e8:	80 00       	ld.sh	r0,r0[0x0]
800044ea:	52 4a       	stdsp	sp[0x90],r10

800044ec <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
800044ec:	d4 01       	pushm	lr
800044ee:	48 48       	lddpc	r8,800044fc <_ZN10__cxxabiv120__si_class_type_infoD1Ev+0x10>
800044f0:	2f 88       	sub	r8,-8
800044f2:	99 08       	st.w	r12[0x0],r8
800044f4:	f0 1f 00 03 	mcall	80004500 <_ZN10__cxxabiv120__si_class_type_infoD1Ev+0x14>
800044f8:	d8 02       	popm	pc
800044fa:	00 00       	add	r0,r0
800044fc:	80 00       	ld.sh	r0,r0[0x0]
800044fe:	f4 40 80 00 	cp.w	r0,-753664
80004502:	52 7c       	stdsp	sp[0x9c],r12

80004504 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
80004504:	eb cd 40 80 	pushm	r7,lr
80004508:	48 68       	lddpc	r8,80004520 <_ZN10__cxxabiv120__si_class_type_infoD0Ev+0x1c>
8000450a:	2f 88       	sub	r8,-8
8000450c:	18 97       	mov	r7,r12
8000450e:	99 08       	st.w	r12[0x0],r8
80004510:	f0 1f 00 05 	mcall	80004524 <_ZN10__cxxabiv120__si_class_type_infoD0Ev+0x20>
80004514:	0e 9c       	mov	r12,r7
80004516:	f0 1f 00 05 	mcall	80004528 <_ZN10__cxxabiv120__si_class_type_infoD0Ev+0x24>
8000451a:	e3 cd 80 80 	ldm	sp++,r7,pc
8000451e:	00 00       	add	r0,r0
80004520:	80 00       	ld.sh	r0,r0[0x0]
80004522:	f4 40 80 00 	cp.w	r0,-753664
80004526:	52 7c       	stdsp	sp[0x9c],r12
80004528:	80 00       	ld.sh	r0,r0[0x0]
8000452a:	41 d0       	lddsp	r0,sp[0x74]

8000452c <__cxa_rethrow>:
8000452c:	eb cd 40 80 	pushm	r7,lr
80004530:	f0 1f 00 15 	mcall	80004584 <__cxa_rethrow+0x58>
80004534:	78 18       	ld.w	r8,r12[0x4]
80004536:	2f f8       	sub	r8,-1
80004538:	99 18       	st.w	r12[0x4],r8
8000453a:	78 07       	ld.w	r7,r12[0x0]
8000453c:	58 07       	cp.w	r7,0
8000453e:	c1 c0       	breq	80004576 <__cxa_rethrow+0x4a>
80004540:	ee ea 00 2c 	ld.d	r10,r7[44]
80004544:	e0 68 d5 00 	mov	r8,54528
80004548:	ea 18 bc d4 	orh	r8,0xbcd4
8000454c:	e0 69 aa bc 	mov	r9,43708
80004550:	ea 19 b8 b1 	orh	r9,0xb8b1
80004554:	f4 08 00 08 	add	r8,r10,r8
80004558:	f6 09 00 49 	adc	r9,r11,r9
8000455c:	58 18       	cp.w	r8,1
8000455e:	5c 29       	cpc	r9
80004560:	e0 88 00 0d 	brls	8000457a <__cxa_rethrow+0x4e>
80004564:	30 08       	mov	r8,0
80004566:	99 08       	st.w	r12[0x0],r8
80004568:	2d 47       	sub	r7,-44
8000456a:	0e 9c       	mov	r12,r7
8000456c:	f0 1f 00 07 	mcall	80004588 <__cxa_rethrow+0x5c>
80004570:	0e 9c       	mov	r12,r7
80004572:	f0 1f 00 07 	mcall	8000458c <__cxa_rethrow+0x60>
80004576:	f0 1f 00 07 	mcall	80004590 <__cxa_rethrow+0x64>
8000457a:	6e 58       	ld.w	r8,r7[0x14]
8000457c:	5c 38       	neg	r8
8000457e:	8f 58       	st.w	r7[0x14],r8
80004580:	cf 4b       	rjmp	80004568 <__cxa_rethrow+0x3c>
80004582:	00 00       	add	r0,r0
80004584:	80 00       	ld.sh	r0,r0[0x0]
80004586:	4f 08       	lddpc	r8,80004744 <_ZL28read_encoded_value_with_basehjPKhPj+0x60>
80004588:	80 00       	ld.sh	r0,r0[0x0]
8000458a:	97 a4       	st.w	r11[0x28],r4
8000458c:	80 00       	ld.sh	r0,r0[0x0]
8000458e:	50 94       	stdsp	sp[0x24],r4
80004590:	80 00       	ld.sh	r0,r0[0x0]
80004592:	4f 90       	lddpc	r0,80004774 <_ZL28read_encoded_value_with_basehjPKhPj+0x90>

80004594 <__cxa_throw>:
80004594:	eb cd 40 80 	pushm	r7,lr
80004598:	30 18       	mov	r8,1
8000459a:	f8 c7 00 14 	sub	r7,r12,20
8000459e:	24 4c       	sub	r12,68
800045a0:	99 08       	st.w	r12[0x0],r8
800045a2:	48 f8       	lddpc	r8,800045dc <__cxa_throw+0x48>
800045a4:	70 08       	ld.w	r8,r8[0x0]
800045a6:	99 38       	st.w	r12[0xc],r8
800045a8:	48 e8       	lddpc	r8,800045e0 <__cxa_throw+0x4c>
800045aa:	70 08       	ld.w	r8,r8[0x0]
800045ac:	99 48       	st.w	r12[0x10],r8
800045ae:	e0 68 2b 00 	mov	r8,11008
800045b2:	ea 18 43 2b 	orh	r8,0x432b
800045b6:	e0 69 55 43 	mov	r9,21827
800045ba:	ea 19 47 4e 	orh	r9,0x474e
800045be:	f8 e9 00 30 	st.d	r12[48],r8
800045c2:	48 98       	lddpc	r8,800045e4 <__cxa_throw+0x50>
800045c4:	99 1b       	st.w	r12[0x4],r11
800045c6:	99 2a       	st.w	r12[0x8],r10
800045c8:	99 e8       	st.w	r12[0x38],r8
800045ca:	0e 9c       	mov	r12,r7
800045cc:	f0 1f 00 07 	mcall	800045e8 <__cxa_throw+0x54>
800045d0:	0e 9c       	mov	r12,r7
800045d2:	f0 1f 00 07 	mcall	800045ec <__cxa_throw+0x58>
800045d6:	f0 1f 00 07 	mcall	800045f0 <__cxa_throw+0x5c>
800045da:	00 00       	add	r0,r0
800045dc:	00 00       	add	r0,r0
800045de:	01 0c       	ld.w	r12,r0++
800045e0:	00 00       	add	r0,r0
800045e2:	01 10       	ld.sh	r0,r0++
800045e4:	80 00       	ld.sh	r0,r0[0x0]
800045e6:	45 f4       	lddsp	r4,sp[0x17c]
800045e8:	80 00       	ld.sh	r0,r0[0x0]
800045ea:	97 3c       	st.w	r11[0xc],r12
800045ec:	80 00       	ld.sh	r0,r0[0x0]
800045ee:	50 94       	stdsp	sp[0x24],r4
800045f0:	80 00       	ld.sh	r0,r0[0x0]
800045f2:	4f 90       	lddpc	r0,800047d4 <_ZL28read_encoded_value_with_basehjPKhPj+0xf0>

800045f4 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>:
800045f4:	eb cd 40 80 	pushm	r7,lr
800045f8:	f6 c9 00 30 	sub	r9,r11,48
800045fc:	58 1c       	cp.w	r12,1
800045fe:	e0 8b 00 19 	brhi	80004630 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x3c>
80004602:	d2 53       	ssrf	0x5
80004604:	72 08       	ld.w	r8,r9[0x0]
80004606:	20 18       	sub	r8,1
80004608:	f3 78 00 00 	stcond	r9[0],r8
8000460c:	cf b1       	brne	80004602 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0xe>
8000460e:	58 08       	cp.w	r8,0
80004610:	c0 b1       	brne	80004626 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x32>
80004612:	72 28       	ld.w	r8,r9[0x8]
80004614:	58 08       	cp.w	r8,0
80004616:	c0 a0       	breq	8000462a <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x36>
80004618:	f6 c7 ff ec 	sub	r7,r11,-20
8000461c:	0e 9c       	mov	r12,r7
8000461e:	5d 18       	icall	r8
80004620:	0e 9c       	mov	r12,r7
80004622:	f0 1f 00 06 	mcall	80004638 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x44>
80004626:	e3 cd 80 80 	ldm	sp++,r7,pc
8000462a:	f6 c7 ff ec 	sub	r7,r11,-20
8000462e:	cf 9b       	rjmp	80004620 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x2c>
80004630:	72 4c       	ld.w	r12,r9[0x10]
80004632:	f0 1f 00 03 	mcall	8000463c <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x48>
80004636:	00 00       	add	r0,r0
80004638:	80 00       	ld.sh	r0,r0[0x0]
8000463a:	42 f8       	lddsp	r8,sp[0xbc]
8000463c:	80 00       	ld.sh	r0,r0[0x0]
8000463e:	4f 10       	lddpc	r0,80004800 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x24>

80004640 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv>:
80004640:	eb cd 40 c0 	pushm	r6-r7,lr
80004644:	20 2d       	sub	sp,8
80004646:	74 09       	ld.w	r9,r10[0x0]
80004648:	76 08       	ld.w	r8,r11[0x0]
8000464a:	50 0b       	stdsp	sp[0x0],r11
8000464c:	18 96       	mov	r6,r12
8000464e:	14 97       	mov	r7,r10
80004650:	16 9c       	mov	r12,r11
80004652:	70 28       	ld.w	r8,r8[0x8]
80004654:	50 19       	stdsp	sp[0x4],r9
80004656:	5d 18       	icall	r8
80004658:	40 0b       	lddsp	r11,sp[0x0]
8000465a:	c0 40       	breq	80004662 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x22>
8000465c:	40 18       	lddsp	r8,sp[0x4]
8000465e:	70 08       	ld.w	r8,r8[0x0]
80004660:	50 18       	stdsp	sp[0x4],r8
80004662:	6c 08       	ld.w	r8,r6[0x0]
80004664:	0c 9c       	mov	r12,r6
80004666:	70 48       	ld.w	r8,r8[0x10]
80004668:	30 19       	mov	r9,1
8000466a:	fa ca ff fc 	sub	r10,sp,-4
8000466e:	5d 18       	icall	r8
80004670:	c0 40       	breq	80004678 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv+0x38>
80004672:	40 18       	lddsp	r8,sp[0x4]
80004674:	30 1c       	mov	r12,1
80004676:	8f 08       	st.w	r7[0x0],r8
80004678:	2f ed       	sub	sp,-8
8000467a:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
8000467e:	d7 03       	nop

80004680 <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
80004680:	d4 01       	pushm	lr
80004682:	3f f8       	mov	r8,-1
80004684:	f0 0c 18 00 	cp.b	r12,r8
80004688:	c1 60       	breq	800046b4 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x34>
8000468a:	18 98       	mov	r8,r12
8000468c:	e2 18 00 70 	andl	r8,0x70,COH
80004690:	e0 48 00 20 	cp.w	r8,32
80004694:	c1 80       	breq	800046c4 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x44>
80004696:	e0 8a 00 0d 	brle	800046b0 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x30>
8000469a:	e0 48 00 40 	cp.w	r8,64
8000469e:	c0 f0       	breq	800046bc <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x3c>
800046a0:	e0 48 00 50 	cp.w	r8,80
800046a4:	c0 80       	breq	800046b4 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x34>
800046a6:	e0 48 00 30 	cp.w	r8,48
800046aa:	c1 10       	breq	800046cc <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x4c>
800046ac:	f0 1f 00 0a 	mcall	800046d4 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x54>
800046b0:	58 08       	cp.w	r8,0
800046b2:	c0 21       	brne	800046b6 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x36>
800046b4:	d8 0a       	popm	pc,r12=0
800046b6:	59 08       	cp.w	r8,16
800046b8:	cf a1       	brne	800046ac <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x2c>
800046ba:	cf db       	rjmp	800046b4 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x34>
800046bc:	16 9c       	mov	r12,r11
800046be:	f0 1f 00 07 	mcall	800046d8 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x58>
800046c2:	d8 02       	popm	pc
800046c4:	16 9c       	mov	r12,r11
800046c6:	f0 1f 00 06 	mcall	800046dc <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x5c>
800046ca:	d8 02       	popm	pc
800046cc:	16 9c       	mov	r12,r11
800046ce:	f0 1f 00 05 	mcall	800046e0 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x60>
800046d2:	d8 02       	popm	pc
800046d4:	80 00       	ld.sh	r0,r0[0x0]
800046d6:	97 e0       	st.w	r11[0x38],r0
800046d8:	80 00       	ld.sh	r0,r0[0x0]
800046da:	95 74       	st.w	r10[0x1c],r4
800046dc:	80 00       	ld.sh	r0,r0[0x0]
800046de:	95 7a       	st.w	r10[0x1c],r10
800046e0:	80 00       	ld.sh	r0,r0[0x0]
800046e2:	95 78       	st.w	r10[0x1c],r8

800046e4 <_ZL28read_encoded_value_with_basehjPKhPj>:
800046e4:	d4 21       	pushm	r4-r7,lr
800046e6:	35 08       	mov	r8,80
800046e8:	f0 0c 18 00 	cp.b	r12,r8
800046ec:	c6 c0       	breq	800047c4 <_ZL28read_encoded_value_with_basehjPKhPj+0xe0>
800046ee:	14 96       	mov	r6,r10
800046f0:	f1 dc c0 04 	bfextu	r8,r12,0x0,0x4
800046f4:	58 c8       	cp.w	r8,12
800046f6:	e0 88 00 04 	brls	800046fe <_ZL28read_encoded_value_with_basehjPKhPj+0x1a>
800046fa:	f0 1f 00 37 	mcall	800047d4 <_ZL28read_encoded_value_with_basehjPKhPj+0xf0>
800046fe:	4b 7e       	lddpc	lr,800047d8 <_ZL28read_encoded_value_with_basehjPKhPj+0xf4>
80004700:	fc 08 03 2f 	ld.w	pc,lr[r8<<0x2]
80004704:	15 8e       	ld.ub	lr,r10[0x0]
80004706:	15 98       	ld.ub	r8,r10[0x1]
80004708:	b1 68       	lsl	r8,0x10
8000470a:	f1 ee 11 88 	or	r8,r8,lr<<0x18
8000470e:	15 ae       	ld.ub	lr,r10[0x2]
80004710:	f1 ee 10 88 	or	r8,r8,lr<<0x8
80004714:	15 be       	ld.ub	lr,r10[0x3]
80004716:	2f ca       	sub	r10,-4
80004718:	fd e8 10 08 	or	r8,lr,r8
8000471c:	58 08       	cp.w	r8,0
8000471e:	c0 d0       	breq	80004738 <_ZL28read_encoded_value_with_basehjPKhPj+0x54>
80004720:	18 9e       	mov	lr,r12
80004722:	e2 1e 00 70 	andl	lr,0x70,COH
80004726:	59 0e       	cp.w	lr,16
80004728:	ec 0b 17 00 	moveq	r11,r6
8000472c:	16 08       	add	r8,r11
8000472e:	30 0b       	mov	r11,0
80004730:	f6 0c 18 00 	cp.b	r12,r11
80004734:	c0 24       	brge	80004738 <_ZL28read_encoded_value_with_basehjPKhPj+0x54>
80004736:	70 08       	ld.w	r8,r8[0x0]
80004738:	93 08       	st.w	r9[0x0],r8
8000473a:	14 9c       	mov	r12,r10
8000473c:	d8 22       	popm	r4-r7,pc
8000473e:	15 ce       	ld.ub	lr,r10[0x4]
80004740:	15 d8       	ld.ub	r8,r10[0x5]
80004742:	b1 68       	lsl	r8,0x10
80004744:	f1 ee 11 88 	or	r8,r8,lr<<0x18
80004748:	15 ee       	ld.ub	lr,r10[0x6]
8000474a:	f1 ee 10 88 	or	r8,r8,lr<<0x8
8000474e:	15 fe       	ld.ub	lr,r10[0x7]
80004750:	2f 8a       	sub	r10,-8
80004752:	fd e8 10 08 	or	r8,lr,r8
80004756:	ce 3b       	rjmp	8000471c <_ZL28read_encoded_value_with_basehjPKhPj+0x38>
80004758:	30 08       	mov	r8,0
8000475a:	10 9e       	mov	lr,r8
8000475c:	10 94       	mov	r4,r8
8000475e:	15 37       	ld.ub	r7,r10++
80004760:	eb d7 c0 07 	bfextu	r5,r7,0x0,0x7
80004764:	ea 0e 09 45 	lsl	r5,r5,lr
80004768:	2f 9e       	sub	lr,-7
8000476a:	0a 48       	or	r8,r5
8000476c:	e8 07 18 00 	cp.b	r7,r4
80004770:	cf 75       	brlt	8000475e <_ZL28read_encoded_value_with_basehjPKhPj+0x7a>
80004772:	cd 5b       	rjmp	8000471c <_ZL28read_encoded_value_with_basehjPKhPj+0x38>
80004774:	30 08       	mov	r8,0
80004776:	10 9e       	mov	lr,r8
80004778:	10 94       	mov	r4,r8
8000477a:	15 37       	ld.ub	r7,r10++
8000477c:	eb d7 c0 07 	bfextu	r5,r7,0x0,0x7
80004780:	ea 0e 09 45 	lsl	r5,r5,lr
80004784:	2f 9e       	sub	lr,-7
80004786:	0a 48       	or	r8,r5
80004788:	0e 95       	mov	r5,r7
8000478a:	e8 07 18 00 	cp.b	r7,r4
8000478e:	cf 65       	brlt	8000477a <_ZL28read_encoded_value_with_basehjPKhPj+0x96>
80004790:	59 fe       	cp.w	lr,31
80004792:	fe 9b ff c5 	brhi	8000471c <_ZL28read_encoded_value_with_basehjPKhPj+0x38>
80004796:	e2 17 00 40 	andl	r7,0x40,COH
8000479a:	cc 10       	breq	8000471c <_ZL28read_encoded_value_with_basehjPKhPj+0x38>
8000479c:	3f f7       	mov	r7,-1
8000479e:	ee 0e 09 4e 	lsl	lr,r7,lr
800047a2:	fd e8 10 08 	or	r8,lr,r8
800047a6:	cb bb       	rjmp	8000471c <_ZL28read_encoded_value_with_basehjPKhPj+0x38>
800047a8:	15 8e       	ld.ub	lr,r10[0x0]
800047aa:	15 98       	ld.ub	r8,r10[0x1]
800047ac:	2f ea       	sub	r10,-2
800047ae:	f1 ee 10 88 	or	r8,r8,lr<<0x8
800047b2:	b1 68       	lsl	r8,0x10
800047b4:	b1 48       	asr	r8,0x10
800047b6:	cb 3b       	rjmp	8000471c <_ZL28read_encoded_value_with_basehjPKhPj+0x38>
800047b8:	15 8e       	ld.ub	lr,r10[0x0]
800047ba:	15 98       	ld.ub	r8,r10[0x1]
800047bc:	2f ea       	sub	r10,-2
800047be:	f1 ee 10 88 	or	r8,r8,lr<<0x8
800047c2:	ca db       	rjmp	8000471c <_ZL28read_encoded_value_with_basehjPKhPj+0x38>
800047c4:	2f da       	sub	r10,-3
800047c6:	e0 1a ff fc 	andl	r10,0xfffc
800047ca:	15 08       	ld.w	r8,r10++
800047cc:	93 08       	st.w	r9[0x0],r8
800047ce:	14 9c       	mov	r12,r10
800047d0:	d8 22       	popm	r4-r7,pc
800047d2:	00 00       	add	r0,r0
800047d4:	80 00       	ld.sh	r0,r0[0x0]
800047d6:	97 e0       	st.w	r11[0x38],r0
800047d8:	80 00       	ld.sh	r0,r0[0x0]
800047da:	f4 a0 d4 21 	rcall	7fe9f01c <_estack+0x7fe9701c>

800047dc <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
800047dc:	d4 21       	pushm	r4-r7,lr
800047de:	16 95       	mov	r5,r11
800047e0:	14 97       	mov	r7,r10
800047e2:	18 94       	mov	r4,r12
800047e4:	58 0c       	cp.w	r12,0
800047e6:	c0 30       	breq	800047ec <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x10>
800047e8:	f0 1f 00 26 	mcall	80004880 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xa4>
800047ec:	8f 0c       	st.w	r7[0x0],r12
800047ee:	3f f8       	mov	r8,-1
800047f0:	0b 36       	ld.ub	r6,r5++
800047f2:	f0 06 18 00 	cp.b	r6,r8
800047f6:	c3 90       	breq	80004868 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x8c>
800047f8:	08 9b       	mov	r11,r4
800047fa:	0c 9c       	mov	r12,r6
800047fc:	f0 1f 00 22 	mcall	80004884 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xa8>
80004800:	0a 9a       	mov	r10,r5
80004802:	18 9b       	mov	r11,r12
80004804:	ee c9 ff fc 	sub	r9,r7,-4
80004808:	0c 9c       	mov	r12,r6
8000480a:	f0 1f 00 20 	mcall	80004888 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xac>
8000480e:	18 95       	mov	r5,r12
80004810:	0b 38       	ld.ub	r8,r5++
80004812:	ef 68 00 14 	st.b	r7[20],r8
80004816:	3f f9       	mov	r9,-1
80004818:	f2 08 18 00 	cp.b	r8,r9
8000481c:	c2 e0       	breq	80004878 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x9c>
8000481e:	30 0a       	mov	r10,0
80004820:	14 98       	mov	r8,r10
80004822:	14 9c       	mov	r12,r10
80004824:	0b 39       	ld.ub	r9,r5++
80004826:	f7 d9 c0 07 	bfextu	r11,r9,0x0,0x7
8000482a:	f6 08 09 4b 	lsl	r11,r11,r8
8000482e:	2f 98       	sub	r8,-7
80004830:	16 4a       	or	r10,r11
80004832:	f8 09 18 00 	cp.b	r9,r12
80004836:	cf 75       	brlt	80004824 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x48>
80004838:	ea 0a 00 0a 	add	r10,r5,r10
8000483c:	8f 3a       	st.w	r7[0xc],r10
8000483e:	0a 9c       	mov	r12,r5
80004840:	19 38       	ld.ub	r8,r12++
80004842:	30 0a       	mov	r10,0
80004844:	ef 68 00 15 	st.b	r7[21],r8
80004848:	14 96       	mov	r6,r10
8000484a:	14 98       	mov	r8,r10
8000484c:	19 39       	ld.ub	r9,r12++
8000484e:	f7 d9 c0 07 	bfextu	r11,r9,0x0,0x7
80004852:	f6 08 09 4b 	lsl	r11,r11,r8
80004856:	2f 98       	sub	r8,-7
80004858:	16 4a       	or	r10,r11
8000485a:	ec 09 18 00 	cp.b	r9,r6
8000485e:	cf 75       	brlt	8000484c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x70>
80004860:	f8 0a 00 0a 	add	r10,r12,r10
80004864:	8f 4a       	st.w	r7[0x10],r10
80004866:	d8 22       	popm	r4-r7,pc
80004868:	8f 1c       	st.w	r7[0x4],r12
8000486a:	0b 38       	ld.ub	r8,r5++
8000486c:	ef 68 00 14 	st.b	r7[20],r8
80004870:	3f f9       	mov	r9,-1
80004872:	f2 08 18 00 	cp.b	r8,r9
80004876:	cd 41       	brne	8000481e <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x42>
80004878:	30 08       	mov	r8,0
8000487a:	8f 38       	st.w	r7[0xc],r8
8000487c:	ce 1b       	rjmp	8000483e <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x62>
8000487e:	00 00       	add	r0,r0
80004880:	80 00       	ld.sh	r0,r0[0x0]
80004882:	95 74       	st.w	r10[0x1c],r4
80004884:	80 00       	ld.sh	r0,r0[0x0]
80004886:	46 80       	lddsp	r0,sp[0x1a0]
80004888:	80 00       	ld.sh	r0,r0[0x0]
8000488a:	46 e4       	lddsp	r4,sp[0x1b8]

8000488c <_ZL15get_ttype_entryP16lsda_header_infom>:
8000488c:	d4 01       	pushm	lr
8000488e:	20 1d       	sub	sp,4
80004890:	3f f9       	mov	r9,-1
80004892:	18 98       	mov	r8,r12
80004894:	f9 3c 00 14 	ld.ub	r12,r12[20]
80004898:	f2 0c 18 00 	cp.b	r12,r9
8000489c:	c2 40       	breq	800048e4 <_ZL15get_ttype_entryP16lsda_header_infom+0x58>
8000489e:	f3 dc c0 03 	bfextu	r9,r12,0x0,0x3
800048a2:	58 29       	cp.w	r9,2
800048a4:	c1 c0       	breq	800048dc <_ZL15get_ttype_entryP16lsda_header_infom+0x50>
800048a6:	e0 8a 00 08 	brle	800048b6 <_ZL15get_ttype_entryP16lsda_header_infom+0x2a>
800048aa:	58 39       	cp.w	r9,3
800048ac:	c0 70       	breq	800048ba <_ZL15get_ttype_entryP16lsda_header_infom+0x2e>
800048ae:	58 49       	cp.w	r9,4
800048b0:	c1 20       	breq	800048d4 <_ZL15get_ttype_entryP16lsda_header_infom+0x48>
800048b2:	f0 1f 00 0e 	mcall	800048e8 <_ZL15get_ttype_entryP16lsda_header_infom+0x5c>
800048b6:	58 09       	cp.w	r9,0
800048b8:	cf d1       	brne	800048b2 <_ZL15get_ttype_entryP16lsda_header_infom+0x26>
800048ba:	f6 0a 15 02 	lsl	r10,r11,0x2
800048be:	5c 3a       	neg	r10
800048c0:	70 2b       	ld.w	r11,r8[0x8]
800048c2:	70 38       	ld.w	r8,r8[0xc]
800048c4:	1a 99       	mov	r9,sp
800048c6:	f0 0a 00 0a 	add	r10,r8,r10
800048ca:	f0 1f 00 09 	mcall	800048ec <_ZL15get_ttype_entryP16lsda_header_infom+0x60>
800048ce:	40 0c       	lddsp	r12,sp[0x0]
800048d0:	2f fd       	sub	sp,-4
800048d2:	d8 02       	popm	pc
800048d4:	f6 0a 15 03 	lsl	r10,r11,0x3
800048d8:	5c 3a       	neg	r10
800048da:	cf 3b       	rjmp	800048c0 <_ZL15get_ttype_entryP16lsda_header_infom+0x34>
800048dc:	f6 0a 15 01 	lsl	r10,r11,0x1
800048e0:	5c 3a       	neg	r10
800048e2:	ce fb       	rjmp	800048c0 <_ZL15get_ttype_entryP16lsda_header_infom+0x34>
800048e4:	30 0a       	mov	r10,0
800048e6:	ce db       	rjmp	800048c0 <_ZL15get_ttype_entryP16lsda_header_infom+0x34>
800048e8:	80 00       	ld.sh	r0,r0[0x0]
800048ea:	97 e0       	st.w	r11[0x38],r0
800048ec:	80 00       	ld.sh	r0,r0[0x0]
800048ee:	46 e4       	lddsp	r4,sp[0x1b8]

800048f0 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>:
800048f0:	eb cd 40 f8 	pushm	r3-r7,lr
800048f4:	20 1d       	sub	sp,4
800048f6:	5c d9       	com	r9
800048f8:	16 93       	mov	r3,r11
800048fa:	fa c7 ff fc 	sub	r7,sp,-4
800048fe:	30 0b       	mov	r11,0
80004900:	78 35       	ld.w	r5,r12[0xc]
80004902:	18 96       	mov	r6,r12
80004904:	12 05       	add	r5,r9
80004906:	0e da       	st.w	--r7,r10
80004908:	16 99       	mov	r9,r11
8000490a:	16 94       	mov	r4,r11
8000490c:	0b 38       	ld.ub	r8,r5++
8000490e:	f5 d8 c0 07 	bfextu	r10,r8,0x0,0x7
80004912:	f4 09 09 4a 	lsl	r10,r10,r9
80004916:	14 4b       	or	r11,r10
80004918:	e8 08 18 00 	cp.b	r8,r4
8000491c:	c0 e5       	brlt	80004938 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x48>
8000491e:	58 0b       	cp.w	r11,0
80004920:	c0 e0       	breq	8000493c <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x4c>
80004922:	0c 9c       	mov	r12,r6
80004924:	f0 1f 00 0a 	mcall	8000494c <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x5c>
80004928:	1a 9a       	mov	r10,sp
8000492a:	06 9b       	mov	r11,r3
8000492c:	f0 1f 00 09 	mcall	80004950 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x60>
80004930:	c0 a1       	brne	80004944 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x54>
80004932:	18 9b       	mov	r11,r12
80004934:	18 99       	mov	r9,r12
80004936:	ce bb       	rjmp	8000490c <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x1c>
80004938:	2f 99       	sub	r9,-7
8000493a:	ce 9b       	rjmp	8000490c <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x1c>
8000493c:	16 9c       	mov	r12,r11
8000493e:	2f fd       	sub	sp,-4
80004940:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc
80004944:	2f fd       	sub	sp,-4
80004946:	e3 cf 90 f8 	ldm	sp++,r3-r7,pc,r12=1
8000494a:	00 00       	add	r0,r0
8000494c:	80 00       	ld.sh	r0,r0[0x0]
8000494e:	48 8c       	lddpc	r12,8000496c <__cxa_call_unexpected+0x18>
80004950:	80 00       	ld.sh	r0,r0[0x0]
80004952:	46 40       	lddsp	r0,sp[0x190]

80004954 <__cxa_call_unexpected>:
80004954:	eb cd 40 c1 	pushm	r0,r6-r7,lr
80004958:	21 9d       	sub	sp,100
8000495a:	4b d9       	lddpc	r9,80004a4c <__cxa_call_unexpected+0xf8>
8000495c:	fa c8 ff c8 	sub	r8,sp,-56
80004960:	fa cb ff 9c 	sub	r11,sp,-100
80004964:	91 2d       	st.w	r8[0x8],sp
80004966:	91 0b       	st.w	r8[0x0],r11
80004968:	50 c9       	stdsp	sp[0x30],r9
8000496a:	4b a9       	lddpc	r9,80004a50 <__cxa_call_unexpected+0xfc>
8000496c:	50 d9       	stdsp	sp[0x34],r9
8000496e:	4b a9       	lddpc	r9,80004a54 <__cxa_call_unexpected+0x100>
80004970:	50 0c       	stdsp	sp[0x0],r12
80004972:	91 19       	st.w	r8[0x4],r9
80004974:	fa cc ff e8 	sub	r12,sp,-24
80004978:	f0 1f 00 38 	mcall	80004a58 <__cxa_call_unexpected+0x104>
8000497c:	40 0c       	lddsp	r12,sp[0x0]
8000497e:	f0 1f 00 38 	mcall	80004a5c <__cxa_call_unexpected+0x108>
80004982:	40 08       	lddsp	r8,sp[0x0]
80004984:	22 c8       	sub	r8,44
80004986:	70 99       	ld.w	r9,r8[0x24]
80004988:	70 6a       	ld.w	r10,r8[0x18]
8000498a:	70 2c       	ld.w	r12,r8[0x8]
8000498c:	51 59       	stdsp	sp[0x54],r9
8000498e:	70 89       	ld.w	r9,r8[0x20]
80004990:	70 38       	ld.w	r8,r8[0xc]
80004992:	50 28       	stdsp	sp[0x8],r8
80004994:	30 28       	mov	r8,2
80004996:	50 1a       	stdsp	sp[0x4],r10
80004998:	50 39       	stdsp	sp[0xc],r9
8000499a:	50 78       	stdsp	sp[0x1c],r8
8000499c:	f0 1f 00 31 	mcall	80004a60 <__cxa_call_unexpected+0x10c>
800049a0:	40 88       	lddsp	r8,sp[0x20]
800049a2:	50 58       	stdsp	sp[0x14],r8
800049a4:	40 78       	lddsp	r8,sp[0x1c]
800049a6:	58 18       	cp.w	r8,1
800049a8:	c0 e0       	breq	800049c4 <__cxa_call_unexpected+0x70>
800049aa:	30 0b       	mov	r11,0
800049ac:	50 7b       	stdsp	sp[0x1c],r11
800049ae:	f0 1f 00 2e 	mcall	80004a64 <__cxa_call_unexpected+0x110>
800049b2:	30 0a       	mov	r10,0
800049b4:	50 7a       	stdsp	sp[0x1c],r10
800049b6:	f0 1f 00 2c 	mcall	80004a64 <__cxa_call_unexpected+0x110>
800049ba:	3f f8       	mov	r8,-1
800049bc:	40 5c       	lddsp	r12,sp[0x14]
800049be:	50 78       	stdsp	sp[0x1c],r8
800049c0:	f0 1f 00 2a 	mcall	80004a68 <__cxa_call_unexpected+0x114>
800049c4:	40 5c       	lddsp	r12,sp[0x14]
800049c6:	f0 1f 00 26 	mcall	80004a5c <__cxa_call_unexpected+0x108>
800049ca:	f0 1f 00 29 	mcall	80004a6c <__cxa_call_unexpected+0x118>
800049ce:	30 16       	mov	r6,1
800049d0:	78 08       	ld.w	r8,r12[0x0]
800049d2:	30 07       	mov	r7,0
800049d4:	f0 ea 00 2c 	ld.d	r10,r8[44]
800049d8:	f0 c9 ff d4 	sub	r9,r8,-44
800049dc:	0c 6a       	and	r10,r6
800049de:	0e 6b       	and	r11,r7
800049e0:	58 0a       	cp.w	r10,0
800049e2:	5c 2b       	cpc	r11
800049e4:	c1 80       	breq	80004a14 <__cxa_call_unexpected+0xc0>
800049e6:	f2 f9 ff d8 	ld.w	r9,r9[-40]
800049ea:	50 49       	stdsp	sp[0x10],r9
800049ec:	30 18       	mov	r8,1
800049ee:	fa ca ff b4 	sub	r10,sp,-76
800049f2:	50 78       	stdsp	sp[0x1c],r8
800049f4:	40 3b       	lddsp	r11,sp[0xc]
800049f6:	30 0c       	mov	r12,0
800049f8:	f0 1f 00 1e 	mcall	80004a70 <__cxa_call_unexpected+0x11c>
800049fc:	40 4a       	lddsp	r10,sp[0x10]
800049fe:	40 19       	lddsp	r9,sp[0x4]
80004a00:	fa cc ff b4 	sub	r12,sp,-76
80004a04:	f4 fb ff c0 	ld.w	r11,r10[-64]
80004a08:	f0 1f 00 1b 	mcall	80004a74 <__cxa_call_unexpected+0x120>
80004a0c:	18 9a       	mov	r10,r12
80004a0e:	c0 60       	breq	80004a1a <__cxa_call_unexpected+0xc6>
80004a10:	f0 1f 00 1a 	mcall	80004a78 <__cxa_call_unexpected+0x124>
80004a14:	2c 08       	sub	r8,-64
80004a16:	50 48       	stdsp	sp[0x10],r8
80004a18:	ce ab       	rjmp	800049ec <__cxa_call_unexpected+0x98>
80004a1a:	30 18       	mov	r8,1
80004a1c:	40 19       	lddsp	r9,sp[0x4]
80004a1e:	50 78       	stdsp	sp[0x1c],r8
80004a20:	49 7b       	lddpc	r11,80004a7c <__cxa_call_unexpected+0x128>
80004a22:	fa cc ff b4 	sub	r12,sp,-76
80004a26:	f0 1f 00 14 	mcall	80004a74 <__cxa_call_unexpected+0x120>
80004a2a:	c0 b0       	breq	80004a40 <__cxa_call_unexpected+0xec>
80004a2c:	30 4c       	mov	r12,4
80004a2e:	f0 1f 00 15 	mcall	80004a80 <__cxa_call_unexpected+0x12c>
80004a32:	49 58       	lddpc	r8,80004a84 <__cxa_call_unexpected+0x130>
80004a34:	2f 88       	sub	r8,-8
80004a36:	49 5a       	lddpc	r10,80004a88 <__cxa_call_unexpected+0x134>
80004a38:	99 08       	st.w	r12[0x0],r8
80004a3a:	49 1b       	lddpc	r11,80004a7c <__cxa_call_unexpected+0x128>
80004a3c:	f0 1f 00 14 	mcall	80004a8c <__cxa_call_unexpected+0x138>
80004a40:	30 18       	mov	r8,1
80004a42:	40 2c       	lddsp	r12,sp[0x8]
80004a44:	50 78       	stdsp	sp[0x1c],r8
80004a46:	f0 1f 00 13 	mcall	80004a90 <__cxa_call_unexpected+0x13c>
80004a4a:	00 00       	add	r0,r0
80004a4c:	80 00       	ld.sh	r0,r0[0x0]
80004a4e:	4a 94       	lddpc	r4,80004af0 <__gxx_personality_sj0+0x5c>
80004a50:	00 00       	add	r0,r0
80004a52:	00 70       	tst	r0,r0
80004a54:	80 00       	ld.sh	r0,r0[0x0]
80004a56:	49 a0       	lddpc	r0,80004abc <__gxx_personality_sj0+0x28>
80004a58:	80 00       	ld.sh	r0,r0[0x0]
80004a5a:	95 14       	st.w	r10[0x4],r4
80004a5c:	80 00       	ld.sh	r0,r0[0x0]
80004a5e:	50 94       	stdsp	sp[0x24],r4
80004a60:	80 00       	ld.sh	r0,r0[0x0]
80004a62:	4f a4       	lddpc	r4,80004c48 <__gxx_personality_sj0+0x1b4>
80004a64:	80 00       	ld.sh	r0,r0[0x0]
80004a66:	50 10       	stdsp	sp[0x4],r0
80004a68:	80 00       	ld.sh	r0,r0[0x0]
80004a6a:	96 dc       	ld.uh	r12,r11[0xa]
80004a6c:	80 00       	ld.sh	r0,r0[0x0]
80004a6e:	4f 00       	lddpc	r0,80004c2c <__gxx_personality_sj0+0x198>
80004a70:	80 00       	ld.sh	r0,r0[0x0]
80004a72:	47 dc       	lddsp	r12,sp[0x1f4]
80004a74:	80 00       	ld.sh	r0,r0[0x0]
80004a76:	48 f0       	lddpc	r0,80004ab0 <__gxx_personality_sj0+0x1c>
80004a78:	80 00       	ld.sh	r0,r0[0x0]
80004a7a:	45 2c       	lddsp	r12,sp[0x148]
80004a7c:	80 00       	ld.sh	r0,r0[0x0]
80004a7e:	f5 64 80 00 	st.b	r10[-32768],r4
80004a82:	43 38       	lddsp	r8,sp[0xcc]
80004a84:	80 00       	ld.sh	r0,r0[0x0]
80004a86:	f4 d4 80 00 	satsub.w	r4,r10,-32768
80004a8a:	4e b4       	lddpc	r4,80004c34 <__gxx_personality_sj0+0x1a0>
80004a8c:	80 00       	ld.sh	r0,r0[0x0]
80004a8e:	45 94       	lddsp	r4,sp[0x164]
80004a90:	80 00       	ld.sh	r0,r0[0x0]
80004a92:	4f 10       	lddpc	r0,80004c54 <__gxx_personality_sj0+0x1c0>

80004a94 <__gxx_personality_sj0>:
80004a94:	eb cd 40 f1 	pushm	r0,r4-r7,lr
80004a98:	fa cd 00 a8 	sub	sp,sp,168
80004a9c:	50 3c       	stdsp	sp[0xc],r12
80004a9e:	50 7b       	stdsp	sp[0x1c],r11
80004aa0:	50 8a       	stdsp	sp[0x20],r10
80004aa2:	fa cc ff 58 	sub	r12,sp,-168
80004aa6:	fa ca ff 8c 	sub	r10,sp,-116
80004aaa:	fe fb 03 9a 	ld.w	r11,pc[922]
80004aae:	95 0c       	st.w	r10[0x0],r12
80004ab0:	95 2d       	st.w	r10[0x8],sp
80004ab2:	51 bb       	stdsp	sp[0x6c],r11
80004ab4:	fe fb 03 94 	ld.w	r11,pc[916]
80004ab8:	43 0e       	lddsp	lr,sp[0xc0]
80004aba:	51 cb       	stdsp	sp[0x70],r11
80004abc:	fe fb 03 90 	ld.w	r11,pc[912]
80004ac0:	50 2e       	stdsp	sp[0x8],lr
80004ac2:	95 1b       	st.w	r10[0x4],r11
80004ac4:	fa e9 00 24 	st.d	sp[36],r8
80004ac8:	fa cc ff ac 	sub	r12,sp,-84
80004acc:	f0 1f 00 e1 	mcall	80004e50 <__gxx_personality_sj0+0x3bc>
80004ad0:	40 3b       	lddsp	r11,sp[0xc]
80004ad2:	58 1b       	cp.w	r11,1
80004ad4:	c0 b0       	breq	80004aea <__gxx_personality_sj0+0x56>
80004ad6:	30 3a       	mov	r10,3
80004ad8:	50 4a       	stdsp	sp[0x10],r10
80004ada:	fa cc ff ac 	sub	r12,sp,-84
80004ade:	f0 1f 00 de 	mcall	80004e54 <__gxx_personality_sj0+0x3c0>
80004ae2:	40 4c       	lddsp	r12,sp[0x10]
80004ae4:	2d 6d       	sub	sp,-168
80004ae6:	e3 cd 80 f1 	ldm	sp++,r0,r4-r7,pc
80004aea:	30 08       	mov	r8,0
80004aec:	fa ea 00 24 	ld.d	r10,sp[36]
80004af0:	52 88       	stdsp	sp[0xa0],r8
80004af2:	52 98       	stdsp	sp[0xa4],r8
80004af4:	e0 69 aa bc 	mov	r9,43708
80004af8:	ea 19 b8 b1 	orh	r9,0xb8b1
80004afc:	e0 68 d5 00 	mov	r8,54528
80004b00:	ea 18 bc d4 	orh	r8,0xbcd4
80004b04:	f4 08 00 08 	add	r8,r10,r8
80004b08:	f6 09 00 49 	adc	r9,r11,r9
80004b0c:	58 18       	cp.w	r8,1
80004b0e:	5c 29       	cpc	r9
80004b10:	5f ba       	srhi	r10
80004b12:	40 89       	lddsp	r9,sp[0x20]
80004b14:	50 da       	stdsp	sp[0x34],r10
80004b16:	22 c9       	sub	r9,44
80004b18:	50 c9       	stdsp	sp[0x30],r9
80004b1a:	40 78       	lddsp	r8,sp[0x1c]
80004b1c:	58 68       	cp.w	r8,6
80004b1e:	c4 a0       	breq	80004bb2 <__gxx_personality_sj0+0x11e>
80004b20:	3f f8       	mov	r8,-1
80004b22:	40 2c       	lddsp	r12,sp[0x8]
80004b24:	51 68       	stdsp	sp[0x58],r8
80004b26:	f0 1f 00 cd 	mcall	80004e58 <__gxx_personality_sj0+0x3c4>
80004b2a:	50 bc       	stdsp	sp[0x2c],r12
80004b2c:	c6 60       	breq	80004bf8 <__gxx_personality_sj0+0x164>
80004b2e:	fa ca ff 78 	sub	r10,sp,-136
80004b32:	18 9b       	mov	r11,r12
80004b34:	40 2c       	lddsp	r12,sp[0x8]
80004b36:	f0 1f 00 ca 	mcall	80004e5c <__gxx_personality_sj0+0x3c8>
80004b3a:	40 2b       	lddsp	r11,sp[0x8]
80004b3c:	51 1c       	stdsp	sp[0x44],r12
80004b3e:	fb 3c 00 9c 	ld.ub	r12,sp[156]
80004b42:	f0 1f 00 c8 	mcall	80004e60 <__gxx_personality_sj0+0x3cc>
80004b46:	fa cb ff 60 	sub	r11,sp,-160
80004b4a:	52 4c       	stdsp	sp[0x90],r12
80004b4c:	40 2c       	lddsp	r12,sp[0x8]
80004b4e:	f0 1f 00 c6 	mcall	80004e64 <__gxx_personality_sj0+0x3d0>
80004b52:	42 88       	lddsp	r8,sp[0xa0]
80004b54:	f8 c9 00 01 	sub	r9,r12,1
80004b58:	58 08       	cp.w	r8,0
80004b5a:	f2 0c 17 00 	moveq	r12,r9
80004b5e:	58 0c       	cp.w	r12,0
80004b60:	c4 c5       	brlt	80004bf8 <__gxx_personality_sj0+0x164>
80004b62:	c4 e1       	brne	80004bfe <__gxx_personality_sj0+0x16a>
80004b64:	50 1c       	stdsp	sp[0x4],r12
80004b66:	30 18       	mov	r8,1
80004b68:	50 fc       	stdsp	sp[0x3c],r12
80004b6a:	50 5c       	stdsp	sp[0x14],r12
80004b6c:	40 7e       	lddsp	lr,sp[0x1c]
80004b6e:	ed be 00 00 	bld	lr,0x0
80004b72:	c3 00       	breq	80004bd2 <__gxx_personality_sj0+0x13e>
80004b74:	40 79       	lddsp	r9,sp[0x1c]
80004b76:	ed b9 00 03 	bld	r9,0x3
80004b7a:	e0 81 00 f9 	brne	80004d6c <__gxx_personality_sj0+0x2d8>
80004b7e:	58 18       	cp.w	r8,1
80004b80:	e0 80 01 44 	breq	80004e08 <__gxx_personality_sj0+0x374>
80004b84:	40 19       	lddsp	r9,sp[0x4]
80004b86:	58 09       	cp.w	r9,0
80004b88:	e0 85 01 44 	brlt	80004e10 <__gxx_personality_sj0+0x37c>
80004b8c:	3f f8       	mov	r8,-1
80004b8e:	40 8a       	lddsp	r10,sp[0x20]
80004b90:	51 68       	stdsp	sp[0x58],r8
80004b92:	30 0b       	mov	r11,0
80004b94:	40 2c       	lddsp	r12,sp[0x8]
80004b96:	f0 1f 00 b5 	mcall	80004e68 <__gxx_personality_sj0+0x3d4>
80004b9a:	40 1a       	lddsp	r10,sp[0x4]
80004b9c:	30 1b       	mov	r11,1
80004b9e:	40 2c       	lddsp	r12,sp[0x8]
80004ba0:	f0 1f 00 b2 	mcall	80004e68 <__gxx_personality_sj0+0x3d4>
80004ba4:	40 fb       	lddsp	r11,sp[0x3c]
80004ba6:	40 2c       	lddsp	r12,sp[0x8]
80004ba8:	f0 1f 00 b1 	mcall	80004e6c <__gxx_personality_sj0+0x3d8>
80004bac:	30 79       	mov	r9,7
80004bae:	50 49       	stdsp	sp[0x10],r9
80004bb0:	c9 5b       	rjmp	80004ada <__gxx_personality_sj0+0x46>
80004bb2:	58 0a       	cp.w	r10,0
80004bb4:	cb 61       	brne	80004b20 <__gxx_personality_sj0+0x8c>
80004bb6:	72 6e       	ld.w	lr,r9[0x18]
80004bb8:	72 8c       	ld.w	r12,r9[0x20]
80004bba:	72 9b       	ld.w	r11,r9[0x24]
80004bbc:	50 1e       	stdsp	sp[0x4],lr
80004bbe:	50 bc       	stdsp	sp[0x2c],r12
80004bc0:	50 fb       	stdsp	sp[0x3c],r11
80004bc2:	58 0b       	cp.w	r11,0
80004bc4:	e0 81 00 98 	brne	80004cf4 <__gxx_personality_sj0+0x260>
80004bc8:	3f f8       	mov	r8,-1
80004bca:	40 8c       	lddsp	r12,sp[0x20]
80004bcc:	51 68       	stdsp	sp[0x58],r8
80004bce:	f0 1f 00 a9 	mcall	80004e70 <__gxx_personality_sj0+0x3dc>
80004bd2:	58 28       	cp.w	r8,2
80004bd4:	c1 20       	breq	80004bf8 <__gxx_personality_sj0+0x164>
80004bd6:	40 dc       	lddsp	r12,sp[0x34]
80004bd8:	58 0c       	cp.w	r12,0
80004bda:	c0 c1       	brne	80004bf2 <__gxx_personality_sj0+0x15e>
80004bdc:	40 18       	lddsp	r8,sp[0x4]
80004bde:	40 ca       	lddsp	r10,sp[0x30]
80004be0:	40 f9       	lddsp	r9,sp[0x3c]
80004be2:	95 68       	st.w	r10[0x18],r8
80004be4:	40 5e       	lddsp	lr,sp[0x14]
80004be6:	40 bc       	lddsp	r12,sp[0x2c]
80004be8:	42 98       	lddsp	r8,sp[0xa4]
80004bea:	95 99       	st.w	r10[0x24],r9
80004bec:	95 7e       	st.w	r10[0x1c],lr
80004bee:	95 8c       	st.w	r10[0x20],r12
80004bf0:	95 a8       	st.w	r10[0x28],r8
80004bf2:	30 6b       	mov	r11,6
80004bf4:	50 4b       	stdsp	sp[0x10],r11
80004bf6:	c7 2b       	rjmp	80004ada <__gxx_personality_sj0+0x46>
80004bf8:	30 88       	mov	r8,8
80004bfa:	50 48       	stdsp	sp[0x10],r8
80004bfc:	c6 fb       	rjmp	80004ada <__gxx_personality_sj0+0x46>
80004bfe:	30 06       	mov	r6,0
80004c00:	41 18       	lddsp	r8,sp[0x44]
80004c02:	0c 95       	mov	r5,r6
80004c04:	0c 9e       	mov	lr,r6
80004c06:	0c 9b       	mov	r11,r6
80004c08:	0a 99       	mov	r9,r5
80004c0a:	11 3a       	ld.ub	r10,r8++
80004c0c:	ef da c0 07 	bfextu	r7,r10,0x0,0x7
80004c10:	ee 09 09 47 	lsl	r7,r7,r9
80004c14:	2f 99       	sub	r9,-7
80004c16:	0e 4b       	or	r11,r7
80004c18:	fc 0a 18 00 	cp.b	r10,lr
80004c1c:	cf 75       	brlt	80004c0a <__gxx_personality_sj0+0x176>
80004c1e:	0c 9a       	mov	r10,r6
80004c20:	0a 99       	mov	r9,r5
80004c22:	11 37       	ld.ub	r7,r8++
80004c24:	e9 d7 c0 07 	bfextu	r4,r7,0x0,0x7
80004c28:	e8 09 09 44 	lsl	r4,r4,r9
80004c2c:	2f 99       	sub	r9,-7
80004c2e:	08 4a       	or	r10,r4
80004c30:	fc 07 18 00 	cp.b	r7,lr
80004c34:	cf 75       	brlt	80004c22 <__gxx_personality_sj0+0x18e>
80004c36:	20 1c       	sub	r12,1
80004c38:	ce 71       	brne	80004c06 <__gxx_personality_sj0+0x172>
80004c3a:	2f fb       	sub	r11,-1
80004c3c:	50 fb       	stdsp	sp[0x3c],r11
80004c3e:	58 0a       	cp.w	r10,0
80004c40:	c5 c1       	brne	80004cf8 <__gxx_personality_sj0+0x264>
80004c42:	50 5a       	stdsp	sp[0x14],r10
80004c44:	40 fa       	lddsp	r10,sp[0x3c]
80004c46:	58 0a       	cp.w	r10,0
80004c48:	cd 80       	breq	80004bf8 <__gxx_personality_sj0+0x164>
80004c4a:	40 59       	lddsp	r9,sp[0x14]
80004c4c:	58 09       	cp.w	r9,0
80004c4e:	e0 80 00 bc 	breq	80004dc6 <__gxx_personality_sj0+0x332>
80004c52:	40 78       	lddsp	r8,sp[0x1c]
80004c54:	e2 18 00 08 	andl	r8,0x8,COH
80004c58:	51 28       	stdsp	sp[0x48],r8
80004c5a:	e0 80 00 ba 	breq	80004dce <__gxx_personality_sj0+0x33a>
80004c5e:	fe fe 02 16 	ld.w	lr,pc[534]
80004c62:	51 0e       	stdsp	sp[0x40],lr
80004c64:	30 08       	mov	r8,0
80004c66:	50 e8       	stdsp	sp[0x38],r8
80004c68:	30 0b       	mov	r11,0
80004c6a:	40 58       	lddsp	r8,sp[0x14]
80004c6c:	16 99       	mov	r9,r11
80004c6e:	11 3a       	ld.ub	r10,r8++
80004c70:	30 0e       	mov	lr,0
80004c72:	f9 da c0 07 	bfextu	r12,r10,0x0,0x7
80004c76:	f8 09 09 4c 	lsl	r12,r12,r9
80004c7a:	2f 99       	sub	r9,-7
80004c7c:	18 4b       	or	r11,r12
80004c7e:	fc 0a 18 00 	cp.b	r10,lr
80004c82:	cf 65       	brlt	80004c6e <__gxx_personality_sj0+0x1da>
80004c84:	50 68       	stdsp	sp[0x18],r8
80004c86:	59 f9       	cp.w	r9,31
80004c88:	e0 8b 00 0b 	brhi	80004c9e <__gxx_personality_sj0+0x20a>
80004c8c:	ed ba 00 06 	bld	r10,0x6
80004c90:	c0 71       	brne	80004c9e <__gxx_personality_sj0+0x20a>
80004c92:	30 1c       	mov	r12,1
80004c94:	f8 09 09 49 	lsl	r9,r12,r9
80004c98:	5c 39       	neg	r9
80004c9a:	f3 eb 10 0b 	or	r11,r9,r11
80004c9e:	30 0a       	mov	r10,0
80004ca0:	50 1b       	stdsp	sp[0x4],r11
80004ca2:	50 0a       	stdsp	sp[0x0],r10
80004ca4:	14 99       	mov	r9,r10
80004ca6:	14 9c       	mov	r12,r10
80004ca8:	11 3a       	ld.ub	r10,r8++
80004caa:	fd da c0 07 	bfextu	lr,r10,0x0,0x7
80004cae:	fc 09 09 4e 	lsl	lr,lr,r9
80004cb2:	2f 99       	sub	r9,-7
80004cb4:	1c 4c       	or	r12,lr
80004cb6:	30 0e       	mov	lr,0
80004cb8:	fc 0a 18 00 	cp.b	r10,lr
80004cbc:	cf 65       	brlt	80004ca8 <__gxx_personality_sj0+0x214>
80004cbe:	50 0c       	stdsp	sp[0x0],r12
80004cc0:	59 f9       	cp.w	r9,31
80004cc2:	e0 8b 00 0d 	brhi	80004cdc <__gxx_personality_sj0+0x248>
80004cc6:	ed ba 00 06 	bld	r10,0x6
80004cca:	c0 91       	brne	80004cdc <__gxx_personality_sj0+0x248>
80004ccc:	40 0a       	lddsp	r10,sp[0x0]
80004cce:	30 1c       	mov	r12,1
80004cd0:	f8 09 09 49 	lsl	r9,r12,r9
80004cd4:	5c 39       	neg	r9
80004cd6:	f3 ea 10 0a 	or	r10,r9,r10
80004cda:	50 0a       	stdsp	sp[0x0],r10
80004cdc:	40 19       	lddsp	r9,sp[0x4]
80004cde:	58 09       	cp.w	r9,0
80004ce0:	c1 11       	brne	80004d02 <__gxx_personality_sj0+0x26e>
80004ce2:	30 18       	mov	r8,1
80004ce4:	50 e8       	stdsp	sp[0x38],r8
80004ce6:	40 0b       	lddsp	r11,sp[0x0]
80004ce8:	58 0b       	cp.w	r11,0
80004cea:	c6 a0       	breq	80004dbe <__gxx_personality_sj0+0x32a>
80004cec:	40 6a       	lddsp	r10,sp[0x18]
80004cee:	16 0a       	add	r10,r11
80004cf0:	50 5a       	stdsp	sp[0x14],r10
80004cf2:	cb bb       	rjmp	80004c68 <__gxx_personality_sj0+0x1d4>
80004cf4:	30 38       	mov	r8,3
80004cf6:	c3 fb       	rjmp	80004b74 <__gxx_personality_sj0+0xe0>
80004cf8:	20 1a       	sub	r10,1
80004cfa:	42 68       	lddsp	r8,sp[0x98]
80004cfc:	14 08       	add	r8,r10
80004cfe:	50 58       	stdsp	sp[0x14],r8
80004d00:	ca 2b       	rjmp	80004c44 <__gxx_personality_sj0+0x1b0>
80004d02:	40 1e       	lddsp	lr,sp[0x4]
80004d04:	58 0e       	cp.w	lr,0
80004d06:	e0 8a 00 13 	brle	80004d2c <__gxx_personality_sj0+0x298>
80004d0a:	3f fc       	mov	r12,-1
80004d0c:	51 6c       	stdsp	sp[0x58],r12
80004d0e:	fa cc ff 78 	sub	r12,sp,-136
80004d12:	f0 1f 00 5a 	mcall	80004e78 <__gxx_personality_sj0+0x3e4>
80004d16:	c0 90       	breq	80004d28 <__gxx_personality_sj0+0x294>
80004d18:	41 0b       	lddsp	r11,sp[0x40]
80004d1a:	58 0b       	cp.w	r11,0
80004d1c:	ce 50       	breq	80004ce6 <__gxx_personality_sj0+0x252>
80004d1e:	fa ca ff 5c 	sub	r10,sp,-164
80004d22:	f0 1f 00 57 	mcall	80004e7c <__gxx_personality_sj0+0x3e8>
80004d26:	ce 00       	breq	80004ce6 <__gxx_personality_sj0+0x252>
80004d28:	30 38       	mov	r8,3
80004d2a:	c2 1b       	rjmp	80004b6c <__gxx_personality_sj0+0xd8>
80004d2c:	41 0a       	lddsp	r10,sp[0x40]
80004d2e:	58 0a       	cp.w	r10,0
80004d30:	c0 70       	breq	80004d3e <__gxx_personality_sj0+0x2aa>
80004d32:	41 29       	lddsp	r9,sp[0x48]
80004d34:	58 09       	cp.w	r9,0
80004d36:	c0 41       	brne	80004d3e <__gxx_personality_sj0+0x2aa>
80004d38:	40 d8       	lddsp	r8,sp[0x34]
80004d3a:	58 08       	cp.w	r8,0
80004d3c:	c3 30       	breq	80004da2 <__gxx_personality_sj0+0x30e>
80004d3e:	42 58       	lddsp	r8,sp[0x94]
80004d40:	5c db       	com	r11
80004d42:	30 0a       	mov	r10,0
80004d44:	f0 0b 00 0b 	add	r11,r8,r11
80004d48:	14 98       	mov	r8,r10
80004d4a:	17 39       	ld.ub	r9,r11++
80004d4c:	f9 d9 c0 07 	bfextu	r12,r9,0x0,0x7
80004d50:	f8 08 09 4c 	lsl	r12,r12,r8
80004d54:	2f 98       	sub	r8,-7
80004d56:	18 4a       	or	r10,r12
80004d58:	30 0c       	mov	r12,0
80004d5a:	f8 09 18 00 	cp.b	r9,r12
80004d5e:	cf 65       	brlt	80004d4a <__gxx_personality_sj0+0x2b6>
80004d60:	58 0a       	cp.w	r10,0
80004d62:	5f 08       	sreq	r8
80004d64:	58 08       	cp.w	r8,0
80004d66:	cc 00       	breq	80004ce6 <__gxx_personality_sj0+0x252>
80004d68:	30 38       	mov	r8,3
80004d6a:	c0 1b       	rjmp	80004b6c <__gxx_personality_sj0+0xd8>
80004d6c:	40 da       	lddsp	r10,sp[0x34]
80004d6e:	58 0a       	cp.w	r10,0
80004d70:	fe 91 ff 07 	brne	80004b7e <__gxx_personality_sj0+0xea>
80004d74:	58 18       	cp.w	r8,1
80004d76:	fe 90 ff 29 	breq	80004bc8 <__gxx_personality_sj0+0x134>
80004d7a:	40 1b       	lddsp	r11,sp[0x4]
80004d7c:	58 0b       	cp.w	r11,0
80004d7e:	fe 94 ff 07 	brge	80004b8c <__gxx_personality_sj0+0xf8>
80004d82:	3f f8       	mov	r8,-1
80004d84:	fa ca ff 78 	sub	r10,sp,-136
80004d88:	40 bb       	lddsp	r11,sp[0x2c]
80004d8a:	51 68       	stdsp	sp[0x58],r8
80004d8c:	40 2c       	lddsp	r12,sp[0x8]
80004d8e:	f0 1f 00 34 	mcall	80004e5c <__gxx_personality_sj0+0x3c8>
80004d92:	40 2b       	lddsp	r11,sp[0x8]
80004d94:	fb 3c 00 9c 	ld.ub	r12,sp[156]
80004d98:	f0 1f 00 32 	mcall	80004e60 <__gxx_personality_sj0+0x3cc>
80004d9c:	40 ca       	lddsp	r10,sp[0x30]
80004d9e:	95 9c       	st.w	r10[0x24],r12
80004da0:	cf 6a       	rjmp	80004b8c <__gxx_personality_sj0+0xf8>
80004da2:	3f fe       	mov	lr,-1
80004da4:	42 9a       	lddsp	r10,sp[0xa4]
80004da6:	51 6e       	stdsp	sp[0x58],lr
80004da8:	40 19       	lddsp	r9,sp[0x4]
80004daa:	41 0b       	lddsp	r11,sp[0x40]
80004dac:	fa cc ff 78 	sub	r12,sp,-136
80004db0:	f0 1f 00 34 	mcall	80004e80 <__gxx_personality_sj0+0x3ec>
80004db4:	18 98       	mov	r8,r12
80004db6:	ec 18 00 01 	eorl	r8,0x1
80004dba:	5c 58       	castu.b	r8
80004dbc:	cd 4b       	rjmp	80004d64 <__gxx_personality_sj0+0x2d0>
80004dbe:	40 ee       	lddsp	lr,sp[0x38]
80004dc0:	58 0e       	cp.w	lr,0
80004dc2:	fe 90 ff 1b 	breq	80004bf8 <__gxx_personality_sj0+0x164>
80004dc6:	30 09       	mov	r9,0
80004dc8:	30 28       	mov	r8,2
80004dca:	50 19       	stdsp	sp[0x4],r9
80004dcc:	cd 0a       	rjmp	80004b6c <__gxx_personality_sj0+0xd8>
80004dce:	40 dc       	lddsp	r12,sp[0x34]
80004dd0:	58 0c       	cp.w	r12,0
80004dd2:	c0 40       	breq	80004dda <__gxx_personality_sj0+0x346>
80004dd4:	4a cb       	lddpc	r11,80004e84 <__gxx_personality_sj0+0x3f0>
80004dd6:	51 0b       	stdsp	sp[0x40],r11
80004dd8:	c4 6b       	rjmp	80004c64 <__gxx_personality_sj0+0x1d0>
80004dda:	40 8a       	lddsp	r10,sp[0x20]
80004ddc:	30 0b       	mov	r11,0
80004dde:	f4 e6 00 00 	ld.d	r6,r10[0]
80004de2:	30 1a       	mov	r10,1
80004de4:	ef eb 00 09 	and	r9,r7,r11
80004de8:	ed ea 00 08 	and	r8,r6,r10
80004dec:	58 08       	cp.w	r8,0
80004dee:	5c 29       	cpc	r9
80004df0:	c0 90       	breq	80004e02 <__gxx_personality_sj0+0x36e>
80004df2:	40 89       	lddsp	r9,sp[0x20]
80004df4:	f2 f8 ff d8 	ld.w	r8,r9[-40]
80004df8:	52 98       	stdsp	sp[0xa4],r8
80004dfa:	f0 f8 ff c0 	ld.w	r8,r8[-64]
80004dfe:	51 08       	stdsp	sp[0x40],r8
80004e00:	c3 2b       	rjmp	80004c64 <__gxx_personality_sj0+0x1d0>
80004e02:	40 88       	lddsp	r8,sp[0x20]
80004e04:	2e c8       	sub	r8,-20
80004e06:	cf 9b       	rjmp	80004df8 <__gxx_personality_sj0+0x364>
80004e08:	3f f8       	mov	r8,-1
80004e0a:	51 68       	stdsp	sp[0x58],r8
80004e0c:	f0 1f 00 1f 	mcall	80004e88 <__gxx_personality_sj0+0x3f4>
80004e10:	30 28       	mov	r8,2
80004e12:	51 68       	stdsp	sp[0x58],r8
80004e14:	f0 1f 00 1e 	mcall	80004e8c <__gxx_personality_sj0+0x3f8>
80004e18:	41 6e       	lddsp	lr,sp[0x58]
80004e1a:	41 7c       	lddsp	r12,sp[0x5c]
80004e1c:	51 4e       	stdsp	sp[0x50],lr
80004e1e:	51 3c       	stdsp	sp[0x4c],r12
80004e20:	58 1e       	cp.w	lr,1
80004e22:	c0 a0       	breq	80004e36 <__gxx_personality_sj0+0x3a2>
80004e24:	30 08       	mov	r8,0
80004e26:	51 68       	stdsp	sp[0x58],r8
80004e28:	f0 1f 00 1a 	mcall	80004e90 <__gxx_personality_sj0+0x3fc>
80004e2c:	3f f8       	mov	r8,-1
80004e2e:	41 3c       	lddsp	r12,sp[0x4c]
80004e30:	51 68       	stdsp	sp[0x58],r8
80004e32:	f0 1f 00 19 	mcall	80004e94 <__gxx_personality_sj0+0x400>
80004e36:	41 3c       	lddsp	r12,sp[0x4c]
80004e38:	f0 1f 00 18 	mcall	80004e98 <__gxx_personality_sj0+0x404>
80004e3c:	41 48       	lddsp	r8,sp[0x50]
80004e3e:	51 68       	stdsp	sp[0x58],r8
80004e40:	f0 1f 00 12 	mcall	80004e88 <__gxx_personality_sj0+0x3f4>
80004e44:	80 00       	ld.sh	r0,r0[0x0]
80004e46:	4a 94       	lddpc	r4,80004ee8 <_ZNSt13bad_exceptionD0Ev>
80004e48:	00 00       	add	r0,r0
80004e4a:	00 80       	andn	r0,r0
80004e4c:	80 00       	ld.sh	r0,r0[0x0]
80004e4e:	4e 18       	lddpc	r8,80004fd0 <__cxa_call_terminate+0xc>
80004e50:	80 00       	ld.sh	r0,r0[0x0]
80004e52:	95 14       	st.w	r10[0x4],r4
80004e54:	80 00       	ld.sh	r0,r0[0x0]
80004e56:	95 24       	st.w	r10[0x8],r4
80004e58:	80 00       	ld.sh	r0,r0[0x0]
80004e5a:	95 6e       	st.w	r10[0x18],lr
80004e5c:	80 00       	ld.sh	r0,r0[0x0]
80004e5e:	47 dc       	lddsp	r12,sp[0x1f4]
80004e60:	80 00       	ld.sh	r0,r0[0x0]
80004e62:	46 80       	lddsp	r0,sp[0x1a0]
80004e64:	80 00       	ld.sh	r0,r0[0x0]
80004e66:	95 56       	st.w	r10[0x14],r6
80004e68:	80 00       	ld.sh	r0,r0[0x0]
80004e6a:	95 44       	st.w	r10[0x10],r4
80004e6c:	80 00       	ld.sh	r0,r0[0x0]
80004e6e:	95 66       	st.w	r10[0x18],r6
80004e70:	80 00       	ld.sh	r0,r0[0x0]
80004e72:	4f c4       	lddpc	r4,80005060 <__cxa_end_catch+0x50>
80004e74:	80 00       	ld.sh	r0,r0[0x0]
80004e76:	f5 48 80 00 	st.w	r10[-32768],r8
80004e7a:	48 8c       	lddpc	r12,80004e98 <__gxx_personality_sj0+0x404>
80004e7c:	80 00       	ld.sh	r0,r0[0x0]
80004e7e:	46 40       	lddsp	r0,sp[0x190]
80004e80:	80 00       	ld.sh	r0,r0[0x0]
80004e82:	48 f0       	lddpc	r0,80004ebc <_ZNSt13bad_exceptionD1Ev+0x8>
80004e84:	80 00       	ld.sh	r0,r0[0x0]
80004e86:	f5 20 80 00 	ld.sb	r0,r10[-32768]
80004e8a:	4f 90       	lddpc	r0,8000506c <__cxa_end_catch+0x5c>
80004e8c:	80 00       	ld.sh	r0,r0[0x0]
80004e8e:	4f b0       	lddpc	r0,80005078 <__cxa_end_catch+0x68>
80004e90:	80 00       	ld.sh	r0,r0[0x0]
80004e92:	50 10       	stdsp	sp[0x4],r0
80004e94:	80 00       	ld.sh	r0,r0[0x0]
80004e96:	96 dc       	ld.uh	r12,r11[0xa]
80004e98:	80 00       	ld.sh	r0,r0[0x0]
80004e9a:	50 94       	stdsp	sp[0x24],r4

80004e9c <_ZNSt9exceptionD2Ev>:
80004e9c:	48 28       	lddpc	r8,80004ea4 <_ZNSt9exceptionD2Ev+0x8>
80004e9e:	2f 88       	sub	r8,-8
80004ea0:	99 08       	st.w	r12[0x0],r8
80004ea2:	5e fc       	retal	r12
80004ea4:	80 00       	ld.sh	r0,r0[0x0]
80004ea6:	f4 e8 48 28 	ld.d	r8,r10[18472]

80004ea8 <_ZNSt9exceptionD1Ev>:
80004ea8:	48 28       	lddpc	r8,80004eb0 <_ZNSt9exceptionD1Ev+0x8>
80004eaa:	2f 88       	sub	r8,-8
80004eac:	99 08       	st.w	r12[0x0],r8
80004eae:	5e fc       	retal	r12
80004eb0:	80 00       	ld.sh	r0,r0[0x0]
80004eb2:	f4 e8 48 28 	ld.d	r8,r10[18472]

80004eb4 <_ZNSt13bad_exceptionD1Ev>:
80004eb4:	48 28       	lddpc	r8,80004ebc <_ZNSt13bad_exceptionD1Ev+0x8>
80004eb6:	2f 88       	sub	r8,-8
80004eb8:	99 08       	st.w	r12[0x0],r8
80004eba:	5e fc       	retal	r12
80004ebc:	80 00       	ld.sh	r0,r0[0x0]
80004ebe:	f4 e8 48 1c 	ld.d	r8,r10[18460]

80004ec0 <_ZNKSt9exception4whatEv>:
80004ec0:	48 1c       	lddpc	r12,80004ec4 <_ZNKSt9exception4whatEv+0x4>
80004ec2:	5e fc       	retal	r12
80004ec4:	80 00       	ld.sh	r0,r0[0x0]
80004ec6:	f5 88       	*unknown*

80004ec8 <_ZNKSt13bad_exception4whatEv>:
80004ec8:	48 1c       	lddpc	r12,80004ecc <_ZNKSt13bad_exception4whatEv+0x4>
80004eca:	5e fc       	retal	r12
80004ecc:	80 00       	ld.sh	r0,r0[0x0]
80004ece:	f5 98       	*unknown*

80004ed0 <_ZNSt9exceptionD0Ev>:
80004ed0:	d4 01       	pushm	lr
80004ed2:	48 48       	lddpc	r8,80004ee0 <_ZNSt9exceptionD0Ev+0x10>
80004ed4:	2f 88       	sub	r8,-8
80004ed6:	99 08       	st.w	r12[0x0],r8
80004ed8:	f0 1f 00 03 	mcall	80004ee4 <_ZNSt9exceptionD0Ev+0x14>
80004edc:	d8 02       	popm	pc
80004ede:	00 00       	add	r0,r0
80004ee0:	80 00       	ld.sh	r0,r0[0x0]
80004ee2:	f4 e8 80 00 	ld.d	r8,r10[-32768]
80004ee6:	41 d0       	lddsp	r0,sp[0x74]

80004ee8 <_ZNSt13bad_exceptionD0Ev>:
80004ee8:	d4 01       	pushm	lr
80004eea:	48 48       	lddpc	r8,80004ef8 <_ZNSt13bad_exceptionD0Ev+0x10>
80004eec:	2f 88       	sub	r8,-8
80004eee:	99 08       	st.w	r12[0x0],r8
80004ef0:	f0 1f 00 03 	mcall	80004efc <_ZNSt13bad_exceptionD0Ev+0x14>
80004ef4:	d8 02       	popm	pc
80004ef6:	00 00       	add	r0,r0
80004ef8:	80 00       	ld.sh	r0,r0[0x0]
80004efa:	f4 e8 80 00 	ld.d	r8,r10[-32768]
80004efe:	41 d0       	lddsp	r0,sp[0x74]

80004f00 <__cxa_get_globals_fast>:
80004f00:	48 1c       	lddpc	r12,80004f04 <__cxa_get_globals_fast+0x4>
80004f02:	5e fc       	retal	r12
80004f04:	00 00       	add	r0,r0
80004f06:	0f 7c       	ld.ub	r12,--r7

80004f08 <__cxa_get_globals>:
80004f08:	48 1c       	lddpc	r12,80004f0c <__cxa_get_globals+0x4>
80004f0a:	5e fc       	retal	r12
80004f0c:	00 00       	add	r0,r0
80004f0e:	0f 7c       	ld.ub	r12,--r7

80004f10 <_ZN10__cxxabiv111__terminateEPFvvE>:
80004f10:	eb cd 40 81 	pushm	r0,r7,lr
80004f14:	21 0d       	sub	sp,64
80004f16:	fa c9 ff c0 	sub	r9,sp,-64
80004f1a:	fa c8 ff d4 	sub	r8,sp,-44
80004f1e:	91 09       	st.w	r8[0x0],r9
80004f20:	91 2d       	st.w	r8[0x8],sp
80004f22:	49 49       	lddpc	r9,80004f70 <_ZN10__cxxabiv111__terminateEPFvvE+0x60>
80004f24:	50 99       	stdsp	sp[0x24],r9
80004f26:	49 49       	lddpc	r9,80004f74 <_ZN10__cxxabiv111__terminateEPFvvE+0x64>
80004f28:	50 a9       	stdsp	sp[0x28],r9
80004f2a:	49 49       	lddpc	r9,80004f78 <_ZN10__cxxabiv111__terminateEPFvvE+0x68>
80004f2c:	50 0c       	stdsp	sp[0x0],r12
80004f2e:	91 19       	st.w	r8[0x4],r9
80004f30:	fa cc ff f4 	sub	r12,sp,-12
80004f34:	f0 1f 00 12 	mcall	80004f7c <_ZN10__cxxabiv111__terminateEPFvvE+0x6c>
80004f38:	30 28       	mov	r8,2
80004f3a:	50 48       	stdsp	sp[0x10],r8
80004f3c:	40 08       	lddsp	r8,sp[0x0]
80004f3e:	5d 18       	icall	r8
80004f40:	f0 1f 00 10 	mcall	80004f80 <_ZN10__cxxabiv111__terminateEPFvvE+0x70>
80004f44:	40 48       	lddsp	r8,sp[0x10]
80004f46:	40 59       	lddsp	r9,sp[0x14]
80004f48:	50 28       	stdsp	sp[0x8],r8
80004f4a:	50 19       	stdsp	sp[0x4],r9
80004f4c:	58 18       	cp.w	r8,1
80004f4e:	c0 a0       	breq	80004f62 <_ZN10__cxxabiv111__terminateEPFvvE+0x52>
80004f50:	30 08       	mov	r8,0
80004f52:	50 48       	stdsp	sp[0x10],r8
80004f54:	f0 1f 00 0c 	mcall	80004f84 <_ZN10__cxxabiv111__terminateEPFvvE+0x74>
80004f58:	3f f8       	mov	r8,-1
80004f5a:	40 1c       	lddsp	r12,sp[0x4]
80004f5c:	50 48       	stdsp	sp[0x10],r8
80004f5e:	f0 1f 00 0b 	mcall	80004f88 <_ZN10__cxxabiv111__terminateEPFvvE+0x78>
80004f62:	40 1c       	lddsp	r12,sp[0x4]
80004f64:	f0 1f 00 0a 	mcall	80004f8c <_ZN10__cxxabiv111__terminateEPFvvE+0x7c>
80004f68:	40 29       	lddsp	r9,sp[0x8]
80004f6a:	50 49       	stdsp	sp[0x10],r9
80004f6c:	f0 1f 00 05 	mcall	80004f80 <_ZN10__cxxabiv111__terminateEPFvvE+0x70>
80004f70:	80 00       	ld.sh	r0,r0[0x0]
80004f72:	4a 94       	lddpc	r4,80005014 <__cxa_end_catch+0x4>
80004f74:	00 00       	add	r0,r0
80004f76:	00 90       	mov	r0,r0
80004f78:	80 00       	ld.sh	r0,r0[0x0]
80004f7a:	4f 44       	lddpc	r4,80005148 <__cxa_begin_catch+0xb4>
80004f7c:	80 00       	ld.sh	r0,r0[0x0]
80004f7e:	95 14       	st.w	r10[0x4],r4
80004f80:	80 00       	ld.sh	r0,r0[0x0]
80004f82:	97 e0       	st.w	r11[0x38],r0
80004f84:	80 00       	ld.sh	r0,r0[0x0]
80004f86:	50 10       	stdsp	sp[0x4],r0
80004f88:	80 00       	ld.sh	r0,r0[0x0]
80004f8a:	96 dc       	ld.uh	r12,r11[0xa]
80004f8c:	80 00       	ld.sh	r0,r0[0x0]
80004f8e:	50 94       	stdsp	sp[0x24],r4

80004f90 <_ZSt9terminatev>:
80004f90:	d4 01       	pushm	lr
80004f92:	48 38       	lddpc	r8,80004f9c <_ZSt9terminatev+0xc>
80004f94:	70 0c       	ld.w	r12,r8[0x0]
80004f96:	f0 1f 00 03 	mcall	80004fa0 <_ZSt9terminatev+0x10>
80004f9a:	00 00       	add	r0,r0
80004f9c:	00 00       	add	r0,r0
80004f9e:	01 10       	ld.sh	r0,r0++
80004fa0:	80 00       	ld.sh	r0,r0[0x0]
80004fa2:	4f 10       	lddpc	r0,80005164 <__cxa_begin_catch+0xd0>

80004fa4 <_ZN10__cxxabiv112__unexpectedEPFvvE>:
80004fa4:	d4 01       	pushm	lr
80004fa6:	5d 1c       	icall	r12
80004fa8:	f0 1f 00 01 	mcall	80004fac <_ZN10__cxxabiv112__unexpectedEPFvvE+0x8>
80004fac:	80 00       	ld.sh	r0,r0[0x0]
80004fae:	4f 90       	lddpc	r0,80005190 <_ZNSt9type_infoD0Ev>

80004fb0 <_ZSt10unexpectedv>:
80004fb0:	d4 01       	pushm	lr
80004fb2:	48 38       	lddpc	r8,80004fbc <_ZSt10unexpectedv+0xc>
80004fb4:	70 0c       	ld.w	r12,r8[0x0]
80004fb6:	f0 1f 00 03 	mcall	80004fc0 <_ZSt10unexpectedv+0x10>
80004fba:	00 00       	add	r0,r0
80004fbc:	00 00       	add	r0,r0
80004fbe:	01 0c       	ld.w	r12,r0++
80004fc0:	80 00       	ld.sh	r0,r0[0x0]
80004fc2:	4f a4       	lddpc	r4,800051a8 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>

80004fc4 <__cxa_call_terminate>:
80004fc4:	eb cd 40 80 	pushm	r7,lr
80004fc8:	18 97       	mov	r7,r12
80004fca:	58 0c       	cp.w	r12,0
80004fcc:	c1 50       	breq	80004ff6 <__cxa_call_terminate+0x32>
80004fce:	f0 1f 00 0e 	mcall	80005004 <__cxa_call_terminate+0x40>
80004fd2:	ee ea 00 00 	ld.d	r10,r7[0]
80004fd6:	e0 68 d5 00 	mov	r8,54528
80004fda:	ea 18 bc d4 	orh	r8,0xbcd4
80004fde:	e0 69 aa bc 	mov	r9,43708
80004fe2:	ea 19 b8 b1 	orh	r9,0xb8b1
80004fe6:	f4 08 00 08 	add	r8,r10,r8
80004fea:	f6 09 00 49 	adc	r9,r11,r9
80004fee:	58 18       	cp.w	r8,1
80004ff0:	5c 29       	cpc	r9
80004ff2:	e0 88 00 04 	brls	80004ffa <__cxa_call_terminate+0x36>
80004ff6:	f0 1f 00 05 	mcall	80005008 <__cxa_call_terminate+0x44>
80004ffa:	ee fc ff e0 	ld.w	r12,r7[-32]
80004ffe:	f0 1f 00 04 	mcall	8000500c <__cxa_call_terminate+0x48>
80005002:	00 00       	add	r0,r0
80005004:	80 00       	ld.sh	r0,r0[0x0]
80005006:	50 94       	stdsp	sp[0x24],r4
80005008:	80 00       	ld.sh	r0,r0[0x0]
8000500a:	4f 90       	lddpc	r0,800051ec <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv+0x22>
8000500c:	80 00       	ld.sh	r0,r0[0x0]
8000500e:	4f 10       	lddpc	r0,800051d0 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv+0x6>

80005010 <__cxa_end_catch>:
80005010:	eb cd 40 c0 	pushm	r6-r7,lr
80005014:	f0 1f 00 1d 	mcall	80005088 <__cxa_end_catch+0x78>
80005018:	18 99       	mov	r9,r12
8000501a:	78 08       	ld.w	r8,r12[0x0]
8000501c:	58 08       	cp.w	r8,0
8000501e:	c1 b0       	breq	80005054 <__cxa_end_catch+0x44>
80005020:	f0 e6 00 2c 	ld.d	r6,r8[44]
80005024:	e0 6a d5 00 	mov	r10,54528
80005028:	ea 1a bc d4 	orh	r10,0xbcd4
8000502c:	e0 6b aa bc 	mov	r11,43708
80005030:	ea 1b b8 b1 	orh	r11,0xb8b1
80005034:	ec 0a 00 0a 	add	r10,r6,r10
80005038:	ee 0b 00 4b 	adc	r11,r7,r11
8000503c:	58 1a       	cp.w	r10,1
8000503e:	5c 2b       	cpc	r11
80005040:	e0 8b 00 0c 	brhi	80005058 <__cxa_end_catch+0x48>
80005044:	70 5a       	ld.w	r10,r8[0x14]
80005046:	58 0a       	cp.w	r10,0
80005048:	c1 05       	brlt	80005068 <__cxa_end_catch+0x58>
8000504a:	20 1a       	sub	r10,1
8000504c:	c1 30       	breq	80005072 <__cxa_end_catch+0x62>
8000504e:	5b fa       	cp.w	r10,-1
80005050:	c1 90       	breq	80005082 <__cxa_end_catch+0x72>
80005052:	91 5a       	st.w	r8[0x14],r10
80005054:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80005058:	f0 cc ff d4 	sub	r12,r8,-44
8000505c:	30 08       	mov	r8,0
8000505e:	93 08       	st.w	r9[0x0],r8
80005060:	f0 1f 00 0b 	mcall	8000508c <__cxa_end_catch+0x7c>
80005064:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80005068:	2f fa       	sub	r10,-1
8000506a:	cf 41       	brne	80005052 <__cxa_end_catch+0x42>
8000506c:	70 4b       	ld.w	r11,r8[0x10]
8000506e:	99 0b       	st.w	r12[0x0],r11
80005070:	cf 1b       	rjmp	80005052 <__cxa_end_catch+0x42>
80005072:	f0 cc ff d4 	sub	r12,r8,-44
80005076:	70 48       	ld.w	r8,r8[0x10]
80005078:	93 08       	st.w	r9[0x0],r8
8000507a:	f0 1f 00 05 	mcall	8000508c <__cxa_end_catch+0x7c>
8000507e:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80005082:	f0 1f 00 04 	mcall	80005090 <__cxa_end_catch+0x80>
80005086:	00 00       	add	r0,r0
80005088:	80 00       	ld.sh	r0,r0[0x0]
8000508a:	4f 00       	lddpc	r0,80005248 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastElNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x36>
8000508c:	80 00       	ld.sh	r0,r0[0x0]
8000508e:	96 00       	ld.sh	r0,r11[0x0]
80005090:	80 00       	ld.sh	r0,r0[0x0]
80005092:	4f 90       	lddpc	r0,80005274 <_ZN10__cxxabiv117__class_type_infoD1Ev+0x10>

80005094 <__cxa_begin_catch>:
80005094:	eb cd 40 81 	pushm	r0,r7,lr
80005098:	20 fd       	sub	sp,60
8000509a:	fa c9 ff c4 	sub	r9,sp,-60
8000509e:	fa c8 ff d8 	sub	r8,sp,-40
800050a2:	91 09       	st.w	r8[0x0],r9
800050a4:	91 2d       	st.w	r8[0x8],sp
800050a6:	4a 89       	lddpc	r9,80005144 <__cxa_begin_catch+0xb0>
800050a8:	50 89       	stdsp	sp[0x20],r9
800050aa:	4a 89       	lddpc	r9,80005148 <__cxa_begin_catch+0xb4>
800050ac:	50 99       	stdsp	sp[0x24],r9
800050ae:	4a 89       	lddpc	r9,8000514c <__cxa_begin_catch+0xb8>
800050b0:	50 0c       	stdsp	sp[0x0],r12
800050b2:	91 19       	st.w	r8[0x4],r9
800050b4:	fa cc ff f8 	sub	r12,sp,-8
800050b8:	f0 1f 00 26 	mcall	80005150 <__cxa_begin_catch+0xbc>
800050bc:	f0 1f 00 26 	mcall	80005154 <__cxa_begin_catch+0xc0>
800050c0:	40 08       	lddsp	r8,sp[0x0]
800050c2:	e0 69 aa bc 	mov	r9,43708
800050c6:	ea 19 b8 b1 	orh	r9,0xb8b1
800050ca:	f0 ea 00 00 	ld.d	r10,r8[0]
800050ce:	e0 68 d5 00 	mov	r8,54528
800050d2:	ea 18 bc d4 	orh	r8,0xbcd4
800050d6:	10 0a       	add	r10,r8
800050d8:	f6 09 00 4b 	adc	r11,r11,r9
800050dc:	40 08       	lddsp	r8,sp[0x0]
800050de:	78 09       	ld.w	r9,r12[0x0]
800050e0:	22 c8       	sub	r8,44
800050e2:	58 1a       	cp.w	r10,1
800050e4:	5c 2b       	cpc	r11
800050e6:	e0 88 00 0e 	brls	80005102 <__cxa_begin_catch+0x6e>
800050ea:	58 09       	cp.w	r9,0
800050ec:	c1 d1       	brne	80005126 <__cxa_begin_catch+0x92>
800050ee:	99 08       	st.w	r12[0x0],r8
800050f0:	50 19       	stdsp	sp[0x4],r9
800050f2:	fa cc ff f8 	sub	r12,sp,-8
800050f6:	f0 1f 00 19 	mcall	80005158 <__cxa_begin_catch+0xc4>
800050fa:	40 1c       	lddsp	r12,sp[0x4]
800050fc:	2f 1d       	sub	sp,-60
800050fe:	e3 cd 80 81 	ldm	sp++,r0,r7,pc
80005102:	70 5a       	ld.w	r10,r8[0x14]
80005104:	58 0a       	cp.w	r10,0
80005106:	c0 d5       	brlt	80005120 <__cxa_begin_catch+0x8c>
80005108:	2f fa       	sub	r10,-1
8000510a:	91 5a       	st.w	r8[0x14],r10
8000510c:	78 1a       	ld.w	r10,r12[0x4]
8000510e:	20 1a       	sub	r10,1
80005110:	99 1a       	st.w	r12[0x4],r10
80005112:	10 39       	cp.w	r9,r8
80005114:	c0 30       	breq	8000511a <__cxa_begin_catch+0x86>
80005116:	91 49       	st.w	r8[0x10],r9
80005118:	99 08       	st.w	r12[0x0],r8
8000511a:	70 a8       	ld.w	r8,r8[0x28]
8000511c:	50 18       	stdsp	sp[0x4],r8
8000511e:	ce ab       	rjmp	800050f2 <__cxa_begin_catch+0x5e>
80005120:	f4 0a 11 01 	rsub	r10,r10,1
80005124:	cf 3b       	rjmp	8000510a <__cxa_begin_catch+0x76>
80005126:	30 18       	mov	r8,1
80005128:	50 38       	stdsp	sp[0xc],r8
8000512a:	f0 1f 00 0d 	mcall	8000515c <__cxa_begin_catch+0xc8>
8000512e:	40 4c       	lddsp	r12,sp[0x10]
80005130:	40 58       	lddsp	r8,sp[0x14]
80005132:	5b f8       	cp.w	r8,-1
80005134:	c0 50       	breq	8000513e <__cxa_begin_catch+0xaa>
80005136:	3f f8       	mov	r8,-1
80005138:	50 38       	stdsp	sp[0xc],r8
8000513a:	f0 1f 00 0a 	mcall	80005160 <__cxa_begin_catch+0xcc>
8000513e:	50 38       	stdsp	sp[0xc],r8
80005140:	f0 1f 00 09 	mcall	80005164 <__cxa_begin_catch+0xd0>
80005144:	80 00       	ld.sh	r0,r0[0x0]
80005146:	4a 94       	lddpc	r4,800051e8 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv+0x1e>
80005148:	00 00       	add	r0,r0
8000514a:	00 a0       	st.w	r0++,r0
8000514c:	80 00       	ld.sh	r0,r0[0x0]
8000514e:	51 2e       	stdsp	sp[0x48],lr
80005150:	80 00       	ld.sh	r0,r0[0x0]
80005152:	95 14       	st.w	r10[0x4],r4
80005154:	80 00       	ld.sh	r0,r0[0x0]
80005156:	4f 08       	lddpc	r8,80005314 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x58>
80005158:	80 00       	ld.sh	r0,r0[0x0]
8000515a:	95 24       	st.w	r10[0x8],r4
8000515c:	80 00       	ld.sh	r0,r0[0x0]
8000515e:	4f 90       	lddpc	r0,80005340 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x84>
80005160:	80 00       	ld.sh	r0,r0[0x0]
80005162:	96 dc       	ld.uh	r12,r11[0xa]
80005164:	80 00       	ld.sh	r0,r0[0x0]
80005166:	49 54       	lddpc	r4,800051b8 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x10>

80005168 <_ZNSt9type_infoD2Ev>:
80005168:	48 28       	lddpc	r8,80005170 <_ZNSt9type_infoD2Ev+0x8>
8000516a:	2f 88       	sub	r8,-8
8000516c:	99 08       	st.w	r12[0x0],r8
8000516e:	5e fc       	retal	r12
80005170:	80 00       	ld.sh	r0,r0[0x0]
80005172:	f5 ac 48 28 	stc0.w	r12[0x10a0],cr8

80005174 <_ZNSt9type_infoD1Ev>:
80005174:	48 28       	lddpc	r8,8000517c <_ZNSt9type_infoD1Ev+0x8>
80005176:	2f 88       	sub	r8,-8
80005178:	99 08       	st.w	r12[0x0],r8
8000517a:	5e fc       	retal	r12
8000517c:	80 00       	ld.sh	r0,r0[0x0]
8000517e:	f5 ac 5e fd 	stc0.w	r12[0x17f4],cr14

80005180 <_ZNKSt9type_info14__is_pointer_pEv>:
80005180:	5e fd       	retal	0

80005182 <_ZNKSt9type_info15__is_function_pEv>:
80005182:	5e fd       	retal	0

80005184 <_ZNKSt9type_info10__do_catchEPKS_PPvj>:
80005184:	78 18       	ld.w	r8,r12[0x4]
80005186:	76 19       	ld.w	r9,r11[0x4]
80005188:	12 38       	cp.w	r8,r9
8000518a:	5f 0c       	sreq	r12
8000518c:	5e fc       	retal	r12

8000518e <_ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv>:
8000518e:	5e fd       	retal	0

80005190 <_ZNSt9type_infoD0Ev>:
80005190:	d4 01       	pushm	lr
80005192:	48 48       	lddpc	r8,800051a0 <_ZNSt9type_infoD0Ev+0x10>
80005194:	2f 88       	sub	r8,-8
80005196:	99 08       	st.w	r12[0x0],r8
80005198:	f0 1f 00 03 	mcall	800051a4 <_ZNSt9type_infoD0Ev+0x14>
8000519c:	d8 02       	popm	pc
8000519e:	00 00       	add	r0,r0
800051a0:	80 00       	ld.sh	r0,r0[0x0]
800051a2:	f5 ac 80 00 	stc0.w	r12[0x2000],cr0
800051a6:	41 d0       	lddsp	r0,sp[0x74]

800051a8 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
800051a8:	d4 01       	pushm	lr
800051aa:	16 98       	mov	r8,r11
800051ac:	78 1e       	ld.w	lr,r12[0x4]
800051ae:	76 1b       	ld.w	r11,r11[0x4]
800051b0:	16 3e       	cp.w	lr,r11
800051b2:	c0 b0       	breq	800051c8 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x20>
800051b4:	58 39       	cp.w	r9,3
800051b6:	e0 88 00 03 	brls	800051bc <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x14>
800051ba:	d8 0a       	popm	pc,r12=0
800051bc:	18 9b       	mov	r11,r12
800051be:	10 9c       	mov	r12,r8
800051c0:	70 08       	ld.w	r8,r8[0x0]
800051c2:	70 58       	ld.w	r8,r8[0x14]
800051c4:	5d 18       	icall	r8
800051c6:	d8 02       	popm	pc
800051c8:	da 0a       	popm	pc,r12=1

800051ca <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
800051ca:	eb cd 40 c0 	pushm	r6-r7,lr
800051ce:	20 4d       	sub	sp,16
800051d0:	31 09       	mov	r9,16
800051d2:	30 07       	mov	r7,0
800051d4:	78 08       	ld.w	r8,r12[0x0]
800051d6:	50 07       	stdsp	sp[0x0],r7
800051d8:	70 68       	ld.w	r8,r8[0x18]
800051da:	50 29       	stdsp	sp[0x8],r9
800051dc:	14 96       	mov	r6,r10
800051de:	50 17       	stdsp	sp[0x4],r7
800051e0:	50 37       	stdsp	sp[0xc],r7
800051e2:	1a 99       	mov	r9,sp
800051e4:	74 0a       	ld.w	r10,r10[0x0]
800051e6:	5d 18       	icall	r8
800051e8:	40 18       	lddsp	r8,sp[0x4]
800051ea:	e2 18 00 06 	andl	r8,0x6,COH
800051ee:	58 68       	cp.w	r8,6
800051f0:	c0 50       	breq	800051fa <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv+0x30>
800051f2:	0e 9c       	mov	r12,r7
800051f4:	2f cd       	sub	sp,-16
800051f6:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800051fa:	40 08       	lddsp	r8,sp[0x0]
800051fc:	30 1c       	mov	r12,1
800051fe:	8d 08       	st.w	r6[0x0],r8
80005200:	2f cd       	sub	sp,-16
80005202:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc

80005206 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcElPKvPKS0_S2_>:
80005206:	14 38       	cp.w	r8,r10
80005208:	f9 bc 00 06 	moveq	r12,6
8000520c:	f9 bc 01 01 	movne	r12,1
80005210:	5e fc       	retal	r12

80005212 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastElNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
80005212:	eb cd 40 90 	pushm	r4,r7,lr
80005216:	fa c4 ff f4 	sub	r4,sp,-12
8000521a:	68 2e       	ld.w	lr,r4[0x8]
8000521c:	68 07       	ld.w	r7,r4[0x0]
8000521e:	68 1b       	ld.w	r11,r4[0x4]
80005220:	16 38       	cp.w	r8,r11
80005222:	c0 70       	breq	80005230 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastElNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x1e>
80005224:	78 1b       	ld.w	r11,r12[0x4]
80005226:	72 19       	ld.w	r9,r9[0x4]
80005228:	12 3b       	cp.w	r11,r9
8000522a:	c0 90       	breq	8000523c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastElNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x2a>
8000522c:	e3 cf 80 90 	ldm	sp++,r4,r7,pc,r12=0
80005230:	78 1b       	ld.w	r11,r12[0x4]
80005232:	6e 1c       	ld.w	r12,r7[0x4]
80005234:	18 3b       	cp.w	r11,r12
80005236:	cf 81       	brne	80005226 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastElNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x14>
80005238:	9d 2a       	st.w	lr[0x8],r10
8000523a:	cf 9b       	rjmp	8000522c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastElNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x1a>
8000523c:	9d 08       	st.w	lr[0x0],r8
8000523e:	9d 1a       	st.w	lr[0x4],r10
80005240:	30 18       	mov	r8,1
80005242:	30 0c       	mov	r12,0
80005244:	9d 38       	st.w	lr[0xc],r8
80005246:	e3 cd 80 90 	ldm	sp++,r4,r7,pc

8000524a <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
8000524a:	78 18       	ld.w	r8,r12[0x4]
8000524c:	76 1b       	ld.w	r11,r11[0x4]
8000524e:	16 38       	cp.w	r8,r11
80005250:	c0 20       	breq	80005254 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0xa>
80005252:	5e fd       	retal	0
80005254:	30 88       	mov	r8,8
80005256:	93 0a       	st.w	r9[0x0],r10
80005258:	93 38       	st.w	r9[0xc],r8
8000525a:	30 1c       	mov	r12,1
8000525c:	30 68       	mov	r8,6
8000525e:	93 18       	st.w	r9[0x4],r8
80005260:	5e fc       	retal	r12
80005262:	d7 03       	nop

80005264 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
80005264:	d4 01       	pushm	lr
80005266:	48 48       	lddpc	r8,80005274 <_ZN10__cxxabiv117__class_type_infoD1Ev+0x10>
80005268:	2f 88       	sub	r8,-8
8000526a:	99 08       	st.w	r12[0x0],r8
8000526c:	f0 1f 00 03 	mcall	80005278 <_ZN10__cxxabiv117__class_type_infoD1Ev+0x14>
80005270:	d8 02       	popm	pc
80005272:	00 00       	add	r0,r0
80005274:	80 00       	ld.sh	r0,r0[0x0]
80005276:	f5 e4 80 00 	sthh.w	r0[r0],r10:b,r4:b
8000527a:	51 68       	stdsp	sp[0x58],r8

8000527c <_ZN10__cxxabiv117__class_type_infoD2Ev>:
8000527c:	d4 01       	pushm	lr
8000527e:	48 48       	lddpc	r8,8000528c <_ZN10__cxxabiv117__class_type_infoD2Ev+0x10>
80005280:	2f 88       	sub	r8,-8
80005282:	99 08       	st.w	r12[0x0],r8
80005284:	f0 1f 00 03 	mcall	80005290 <_ZN10__cxxabiv117__class_type_infoD2Ev+0x14>
80005288:	d8 02       	popm	pc
8000528a:	00 00       	add	r0,r0
8000528c:	80 00       	ld.sh	r0,r0[0x0]
8000528e:	f5 e4 80 00 	sthh.w	r0[r0],r10:b,r4:b
80005292:	51 68       	stdsp	sp[0x58],r8

80005294 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
80005294:	eb cd 40 80 	pushm	r7,lr
80005298:	48 68       	lddpc	r8,800052b0 <_ZN10__cxxabiv117__class_type_infoD0Ev+0x1c>
8000529a:	2f 88       	sub	r8,-8
8000529c:	18 97       	mov	r7,r12
8000529e:	99 08       	st.w	r12[0x0],r8
800052a0:	f0 1f 00 05 	mcall	800052b4 <_ZN10__cxxabiv117__class_type_infoD0Ev+0x20>
800052a4:	0e 9c       	mov	r12,r7
800052a6:	f0 1f 00 05 	mcall	800052b8 <_ZN10__cxxabiv117__class_type_infoD0Ev+0x24>
800052aa:	e3 cd 80 80 	ldm	sp++,r7,pc
800052ae:	00 00       	add	r0,r0
800052b0:	80 00       	ld.sh	r0,r0[0x0]
800052b2:	f5 e4 80 00 	sthh.w	r0[r0],r10:b,r4:b
800052b6:	51 68       	stdsp	sp[0x58],r8
800052b8:	80 00       	ld.sh	r0,r0[0x0]
800052ba:	41 d0       	lddsp	r0,sp[0x74]

800052bc <_ZN9__gnu_cxx27__verbose_terminate_handlerEv>:
800052bc:	eb cd 40 81 	pushm	r0,r7,lr
800052c0:	21 3d       	sub	sp,76
800052c2:	fa c9 ff b4 	sub	r9,sp,-76
800052c6:	fa c8 ff cc 	sub	r8,sp,-52
800052ca:	91 09       	st.w	r8[0x0],r9
800052cc:	91 2d       	st.w	r8[0x8],sp
800052ce:	4d 39       	lddpc	r9,80005418 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x15c>
800052d0:	50 b9       	stdsp	sp[0x2c],r9
800052d2:	4d 39       	lddpc	r9,8000541c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x160>
800052d4:	50 c9       	stdsp	sp[0x30],r9
800052d6:	4d 39       	lddpc	r9,80005420 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x164>
800052d8:	fa cc ff ec 	sub	r12,sp,-20
800052dc:	91 19       	st.w	r8[0x4],r9
800052de:	f0 1f 00 52 	mcall	80005424 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x168>
800052e2:	4d 28       	lddpc	r8,80005428 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x16c>
800052e4:	30 09       	mov	r9,0
800052e6:	11 8a       	ld.ub	r10,r8[0x0]
800052e8:	f2 0a 18 00 	cp.b	r10,r9
800052ec:	c0 d0       	breq	80005306 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x4a>
800052ee:	4d 08       	lddpc	r8,8000542c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x170>
800052f0:	70 08       	ld.w	r8,r8[0x0]
800052f2:	70 29       	ld.w	r9,r8[0x8]
800052f4:	3f f8       	mov	r8,-1
800052f6:	31 da       	mov	r10,29
800052f8:	50 68       	stdsp	sp[0x18],r8
800052fa:	30 1b       	mov	r11,1
800052fc:	4c dc       	lddpc	r12,80005430 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x174>
800052fe:	f0 1f 00 4e 	mcall	80005434 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x178>
80005302:	f0 1f 00 4e 	mcall	80005438 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x17c>
80005306:	30 19       	mov	r9,1
80005308:	b0 89       	st.b	r8[0x0],r9
8000530a:	3f f8       	mov	r8,-1
8000530c:	50 68       	stdsp	sp[0x18],r8
8000530e:	f0 1f 00 4c 	mcall	8000543c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x180>
80005312:	c3 70       	breq	80005380 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xc4>
80005314:	3f f8       	mov	r8,-1
80005316:	30 0a       	mov	r10,0
80005318:	fa c9 ff b4 	sub	r9,sp,-76
8000531c:	14 9b       	mov	r11,r10
8000531e:	12 d8       	st.w	--r9,r8
80005320:	78 1c       	ld.w	r12,r12[0x4]
80005322:	50 0c       	stdsp	sp[0x0],r12
80005324:	f0 1f 00 47 	mcall	80005440 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x184>
80005328:	4c 19       	lddpc	r9,8000542c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x170>
8000532a:	72 08       	ld.w	r8,r9[0x0]
8000532c:	50 1c       	stdsp	sp[0x4],r12
8000532e:	70 29       	ld.w	r9,r8[0x8]
80005330:	33 0a       	mov	r10,48
80005332:	30 1b       	mov	r11,1
80005334:	4c 4c       	lddpc	r12,80005444 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x188>
80005336:	f0 1f 00 40 	mcall	80005434 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x178>
8000533a:	41 28       	lddsp	r8,sp[0x48]
8000533c:	58 08       	cp.w	r8,0
8000533e:	c1 81       	brne	8000536e <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xb2>
80005340:	4b b9       	lddpc	r9,8000542c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x170>
80005342:	72 08       	ld.w	r8,r9[0x0]
80005344:	40 1c       	lddsp	r12,sp[0x4]
80005346:	70 2b       	ld.w	r11,r8[0x8]
80005348:	f0 1f 00 40 	mcall	80005448 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x18c>
8000534c:	4b 88       	lddpc	r8,8000542c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x170>
8000534e:	70 08       	ld.w	r8,r8[0x0]
80005350:	70 29       	ld.w	r9,r8[0x8]
80005352:	3f f8       	mov	r8,-1
80005354:	30 2a       	mov	r10,2
80005356:	50 68       	stdsp	sp[0x18],r8
80005358:	30 1b       	mov	r11,1
8000535a:	4b dc       	lddpc	r12,8000544c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x190>
8000535c:	f0 1f 00 36 	mcall	80005434 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x178>
80005360:	41 28       	lddsp	r8,sp[0x48]
80005362:	58 08       	cp.w	r8,0
80005364:	c1 c0       	breq	8000539c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xe0>
80005366:	30 28       	mov	r8,2
80005368:	50 68       	stdsp	sp[0x18],r8
8000536a:	f0 1f 00 3a 	mcall	80005450 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x194>
8000536e:	4b 09       	lddpc	r9,8000542c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x170>
80005370:	72 08       	ld.w	r8,r9[0x0]
80005372:	70 2b       	ld.w	r11,r8[0x8]
80005374:	3f f8       	mov	r8,-1
80005376:	40 0c       	lddsp	r12,sp[0x0]
80005378:	50 68       	stdsp	sp[0x18],r8
8000537a:	f0 1f 00 34 	mcall	80005448 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x18c>
8000537e:	ce 7b       	rjmp	8000534c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x90>
80005380:	4a b8       	lddpc	r8,8000542c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x170>
80005382:	70 08       	ld.w	r8,r8[0x0]
80005384:	70 29       	ld.w	r9,r8[0x8]
80005386:	3f f8       	mov	r8,-1
80005388:	32 da       	mov	r10,45
8000538a:	50 68       	stdsp	sp[0x18],r8
8000538c:	30 1b       	mov	r11,1
8000538e:	4b 2c       	lddpc	r12,80005454 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x198>
80005390:	f0 1f 00 29 	mcall	80005434 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x178>
80005394:	3f f8       	mov	r8,-1
80005396:	50 68       	stdsp	sp[0x18],r8
80005398:	f0 1f 00 28 	mcall	80005438 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x17c>
8000539c:	40 1c       	lddsp	r12,sp[0x4]
8000539e:	f0 1f 00 2f 	mcall	80005458 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x19c>
800053a2:	ce 2b       	rjmp	80005366 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xaa>
800053a4:	40 68       	lddsp	r8,sp[0x18]
800053a6:	40 79       	lddsp	r9,sp[0x1c]
800053a8:	50 38       	stdsp	sp[0xc],r8
800053aa:	50 29       	stdsp	sp[0x8],r9
800053ac:	40 88       	lddsp	r8,sp[0x20]
800053ae:	40 39       	lddsp	r9,sp[0xc]
800053b0:	58 19       	cp.w	r9,1
800053b2:	c0 a0       	breq	800053c6 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x10a>
800053b4:	30 08       	mov	r8,0
800053b6:	50 68       	stdsp	sp[0x18],r8
800053b8:	f0 1f 00 29 	mcall	8000545c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x1a0>
800053bc:	3f f8       	mov	r8,-1
800053be:	40 2c       	lddsp	r12,sp[0x8]
800053c0:	50 68       	stdsp	sp[0x18],r8
800053c2:	f0 1f 00 28 	mcall	80005460 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x1a4>
800053c6:	58 28       	cp.w	r8,2
800053c8:	c0 90       	breq	800053da <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11e>
800053ca:	40 2c       	lddsp	r12,sp[0x8]
800053cc:	f0 1f 00 26 	mcall	80005464 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x1a8>
800053d0:	30 08       	mov	r8,0
800053d2:	50 68       	stdsp	sp[0x18],r8
800053d4:	f0 1f 00 22 	mcall	8000545c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x1a0>
800053d8:	cd eb       	rjmp	80005394 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xd8>
800053da:	40 2c       	lddsp	r12,sp[0x8]
800053dc:	f0 1f 00 22 	mcall	80005464 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x1a8>
800053e0:	40 39       	lddsp	r9,sp[0xc]
800053e2:	78 08       	ld.w	r8,r12[0x0]
800053e4:	70 28       	ld.w	r8,r8[0x8]
800053e6:	50 69       	stdsp	sp[0x18],r9
800053e8:	5d 18       	icall	r8
800053ea:	49 18       	lddpc	r8,8000542c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x170>
800053ec:	70 08       	ld.w	r8,r8[0x0]
800053ee:	50 4c       	stdsp	sp[0x10],r12
800053f0:	70 29       	ld.w	r9,r8[0x8]
800053f2:	30 ba       	mov	r10,11
800053f4:	30 1b       	mov	r11,1
800053f6:	49 dc       	lddpc	r12,80005468 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x1ac>
800053f8:	f0 1f 00 0f 	mcall	80005434 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x178>
800053fc:	48 c8       	lddpc	r8,8000542c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x170>
800053fe:	70 08       	ld.w	r8,r8[0x0]
80005400:	40 4c       	lddsp	r12,sp[0x10]
80005402:	70 2b       	ld.w	r11,r8[0x8]
80005404:	f0 1f 00 11 	mcall	80005448 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x18c>
80005408:	48 98       	lddpc	r8,8000542c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x170>
8000540a:	70 08       	ld.w	r8,r8[0x0]
8000540c:	30 ac       	mov	r12,10
8000540e:	70 2b       	ld.w	r11,r8[0x8]
80005410:	f0 1f 00 17 	mcall	8000546c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x1b0>
80005414:	cd eb       	rjmp	800053d0 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x114>
80005416:	00 00       	add	r0,r0
80005418:	80 00       	ld.sh	r0,r0[0x0]
8000541a:	4a 94       	lddpc	r4,800054bc <d_make_comp+0x18>
8000541c:	00 00       	add	r0,r0
8000541e:	00 b0       	st.h	r0++,r0
80005420:	80 00       	ld.sh	r0,r0[0x0]
80005422:	53 a4       	stdsp	sp[0xe8],r4
80005424:	80 00       	ld.sh	r0,r0[0x0]
80005426:	95 14       	st.w	r10[0x4],r4
80005428:	00 00       	add	r0,r0
8000542a:	0f 84       	ld.ub	r4,r7[0x0]
8000542c:	00 00       	add	r0,r0
8000542e:	02 04       	add	r4,r1
80005430:	80 00       	ld.sh	r0,r0[0x0]
80005432:	f6 40 80 00 	cp.w	r0,-622592
80005436:	9c 24       	ld.sh	r4,lr[0x4]
80005438:	80 00       	ld.sh	r0,r0[0x0]
8000543a:	97 e0       	st.w	r11[0x38],r0
8000543c:	80 00       	ld.sh	r0,r0[0x0]
8000543e:	54 70       	stdsp	sp[0x11c],r0
80005440:	80 00       	ld.sh	r0,r0[0x0]
80005442:	7f 78       	ld.w	r8,pc[0x5c]
80005444:	80 00       	ld.sh	r0,r0[0x0]
80005446:	f6 60 80 00 	mov	r0,-622592
8000544a:	98 d8       	ld.uh	r8,r12[0xa]
8000544c:	80 00       	ld.sh	r0,r0[0x0]
8000544e:	f6 94 80 00 	brge	7fef544e <_estack+0x7feed44e>
80005452:	45 2c       	lddsp	r12,sp[0x148]
80005454:	80 00       	ld.sh	r0,r0[0x0]
80005456:	f6 a4       	*unknown*
80005458:	80 00       	ld.sh	r0,r0[0x0]
8000545a:	9c 40       	ld.sh	r0,lr[0x8]
8000545c:	80 00       	ld.sh	r0,r0[0x0]
8000545e:	50 10       	stdsp	sp[0x4],r0
80005460:	80 00       	ld.sh	r0,r0[0x0]
80005462:	96 dc       	ld.uh	r12,r11[0xa]
80005464:	80 00       	ld.sh	r0,r0[0x0]
80005466:	50 94       	stdsp	sp[0x24],r4
80005468:	80 00       	ld.sh	r0,r0[0x0]
8000546a:	f6 98 80 00 	brls	7fef546a <_estack+0x7feed46a>
8000546e:	98 50       	ld.sh	r0,r12[0xa]

80005470 <__cxa_current_exception_type>:
80005470:	eb cd 40 c0 	pushm	r6-r7,lr
80005474:	f0 1f 00 0b 	mcall	800054a0 <__cxa_current_exception_type+0x30>
80005478:	78 0c       	ld.w	r12,r12[0x0]
8000547a:	58 0c       	cp.w	r12,0
8000547c:	c0 d0       	breq	80005496 <__cxa_current_exception_type+0x26>
8000547e:	f8 e6 00 2c 	ld.d	r6,r12[44]
80005482:	30 1a       	mov	r10,1
80005484:	30 0b       	mov	r11,0
80005486:	ed ea 00 08 	and	r8,r6,r10
8000548a:	ef eb 00 09 	and	r9,r7,r11
8000548e:	58 08       	cp.w	r8,0
80005490:	5c 29       	cpc	r9
80005492:	c0 41       	brne	8000549a <__cxa_current_exception_type+0x2a>
80005494:	78 0c       	ld.w	r12,r12[0x0]
80005496:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
8000549a:	78 1c       	ld.w	r12,r12[0x4]
8000549c:	24 0c       	sub	r12,64
8000549e:	cf bb       	rjmp	80005494 <__cxa_current_exception_type+0x24>
800054a0:	80 00       	ld.sh	r0,r0[0x0]
800054a2:	4f 08       	lddpc	r8,80005660 <d_number+0x44>

800054a4 <d_make_comp>:
800054a4:	d4 01       	pushm	lr
800054a6:	f6 c8 00 01 	sub	r8,r11,1
800054aa:	e0 48 00 39 	cp.w	r8,57
800054ae:	e0 8b 00 97 	brhi	800055dc <d_make_comp+0x138>
800054b2:	4c ce       	lddpc	lr,800055e0 <d_make_comp+0x13c>
800054b4:	fc 08 03 2f 	ld.w	pc,lr[r8<<0x2]
800054b8:	80 00       	ld.sh	r0,r0[0x0]
800054ba:	55 a0       	stdsp	sp[0x168],r0
800054bc:	80 00       	ld.sh	r0,r0[0x0]
800054be:	55 a0       	stdsp	sp[0x168],r0
800054c0:	80 00       	ld.sh	r0,r0[0x0]
800054c2:	55 a0       	stdsp	sp[0x168],r0
800054c4:	80 00       	ld.sh	r0,r0[0x0]
800054c6:	55 a0       	stdsp	sp[0x168],r0
800054c8:	80 00       	ld.sh	r0,r0[0x0]
800054ca:	55 dc       	stdsp	sp[0x174],r12
800054cc:	80 00       	ld.sh	r0,r0[0x0]
800054ce:	55 dc       	stdsp	sp[0x174],r12
800054d0:	80 00       	ld.sh	r0,r0[0x0]
800054d2:	55 dc       	stdsp	sp[0x174],r12
800054d4:	80 00       	ld.sh	r0,r0[0x0]
800054d6:	55 dc       	stdsp	sp[0x174],r12
800054d8:	80 00       	ld.sh	r0,r0[0x0]
800054da:	55 b0       	stdsp	sp[0x16c],r0
800054dc:	80 00       	ld.sh	r0,r0[0x0]
800054de:	55 b0       	stdsp	sp[0x16c],r0
800054e0:	80 00       	ld.sh	r0,r0[0x0]
800054e2:	55 a0       	stdsp	sp[0x168],r0
800054e4:	80 00       	ld.sh	r0,r0[0x0]
800054e6:	55 b0       	stdsp	sp[0x16c],r0
800054e8:	80 00       	ld.sh	r0,r0[0x0]
800054ea:	55 b0       	stdsp	sp[0x16c],r0
800054ec:	80 00       	ld.sh	r0,r0[0x0]
800054ee:	55 b0       	stdsp	sp[0x16c],r0
800054f0:	80 00       	ld.sh	r0,r0[0x0]
800054f2:	55 b0       	stdsp	sp[0x16c],r0
800054f4:	80 00       	ld.sh	r0,r0[0x0]
800054f6:	55 b0       	stdsp	sp[0x16c],r0
800054f8:	80 00       	ld.sh	r0,r0[0x0]
800054fa:	55 b0       	stdsp	sp[0x16c],r0
800054fc:	80 00       	ld.sh	r0,r0[0x0]
800054fe:	55 b0       	stdsp	sp[0x16c],r0
80005500:	80 00       	ld.sh	r0,r0[0x0]
80005502:	55 b0       	stdsp	sp[0x16c],r0
80005504:	80 00       	ld.sh	r0,r0[0x0]
80005506:	55 b0       	stdsp	sp[0x16c],r0
80005508:	80 00       	ld.sh	r0,r0[0x0]
8000550a:	55 b0       	stdsp	sp[0x16c],r0
8000550c:	80 00       	ld.sh	r0,r0[0x0]
8000550e:	55 dc       	stdsp	sp[0x174],r12
80005510:	80 00       	ld.sh	r0,r0[0x0]
80005512:	55 ba       	stdsp	sp[0x16c],r10
80005514:	80 00       	ld.sh	r0,r0[0x0]
80005516:	55 ba       	stdsp	sp[0x16c],r10
80005518:	80 00       	ld.sh	r0,r0[0x0]
8000551a:	55 ba       	stdsp	sp[0x16c],r10
8000551c:	80 00       	ld.sh	r0,r0[0x0]
8000551e:	55 ba       	stdsp	sp[0x16c],r10
80005520:	80 00       	ld.sh	r0,r0[0x0]
80005522:	55 ba       	stdsp	sp[0x16c],r10
80005524:	80 00       	ld.sh	r0,r0[0x0]
80005526:	55 ba       	stdsp	sp[0x16c],r10
80005528:	80 00       	ld.sh	r0,r0[0x0]
8000552a:	55 a0       	stdsp	sp[0x168],r0
8000552c:	80 00       	ld.sh	r0,r0[0x0]
8000552e:	55 b0       	stdsp	sp[0x16c],r0
80005530:	80 00       	ld.sh	r0,r0[0x0]
80005532:	55 b0       	stdsp	sp[0x16c],r0
80005534:	80 00       	ld.sh	r0,r0[0x0]
80005536:	55 b0       	stdsp	sp[0x16c],r0
80005538:	80 00       	ld.sh	r0,r0[0x0]
8000553a:	55 b0       	stdsp	sp[0x16c],r0
8000553c:	80 00       	ld.sh	r0,r0[0x0]
8000553e:	55 b0       	stdsp	sp[0x16c],r0
80005540:	80 00       	ld.sh	r0,r0[0x0]
80005542:	55 dc       	stdsp	sp[0x174],r12
80005544:	80 00       	ld.sh	r0,r0[0x0]
80005546:	55 b0       	stdsp	sp[0x16c],r0
80005548:	80 00       	ld.sh	r0,r0[0x0]
8000554a:	55 ba       	stdsp	sp[0x16c],r10
8000554c:	80 00       	ld.sh	r0,r0[0x0]
8000554e:	55 b6       	stdsp	sp[0x16c],r6
80005550:	80 00       	ld.sh	r0,r0[0x0]
80005552:	55 a0       	stdsp	sp[0x168],r0
80005554:	80 00       	ld.sh	r0,r0[0x0]
80005556:	55 dc       	stdsp	sp[0x174],r12
80005558:	80 00       	ld.sh	r0,r0[0x0]
8000555a:	55 ba       	stdsp	sp[0x16c],r10
8000555c:	80 00       	ld.sh	r0,r0[0x0]
8000555e:	55 ba       	stdsp	sp[0x16c],r10
80005560:	80 00       	ld.sh	r0,r0[0x0]
80005562:	55 dc       	stdsp	sp[0x174],r12
80005564:	80 00       	ld.sh	r0,r0[0x0]
80005566:	55 dc       	stdsp	sp[0x174],r12
80005568:	80 00       	ld.sh	r0,r0[0x0]
8000556a:	55 b0       	stdsp	sp[0x16c],r0
8000556c:	80 00       	ld.sh	r0,r0[0x0]
8000556e:	55 a0       	stdsp	sp[0x168],r0
80005570:	80 00       	ld.sh	r0,r0[0x0]
80005572:	55 a0       	stdsp	sp[0x168],r0
80005574:	80 00       	ld.sh	r0,r0[0x0]
80005576:	55 a0       	stdsp	sp[0x168],r0
80005578:	80 00       	ld.sh	r0,r0[0x0]
8000557a:	55 a0       	stdsp	sp[0x168],r0
8000557c:	80 00       	ld.sh	r0,r0[0x0]
8000557e:	55 a0       	stdsp	sp[0x168],r0
80005580:	80 00       	ld.sh	r0,r0[0x0]
80005582:	55 a0       	stdsp	sp[0x168],r0
80005584:	80 00       	ld.sh	r0,r0[0x0]
80005586:	55 a0       	stdsp	sp[0x168],r0
80005588:	80 00       	ld.sh	r0,r0[0x0]
8000558a:	55 a0       	stdsp	sp[0x168],r0
8000558c:	80 00       	ld.sh	r0,r0[0x0]
8000558e:	55 b0       	stdsp	sp[0x16c],r0
80005590:	80 00       	ld.sh	r0,r0[0x0]
80005592:	55 a0       	stdsp	sp[0x168],r0
80005594:	80 00       	ld.sh	r0,r0[0x0]
80005596:	55 dc       	stdsp	sp[0x174],r12
80005598:	80 00       	ld.sh	r0,r0[0x0]
8000559a:	55 b0       	stdsp	sp[0x16c],r0
8000559c:	80 00       	ld.sh	r0,r0[0x0]
8000559e:	55 b0       	stdsp	sp[0x16c],r0
800055a0:	58 09       	cp.w	r9,0
800055a2:	5f 0e       	sreq	lr
800055a4:	58 0a       	cp.w	r10,0
800055a6:	5f 08       	sreq	r8
800055a8:	fd e8 10 08 	or	r8,lr,r8
800055ac:	c0 70       	breq	800055ba <d_make_comp+0x116>
800055ae:	c1 78       	rjmp	800055dc <d_make_comp+0x138>
800055b0:	58 0a       	cp.w	r10,0
800055b2:	c0 41       	brne	800055ba <d_make_comp+0x116>
800055b4:	c1 48       	rjmp	800055dc <d_make_comp+0x138>
800055b6:	58 09       	cp.w	r9,0
800055b8:	c1 20       	breq	800055dc <d_make_comp+0x138>
800055ba:	78 58       	ld.w	r8,r12[0x14]
800055bc:	78 6e       	ld.w	lr,r12[0x18]
800055be:	1c 38       	cp.w	r8,lr
800055c0:	c0 e4       	brge	800055dc <d_make_comp+0x138>
800055c2:	f0 ce ff ff 	sub	lr,r8,-1
800055c6:	99 5e       	st.w	r12[0x14],lr
800055c8:	f0 08 00 18 	add	r8,r8,r8<<0x1
800055cc:	78 4e       	ld.w	lr,r12[0x10]
800055ce:	fc 08 00 2c 	add	r12,lr,r8<<0x2
800055d2:	c0 60       	breq	800055de <d_make_comp+0x13a>
800055d4:	99 0b       	st.w	r12[0x0],r11
800055d6:	99 1a       	st.w	r12[0x4],r10
800055d8:	99 29       	st.w	r12[0x8],r9
800055da:	d8 02       	popm	pc
800055dc:	30 0c       	mov	r12,0
800055de:	d8 02       	popm	pc
800055e0:	80 00       	ld.sh	r0,r0[0x0]
800055e2:	54 b8       	stdsp	sp[0x12c],r8

800055e4 <d_make_name>:
800055e4:	78 58       	ld.w	r8,r12[0x14]
800055e6:	78 69       	ld.w	r9,r12[0x18]
800055e8:	12 38       	cp.w	r8,r9
800055ea:	c0 35       	brlt	800055f0 <d_make_name+0xc>
800055ec:	30 0c       	mov	r12,0
800055ee:	c0 98       	rjmp	80005600 <d_make_name+0x1c>
800055f0:	f0 c9 ff ff 	sub	r9,r8,-1
800055f4:	f0 08 00 18 	add	r8,r8,r8<<0x1
800055f8:	99 59       	st.w	r12[0x14],r9
800055fa:	78 49       	ld.w	r9,r12[0x10]
800055fc:	f2 08 00 2c 	add	r12,r9,r8<<0x2
80005600:	58 0c       	cp.w	r12,0
80005602:	5f 09       	sreq	r9
80005604:	58 0b       	cp.w	r11,0
80005606:	5f 08       	sreq	r8
80005608:	f3 e8 10 08 	or	r8,r9,r8
8000560c:	c0 71       	brne	8000561a <d_make_name+0x36>
8000560e:	58 0a       	cp.w	r10,0
80005610:	c0 50       	breq	8000561a <d_make_name+0x36>
80005612:	99 1b       	st.w	r12[0x4],r11
80005614:	99 2a       	st.w	r12[0x8],r10
80005616:	99 08       	st.w	r12[0x0],r8
80005618:	5e fc       	retal	r12
8000561a:	5e fd       	retal	0

8000561c <d_number>:
8000561c:	d4 01       	pushm	lr
8000561e:	36 ea       	mov	r10,110
80005620:	78 38       	ld.w	r8,r12[0xc]
80005622:	11 89       	ld.ub	r9,r8[0x0]
80005624:	f4 09 18 00 	cp.b	r9,r10
80005628:	c0 30       	breq	8000562e <d_number+0x12>
8000562a:	30 0a       	mov	r10,0
8000562c:	c0 58       	rjmp	80005636 <d_number+0x1a>
8000562e:	2f f8       	sub	r8,-1
80005630:	30 1a       	mov	r10,1
80005632:	99 38       	st.w	r12[0xc],r8
80005634:	11 89       	ld.ub	r9,r8[0x0]
80005636:	30 08       	mov	r8,0
80005638:	30 9b       	mov	r11,9
8000563a:	f0 08 00 2e 	add	lr,r8,r8<<0x2
8000563e:	f2 0e 00 1e 	add	lr,r9,lr<<0x1
80005642:	23 09       	sub	r9,48
80005644:	f6 09 18 00 	cp.b	r9,r11
80005648:	e0 88 00 09 	brls	8000565a <d_number+0x3e>
8000564c:	f0 09 11 00 	rsub	r9,r8,0
80005650:	58 0a       	cp.w	r10,0
80005652:	f2 08 17 10 	movne	r8,r9
80005656:	10 9c       	mov	r12,r8
80005658:	d8 02       	popm	pc
8000565a:	78 39       	ld.w	r9,r12[0xc]
8000565c:	fc c8 00 30 	sub	r8,lr,48
80005660:	2f f9       	sub	r9,-1
80005662:	99 39       	st.w	r12[0xc],r9
80005664:	13 89       	ld.ub	r9,r9[0x0]
80005666:	ce ab       	rjmp	8000563a <d_number+0x1e>

80005668 <d_call_offset>:
80005668:	d4 21       	pushm	r4-r7,lr
8000566a:	18 97       	mov	r7,r12
8000566c:	58 0b       	cp.w	r11,0
8000566e:	c0 71       	brne	8000567c <d_call_offset+0x14>
80005670:	78 38       	ld.w	r8,r12[0xc]
80005672:	11 8b       	ld.ub	r11,r8[0x0]
80005674:	58 0b       	cp.w	r11,0
80005676:	c1 f0       	breq	800056b4 <d_call_offset+0x4c>
80005678:	2f f8       	sub	r8,-1
8000567a:	99 38       	st.w	r12[0xc],r8
8000567c:	e0 4b 00 68 	cp.w	r11,104
80005680:	c0 e0       	breq	8000569c <d_call_offset+0x34>
80005682:	e0 4b 00 76 	cp.w	r11,118
80005686:	c1 71       	brne	800056b4 <d_call_offset+0x4c>
80005688:	0e 9c       	mov	r12,r7
8000568a:	cc 9f       	rcall	8000561c <d_number>
8000568c:	6e 38       	ld.w	r8,r7[0xc]
8000568e:	35 f9       	mov	r9,95
80005690:	11 8a       	ld.ub	r10,r8[0x0]
80005692:	f2 0a 18 00 	cp.b	r10,r9
80005696:	c0 f1       	brne	800056b4 <d_call_offset+0x4c>
80005698:	2f f8       	sub	r8,-1
8000569a:	8f 38       	st.w	r7[0xc],r8
8000569c:	0e 9c       	mov	r12,r7
8000569e:	cb ff       	rcall	8000561c <d_number>
800056a0:	6e 38       	ld.w	r8,r7[0xc]
800056a2:	35 f9       	mov	r9,95
800056a4:	11 8a       	ld.ub	r10,r8[0x0]
800056a6:	f2 0a 18 00 	cp.b	r10,r9
800056aa:	c0 51       	brne	800056b4 <d_call_offset+0x4c>
800056ac:	2f f8       	sub	r8,-1
800056ae:	30 1c       	mov	r12,1
800056b0:	8f 38       	st.w	r7[0xc],r8
800056b2:	d8 22       	popm	r4-r7,pc
800056b4:	d8 2a       	popm	r4-r7,pc,r12=0
	...

800056b8 <d_cv_qualifiers>:
800056b8:	d4 31       	pushm	r0-r7,lr
800056ba:	20 1d       	sub	sp,4
800056bc:	78 38       	ld.w	r8,r12[0xc]
800056be:	18 97       	mov	r7,r12
800056c0:	11 89       	ld.ub	r9,r8[0x0]
800056c2:	16 96       	mov	r6,r11
800056c4:	58 0a       	cp.w	r10,0
800056c6:	f9 b1 01 1a 	movne	r1,26
800056ca:	f9 b1 00 17 	moveq	r1,23
800056ce:	37 24       	mov	r4,114
800056d0:	35 65       	mov	r5,86
800056d2:	30 03       	mov	r3,0
800056d4:	34 b2       	mov	r2,75
800056d6:	f9 b0 01 1c 	movne	r0,28
800056da:	f9 b0 00 19 	moveq	r0,25
800056de:	f9 b8 01 1b 	movne	r8,27
800056e2:	f9 b8 00 18 	moveq	r8,24
800056e6:	c2 48       	rjmp	8000572e <d_cv_qualifiers+0x76>
800056e8:	6e 39       	ld.w	r9,r7[0xc]
800056ea:	2f f9       	sub	r9,-1
800056ec:	8f 39       	st.w	r7[0xc],r9
800056ee:	58 0b       	cp.w	r11,0
800056f0:	c0 60       	breq	800056fc <d_cv_qualifiers+0x44>
800056f2:	6e c9       	ld.w	r9,r7[0x30]
800056f4:	02 9b       	mov	r11,r1
800056f6:	2f 79       	sub	r9,-9
800056f8:	8f c9       	st.w	r7[0x30],r9
800056fa:	c0 c8       	rjmp	80005712 <d_cv_qualifiers+0x5a>
800056fc:	58 0a       	cp.w	r10,0
800056fe:	c0 60       	breq	8000570a <d_cv_qualifiers+0x52>
80005700:	6e c9       	ld.w	r9,r7[0x30]
80005702:	10 9b       	mov	r11,r8
80005704:	2f 79       	sub	r9,-9
80005706:	8f c9       	st.w	r7[0x30],r9
80005708:	c0 58       	rjmp	80005712 <d_cv_qualifiers+0x5a>
8000570a:	6e c9       	ld.w	r9,r7[0x30]
8000570c:	00 9b       	mov	r11,r0
8000570e:	2f a9       	sub	r9,-6
80005710:	8f c9       	st.w	r7[0x30],r9
80005712:	30 09       	mov	r9,0
80005714:	50 08       	stdsp	sp[0x0],r8
80005716:	0e 9c       	mov	r12,r7
80005718:	12 9a       	mov	r10,r9
8000571a:	cc 5e       	rcall	800054a4 <d_make_comp>
8000571c:	8d 0c       	st.w	r6[0x0],r12
8000571e:	40 08       	lddsp	r8,sp[0x0]
80005720:	c0 31       	brne	80005726 <d_cv_qualifiers+0x6e>
80005722:	18 96       	mov	r6,r12
80005724:	c1 38       	rjmp	8000574a <d_cv_qualifiers+0x92>
80005726:	6e 39       	ld.w	r9,r7[0xc]
80005728:	f8 c6 ff fc 	sub	r6,r12,-4
8000572c:	13 89       	ld.ub	r9,r9[0x0]
8000572e:	e8 09 18 00 	cp.b	r9,r4
80005732:	5f 0b       	sreq	r11
80005734:	ea 09 18 00 	cp.b	r9,r5
80005738:	5f 0a       	sreq	r10
8000573a:	f5 eb 10 0c 	or	r12,r10,r11
8000573e:	e6 0c 18 00 	cp.b	r12,r3
80005742:	cd 31       	brne	800056e8 <d_cv_qualifiers+0x30>
80005744:	e4 09 18 00 	cp.b	r9,r2
80005748:	cd 00       	breq	800056e8 <d_cv_qualifiers+0x30>
8000574a:	0c 9c       	mov	r12,r6
8000574c:	2f fd       	sub	sp,-4
8000574e:	d8 32       	popm	r0-r7,pc

80005750 <d_template_param>:
80005750:	d4 21       	pushm	r4-r7,lr
80005752:	35 49       	mov	r9,84
80005754:	78 38       	ld.w	r8,r12[0xc]
80005756:	18 97       	mov	r7,r12
80005758:	11 8a       	ld.ub	r10,r8[0x0]
8000575a:	f2 0a 18 00 	cp.b	r10,r9
8000575e:	c2 a1       	brne	800057b2 <d_template_param+0x62>
80005760:	2f f8       	sub	r8,-1
80005762:	99 38       	st.w	r12[0xc],r8
80005764:	11 89       	ld.ub	r9,r8[0x0]
80005766:	35 f8       	mov	r8,95
80005768:	f0 09 18 00 	cp.b	r9,r8
8000576c:	c0 31       	brne	80005772 <d_template_param+0x22>
8000576e:	30 08       	mov	r8,0
80005770:	c0 58       	rjmp	8000577a <d_template_param+0x2a>
80005772:	c5 5f       	rcall	8000561c <d_number>
80005774:	c1 f5       	brlt	800057b2 <d_template_param+0x62>
80005776:	f8 c8 ff ff 	sub	r8,r12,-1
8000577a:	6e 39       	ld.w	r9,r7[0xc]
8000577c:	35 fa       	mov	r10,95
8000577e:	13 8b       	ld.ub	r11,r9[0x0]
80005780:	f4 0b 18 00 	cp.b	r11,r10
80005784:	c1 71       	brne	800057b2 <d_template_param+0x62>
80005786:	2f f9       	sub	r9,-1
80005788:	8f 39       	st.w	r7[0xc],r9
8000578a:	6e a9       	ld.w	r9,r7[0x28]
8000578c:	2f f9       	sub	r9,-1
8000578e:	8f a9       	st.w	r7[0x28],r9
80005790:	6e 5c       	ld.w	r12,r7[0x14]
80005792:	6e 69       	ld.w	r9,r7[0x18]
80005794:	12 3c       	cp.w	r12,r9
80005796:	c0 e4       	brge	800057b2 <d_template_param+0x62>
80005798:	f8 c9 ff ff 	sub	r9,r12,-1
8000579c:	8f 59       	st.w	r7[0x14],r9
8000579e:	f8 0c 00 1c 	add	r12,r12,r12<<0x1
800057a2:	6e 49       	ld.w	r9,r7[0x10]
800057a4:	f2 0c 00 2c 	add	r12,r9,r12<<0x2
800057a8:	c0 60       	breq	800057b4 <d_template_param+0x64>
800057aa:	99 18       	st.w	r12[0x4],r8
800057ac:	30 58       	mov	r8,5
800057ae:	99 08       	st.w	r12[0x0],r8
800057b0:	d8 22       	popm	r4-r7,pc
800057b2:	30 0c       	mov	r12,0
800057b4:	d8 22       	popm	r4-r7,pc
	...

800057b8 <d_substitution>:
800057b8:	d4 21       	pushm	r4-r7,lr
800057ba:	35 39       	mov	r9,83
800057bc:	18 98       	mov	r8,r12
800057be:	78 3a       	ld.w	r10,r12[0xc]
800057c0:	15 8c       	ld.ub	r12,r10[0x0]
800057c2:	f2 0c 18 00 	cp.b	r12,r9
800057c6:	e0 81 00 af 	brne	80005924 <d_substitution+0x16c>
800057ca:	2f fa       	sub	r10,-1
800057cc:	91 3a       	st.w	r8[0xc],r10
800057ce:	15 89       	ld.ub	r9,r10[0x0]
800057d0:	58 09       	cp.w	r9,0
800057d2:	c0 30       	breq	800057d8 <d_substitution+0x20>
800057d4:	2f fa       	sub	r10,-1
800057d6:	91 3a       	st.w	r8[0xc],r10
800057d8:	f2 cc 00 30 	sub	r12,r9,48
800057dc:	30 9a       	mov	r10,9
800057de:	f4 0c 18 00 	cp.b	r12,r10
800057e2:	5f 8e       	srls	lr
800057e4:	35 fc       	mov	r12,95
800057e6:	f8 09 18 00 	cp.b	r9,r12
800057ea:	5f 0a       	sreq	r10
800057ec:	fd ea 10 0a 	or	r10,lr,r10
800057f0:	30 0e       	mov	lr,0
800057f2:	fc 0a 18 00 	cp.b	r10,lr
800057f6:	c0 91       	brne	80005808 <d_substitution+0x50>
800057f8:	f2 ce 00 41 	sub	lr,r9,65
800057fc:	31 9c       	mov	r12,25
800057fe:	f8 0e 18 00 	cp.b	lr,r12
80005802:	e0 88 00 08 	brls	80005812 <d_substitution+0x5a>
80005806:	c3 b8       	rjmp	8000587c <d_substitution+0xc4>
80005808:	f8 09 18 00 	cp.b	r9,r12
8000580c:	c0 31       	brne	80005812 <d_substitution+0x5a>
8000580e:	30 0b       	mov	r11,0
80005810:	c2 c8       	rjmp	80005868 <d_substitution+0xb0>
80005812:	30 0a       	mov	r10,0
80005814:	30 97       	mov	r7,9
80005816:	31 9e       	mov	lr,25
80005818:	35 fc       	mov	r12,95
8000581a:	f2 cb 00 30 	sub	r11,r9,48
8000581e:	ee 0b 18 00 	cp.b	r11,r7
80005822:	e0 8b 00 09 	brhi	80005834 <d_substitution+0x7c>
80005826:	f4 0a 00 3b 	add	r11,r10,r10<<0x3
8000582a:	f2 0b 00 29 	add	r9,r9,r11<<0x2
8000582e:	f2 cb 00 30 	sub	r11,r9,48
80005832:	c0 d8       	rjmp	8000584c <d_substitution+0x94>
80005834:	f2 cb 00 41 	sub	r11,r9,65
80005838:	fc 0b 18 00 	cp.b	r11,lr
8000583c:	e0 8b 00 74 	brhi	80005924 <d_substitution+0x16c>
80005840:	f4 0a 00 3b 	add	r11,r10,r10<<0x3
80005844:	f2 0b 00 29 	add	r9,r9,r11<<0x2
80005848:	f2 cb 00 37 	sub	r11,r9,55
8000584c:	14 3b       	cp.w	r11,r10
8000584e:	c6 b3       	brcs	80005924 <d_substitution+0x16c>
80005850:	70 39       	ld.w	r9,r8[0xc]
80005852:	16 9a       	mov	r10,r11
80005854:	f2 c6 ff ff 	sub	r6,r9,-1
80005858:	13 89       	ld.ub	r9,r9[0x0]
8000585a:	58 09       	cp.w	r9,0
8000585c:	cd f0       	breq	8000581a <d_substitution+0x62>
8000585e:	91 36       	st.w	r8[0xc],r6
80005860:	f8 09 18 00 	cp.b	r9,r12
80005864:	cd b1       	brne	8000581a <d_substitution+0x62>
80005866:	2f fb       	sub	r11,-1
80005868:	70 89       	ld.w	r9,r8[0x20]
8000586a:	12 3b       	cp.w	r11,r9
8000586c:	c5 c2       	brcc	80005924 <d_substitution+0x16c>
8000586e:	70 79       	ld.w	r9,r8[0x1c]
80005870:	f2 0b 03 2c 	ld.w	r12,r9[r11<<0x2]
80005874:	70 a9       	ld.w	r9,r8[0x28]
80005876:	2f f9       	sub	r9,-1
80005878:	91 a9       	st.w	r8[0x28],r9
8000587a:	d8 22       	popm	r4-r7,pc
8000587c:	58 0b       	cp.w	r11,0
8000587e:	5f 1e       	srne	lr
80005880:	70 2b       	ld.w	r11,r8[0x8]
80005882:	f7 db c0 61 	bfextu	r11,r11,0x3,0x1
80005886:	16 9c       	mov	r12,r11
80005888:	ec 1c 00 01 	eorl	r12,0x1
8000588c:	fd ec 00 0c 	and	r12,lr,r12
80005890:	f4 0c 18 00 	cp.b	r12,r10
80005894:	c0 80       	breq	800058a4 <d_substitution+0xec>
80005896:	70 3a       	ld.w	r10,r8[0xc]
80005898:	15 8b       	ld.ub	r11,r10[0x0]
8000589a:	30 1a       	mov	r10,1
8000589c:	24 3b       	sub	r11,67
8000589e:	f4 0b 18 00 	cp.b	r11,r10
800058a2:	5f 8b       	srls	r11
800058a4:	4a 1c       	lddpc	r12,80005928 <d_substitution+0x170>
800058a6:	18 9a       	mov	r10,r12
800058a8:	f8 cc ff 3c 	sub	r12,r12,-196
800058ac:	c3 a8       	rjmp	80005920 <d_substitution+0x168>
800058ae:	15 8e       	ld.ub	lr,r10[0x0]
800058b0:	f2 0e 18 00 	cp.b	lr,r9
800058b4:	c3 51       	brne	8000591e <d_substitution+0x166>
800058b6:	74 5c       	ld.w	r12,r10[0x14]
800058b8:	58 0c       	cp.w	r12,0
800058ba:	c1 60       	breq	800058e6 <d_substitution+0x12e>
800058bc:	74 6e       	ld.w	lr,r10[0x18]
800058be:	70 59       	ld.w	r9,r8[0x14]
800058c0:	70 67       	ld.w	r7,r8[0x18]
800058c2:	0e 39       	cp.w	r9,r7
800058c4:	c0 35       	brlt	800058ca <d_substitution+0x112>
800058c6:	30 09       	mov	r9,0
800058c8:	c0 e8       	rjmp	800058e4 <d_substitution+0x12c>
800058ca:	f2 c7 ff ff 	sub	r7,r9,-1
800058ce:	91 57       	st.w	r8[0x14],r7
800058d0:	f2 09 00 19 	add	r9,r9,r9<<0x1
800058d4:	70 47       	ld.w	r7,r8[0x10]
800058d6:	ee 09 00 29 	add	r9,r7,r9<<0x2
800058da:	c0 50       	breq	800058e4 <d_substitution+0x12c>
800058dc:	93 1c       	st.w	r9[0x4],r12
800058de:	93 2e       	st.w	r9[0x8],lr
800058e0:	31 6c       	mov	r12,22
800058e2:	93 0c       	st.w	r9[0x0],r12
800058e4:	91 b9       	st.w	r8[0x2c],r9
800058e6:	58 0b       	cp.w	r11,0
800058e8:	c0 40       	breq	800058f0 <d_substitution+0x138>
800058ea:	74 49       	ld.w	r9,r10[0x10]
800058ec:	74 3a       	ld.w	r10,r10[0xc]
800058ee:	c0 38       	rjmp	800058f4 <d_substitution+0x13c>
800058f0:	74 29       	ld.w	r9,r10[0x8]
800058f2:	74 1a       	ld.w	r10,r10[0x4]
800058f4:	70 cb       	ld.w	r11,r8[0x30]
800058f6:	12 0b       	add	r11,r9
800058f8:	91 cb       	st.w	r8[0x30],r11
800058fa:	70 5c       	ld.w	r12,r8[0x14]
800058fc:	70 6b       	ld.w	r11,r8[0x18]
800058fe:	16 3c       	cp.w	r12,r11
80005900:	c1 24       	brge	80005924 <d_substitution+0x16c>
80005902:	f8 cb ff ff 	sub	r11,r12,-1
80005906:	91 5b       	st.w	r8[0x14],r11
80005908:	f8 0c 00 1c 	add	r12,r12,r12<<0x1
8000590c:	70 48       	ld.w	r8,r8[0x10]
8000590e:	f0 0c 00 2c 	add	r12,r8,r12<<0x2
80005912:	c0 a0       	breq	80005926 <d_substitution+0x16e>
80005914:	31 68       	mov	r8,22
80005916:	99 1a       	st.w	r12[0x4],r10
80005918:	99 29       	st.w	r12[0x8],r9
8000591a:	99 08       	st.w	r12[0x0],r8
8000591c:	d8 22       	popm	r4-r7,pc
8000591e:	2e 4a       	sub	r10,-28
80005920:	18 3a       	cp.w	r10,r12
80005922:	cc 61       	brne	800058ae <d_substitution+0xf6>
80005924:	30 0c       	mov	r12,0
80005926:	d8 22       	popm	r4-r7,pc
80005928:	80 00       	ld.sh	r0,r0[0x0]
8000592a:	80 bc       	ld.uh	r12,r0[0x6]

8000592c <d_append_char>:
8000592c:	d4 21       	pushm	r4-r7,lr
8000592e:	16 96       	mov	r6,r11
80005930:	18 97       	mov	r7,r12
80005932:	f8 fb 01 04 	ld.w	r11,r12[260]
80005936:	e0 4b 00 ff 	cp.w	r11,255
8000593a:	c1 21       	brne	8000595e <d_append_char+0x32>
8000593c:	30 08       	mov	r8,0
8000593e:	f8 fa 01 10 	ld.w	r10,r12[272]
80005942:	f9 68 01 03 	st.b	r12[259],r8
80005946:	f8 f8 01 0c 	ld.w	r8,r12[268]
8000594a:	2f cc       	sub	r12,-4
8000594c:	5d 18       	icall	r8
8000594e:	ee f8 01 24 	ld.w	r8,r7[292]
80005952:	2f f8       	sub	r8,-1
80005954:	ef 48 01 24 	st.w	r7[292],r8
80005958:	30 08       	mov	r8,0
8000595a:	ef 48 01 04 	st.w	r7[260],r8
8000595e:	ee f8 01 04 	ld.w	r8,r7[260]
80005962:	ef 66 01 08 	st.b	r7[264],r6
80005966:	f0 c9 ff ff 	sub	r9,r8,-1
8000596a:	ef 49 01 04 	st.w	r7[260],r9
8000596e:	10 07       	add	r7,r8
80005970:	ae c6       	st.b	r7[0x4],r6
80005972:	d8 22       	popm	r4-r7,pc

80005974 <d_append_buffer>:
80005974:	d4 21       	pushm	r4-r7,lr
80005976:	30 05       	mov	r5,0
80005978:	18 96       	mov	r6,r12
8000597a:	16 97       	mov	r7,r11
8000597c:	14 94       	mov	r4,r10
8000597e:	c0 68       	rjmp	8000598a <d_append_buffer+0x16>
80005980:	ee 05 07 0b 	ld.ub	r11,r7[r5]
80005984:	0c 9c       	mov	r12,r6
80005986:	2f f5       	sub	r5,-1
80005988:	cd 2f       	rcall	8000592c <d_append_char>
8000598a:	08 35       	cp.w	r5,r4
8000598c:	cf a3       	brcs	80005980 <d_append_buffer+0xc>
8000598e:	d8 22       	popm	r4-r7,pc

80005990 <d_find_pack>:
80005990:	d4 21       	pushm	r4-r7,lr
80005992:	18 96       	mov	r6,r12
80005994:	16 97       	mov	r7,r11
80005996:	58 07       	cp.w	r7,0
80005998:	c5 20       	breq	80005a3c <d_find_pack+0xac>
8000599a:	6e 08       	ld.w	r8,r7[0x0]
8000599c:	59 68       	cp.w	r8,22
8000599e:	c4 f0       	breq	80005a3c <d_find_pack+0xac>
800059a0:	e0 8b 00 10 	brhi	800059c0 <d_find_pack+0x30>
800059a4:	58 68       	cp.w	r8,6
800059a6:	c4 b0       	breq	80005a3c <d_find_pack+0xac>
800059a8:	e0 8b 00 07 	brhi	800059b6 <d_find_pack+0x26>
800059ac:	58 08       	cp.w	r8,0
800059ae:	c4 70       	breq	80005a3c <d_find_pack+0xac>
800059b0:	58 58       	cp.w	r8,5
800059b2:	c3 f1       	brne	80005a30 <d_find_pack+0xa0>
800059b4:	c1 98       	rjmp	800059e6 <d_find_pack+0x56>
800059b6:	58 78       	cp.w	r8,7
800059b8:	c4 00       	breq	80005a38 <d_find_pack+0xa8>
800059ba:	58 88       	cp.w	r8,8
800059bc:	c3 a1       	brne	80005a30 <d_find_pack+0xa0>
800059be:	c3 d8       	rjmp	80005a38 <d_find_pack+0xa8>
800059c0:	e0 48 00 2c 	cp.w	r8,44
800059c4:	c3 a0       	breq	80005a38 <d_find_pack+0xa8>
800059c6:	e0 8b 00 09 	brhi	800059d8 <d_find_pack+0x48>
800059ca:	e0 48 00 23 	cp.w	r8,35
800059ce:	c3 70       	breq	80005a3c <d_find_pack+0xac>
800059d0:	e0 48 00 2b 	cp.w	r8,43
800059d4:	c2 e1       	brne	80005a30 <d_find_pack+0xa0>
800059d6:	c3 38       	rjmp	80005a3c <d_find_pack+0xac>
800059d8:	e0 48 00 38 	cp.w	r8,56
800059dc:	c3 00       	breq	80005a3c <d_find_pack+0xac>
800059de:	e0 48 00 3a 	cp.w	r8,58
800059e2:	c2 71       	brne	80005a30 <d_find_pack+0xa0>
800059e4:	c2 c8       	rjmp	80005a3c <d_find_pack+0xac>
800059e6:	ec fc 01 14 	ld.w	r12,r6[276]
800059ea:	58 0c       	cp.w	r12,0
800059ec:	c0 51       	brne	800059f6 <d_find_pack+0x66>
800059ee:	30 18       	mov	r8,1
800059f0:	ed 48 01 1c 	st.w	r6[284],r8
800059f4:	d8 22       	popm	r4-r7,pc
800059f6:	78 18       	ld.w	r8,r12[0x4]
800059f8:	6e 19       	ld.w	r9,r7[0x4]
800059fa:	c0 98       	rjmp	80005a0c <d_find_pack+0x7c>
800059fc:	70 0a       	ld.w	r10,r8[0x0]
800059fe:	e0 4a 00 2a 	cp.w	r10,42
80005a02:	c1 d1       	brne	80005a3c <d_find_pack+0xac>
80005a04:	58 09       	cp.w	r9,0
80005a06:	e0 8a 00 06 	brle	80005a12 <d_find_pack+0x82>
80005a0a:	20 19       	sub	r9,1
80005a0c:	70 28       	ld.w	r8,r8[0x8]
80005a0e:	58 08       	cp.w	r8,0
80005a10:	cf 61       	brne	800059fc <d_find_pack+0x6c>
80005a12:	58 09       	cp.w	r9,0
80005a14:	5f 19       	srne	r9
80005a16:	58 08       	cp.w	r8,0
80005a18:	5f 0a       	sreq	r10
80005a1a:	f5 e9 10 09 	or	r9,r10,r9
80005a1e:	c0 f1       	brne	80005a3c <d_find_pack+0xac>
80005a20:	70 1c       	ld.w	r12,r8[0x4]
80005a22:	58 0c       	cp.w	r12,0
80005a24:	c0 d0       	breq	80005a3e <d_find_pack+0xae>
80005a26:	78 08       	ld.w	r8,r12[0x0]
80005a28:	e0 48 00 2a 	cp.w	r8,42
80005a2c:	c0 81       	brne	80005a3c <d_find_pack+0xac>
80005a2e:	d8 22       	popm	r4-r7,pc
80005a30:	6e 1b       	ld.w	r11,r7[0x4]
80005a32:	0c 9c       	mov	r12,r6
80005a34:	ca ef       	rcall	80005990 <d_find_pack>
80005a36:	c0 41       	brne	80005a3e <d_find_pack+0xae>
80005a38:	6e 27       	ld.w	r7,r7[0x8]
80005a3a:	ca eb       	rjmp	80005996 <d_find_pack+0x6>
80005a3c:	30 0c       	mov	r12,0
80005a3e:	d8 22       	popm	r4-r7,pc

80005a40 <d_append_string>:
80005a40:	d4 21       	pushm	r4-r7,lr
80005a42:	20 1d       	sub	sp,4
80005a44:	18 97       	mov	r7,r12
80005a46:	50 0b       	stdsp	sp[0x0],r11
80005a48:	16 9c       	mov	r12,r11
80005a4a:	f0 1f 00 05 	mcall	80005a5c <d_append_string+0x1c>
80005a4e:	40 0b       	lddsp	r11,sp[0x0]
80005a50:	18 9a       	mov	r10,r12
80005a52:	0e 9c       	mov	r12,r7
80005a54:	c9 0f       	rcall	80005974 <d_append_buffer>
80005a56:	2f fd       	sub	sp,-4
80005a58:	d8 22       	popm	r4-r7,pc
80005a5a:	00 00       	add	r0,r0
80005a5c:	80 00       	ld.sh	r0,r0[0x0]
80005a5e:	a8 02       	st.h	r4[0x0],r2

80005a60 <d_source_name>:
80005a60:	d4 21       	pushm	r4-r7,lr
80005a62:	18 97       	mov	r7,r12
80005a64:	fe b0 fd dc 	rcall	8000561c <d_number>
80005a68:	18 96       	mov	r6,r12
80005a6a:	e0 89 00 03 	brgt	80005a70 <d_source_name+0x10>
80005a6e:	d8 2a       	popm	r4-r7,pc,r12=0
80005a70:	6e 35       	ld.w	r5,r7[0xc]
80005a72:	6e 18       	ld.w	r8,r7[0x4]
80005a74:	0a 18       	sub	r8,r5
80005a76:	18 38       	cp.w	r8,r12
80005a78:	c0 34       	brge	80005a7e <d_source_name+0x1e>
80005a7a:	30 0c       	mov	r12,0
80005a7c:	c3 d8       	rjmp	80005af6 <d_source_name+0x96>
80005a7e:	ea 0c 00 08 	add	r8,r5,r12
80005a82:	8f 38       	st.w	r7[0xc],r8
80005a84:	6e 29       	ld.w	r9,r7[0x8]
80005a86:	ed b9 00 02 	bld	r9,0x2
80005a8a:	c0 81       	brne	80005a9a <d_source_name+0x3a>
80005a8c:	11 8a       	ld.ub	r10,r8[0x0]
80005a8e:	32 49       	mov	r9,36
80005a90:	f2 0a 18 00 	cp.b	r10,r9
80005a94:	c0 31       	brne	80005a9a <d_source_name+0x3a>
80005a96:	2f f8       	sub	r8,-1
80005a98:	8f 38       	st.w	r7[0xc],r8
80005a9a:	58 96       	cp.w	r6,9
80005a9c:	e0 8a 00 28 	brle	80005aec <d_source_name+0x8c>
80005aa0:	30 8a       	mov	r10,8
80005aa2:	49 7b       	lddpc	r11,80005afc <d_source_name+0x9c>
80005aa4:	0a 9c       	mov	r12,r5
80005aa6:	f0 1f 00 17 	mcall	80005b00 <d_source_name+0xa0>
80005aaa:	c2 11       	brne	80005aec <d_source_name+0x8c>
80005aac:	35 fa       	mov	r10,95
80005aae:	ea c9 ff f8 	sub	r9,r5,-8
80005ab2:	13 88       	ld.ub	r8,r9[0x0]
80005ab4:	f4 08 18 00 	cp.b	r8,r10
80005ab8:	5f 0b       	sreq	r11
80005aba:	32 ea       	mov	r10,46
80005abc:	f4 08 18 00 	cp.b	r8,r10
80005ac0:	5f 0a       	sreq	r10
80005ac2:	f7 ea 10 0a 	or	r10,r11,r10
80005ac6:	f8 0a 18 00 	cp.b	r10,r12
80005aca:	c0 51       	brne	80005ad4 <d_source_name+0x74>
80005acc:	32 4a       	mov	r10,36
80005ace:	f4 08 18 00 	cp.b	r8,r10
80005ad2:	c0 d1       	brne	80005aec <d_source_name+0x8c>
80005ad4:	13 99       	ld.ub	r9,r9[0x1]
80005ad6:	34 e8       	mov	r8,78
80005ad8:	f0 09 18 00 	cp.b	r9,r8
80005adc:	c0 81       	brne	80005aec <d_source_name+0x8c>
80005ade:	6e c8       	ld.w	r8,r7[0x30]
80005ae0:	31 5a       	mov	r10,21
80005ae2:	2e a8       	sub	r8,-22
80005ae4:	48 8b       	lddpc	r11,80005b04 <d_source_name+0xa4>
80005ae6:	0c 18       	sub	r8,r6
80005ae8:	8f c8       	st.w	r7[0x30],r8
80005aea:	c0 38       	rjmp	80005af0 <d_source_name+0x90>
80005aec:	0c 9a       	mov	r10,r6
80005aee:	0a 9b       	mov	r11,r5
80005af0:	0e 9c       	mov	r12,r7
80005af2:	fe b0 fd 79 	rcall	800055e4 <d_make_name>
80005af6:	8f bc       	st.w	r7[0x2c],r12
80005af8:	d8 22       	popm	r4-r7,pc
80005afa:	00 00       	add	r0,r0
80005afc:	80 00       	ld.sh	r0,r0[0x0]
80005afe:	f6 d4 80 00 	satsub.w	r4,r11,-32768
80005b02:	a0 d2       	st.b	r0[0x5],r2
80005b04:	80 00       	ld.sh	r0,r0[0x0]
80005b06:	f6 e0 d4 21 	ld.d	r0,r11[-11231]

80005b08 <d_expression>:
80005b08:	d4 21       	pushm	r4-r7,lr
80005b0a:	34 ca       	mov	r10,76
80005b0c:	78 38       	ld.w	r8,r12[0xc]
80005b0e:	18 97       	mov	r7,r12
80005b10:	11 89       	ld.ub	r9,r8[0x0]
80005b12:	f4 09 18 00 	cp.b	r9,r10
80005b16:	c0 41       	brne	80005b1e <d_expression+0x16>
80005b18:	e0 a0 05 b2 	rcall	8000667c <d_expr_primary>
80005b1c:	c0 68       	rjmp	80005b28 <d_expression+0x20>
80005b1e:	35 4a       	mov	r10,84
80005b20:	f4 09 18 00 	cp.b	r9,r10
80005b24:	c0 41       	brne	80005b2c <d_expression+0x24>
80005b26:	c1 5e       	rcall	80005750 <d_template_param>
80005b28:	18 96       	mov	r6,r12
80005b2a:	cf e8       	rjmp	80005d26 <d_expression+0x21e>
80005b2c:	37 3a       	mov	r10,115
80005b2e:	f4 09 18 00 	cp.b	r9,r10
80005b32:	c3 01       	brne	80005b92 <d_expression+0x8a>
80005b34:	11 9a       	ld.ub	r10,r8[0x1]
80005b36:	37 2b       	mov	r11,114
80005b38:	f6 0a 18 00 	cp.b	r10,r11
80005b3c:	c1 f1       	brne	80005b7a <d_expression+0x72>
80005b3e:	2f e8       	sub	r8,-2
80005b40:	99 38       	st.w	r12[0xc],r8
80005b42:	cf bc       	rcall	80005d38 <d_type>
80005b44:	18 96       	mov	r6,r12
80005b46:	0e 9c       	mov	r12,r7
80005b48:	e0 a0 04 de 	rcall	80006504 <d_unqualified_name>
80005b4c:	6e 38       	ld.w	r8,r7[0xc]
80005b4e:	18 95       	mov	r5,r12
80005b50:	11 89       	ld.ub	r9,r8[0x0]
80005b52:	34 98       	mov	r8,73
80005b54:	f0 09 18 00 	cp.b	r9,r8
80005b58:	c0 30       	breq	80005b5e <d_expression+0x56>
80005b5a:	18 99       	mov	r9,r12
80005b5c:	c0 b8       	rjmp	80005b72 <d_expression+0x6a>
80005b5e:	0e 9c       	mov	r12,r7
80005b60:	e0 a0 05 f4 	rcall	80006748 <d_template_args>
80005b64:	18 99       	mov	r9,r12
80005b66:	0a 9a       	mov	r10,r5
80005b68:	30 4b       	mov	r11,4
80005b6a:	0e 9c       	mov	r12,r7
80005b6c:	fe b0 fc 9c 	rcall	800054a4 <d_make_comp>
80005b70:	18 99       	mov	r9,r12
80005b72:	0c 9a       	mov	r10,r6
80005b74:	0e 9c       	mov	r12,r7
80005b76:	30 1b       	mov	r11,1
80005b78:	cb a8       	rjmp	80005cec <d_expression+0x1e4>
80005b7a:	37 0b       	mov	r11,112
80005b7c:	f6 0a 18 00 	cp.b	r10,r11
80005b80:	c3 c1       	brne	80005bf8 <d_expression+0xf0>
80005b82:	2f e8       	sub	r8,-2
80005b84:	99 38       	st.w	r12[0xc],r8
80005b86:	cc 1f       	rcall	80005b08 <d_expression>
80005b88:	30 09       	mov	r9,0
80005b8a:	18 9a       	mov	r10,r12
80005b8c:	33 ab       	mov	r11,58
80005b8e:	0e 9c       	mov	r12,r7
80005b90:	ca e8       	rjmp	80005cec <d_expression+0x1e4>
80005b92:	36 6a       	mov	r10,102
80005b94:	f4 09 18 00 	cp.b	r9,r10
80005b98:	c3 01       	brne	80005bf8 <d_expression+0xf0>
80005b9a:	11 9b       	ld.ub	r11,r8[0x1]
80005b9c:	37 0a       	mov	r10,112
80005b9e:	f4 0b 18 00 	cp.b	r11,r10
80005ba2:	c2 b1       	brne	80005bf8 <d_expression+0xf0>
80005ba4:	2f e8       	sub	r8,-2
80005ba6:	99 38       	st.w	r12[0xc],r8
80005ba8:	11 89       	ld.ub	r9,r8[0x0]
80005baa:	35 f8       	mov	r8,95
80005bac:	f0 09 18 00 	cp.b	r9,r8
80005bb0:	c0 31       	brne	80005bb6 <d_expression+0xae>
80005bb2:	30 1c       	mov	r12,1
80005bb4:	c0 68       	rjmp	80005bc0 <d_expression+0xb8>
80005bb6:	fe b0 fd 33 	rcall	8000561c <d_number>
80005bba:	e0 85 00 b5 	brlt	80005d24 <d_expression+0x21c>
80005bbe:	2f ec       	sub	r12,-2
80005bc0:	6e 38       	ld.w	r8,r7[0xc]
80005bc2:	35 f9       	mov	r9,95
80005bc4:	11 8a       	ld.ub	r10,r8[0x0]
80005bc6:	f2 0a 18 00 	cp.b	r10,r9
80005bca:	e0 81 00 ad 	brne	80005d24 <d_expression+0x21c>
80005bce:	2f f8       	sub	r8,-1
80005bd0:	8f 38       	st.w	r7[0xc],r8
80005bd2:	6e 56       	ld.w	r6,r7[0x14]
80005bd4:	6e 68       	ld.w	r8,r7[0x18]
80005bd6:	10 36       	cp.w	r6,r8
80005bd8:	e0 84 00 a6 	brge	80005d24 <d_expression+0x21c>
80005bdc:	ec c8 ff ff 	sub	r8,r6,-1
80005be0:	8f 58       	st.w	r7[0x14],r8
80005be2:	ec 06 00 16 	add	r6,r6,r6<<0x1
80005be6:	6e 48       	ld.w	r8,r7[0x10]
80005be8:	f0 06 00 26 	add	r6,r8,r6<<0x2
80005bec:	e0 80 00 9d 	breq	80005d26 <d_expression+0x21e>
80005bf0:	30 68       	mov	r8,6
80005bf2:	8d 1c       	st.w	r6[0x4],r12
80005bf4:	8d 08       	st.w	r6[0x0],r8
80005bf6:	c9 88       	rjmp	80005d26 <d_expression+0x21e>
80005bf8:	23 09       	sub	r9,48
80005bfa:	30 98       	mov	r8,9
80005bfc:	f0 09 18 00 	cp.b	r9,r8
80005c00:	e0 8b 00 17 	brhi	80005c2e <d_expression+0x126>
80005c04:	0e 9c       	mov	r12,r7
80005c06:	e0 a0 04 7f 	rcall	80006504 <d_unqualified_name>
80005c0a:	18 96       	mov	r6,r12
80005c0c:	e0 80 00 8d 	breq	80005d26 <d_expression+0x21e>
80005c10:	6e 38       	ld.w	r8,r7[0xc]
80005c12:	11 89       	ld.ub	r9,r8[0x0]
80005c14:	34 98       	mov	r8,73
80005c16:	f0 09 18 00 	cp.b	r9,r8
80005c1a:	e0 81 00 86 	brne	80005d26 <d_expression+0x21e>
80005c1e:	0e 9c       	mov	r12,r7
80005c20:	e0 a0 05 94 	rcall	80006748 <d_template_args>
80005c24:	0c 9a       	mov	r10,r6
80005c26:	18 99       	mov	r9,r12
80005c28:	30 4b       	mov	r11,4
80005c2a:	0e 9c       	mov	r12,r7
80005c2c:	c6 08       	rjmp	80005cec <d_expression+0x1e4>
80005c2e:	0e 9c       	mov	r12,r7
80005c30:	e0 a0 03 e8 	rcall	80006400 <d_operator_name>
80005c34:	18 96       	mov	r6,r12
80005c36:	c7 70       	breq	80005d24 <d_expression+0x21c>
80005c38:	78 08       	ld.w	r8,r12[0x0]
80005c3a:	e0 48 00 2b 	cp.w	r8,43
80005c3e:	c0 81       	brne	80005c4e <d_expression+0x146>
80005c40:	78 18       	ld.w	r8,r12[0x4]
80005c42:	6e c9       	ld.w	r9,r7[0x30]
80005c44:	70 28       	ld.w	r8,r8[0x8]
80005c46:	f2 08 00 08 	add	r8,r9,r8
80005c4a:	20 28       	sub	r8,2
80005c4c:	8f c8       	st.w	r7[0x30],r8
80005c4e:	6c 05       	ld.w	r5,r6[0x0]
80005c50:	e0 45 00 2b 	cp.w	r5,43
80005c54:	c0 a1       	brne	80005c68 <d_expression+0x160>
80005c56:	6c 18       	ld.w	r8,r6[0x4]
80005c58:	4b 5b       	lddpc	r11,80005d2c <d_expression+0x224>
80005c5a:	70 0c       	ld.w	r12,r8[0x0]
80005c5c:	f0 1f 00 35 	mcall	80005d30 <d_expression+0x228>
80005c60:	c0 d1       	brne	80005c7a <d_expression+0x172>
80005c62:	0e 9c       	mov	r12,r7
80005c64:	c6 ac       	rcall	80005d38 <d_type>
80005c66:	c2 58       	rjmp	80005cb0 <d_expression+0x1a8>
80005c68:	e0 45 00 2c 	cp.w	r5,44
80005c6c:	c0 a0       	breq	80005c80 <d_expression+0x178>
80005c6e:	e0 45 00 2d 	cp.w	r5,45
80005c72:	c1 10       	breq	80005c94 <d_expression+0x18c>
80005c74:	e0 45 00 2b 	cp.w	r5,43
80005c78:	c5 61       	brne	80005d24 <d_expression+0x21c>
80005c7a:	6c 18       	ld.w	r8,r6[0x4]
80005c7c:	70 38       	ld.w	r8,r8[0xc]
80005c7e:	c0 28       	rjmp	80005c82 <d_expression+0x17a>
80005c80:	6c 18       	ld.w	r8,r6[0x4]
80005c82:	58 28       	cp.w	r8,2
80005c84:	c1 b0       	breq	80005cba <d_expression+0x1b2>
80005c86:	58 38       	cp.w	r8,3
80005c88:	c3 50       	breq	80005cf2 <d_expression+0x1ea>
80005c8a:	58 18       	cp.w	r8,1
80005c8c:	c4 c1       	brne	80005d24 <d_expression+0x21c>
80005c8e:	e0 45 00 2d 	cp.w	r5,45
80005c92:	c0 d1       	brne	80005cac <d_expression+0x1a4>
80005c94:	6e 38       	ld.w	r8,r7[0xc]
80005c96:	35 f9       	mov	r9,95
80005c98:	11 8a       	ld.ub	r10,r8[0x0]
80005c9a:	f2 0a 18 00 	cp.b	r10,r9
80005c9e:	c0 71       	brne	80005cac <d_expression+0x1a4>
80005ca0:	2f f8       	sub	r8,-1
80005ca2:	0e 9c       	mov	r12,r7
80005ca4:	8f 38       	st.w	r7[0xc],r8
80005ca6:	e0 a0 08 bb 	rcall	80006e1c <d_exprlist>
80005caa:	c0 38       	rjmp	80005cb0 <d_expression+0x1a8>
80005cac:	0e 9c       	mov	r12,r7
80005cae:	c2 df       	rcall	80005b08 <d_expression>
80005cb0:	18 99       	mov	r9,r12
80005cb2:	0c 9a       	mov	r10,r6
80005cb4:	0e 9c       	mov	r12,r7
80005cb6:	32 eb       	mov	r11,46
80005cb8:	c1 a8       	rjmp	80005cec <d_expression+0x1e4>
80005cba:	0e 9c       	mov	r12,r7
80005cbc:	c2 6f       	rcall	80005b08 <d_expression>
80005cbe:	6c 18       	ld.w	r8,r6[0x4]
80005cc0:	18 95       	mov	r5,r12
80005cc2:	49 db       	lddpc	r11,80005d34 <d_expression+0x22c>
80005cc4:	70 0c       	ld.w	r12,r8[0x0]
80005cc6:	f0 1f 00 1b 	mcall	80005d30 <d_expression+0x228>
80005cca:	c0 51       	brne	80005cd4 <d_expression+0x1cc>
80005ccc:	0e 9c       	mov	r12,r7
80005cce:	e0 a0 08 a7 	rcall	80006e1c <d_exprlist>
80005cd2:	c0 38       	rjmp	80005cd8 <d_expression+0x1d0>
80005cd4:	0e 9c       	mov	r12,r7
80005cd6:	c1 9f       	rcall	80005b08 <d_expression>
80005cd8:	18 99       	mov	r9,r12
80005cda:	0a 9a       	mov	r10,r5
80005cdc:	33 0b       	mov	r11,48
80005cde:	0e 9c       	mov	r12,r7
80005ce0:	fe b0 fb e2 	rcall	800054a4 <d_make_comp>
80005ce4:	0c 9a       	mov	r10,r6
80005ce6:	18 99       	mov	r9,r12
80005ce8:	32 fb       	mov	r11,47
80005cea:	0e 9c       	mov	r12,r7
80005cec:	fe b0 fb dc 	rcall	800054a4 <d_make_comp>
80005cf0:	c1 cb       	rjmp	80005b28 <d_expression+0x20>
80005cf2:	0e 9c       	mov	r12,r7
80005cf4:	c0 af       	rcall	80005b08 <d_expression>
80005cf6:	18 95       	mov	r5,r12
80005cf8:	0e 9c       	mov	r12,r7
80005cfa:	c0 7f       	rcall	80005b08 <d_expression>
80005cfc:	18 94       	mov	r4,r12
80005cfe:	0e 9c       	mov	r12,r7
80005d00:	c0 4f       	rcall	80005b08 <d_expression>
80005d02:	08 9a       	mov	r10,r4
80005d04:	18 99       	mov	r9,r12
80005d06:	33 3b       	mov	r11,51
80005d08:	0e 9c       	mov	r12,r7
80005d0a:	fe b0 fb cd 	rcall	800054a4 <d_make_comp>
80005d0e:	0a 9a       	mov	r10,r5
80005d10:	18 99       	mov	r9,r12
80005d12:	33 2b       	mov	r11,50
80005d14:	0e 9c       	mov	r12,r7
80005d16:	fe b0 fb c7 	rcall	800054a4 <d_make_comp>
80005d1a:	0c 9a       	mov	r10,r6
80005d1c:	18 99       	mov	r9,r12
80005d1e:	33 1b       	mov	r11,49
80005d20:	0e 9c       	mov	r12,r7
80005d22:	ce 5b       	rjmp	80005cec <d_expression+0x1e4>
80005d24:	30 06       	mov	r6,0
80005d26:	0c 9c       	mov	r12,r6
80005d28:	d8 22       	popm	r4-r7,pc
80005d2a:	00 00       	add	r0,r0
80005d2c:	80 00       	ld.sh	r0,r0[0x0]
80005d2e:	f8 fc 80 00 	ld.w	r12,r12[-32768]
80005d32:	a7 48       	asr	r8,0x6
80005d34:	80 00       	ld.sh	r0,r0[0x0]
80005d36:	f6 f8 d4 21 	ld.w	r8,r11[-11231]

80005d38 <d_type>:
80005d38:	d4 21       	pushm	r4-r7,lr
80005d3a:	20 2d       	sub	sp,8
80005d3c:	35 69       	mov	r9,86
80005d3e:	78 3b       	ld.w	r11,r12[0xc]
80005d40:	18 97       	mov	r7,r12
80005d42:	17 88       	ld.ub	r8,r11[0x0]
80005d44:	f2 08 18 00 	cp.b	r8,r9
80005d48:	5f 0a       	sreq	r10
80005d4a:	37 29       	mov	r9,114
80005d4c:	f2 08 18 00 	cp.b	r8,r9
80005d50:	5f 09       	sreq	r9
80005d52:	f5 e9 10 09 	or	r9,r10,r9
80005d56:	c0 51       	brne	80005d60 <d_type+0x28>
80005d58:	34 b9       	mov	r9,75
80005d5a:	f2 08 18 00 	cp.b	r8,r9
80005d5e:	c1 11       	brne	80005d80 <d_type+0x48>
80005d60:	30 0a       	mov	r10,0
80005d62:	fa cb ff fc 	sub	r11,sp,-4
80005d66:	0e 9c       	mov	r12,r7
80005d68:	fe b0 fc a8 	rcall	800056b8 <d_cv_qualifiers>
80005d6c:	18 96       	mov	r6,r12
80005d6e:	e0 80 02 ee 	breq	8000634a <d_type+0x612>
80005d72:	0e 9c       	mov	r12,r7
80005d74:	ce 2f       	rcall	80005d38 <d_type>
80005d76:	8d 0c       	st.w	r6[0x0],r12
80005d78:	e0 80 02 e9 	breq	8000634a <d_type+0x612>
80005d7c:	e0 8f 02 ea 	bral	80006350 <d_type+0x618>
80005d80:	f0 c9 00 30 	sub	r9,r8,48
80005d84:	e0 49 00 4a 	cp.w	r9,74
80005d88:	e0 8b 02 e1 	brhi	8000634a <d_type+0x612>
80005d8c:	fe fa 02 24 	ld.w	r10,pc[548]
80005d90:	f4 09 03 2f 	ld.w	pc,r10[r9<<0x2]
80005d94:	80 00       	ld.sh	r0,r0[0x0]
80005d96:	5f 48       	srge	r8
80005d98:	80 00       	ld.sh	r0,r0[0x0]
80005d9a:	5f 48       	srge	r8
80005d9c:	80 00       	ld.sh	r0,r0[0x0]
80005d9e:	5f 48       	srge	r8
80005da0:	80 00       	ld.sh	r0,r0[0x0]
80005da2:	5f 48       	srge	r8
80005da4:	80 00       	ld.sh	r0,r0[0x0]
80005da6:	5f 48       	srge	r8
80005da8:	80 00       	ld.sh	r0,r0[0x0]
80005daa:	5f 48       	srge	r8
80005dac:	80 00       	ld.sh	r0,r0[0x0]
80005dae:	5f 48       	srge	r8
80005db0:	80 00       	ld.sh	r0,r0[0x0]
80005db2:	5f 48       	srge	r8
80005db4:	80 00       	ld.sh	r0,r0[0x0]
80005db6:	5f 48       	srge	r8
80005db8:	80 00       	ld.sh	r0,r0[0x0]
80005dba:	5f 48       	srge	r8
80005dbc:	80 00       	ld.sh	r0,r0[0x0]
80005dbe:	63 4a       	ld.w	r10,r1[0x50]
80005dc0:	80 00       	ld.sh	r0,r0[0x0]
80005dc2:	63 4a       	ld.w	r10,r1[0x50]
80005dc4:	80 00       	ld.sh	r0,r0[0x0]
80005dc6:	63 4a       	ld.w	r10,r1[0x50]
80005dc8:	80 00       	ld.sh	r0,r0[0x0]
80005dca:	63 4a       	ld.w	r10,r1[0x50]
80005dcc:	80 00       	ld.sh	r0,r0[0x0]
80005dce:	63 4a       	ld.w	r10,r1[0x50]
80005dd0:	80 00       	ld.sh	r0,r0[0x0]
80005dd2:	63 4a       	ld.w	r10,r1[0x50]
80005dd4:	80 00       	ld.sh	r0,r0[0x0]
80005dd6:	63 4a       	ld.w	r10,r1[0x50]
80005dd8:	80 00       	ld.sh	r0,r0[0x0]
80005dda:	5f 4e       	srge	lr
80005ddc:	80 00       	ld.sh	r0,r0[0x0]
80005dde:	63 4a       	ld.w	r10,r1[0x50]
80005de0:	80 00       	ld.sh	r0,r0[0x0]
80005de2:	60 c8       	ld.w	r8,r0[0x30]
80005de4:	80 00       	ld.sh	r0,r0[0x0]
80005de6:	61 04       	ld.w	r4,r0[0x40]
80005de8:	80 00       	ld.sh	r0,r0[0x0]
80005dea:	63 4a       	ld.w	r10,r1[0x50]
80005dec:	80 00       	ld.sh	r0,r0[0x0]
80005dee:	5f 1c       	srne	r12
80005df0:	80 00       	ld.sh	r0,r0[0x0]
80005df2:	60 d6       	ld.w	r6,r0[0x34]
80005df4:	80 00       	ld.sh	r0,r0[0x0]
80005df6:	63 4a       	ld.w	r10,r1[0x50]
80005df8:	80 00       	ld.sh	r0,r0[0x0]
80005dfa:	63 4a       	ld.w	r10,r1[0x50]
80005dfc:	80 00       	ld.sh	r0,r0[0x0]
80005dfe:	63 4a       	ld.w	r10,r1[0x50]
80005e00:	80 00       	ld.sh	r0,r0[0x0]
80005e02:	63 4a       	ld.w	r10,r1[0x50]
80005e04:	80 00       	ld.sh	r0,r0[0x0]
80005e06:	63 4a       	ld.w	r10,r1[0x50]
80005e08:	80 00       	ld.sh	r0,r0[0x0]
80005e0a:	5f b8       	srhi	r8
80005e0c:	80 00       	ld.sh	r0,r0[0x0]
80005e0e:	5f 48       	srge	r8
80005e10:	80 00       	ld.sh	r0,r0[0x0]
80005e12:	60 9e       	ld.w	lr,r0[0x24]
80005e14:	80 00       	ld.sh	r0,r0[0x0]
80005e16:	60 ac       	ld.w	r12,r0[0x28]
80005e18:	80 00       	ld.sh	r0,r0[0x0]
80005e1a:	63 4a       	ld.w	r10,r1[0x50]
80005e1c:	80 00       	ld.sh	r0,r0[0x0]
80005e1e:	60 ba       	ld.w	r10,r0[0x2c]
80005e20:	80 00       	ld.sh	r0,r0[0x0]
80005e22:	60 3c       	ld.w	r12,r0[0xc]
80005e24:	80 00       	ld.sh	r0,r0[0x0]
80005e26:	60 0a       	ld.w	r10,r0[0x0]
80005e28:	80 00       	ld.sh	r0,r0[0x0]
80005e2a:	60 ec       	ld.w	r12,r0[0x38]
80005e2c:	80 00       	ld.sh	r0,r0[0x0]
80005e2e:	63 4a       	ld.w	r10,r1[0x50]
80005e30:	80 00       	ld.sh	r0,r0[0x0]
80005e32:	63 4a       	ld.w	r10,r1[0x50]
80005e34:	80 00       	ld.sh	r0,r0[0x0]
80005e36:	63 4a       	ld.w	r10,r1[0x50]
80005e38:	80 00       	ld.sh	r0,r0[0x0]
80005e3a:	63 4a       	ld.w	r10,r1[0x50]
80005e3c:	80 00       	ld.sh	r0,r0[0x0]
80005e3e:	5f 48       	srge	r8
80005e40:	80 00       	ld.sh	r0,r0[0x0]
80005e42:	63 4a       	ld.w	r10,r1[0x50]
80005e44:	80 00       	ld.sh	r0,r0[0x0]
80005e46:	63 4a       	ld.w	r10,r1[0x50]
80005e48:	80 00       	ld.sh	r0,r0[0x0]
80005e4a:	63 4a       	ld.w	r10,r1[0x50]
80005e4c:	80 00       	ld.sh	r0,r0[0x0]
80005e4e:	63 4a       	ld.w	r10,r1[0x50]
80005e50:	80 00       	ld.sh	r0,r0[0x0]
80005e52:	63 4a       	ld.w	r10,r1[0x50]
80005e54:	80 00       	ld.sh	r0,r0[0x0]
80005e56:	63 4a       	ld.w	r10,r1[0x50]
80005e58:	80 00       	ld.sh	r0,r0[0x0]
80005e5a:	5e c0       	retvs	r0
80005e5c:	80 00       	ld.sh	r0,r0[0x0]
80005e5e:	5e c0       	retvs	r0
80005e60:	80 00       	ld.sh	r0,r0[0x0]
80005e62:	5e c0       	retvs	r0
80005e64:	80 00       	ld.sh	r0,r0[0x0]
80005e66:	5e c0       	retvs	r0
80005e68:	80 00       	ld.sh	r0,r0[0x0]
80005e6a:	5e c0       	retvs	r0
80005e6c:	80 00       	ld.sh	r0,r0[0x0]
80005e6e:	5e c0       	retvs	r0
80005e70:	80 00       	ld.sh	r0,r0[0x0]
80005e72:	5e c0       	retvs	r0
80005e74:	80 00       	ld.sh	r0,r0[0x0]
80005e76:	5e c0       	retvs	r0
80005e78:	80 00       	ld.sh	r0,r0[0x0]
80005e7a:	5e c0       	retvs	r0
80005e7c:	80 00       	ld.sh	r0,r0[0x0]
80005e7e:	5e c0       	retvs	r0
80005e80:	80 00       	ld.sh	r0,r0[0x0]
80005e82:	63 4a       	ld.w	r10,r1[0x50]
80005e84:	80 00       	ld.sh	r0,r0[0x0]
80005e86:	5e c0       	retvs	r0
80005e88:	80 00       	ld.sh	r0,r0[0x0]
80005e8a:	5e c0       	retvs	r0
80005e8c:	80 00       	ld.sh	r0,r0[0x0]
80005e8e:	5e c0       	retvs	r0
80005e90:	80 00       	ld.sh	r0,r0[0x0]
80005e92:	5e c0       	retvs	r0
80005e94:	80 00       	ld.sh	r0,r0[0x0]
80005e96:	63 4a       	ld.w	r10,r1[0x50]
80005e98:	80 00       	ld.sh	r0,r0[0x0]
80005e9a:	63 4a       	ld.w	r10,r1[0x50]
80005e9c:	80 00       	ld.sh	r0,r0[0x0]
80005e9e:	63 4a       	ld.w	r10,r1[0x50]
80005ea0:	80 00       	ld.sh	r0,r0[0x0]
80005ea2:	5e c0       	retvs	r0
80005ea4:	80 00       	ld.sh	r0,r0[0x0]
80005ea6:	5e c0       	retvs	r0
80005ea8:	80 00       	ld.sh	r0,r0[0x0]
80005eaa:	5f 0c       	sreq	r12
80005eac:	80 00       	ld.sh	r0,r0[0x0]
80005eae:	5e c0       	retvs	r0
80005eb0:	80 00       	ld.sh	r0,r0[0x0]
80005eb2:	5e c0       	retvs	r0
80005eb4:	80 00       	ld.sh	r0,r0[0x0]
80005eb6:	5e c0       	retvs	r0
80005eb8:	80 00       	ld.sh	r0,r0[0x0]
80005eba:	5e c0       	retvs	r0
80005ebc:	80 00       	ld.sh	r0,r0[0x0]
80005ebe:	5e c0       	retvs	r0
80005ec0:	f0 08 00 28 	add	r8,r8,r8<<0x2
80005ec4:	4b c9       	lddpc	r9,80005fb4 <d_type+0x27c>
80005ec6:	f2 08 00 29 	add	r9,r9,r8<<0x2
80005eca:	f2 c9 06 d0 	sub	r9,r9,1744
80005ece:	c1 20       	breq	80005ef2 <d_type+0x1ba>
80005ed0:	78 58       	ld.w	r8,r12[0x14]
80005ed2:	78 6a       	ld.w	r10,r12[0x18]
80005ed4:	14 38       	cp.w	r8,r10
80005ed6:	c0 e4       	brge	80005ef2 <d_type+0x1ba>
80005ed8:	f0 ca ff ff 	sub	r10,r8,-1
80005edc:	99 5a       	st.w	r12[0x14],r10
80005ede:	f0 08 00 18 	add	r8,r8,r8<<0x1
80005ee2:	78 4a       	ld.w	r10,r12[0x10]
80005ee4:	f4 08 00 28 	add	r8,r10,r8<<0x2
80005ee8:	c0 60       	breq	80005ef4 <d_type+0x1bc>
80005eea:	91 19       	st.w	r8[0x4],r9
80005eec:	32 39       	mov	r9,35
80005eee:	91 09       	st.w	r8[0x0],r9
80005ef0:	c0 28       	rjmp	80005ef4 <d_type+0x1bc>
80005ef2:	30 08       	mov	r8,0
80005ef4:	6e c9       	ld.w	r9,r7[0x30]
80005ef6:	50 18       	stdsp	sp[0x4],r8
80005ef8:	70 18       	ld.w	r8,r8[0x4]
80005efa:	70 18       	ld.w	r8,r8[0x4]
80005efc:	f2 08 00 08 	add	r8,r9,r8
80005f00:	8f c8       	st.w	r7[0x30],r8
80005f02:	6e 38       	ld.w	r8,r7[0xc]
80005f04:	2f f8       	sub	r8,-1
80005f06:	8f 38       	st.w	r7[0xc],r8
80005f08:	e0 8f 02 1f 	bral	80006346 <d_type+0x60e>
80005f0c:	2f fb       	sub	r11,-1
80005f0e:	99 3b       	st.w	r12[0xc],r11
80005f10:	fe b0 fd a8 	rcall	80005a60 <d_source_name>
80005f14:	30 09       	mov	r9,0
80005f16:	18 9a       	mov	r10,r12
80005f18:	32 4b       	mov	r11,36
80005f1a:	ce 48       	rjmp	800060e2 <d_type+0x3aa>
80005f1c:	2f fb       	sub	r11,-1
80005f1e:	99 3b       	st.w	r12[0xc],r11
80005f20:	35 98       	mov	r8,89
80005f22:	17 89       	ld.ub	r9,r11[0x0]
80005f24:	f0 09 18 00 	cp.b	r9,r8
80005f28:	c0 31       	brne	80005f2e <d_type+0x1f6>
80005f2a:	2f fb       	sub	r11,-1
80005f2c:	99 3b       	st.w	r12[0xc],r11
80005f2e:	30 1b       	mov	r11,1
80005f30:	0e 9c       	mov	r12,r7
80005f32:	e0 a0 02 13 	rcall	80006358 <d_bare_function_type>
80005f36:	6e 38       	ld.w	r8,r7[0xc]
80005f38:	34 59       	mov	r9,69
80005f3a:	11 8a       	ld.ub	r10,r8[0x0]
80005f3c:	f2 0a 18 00 	cp.b	r10,r9
80005f40:	c6 31       	brne	80006006 <d_type+0x2ce>
80005f42:	2f f8       	sub	r8,-1
80005f44:	8f 38       	st.w	r7[0xc],r8
80005f46:	cd 18       	rjmp	800060e8 <d_type+0x3b0>
80005f48:	e0 a0 04 5c 	rcall	80006800 <d_name>
80005f4c:	cc e8       	rjmp	800060e8 <d_type+0x3b0>
80005f4e:	2f fb       	sub	r11,-1
80005f50:	99 3b       	st.w	r12[0xc],r11
80005f52:	35 f9       	mov	r9,95
80005f54:	17 88       	ld.ub	r8,r11[0x0]
80005f56:	f2 08 18 00 	cp.b	r8,r9
80005f5a:	c0 31       	brne	80005f60 <d_type+0x228>
80005f5c:	30 06       	mov	r6,0
80005f5e:	c1 b8       	rjmp	80005f94 <d_type+0x25c>
80005f60:	f0 c9 00 30 	sub	r9,r8,48
80005f64:	30 98       	mov	r8,9
80005f66:	f0 09 18 00 	cp.b	r9,r8
80005f6a:	e0 8b 00 10 	brhi	80005f8a <d_type+0x252>
80005f6e:	6e 3a       	ld.w	r10,r7[0xc]
80005f70:	2f fa       	sub	r10,-1
80005f72:	8f 3a       	st.w	r7[0xc],r10
80005f74:	15 89       	ld.ub	r9,r10[0x0]
80005f76:	23 09       	sub	r9,48
80005f78:	f0 09 18 00 	cp.b	r9,r8
80005f7c:	fe 98 ff f9 	brls	80005f6e <d_type+0x236>
80005f80:	16 1a       	sub	r10,r11
80005f82:	0e 9c       	mov	r12,r7
80005f84:	fe b0 fb 30 	rcall	800055e4 <d_make_name>
80005f88:	c0 38       	rjmp	80005f8e <d_type+0x256>
80005f8a:	fe b0 fd bf 	rcall	80005b08 <d_expression>
80005f8e:	18 96       	mov	r6,r12
80005f90:	58 0c       	cp.w	r12,0
80005f92:	c3 a0       	breq	80006006 <d_type+0x2ce>
80005f94:	6e 38       	ld.w	r8,r7[0xc]
80005f96:	35 f9       	mov	r9,95
80005f98:	11 8a       	ld.ub	r10,r8[0x0]
80005f9a:	f2 0a 18 00 	cp.b	r10,r9
80005f9e:	c3 41       	brne	80006006 <d_type+0x2ce>
80005fa0:	2f f8       	sub	r8,-1
80005fa2:	0e 9c       	mov	r12,r7
80005fa4:	8f 38       	st.w	r7[0xc],r8
80005fa6:	cc 9e       	rcall	80005d38 <d_type>
80005fa8:	0c 9a       	mov	r10,r6
80005faa:	18 99       	mov	r9,r12
80005fac:	32 6b       	mov	r11,38
80005fae:	c9 a8       	rjmp	800060e2 <d_type+0x3aa>
80005fb0:	80 00       	ld.sh	r0,r0[0x0]
80005fb2:	5d 94       	*unknown*
80005fb4:	80 00       	ld.sh	r0,r0[0x0]
80005fb6:	80 bc       	ld.uh	r12,r0[0x6]
80005fb8:	2f fb       	sub	r11,-1
80005fba:	99 3b       	st.w	r12[0xc],r11
80005fbc:	cb ee       	rcall	80005d38 <d_type>
80005fbe:	30 1a       	mov	r10,1
80005fc0:	18 95       	mov	r5,r12
80005fc2:	1a 9b       	mov	r11,sp
80005fc4:	0e 9c       	mov	r12,r7
80005fc6:	1a 96       	mov	r6,sp
80005fc8:	fe b0 fb 78 	rcall	800056b8 <d_cv_qualifiers>
80005fcc:	18 94       	mov	r4,r12
80005fce:	c1 c0       	breq	80006006 <d_type+0x2ce>
80005fd0:	0e 9c       	mov	r12,r7
80005fd2:	cb 3e       	rcall	80005d38 <d_type>
80005fd4:	89 0c       	st.w	r4[0x0],r12
80005fd6:	c1 80       	breq	80006006 <d_type+0x2ce>
80005fd8:	1a 34       	cp.w	r4,sp
80005fda:	c1 20       	breq	80005ffe <d_type+0x2c6>
80005fdc:	78 08       	ld.w	r8,r12[0x0]
80005fde:	e0 48 00 25 	cp.w	r8,37
80005fe2:	c0 e0       	breq	80005ffe <d_type+0x2c6>
80005fe4:	40 09       	lddsp	r9,sp[0x0]
80005fe6:	58 09       	cp.w	r9,0
80005fe8:	c0 f0       	breq	80006006 <d_type+0x2ce>
80005fea:	6e 88       	ld.w	r8,r7[0x20]
80005fec:	6e 9a       	ld.w	r10,r7[0x24]
80005fee:	14 38       	cp.w	r8,r10
80005ff0:	c0 b4       	brge	80006006 <d_type+0x2ce>
80005ff2:	f0 ca ff ff 	sub	r10,r8,-1
80005ff6:	8f 8a       	st.w	r7[0x20],r10
80005ff8:	6e 7a       	ld.w	r10,r7[0x1c]
80005ffa:	f4 08 09 29 	st.w	r10[r8<<0x2],r9
80005ffe:	0a 9a       	mov	r10,r5
80006000:	40 09       	lddsp	r9,sp[0x0]
80006002:	32 7b       	mov	r11,39
80006004:	c6 f8       	rjmp	800060e2 <d_type+0x3aa>
80006006:	30 0c       	mov	r12,0
80006008:	c7 08       	rjmp	800060e8 <d_type+0x3b0>
8000600a:	fe b0 fb a3 	rcall	80005750 <d_template_param>
8000600e:	6e 38       	ld.w	r8,r7[0xc]
80006010:	50 1c       	stdsp	sp[0x4],r12
80006012:	11 89       	ld.ub	r9,r8[0x0]
80006014:	34 98       	mov	r8,73
80006016:	f0 09 18 00 	cp.b	r9,r8
8000601a:	e0 81 01 9b 	brne	80006350 <d_type+0x618>
8000601e:	58 0c       	cp.w	r12,0
80006020:	e0 80 01 95 	breq	8000634a <d_type+0x612>
80006024:	6e 88       	ld.w	r8,r7[0x20]
80006026:	6e 99       	ld.w	r9,r7[0x24]
80006028:	12 38       	cp.w	r8,r9
8000602a:	e0 84 01 90 	brge	8000634a <d_type+0x612>
8000602e:	f0 c9 ff ff 	sub	r9,r8,-1
80006032:	8f 89       	st.w	r7[0x20],r9
80006034:	6e 79       	ld.w	r9,r7[0x1c]
80006036:	f2 08 09 2c 	st.w	r9[r8<<0x2],r12
8000603a:	c2 18       	rjmp	8000607c <d_type+0x344>
8000603c:	30 99       	mov	r9,9
8000603e:	17 98       	ld.ub	r8,r11[0x1]
80006040:	f0 ca 00 30 	sub	r10,r8,48
80006044:	f2 0a 18 00 	cp.b	r10,r9
80006048:	5f 8a       	srls	r10
8000604a:	35 f9       	mov	r9,95
8000604c:	f2 08 18 00 	cp.b	r8,r9
80006050:	5f 09       	sreq	r9
80006052:	f5 e9 10 09 	or	r9,r10,r9
80006056:	c0 71       	brne	80006064 <d_type+0x32c>
80006058:	24 18       	sub	r8,65
8000605a:	31 99       	mov	r9,25
8000605c:	f2 08 18 00 	cp.b	r8,r9
80006060:	e0 8b 00 15 	brhi	8000608a <d_type+0x352>
80006064:	30 0b       	mov	r11,0
80006066:	0e 9c       	mov	r12,r7
80006068:	fe b0 fb a8 	rcall	800057b8 <d_substitution>
8000606c:	6e 38       	ld.w	r8,r7[0xc]
8000606e:	50 1c       	stdsp	sp[0x4],r12
80006070:	11 89       	ld.ub	r9,r8[0x0]
80006072:	34 98       	mov	r8,73
80006074:	f0 09 18 00 	cp.b	r9,r8
80006078:	e0 81 01 67 	brne	80006346 <d_type+0x60e>
8000607c:	0e 9c       	mov	r12,r7
8000607e:	e0 a0 03 65 	rcall	80006748 <d_template_args>
80006082:	40 1a       	lddsp	r10,sp[0x4]
80006084:	18 99       	mov	r9,r12
80006086:	30 4b       	mov	r11,4
80006088:	c2 d8       	rjmp	800060e2 <d_type+0x3aa>
8000608a:	e0 a0 03 bb 	rcall	80006800 <d_name>
8000608e:	50 1c       	stdsp	sp[0x4],r12
80006090:	e0 80 01 60 	breq	80006350 <d_type+0x618>
80006094:	78 08       	ld.w	r8,r12[0x0]
80006096:	59 68       	cp.w	r8,22
80006098:	e0 81 01 5c 	brne	80006350 <d_type+0x618>
8000609c:	c5 59       	rjmp	80006346 <d_type+0x60e>
8000609e:	2f fb       	sub	r11,-1
800060a0:	99 3b       	st.w	r12[0xc],r11
800060a2:	c4 be       	rcall	80005d38 <d_type>
800060a4:	30 09       	mov	r9,0
800060a6:	18 9a       	mov	r10,r12
800060a8:	32 0b       	mov	r11,32
800060aa:	c1 c8       	rjmp	800060e2 <d_type+0x3aa>
800060ac:	2f fb       	sub	r11,-1
800060ae:	99 3b       	st.w	r12[0xc],r11
800060b0:	c4 4e       	rcall	80005d38 <d_type>
800060b2:	30 09       	mov	r9,0
800060b4:	18 9a       	mov	r10,r12
800060b6:	31 eb       	mov	r11,30
800060b8:	c1 58       	rjmp	800060e2 <d_type+0x3aa>
800060ba:	2f fb       	sub	r11,-1
800060bc:	99 3b       	st.w	r12[0xc],r11
800060be:	c3 de       	rcall	80005d38 <d_type>
800060c0:	30 09       	mov	r9,0
800060c2:	18 9a       	mov	r10,r12
800060c4:	31 fb       	mov	r11,31
800060c6:	c0 e8       	rjmp	800060e2 <d_type+0x3aa>
800060c8:	2f fb       	sub	r11,-1
800060ca:	99 3b       	st.w	r12[0xc],r11
800060cc:	c3 6e       	rcall	80005d38 <d_type>
800060ce:	30 09       	mov	r9,0
800060d0:	18 9a       	mov	r10,r12
800060d2:	32 1b       	mov	r11,33
800060d4:	c0 78       	rjmp	800060e2 <d_type+0x3aa>
800060d6:	2f fb       	sub	r11,-1
800060d8:	99 3b       	st.w	r12[0xc],r11
800060da:	c2 fe       	rcall	80005d38 <d_type>
800060dc:	30 09       	mov	r9,0
800060de:	18 9a       	mov	r10,r12
800060e0:	32 2b       	mov	r11,34
800060e2:	0e 9c       	mov	r12,r7
800060e4:	fe b0 f9 e0 	rcall	800054a4 <d_make_comp>
800060e8:	50 1c       	stdsp	sp[0x4],r12
800060ea:	c3 39       	rjmp	80006350 <d_type+0x618>
800060ec:	2f fb       	sub	r11,-1
800060ee:	99 3b       	st.w	r12[0xc],r11
800060f0:	fe b0 fc b8 	rcall	80005a60 <d_source_name>
800060f4:	18 96       	mov	r6,r12
800060f6:	50 1c       	stdsp	sp[0x4],r12
800060f8:	0e 9c       	mov	r12,r7
800060fa:	c1 fe       	rcall	80005d38 <d_type>
800060fc:	0c 99       	mov	r9,r6
800060fe:	18 9a       	mov	r10,r12
80006100:	31 db       	mov	r11,29
80006102:	cf 0b       	rjmp	800060e2 <d_type+0x3aa>
80006104:	2f fb       	sub	r11,-1
80006106:	99 3b       	st.w	r12[0xc],r11
80006108:	17 88       	ld.ub	r8,r11[0x0]
8000610a:	58 08       	cp.w	r8,0
8000610c:	e0 80 01 1f 	breq	8000634a <d_type+0x612>
80006110:	2f fb       	sub	r11,-1
80006112:	99 3b       	st.w	r12[0xc],r11
80006114:	36 69       	mov	r9,102
80006116:	f2 08 18 00 	cp.b	r8,r9
8000611a:	c5 60       	breq	800061c6 <d_type+0x48e>
8000611c:	e0 8b 00 18 	brhi	8000614c <d_type+0x414>
80006120:	35 49       	mov	r9,84
80006122:	f2 08 18 00 	cp.b	r8,r9
80006126:	c2 c0       	breq	8000617e <d_type+0x446>
80006128:	e0 8b 00 08 	brhi	80006138 <d_type+0x400>
8000612c:	34 69       	mov	r9,70
8000612e:	f2 08 18 00 	cp.b	r8,r9
80006132:	e0 81 01 0c 	brne	8000634a <d_type+0x612>
80006136:	cc 48       	rjmp	800062be <d_type+0x586>
80006138:	36 49       	mov	r9,100
8000613a:	f2 08 18 00 	cp.b	r8,r9
8000613e:	c5 70       	breq	800061ec <d_type+0x4b4>
80006140:	36 59       	mov	r9,101
80006142:	f2 08 18 00 	cp.b	r8,r9
80006146:	e0 81 01 02 	brne	8000634a <d_type+0x612>
8000614a:	c6 48       	rjmp	80006212 <d_type+0x4da>
8000614c:	37 09       	mov	r9,112
8000614e:	f2 08 18 00 	cp.b	r8,r9
80006152:	c3 00       	breq	800061b2 <d_type+0x47a>
80006154:	e0 8b 00 0c 	brhi	8000616c <d_type+0x434>
80006158:	36 89       	mov	r9,104
8000615a:	f2 08 18 00 	cp.b	r8,r9
8000615e:	c6 d0       	breq	80006238 <d_type+0x500>
80006160:	36 99       	mov	r9,105
80006162:	f2 08 18 00 	cp.b	r8,r9
80006166:	e0 81 00 f2 	brne	8000634a <d_type+0x612>
8000616a:	c8 d8       	rjmp	80006284 <d_type+0x54c>
8000616c:	37 39       	mov	r9,115
8000616e:	f2 08 18 00 	cp.b	r8,r9
80006172:	c7 60       	breq	8000625e <d_type+0x526>
80006174:	37 49       	mov	r9,116
80006176:	f2 08 18 00 	cp.b	r8,r9
8000617a:	e0 81 00 e8 	brne	8000634a <d_type+0x612>
8000617e:	0e 9c       	mov	r12,r7
80006180:	fe b0 fc c4 	rcall	80005b08 <d_expression>
80006184:	30 09       	mov	r9,0
80006186:	18 9a       	mov	r10,r12
80006188:	33 9b       	mov	r11,57
8000618a:	0e 9c       	mov	r12,r7
8000618c:	fe b0 f9 8c 	rcall	800054a4 <d_make_comp>
80006190:	50 1c       	stdsp	sp[0x4],r12
80006192:	e0 80 00 da 	breq	80006346 <d_type+0x60e>
80006196:	6e 39       	ld.w	r9,r7[0xc]
80006198:	13 88       	ld.ub	r8,r9[0x0]
8000619a:	58 08       	cp.w	r8,0
8000619c:	c0 80       	breq	800061ac <d_type+0x474>
8000619e:	2f f9       	sub	r9,-1
800061a0:	8f 39       	st.w	r7[0xc],r9
800061a2:	34 59       	mov	r9,69
800061a4:	f2 08 18 00 	cp.b	r8,r9
800061a8:	e0 80 00 cf 	breq	80006346 <d_type+0x60e>
800061ac:	30 08       	mov	r8,0
800061ae:	50 18       	stdsp	sp[0x4],r8
800061b0:	cc b8       	rjmp	80006346 <d_type+0x60e>
800061b2:	fe b0 fd c3 	rcall	80005d38 <d_type>
800061b6:	30 09       	mov	r9,0
800061b8:	18 9a       	mov	r10,r12
800061ba:	33 ab       	mov	r11,58
800061bc:	0e 9c       	mov	r12,r7
800061be:	fe b0 f9 73 	rcall	800054a4 <d_make_comp>
800061c2:	50 1c       	stdsp	sp[0x4],r12
800061c4:	cc 18       	rjmp	80006346 <d_type+0x60e>
800061c6:	78 58       	ld.w	r8,r12[0x14]
800061c8:	78 69       	ld.w	r9,r12[0x18]
800061ca:	12 38       	cp.w	r8,r9
800061cc:	c6 04       	brge	8000628c <d_type+0x554>
800061ce:	f0 c9 ff ff 	sub	r9,r8,-1
800061d2:	99 59       	st.w	r12[0x14],r9
800061d4:	f0 08 00 18 	add	r8,r8,r8<<0x1
800061d8:	78 49       	ld.w	r9,r12[0x10]
800061da:	f2 08 00 28 	add	r8,r9,r8<<0x2
800061de:	c6 80       	breq	800062ae <d_type+0x576>
800061e0:	32 39       	mov	r9,35
800061e2:	91 09       	st.w	r8[0x0],r9
800061e4:	4b a9       	lddpc	r9,800062cc <d_type+0x594>
800061e6:	f2 c9 fd 34 	sub	r9,r9,-716
800061ea:	c6 18       	rjmp	800062ac <d_type+0x574>
800061ec:	78 58       	ld.w	r8,r12[0x14]
800061ee:	78 69       	ld.w	r9,r12[0x18]
800061f0:	12 38       	cp.w	r8,r9
800061f2:	c4 d4       	brge	8000628c <d_type+0x554>
800061f4:	f0 c9 ff ff 	sub	r9,r8,-1
800061f8:	99 59       	st.w	r12[0x14],r9
800061fa:	f0 08 00 18 	add	r8,r8,r8<<0x1
800061fe:	78 49       	ld.w	r9,r12[0x10]
80006200:	f2 08 00 28 	add	r8,r9,r8<<0x2
80006204:	c5 50       	breq	800062ae <d_type+0x576>
80006206:	32 39       	mov	r9,35
80006208:	91 09       	st.w	r8[0x0],r9
8000620a:	4b 19       	lddpc	r9,800062cc <d_type+0x594>
8000620c:	f2 c9 fd 20 	sub	r9,r9,-736
80006210:	c4 e8       	rjmp	800062ac <d_type+0x574>
80006212:	78 58       	ld.w	r8,r12[0x14]
80006214:	78 69       	ld.w	r9,r12[0x18]
80006216:	12 38       	cp.w	r8,r9
80006218:	c3 a4       	brge	8000628c <d_type+0x554>
8000621a:	f0 c9 ff ff 	sub	r9,r8,-1
8000621e:	99 59       	st.w	r12[0x14],r9
80006220:	f0 08 00 18 	add	r8,r8,r8<<0x1
80006224:	78 49       	ld.w	r9,r12[0x10]
80006226:	f2 08 00 28 	add	r8,r9,r8<<0x2
8000622a:	c4 20       	breq	800062ae <d_type+0x576>
8000622c:	32 39       	mov	r9,35
8000622e:	91 09       	st.w	r8[0x0],r9
80006230:	4a 79       	lddpc	r9,800062cc <d_type+0x594>
80006232:	f2 c9 fd 0c 	sub	r9,r9,-756
80006236:	c3 b8       	rjmp	800062ac <d_type+0x574>
80006238:	78 58       	ld.w	r8,r12[0x14]
8000623a:	78 69       	ld.w	r9,r12[0x18]
8000623c:	12 38       	cp.w	r8,r9
8000623e:	c2 74       	brge	8000628c <d_type+0x554>
80006240:	f0 c9 ff ff 	sub	r9,r8,-1
80006244:	99 59       	st.w	r12[0x14],r9
80006246:	f0 08 00 18 	add	r8,r8,r8<<0x1
8000624a:	78 49       	ld.w	r9,r12[0x10]
8000624c:	f2 08 00 28 	add	r8,r9,r8<<0x2
80006250:	c2 f0       	breq	800062ae <d_type+0x576>
80006252:	32 39       	mov	r9,35
80006254:	91 09       	st.w	r8[0x0],r9
80006256:	49 e9       	lddpc	r9,800062cc <d_type+0x594>
80006258:	f2 c9 fc f8 	sub	r9,r9,-776
8000625c:	c2 88       	rjmp	800062ac <d_type+0x574>
8000625e:	78 58       	ld.w	r8,r12[0x14]
80006260:	78 69       	ld.w	r9,r12[0x18]
80006262:	12 38       	cp.w	r8,r9
80006264:	c1 44       	brge	8000628c <d_type+0x554>
80006266:	f0 c9 ff ff 	sub	r9,r8,-1
8000626a:	99 59       	st.w	r12[0x14],r9
8000626c:	f0 08 00 18 	add	r8,r8,r8<<0x1
80006270:	78 49       	ld.w	r9,r12[0x10]
80006272:	f2 08 00 28 	add	r8,r9,r8<<0x2
80006276:	c1 c0       	breq	800062ae <d_type+0x576>
80006278:	32 39       	mov	r9,35
8000627a:	91 09       	st.w	r8[0x0],r9
8000627c:	49 49       	lddpc	r9,800062cc <d_type+0x594>
8000627e:	f2 c9 fc e4 	sub	r9,r9,-796
80006282:	c1 58       	rjmp	800062ac <d_type+0x574>
80006284:	78 58       	ld.w	r8,r12[0x14]
80006286:	78 69       	ld.w	r9,r12[0x18]
80006288:	12 38       	cp.w	r8,r9
8000628a:	c0 35       	brlt	80006290 <d_type+0x558>
8000628c:	30 08       	mov	r8,0
8000628e:	c1 08       	rjmp	800062ae <d_type+0x576>
80006290:	f0 c9 ff ff 	sub	r9,r8,-1
80006294:	99 59       	st.w	r12[0x14],r9
80006296:	f0 08 00 18 	add	r8,r8,r8<<0x1
8000629a:	78 49       	ld.w	r9,r12[0x10]
8000629c:	f2 08 00 28 	add	r8,r9,r8<<0x2
800062a0:	c0 70       	breq	800062ae <d_type+0x576>
800062a2:	32 39       	mov	r9,35
800062a4:	91 09       	st.w	r8[0x0],r9
800062a6:	48 a9       	lddpc	r9,800062cc <d_type+0x594>
800062a8:	f2 c9 fc d0 	sub	r9,r9,-816
800062ac:	91 19       	st.w	r8[0x4],r9
800062ae:	6e c9       	ld.w	r9,r7[0x30]
800062b0:	50 18       	stdsp	sp[0x4],r8
800062b2:	70 18       	ld.w	r8,r8[0x4]
800062b4:	70 18       	ld.w	r8,r8[0x4]
800062b6:	f2 08 00 08 	add	r8,r9,r8
800062ba:	8f c8       	st.w	r7[0x30],r8
800062bc:	c4 58       	rjmp	80006346 <d_type+0x60e>
800062be:	78 58       	ld.w	r8,r12[0x14]
800062c0:	78 69       	ld.w	r9,r12[0x18]
800062c2:	12 38       	cp.w	r8,r9
800062c4:	c0 65       	brlt	800062d0 <d_type+0x598>
800062c6:	30 08       	mov	r8,0
800062c8:	c0 c8       	rjmp	800062e0 <d_type+0x5a8>
800062ca:	00 00       	add	r0,r0
800062cc:	80 00       	ld.sh	r0,r0[0x0]
800062ce:	80 bc       	ld.uh	r12,r0[0x6]
800062d0:	f0 c9 ff ff 	sub	r9,r8,-1
800062d4:	f0 08 00 18 	add	r8,r8,r8<<0x1
800062d8:	99 59       	st.w	r12[0x14],r9
800062da:	78 49       	ld.w	r9,r12[0x10]
800062dc:	f2 08 00 28 	add	r8,r9,r8<<0x2
800062e0:	6e 39       	ld.w	r9,r7[0xc]
800062e2:	50 18       	stdsp	sp[0x4],r8
800062e4:	32 8a       	mov	r10,40
800062e6:	91 0a       	st.w	r8[0x0],r10
800062e8:	13 8a       	ld.ub	r10,r9[0x0]
800062ea:	30 99       	mov	r9,9
800062ec:	23 0a       	sub	r10,48
800062ee:	f2 0a 18 00 	cp.b	r10,r9
800062f2:	5f 89       	srls	r9
800062f4:	b0 49       	st.h	r8[0x8],r9
800062f6:	58 09       	cp.w	r9,0
800062f8:	c0 40       	breq	80006300 <d_type+0x5c8>
800062fa:	0e 9c       	mov	r12,r7
800062fc:	fe b0 f9 90 	rcall	8000561c <d_number>
80006300:	40 16       	lddsp	r6,sp[0x4]
80006302:	0e 9c       	mov	r12,r7
80006304:	fe b0 fd 1a 	rcall	80005d38 <d_type>
80006308:	8d 1c       	st.w	r6[0x4],r12
8000630a:	40 18       	lddsp	r8,sp[0x4]
8000630c:	70 18       	ld.w	r8,r8[0x4]
8000630e:	58 08       	cp.w	r8,0
80006310:	c1 d0       	breq	8000634a <d_type+0x612>
80006312:	0e 9c       	mov	r12,r7
80006314:	fe b0 f9 84 	rcall	8000561c <d_number>
80006318:	6e 39       	ld.w	r9,r7[0xc]
8000631a:	13 88       	ld.ub	r8,r9[0x0]
8000631c:	58 08       	cp.w	r8,0
8000631e:	c0 30       	breq	80006324 <d_type+0x5ec>
80006320:	2f f9       	sub	r9,-1
80006322:	8f 39       	st.w	r7[0xc],r9
80006324:	37 39       	mov	r9,115
80006326:	f2 08 18 00 	cp.b	r8,r9
8000632a:	5f 09       	sreq	r9
8000632c:	40 18       	lddsp	r8,sp[0x4]
8000632e:	b0 59       	st.h	r8[0xa],r9
80006330:	c0 b8       	rjmp	80006346 <d_type+0x60e>
80006332:	6e 88       	ld.w	r8,r7[0x20]
80006334:	6e 9a       	ld.w	r10,r7[0x24]
80006336:	14 38       	cp.w	r8,r10
80006338:	c0 94       	brge	8000634a <d_type+0x612>
8000633a:	f0 ca ff ff 	sub	r10,r8,-1
8000633e:	8f 8a       	st.w	r7[0x20],r10
80006340:	6e 7a       	ld.w	r10,r7[0x1c]
80006342:	f4 08 09 29 	st.w	r10[r8<<0x2],r9
80006346:	40 1c       	lddsp	r12,sp[0x4]
80006348:	c0 28       	rjmp	8000634c <d_type+0x614>
8000634a:	30 0c       	mov	r12,0
8000634c:	2f ed       	sub	sp,-8
8000634e:	d8 22       	popm	r4-r7,pc
80006350:	40 19       	lddsp	r9,sp[0x4]
80006352:	58 09       	cp.w	r9,0
80006354:	ce f1       	brne	80006332 <d_type+0x5fa>
80006356:	cf ab       	rjmp	8000634a <d_type+0x612>

80006358 <d_bare_function_type>:
80006358:	d4 31       	pushm	r0-r7,lr
8000635a:	20 1d       	sub	sp,4
8000635c:	34 a9       	mov	r9,74
8000635e:	78 38       	ld.w	r8,r12[0xc]
80006360:	18 96       	mov	r6,r12
80006362:	16 95       	mov	r5,r11
80006364:	11 8a       	ld.ub	r10,r8[0x0]
80006366:	f2 0a 18 00 	cp.b	r10,r9
8000636a:	c0 41       	brne	80006372 <d_bare_function_type+0x1a>
8000636c:	2f f8       	sub	r8,-1
8000636e:	30 15       	mov	r5,1
80006370:	99 38       	st.w	r12[0xc],r8
80006372:	30 08       	mov	r8,0
80006374:	fa c7 ff fc 	sub	r7,sp,-4
80006378:	10 94       	mov	r4,r8
8000637a:	0e d8       	st.w	--r7,r8
8000637c:	34 52       	mov	r2,69
8000637e:	10 93       	mov	r3,r8
80006380:	6c 38       	ld.w	r8,r6[0xc]
80006382:	11 88       	ld.ub	r8,r8[0x0]
80006384:	e6 08 18 00 	cp.b	r8,r3
80006388:	5f 09       	sreq	r9
8000638a:	e4 08 18 00 	cp.b	r8,r2
8000638e:	5f 08       	sreq	r8
80006390:	12 48       	or	r8,r9
80006392:	e6 08 18 00 	cp.b	r8,r3
80006396:	c1 51       	brne	800063c0 <d_bare_function_type+0x68>
80006398:	0c 9c       	mov	r12,r6
8000639a:	fe b0 fc cf 	rcall	80005d38 <d_type>
8000639e:	18 9a       	mov	r10,r12
800063a0:	c2 c0       	breq	800063f8 <d_bare_function_type+0xa0>
800063a2:	58 05       	cp.w	r5,0
800063a4:	c0 40       	breq	800063ac <d_bare_function_type+0x54>
800063a6:	18 94       	mov	r4,r12
800063a8:	30 05       	mov	r5,0
800063aa:	ce bb       	rjmp	80006380 <d_bare_function_type+0x28>
800063ac:	0a 99       	mov	r9,r5
800063ae:	32 9b       	mov	r11,41
800063b0:	0c 9c       	mov	r12,r6
800063b2:	fe b0 f8 79 	rcall	800054a4 <d_make_comp>
800063b6:	8f 0c       	st.w	r7[0x0],r12
800063b8:	c2 00       	breq	800063f8 <d_bare_function_type+0xa0>
800063ba:	f8 c7 ff f8 	sub	r7,r12,-8
800063be:	ce 1b       	rjmp	80006380 <d_bare_function_type+0x28>
800063c0:	40 08       	lddsp	r8,sp[0x0]
800063c2:	58 08       	cp.w	r8,0
800063c4:	c1 a0       	breq	800063f8 <d_bare_function_type+0xa0>
800063c6:	70 29       	ld.w	r9,r8[0x8]
800063c8:	58 09       	cp.w	r9,0
800063ca:	c1 01       	brne	800063ea <d_bare_function_type+0x92>
800063cc:	70 18       	ld.w	r8,r8[0x4]
800063ce:	70 0a       	ld.w	r10,r8[0x0]
800063d0:	e0 4a 00 23 	cp.w	r10,35
800063d4:	c0 b1       	brne	800063ea <d_bare_function_type+0x92>
800063d6:	70 18       	ld.w	r8,r8[0x4]
800063d8:	70 4a       	ld.w	r10,r8[0x10]
800063da:	58 9a       	cp.w	r10,9
800063dc:	c0 71       	brne	800063ea <d_bare_function_type+0x92>
800063de:	70 18       	ld.w	r8,r8[0x4]
800063e0:	50 09       	stdsp	sp[0x0],r9
800063e2:	6c c9       	ld.w	r9,r6[0x30]
800063e4:	f2 08 01 08 	sub	r8,r9,r8
800063e8:	8d c8       	st.w	r6[0x30],r8
800063ea:	08 9a       	mov	r10,r4
800063ec:	0c 9c       	mov	r12,r6
800063ee:	40 09       	lddsp	r9,sp[0x0]
800063f0:	32 5b       	mov	r11,37
800063f2:	fe b0 f8 59 	rcall	800054a4 <d_make_comp>
800063f6:	c0 28       	rjmp	800063fa <d_bare_function_type+0xa2>
800063f8:	30 0c       	mov	r12,0
800063fa:	2f fd       	sub	sp,-4
800063fc:	d8 32       	popm	r0-r7,pc
	...

80006400 <d_operator_name>:
80006400:	d4 31       	pushm	r0-r7,lr
80006402:	78 39       	ld.w	r9,r12[0xc]
80006404:	18 97       	mov	r7,r12
80006406:	13 88       	ld.ub	r8,r9[0x0]
80006408:	58 08       	cp.w	r8,0
8000640a:	c0 30       	breq	80006410 <d_operator_name+0x10>
8000640c:	2f f9       	sub	r9,-1
8000640e:	99 39       	st.w	r12[0xc],r9
80006410:	6e 39       	ld.w	r9,r7[0xc]
80006412:	13 86       	ld.ub	r6,r9[0x0]
80006414:	58 06       	cp.w	r6,0
80006416:	c0 30       	breq	8000641c <d_operator_name+0x1c>
80006418:	2f f9       	sub	r9,-1
8000641a:	8f 39       	st.w	r7[0xc],r9
8000641c:	37 69       	mov	r9,118
8000641e:	f2 08 18 00 	cp.b	r8,r9
80006422:	c2 01       	brne	80006462 <d_operator_name+0x62>
80006424:	ec ca 00 30 	sub	r10,r6,48
80006428:	30 99       	mov	r9,9
8000642a:	f2 0a 18 00 	cp.b	r10,r9
8000642e:	e0 8b 00 1a 	brhi	80006462 <d_operator_name+0x62>
80006432:	0e 9c       	mov	r12,r7
80006434:	fe b0 fb 16 	rcall	80005a60 <d_source_name>
80006438:	6e 58       	ld.w	r8,r7[0x14]
8000643a:	18 99       	mov	r9,r12
8000643c:	6e 6a       	ld.w	r10,r7[0x18]
8000643e:	14 38       	cp.w	r8,r10
80006440:	c5 d4       	brge	800064fa <d_operator_name+0xfa>
80006442:	f0 ca ff ff 	sub	r10,r8,-1
80006446:	8f 5a       	st.w	r7[0x14],r10
80006448:	f0 08 00 18 	add	r8,r8,r8<<0x1
8000644c:	6e 4a       	ld.w	r10,r7[0x10]
8000644e:	f4 08 00 2c 	add	r12,r10,r8<<0x2
80006452:	c5 50       	breq	800064fc <d_operator_name+0xfc>
80006454:	58 09       	cp.w	r9,0
80006456:	c5 20       	breq	800064fa <d_operator_name+0xfa>
80006458:	23 06       	sub	r6,48
8000645a:	99 29       	st.w	r12[0x8],r9
8000645c:	99 16       	st.w	r12[0x4],r6
8000645e:	32 c8       	mov	r8,44
80006460:	c3 e8       	rjmp	800064dc <d_operator_name+0xdc>
80006462:	37 69       	mov	r9,118
80006464:	f2 06 18 00 	cp.b	r6,r9
80006468:	5f 0a       	sreq	r10
8000646a:	36 39       	mov	r9,99
8000646c:	f2 08 18 00 	cp.b	r8,r9
80006470:	5f 09       	sreq	r9
80006472:	f5 e9 00 09 	and	r9,r10,r9
80006476:	c0 b0       	breq	8000648c <d_operator_name+0x8c>
80006478:	0e 9c       	mov	r12,r7
8000647a:	fe b0 fc 5f 	rcall	80005d38 <d_type>
8000647e:	30 09       	mov	r9,0
80006480:	18 9a       	mov	r10,r12
80006482:	32 db       	mov	r11,45
80006484:	0e 9c       	mov	r12,r7
80006486:	fe b0 f8 0f 	rcall	800054a4 <d_make_comp>
8000648a:	d8 32       	popm	r0-r7,pc
8000648c:	49 d3       	lddpc	r3,80006500 <d_operator_name+0x100>
8000648e:	33 4a       	mov	r10,52
80006490:	e6 c3 fc bc 	sub	r3,r3,-836
80006494:	30 09       	mov	r9,0
80006496:	30 24       	mov	r4,2
80006498:	f4 09 01 01 	sub	r1,r10,r9
8000649c:	e2 04 0c 00 	divs	r0,r1,r4
800064a0:	f2 00 00 0b 	add	r11,r9,r0
800064a4:	f6 0e 15 04 	lsl	lr,r11,0x4
800064a8:	e6 0e 00 0e 	add	lr,r3,lr
800064ac:	7c 05       	ld.w	r5,lr[0x0]
800064ae:	0b 8c       	ld.ub	r12,r5[0x0]
800064b0:	f8 08 18 00 	cp.b	r8,r12
800064b4:	c1 61       	brne	800064e0 <d_operator_name+0xe0>
800064b6:	0b 9c       	ld.ub	r12,r5[0x1]
800064b8:	f8 06 18 00 	cp.b	r6,r12
800064bc:	c1 61       	brne	800064e8 <d_operator_name+0xe8>
800064be:	6e 5c       	ld.w	r12,r7[0x14]
800064c0:	6e 68       	ld.w	r8,r7[0x18]
800064c2:	10 3c       	cp.w	r12,r8
800064c4:	c1 b4       	brge	800064fa <d_operator_name+0xfa>
800064c6:	f8 c8 ff ff 	sub	r8,r12,-1
800064ca:	8f 58       	st.w	r7[0x14],r8
800064cc:	f8 0c 00 1c 	add	r12,r12,r12<<0x1
800064d0:	6e 48       	ld.w	r8,r7[0x10]
800064d2:	f0 0c 00 2c 	add	r12,r8,r12<<0x2
800064d6:	c1 30       	breq	800064fc <d_operator_name+0xfc>
800064d8:	99 1e       	st.w	r12[0x4],lr
800064da:	32 b8       	mov	r8,43
800064dc:	99 08       	st.w	r12[0x0],r8
800064de:	d8 32       	popm	r0-r7,pc
800064e0:	f8 08 18 00 	cp.b	r8,r12
800064e4:	c0 83       	brcs	800064f4 <d_operator_name+0xf4>
800064e6:	c0 48       	rjmp	800064ee <d_operator_name+0xee>
800064e8:	f8 06 18 00 	cp.b	r6,r12
800064ec:	c0 43       	brcs	800064f4 <d_operator_name+0xf4>
800064ee:	f6 c9 ff ff 	sub	r9,r11,-1
800064f2:	c0 28       	rjmp	800064f6 <d_operator_name+0xf6>
800064f4:	16 9a       	mov	r10,r11
800064f6:	14 39       	cp.w	r9,r10
800064f8:	cd 01       	brne	80006498 <d_operator_name+0x98>
800064fa:	30 0c       	mov	r12,0
800064fc:	d8 32       	popm	r0-r7,pc
800064fe:	00 00       	add	r0,r0
80006500:	80 00       	ld.sh	r0,r0[0x0]
80006502:	80 bc       	ld.uh	r12,r0[0x6]

80006504 <d_unqualified_name>:
80006504:	d4 21       	pushm	r4-r7,lr
80006506:	30 9a       	mov	r10,9
80006508:	78 39       	ld.w	r9,r12[0xc]
8000650a:	18 97       	mov	r7,r12
8000650c:	13 88       	ld.ub	r8,r9[0x0]
8000650e:	f0 cb 00 30 	sub	r11,r8,48
80006512:	f4 0b 18 00 	cp.b	r11,r10
80006516:	e0 8b 00 05 	brhi	80006520 <d_unqualified_name+0x1c>
8000651a:	fe b0 fa a3 	rcall	80005a60 <d_source_name>
8000651e:	d8 22       	popm	r4-r7,pc
80006520:	f0 cb 00 61 	sub	r11,r8,97
80006524:	31 9a       	mov	r10,25
80006526:	f4 0b 18 00 	cp.b	r11,r10
8000652a:	e0 8b 00 12 	brhi	8000654e <d_unqualified_name+0x4a>
8000652e:	c6 9f       	rcall	80006400 <d_operator_name>
80006530:	e0 80 00 a5 	breq	8000667a <d_unqualified_name+0x176>
80006534:	78 08       	ld.w	r8,r12[0x0]
80006536:	e0 48 00 2b 	cp.w	r8,43
8000653a:	e0 81 00 a0 	brne	8000667a <d_unqualified_name+0x176>
8000653e:	78 18       	ld.w	r8,r12[0x4]
80006540:	6e c9       	ld.w	r9,r7[0x30]
80006542:	70 28       	ld.w	r8,r8[0x8]
80006544:	f2 08 00 08 	add	r8,r9,r8
80006548:	2f 98       	sub	r8,-7
8000654a:	8f c8       	st.w	r7[0x30],r8
8000654c:	d8 22       	popm	r4-r7,pc
8000654e:	f0 cb 00 43 	sub	r11,r8,67
80006552:	30 1a       	mov	r10,1
80006554:	f4 0b 18 00 	cp.b	r11,r10
80006558:	e0 8b 00 79 	brhi	8000664a <d_unqualified_name+0x146>
8000655c:	78 b8       	ld.w	r8,r12[0x2c]
8000655e:	58 08       	cp.w	r8,0
80006560:	c0 b0       	breq	80006576 <d_unqualified_name+0x72>
80006562:	70 09       	ld.w	r9,r8[0x0]
80006564:	58 09       	cp.w	r9,0
80006566:	c0 30       	breq	8000656c <d_unqualified_name+0x68>
80006568:	59 69       	cp.w	r9,22
8000656a:	c0 61       	brne	80006576 <d_unqualified_name+0x72>
8000656c:	70 28       	ld.w	r8,r8[0x8]
8000656e:	6e c9       	ld.w	r9,r7[0x30]
80006570:	f2 08 00 08 	add	r8,r9,r8
80006574:	8f c8       	st.w	r7[0x30],r8
80006576:	6e 38       	ld.w	r8,r7[0xc]
80006578:	34 3a       	mov	r10,67
8000657a:	11 89       	ld.ub	r9,r8[0x0]
8000657c:	f4 09 18 00 	cp.b	r9,r10
80006580:	c0 60       	breq	8000658c <d_unqualified_name+0x88>
80006582:	34 4a       	mov	r10,68
80006584:	f4 09 18 00 	cp.b	r9,r10
80006588:	c7 71       	brne	80006676 <d_unqualified_name+0x172>
8000658a:	c3 08       	rjmp	800065ea <d_unqualified_name+0xe6>
8000658c:	11 99       	ld.ub	r9,r8[0x1]
8000658e:	33 2a       	mov	r10,50
80006590:	f4 09 18 00 	cp.b	r9,r10
80006594:	c0 a0       	breq	800065a8 <d_unqualified_name+0xa4>
80006596:	33 3a       	mov	r10,51
80006598:	f4 09 18 00 	cp.b	r9,r10
8000659c:	c0 a0       	breq	800065b0 <d_unqualified_name+0xac>
8000659e:	33 1a       	mov	r10,49
800065a0:	f4 09 18 00 	cp.b	r9,r10
800065a4:	c6 91       	brne	80006676 <d_unqualified_name+0x172>
800065a6:	c0 38       	rjmp	800065ac <d_unqualified_name+0xa8>
800065a8:	30 29       	mov	r9,2
800065aa:	c0 48       	rjmp	800065b2 <d_unqualified_name+0xae>
800065ac:	30 19       	mov	r9,1
800065ae:	c0 28       	rjmp	800065b2 <d_unqualified_name+0xae>
800065b0:	30 39       	mov	r9,3
800065b2:	2f e8       	sub	r8,-2
800065b4:	8f 38       	st.w	r7[0xc],r8
800065b6:	6e 5c       	ld.w	r12,r7[0x14]
800065b8:	6e b8       	ld.w	r8,r7[0x2c]
800065ba:	6e 6a       	ld.w	r10,r7[0x18]
800065bc:	14 3c       	cp.w	r12,r10
800065be:	c0 35       	brlt	800065c4 <d_unqualified_name+0xc0>
800065c0:	30 0c       	mov	r12,0
800065c2:	c0 98       	rjmp	800065d4 <d_unqualified_name+0xd0>
800065c4:	f8 ca ff ff 	sub	r10,r12,-1
800065c8:	f8 0c 00 1c 	add	r12,r12,r12<<0x1
800065cc:	8f 5a       	st.w	r7[0x14],r10
800065ce:	6e 4a       	ld.w	r10,r7[0x10]
800065d0:	f4 0c 00 2c 	add	r12,r10,r12<<0x2
800065d4:	58 0c       	cp.w	r12,0
800065d6:	5f 0b       	sreq	r11
800065d8:	58 08       	cp.w	r8,0
800065da:	5f 0a       	sreq	r10
800065dc:	f7 ea 10 0a 	or	r10,r11,r10
800065e0:	c4 b1       	brne	80006676 <d_unqualified_name+0x172>
800065e2:	99 28       	st.w	r12[0x8],r8
800065e4:	99 19       	st.w	r12[0x4],r9
800065e6:	30 78       	mov	r8,7
800065e8:	c2 f8       	rjmp	80006646 <d_unqualified_name+0x142>
800065ea:	11 99       	ld.ub	r9,r8[0x1]
800065ec:	33 1a       	mov	r10,49
800065ee:	f4 09 18 00 	cp.b	r9,r10
800065f2:	c0 a0       	breq	80006606 <d_unqualified_name+0x102>
800065f4:	33 2a       	mov	r10,50
800065f6:	f4 09 18 00 	cp.b	r9,r10
800065fa:	c0 a0       	breq	8000660e <d_unqualified_name+0x10a>
800065fc:	33 0a       	mov	r10,48
800065fe:	f4 09 18 00 	cp.b	r9,r10
80006602:	c3 a1       	brne	80006676 <d_unqualified_name+0x172>
80006604:	c0 38       	rjmp	8000660a <d_unqualified_name+0x106>
80006606:	30 29       	mov	r9,2
80006608:	c0 48       	rjmp	80006610 <d_unqualified_name+0x10c>
8000660a:	30 19       	mov	r9,1
8000660c:	c0 28       	rjmp	80006610 <d_unqualified_name+0x10c>
8000660e:	30 39       	mov	r9,3
80006610:	2f e8       	sub	r8,-2
80006612:	8f 38       	st.w	r7[0xc],r8
80006614:	6e 5c       	ld.w	r12,r7[0x14]
80006616:	6e b8       	ld.w	r8,r7[0x2c]
80006618:	6e 6a       	ld.w	r10,r7[0x18]
8000661a:	14 3c       	cp.w	r12,r10
8000661c:	c0 35       	brlt	80006622 <d_unqualified_name+0x11e>
8000661e:	30 0c       	mov	r12,0
80006620:	c0 98       	rjmp	80006632 <d_unqualified_name+0x12e>
80006622:	f8 ca ff ff 	sub	r10,r12,-1
80006626:	f8 0c 00 1c 	add	r12,r12,r12<<0x1
8000662a:	8f 5a       	st.w	r7[0x14],r10
8000662c:	6e 4a       	ld.w	r10,r7[0x10]
8000662e:	f4 0c 00 2c 	add	r12,r10,r12<<0x2
80006632:	58 0c       	cp.w	r12,0
80006634:	5f 0b       	sreq	r11
80006636:	58 08       	cp.w	r8,0
80006638:	5f 0a       	sreq	r10
8000663a:	f7 ea 10 0a 	or	r10,r11,r10
8000663e:	c1 c1       	brne	80006676 <d_unqualified_name+0x172>
80006640:	99 28       	st.w	r12[0x8],r8
80006642:	99 19       	st.w	r12[0x4],r9
80006644:	30 88       	mov	r8,8
80006646:	99 08       	st.w	r12[0x0],r8
80006648:	d8 22       	popm	r4-r7,pc
8000664a:	34 ca       	mov	r10,76
8000664c:	f4 08 18 00 	cp.b	r8,r10
80006650:	c1 31       	brne	80006676 <d_unqualified_name+0x172>
80006652:	2f f9       	sub	r9,-1
80006654:	99 39       	st.w	r12[0xc],r9
80006656:	fe b0 fa 05 	rcall	80005a60 <d_source_name>
8000665a:	18 96       	mov	r6,r12
8000665c:	c0 d0       	breq	80006676 <d_unqualified_name+0x172>
8000665e:	6e 38       	ld.w	r8,r7[0xc]
80006660:	35 f9       	mov	r9,95
80006662:	11 8a       	ld.ub	r10,r8[0x0]
80006664:	f2 0a 18 00 	cp.b	r10,r9
80006668:	c0 81       	brne	80006678 <d_unqualified_name+0x174>
8000666a:	2f f8       	sub	r8,-1
8000666c:	0e 9c       	mov	r12,r7
8000666e:	8f 38       	st.w	r7[0xc],r8
80006670:	fe b0 f7 d6 	rcall	8000561c <d_number>
80006674:	c0 24       	brge	80006678 <d_unqualified_name+0x174>
80006676:	d8 2a       	popm	r4-r7,pc,r12=0
80006678:	0c 9c       	mov	r12,r6
8000667a:	d8 22       	popm	r4-r7,pc

8000667c <d_expr_primary>:
8000667c:	d4 21       	pushm	r4-r7,lr
8000667e:	34 c9       	mov	r9,76
80006680:	78 38       	ld.w	r8,r12[0xc]
80006682:	18 97       	mov	r7,r12
80006684:	11 8a       	ld.ub	r10,r8[0x0]
80006686:	f2 0a 18 00 	cp.b	r10,r9
8000668a:	c5 d1       	brne	80006744 <d_expr_primary+0xc8>
8000668c:	2f f8       	sub	r8,-1
8000668e:	99 38       	st.w	r12[0xc],r8
80006690:	35 f9       	mov	r9,95
80006692:	11 8a       	ld.ub	r10,r8[0x0]
80006694:	35 ab       	mov	r11,90
80006696:	f2 0a 18 00 	cp.b	r10,r9
8000669a:	5f 09       	sreq	r9
8000669c:	f6 0a 18 00 	cp.b	r10,r11
800066a0:	5f 0a       	sreq	r10
800066a2:	f3 ea 10 0a 	or	r10,r9,r10
800066a6:	c1 30       	breq	800066cc <d_expr_primary+0x50>
800066a8:	58 09       	cp.w	r9,0
800066aa:	c0 30       	breq	800066b0 <d_expr_primary+0x34>
800066ac:	2f f8       	sub	r8,-1
800066ae:	99 38       	st.w	r12[0xc],r8
800066b0:	6e 38       	ld.w	r8,r7[0xc]
800066b2:	35 a9       	mov	r9,90
800066b4:	11 8a       	ld.ub	r10,r8[0x0]
800066b6:	f2 0a 18 00 	cp.b	r10,r9
800066ba:	c0 30       	breq	800066c0 <d_expr_primary+0x44>
800066bc:	30 0c       	mov	r12,0
800066be:	c3 a8       	rjmp	80006732 <d_expr_primary+0xb6>
800066c0:	2f f8       	sub	r8,-1
800066c2:	30 0b       	mov	r11,0
800066c4:	8f 38       	st.w	r7[0xc],r8
800066c6:	0e 9c       	mov	r12,r7
800066c8:	cc ad       	rcall	80006a5c <d_encoding>
800066ca:	c3 48       	rjmp	80006732 <d_expr_primary+0xb6>
800066cc:	fe b0 fb 36 	rcall	80005d38 <d_type>
800066d0:	18 96       	mov	r6,r12
800066d2:	c3 90       	breq	80006744 <d_expr_primary+0xc8>
800066d4:	78 08       	ld.w	r8,r12[0x0]
800066d6:	e0 48 00 23 	cp.w	r8,35
800066da:	c0 a1       	brne	800066ee <d_expr_primary+0x72>
800066dc:	78 18       	ld.w	r8,r12[0x4]
800066de:	70 49       	ld.w	r9,r8[0x10]
800066e0:	58 09       	cp.w	r9,0
800066e2:	c0 60       	breq	800066ee <d_expr_primary+0x72>
800066e4:	70 18       	ld.w	r8,r8[0x4]
800066e6:	6e c9       	ld.w	r9,r7[0x30]
800066e8:	f2 08 01 08 	sub	r8,r9,r8
800066ec:	8f c8       	st.w	r7[0x30],r8
800066ee:	6e 38       	ld.w	r8,r7[0xc]
800066f0:	36 e9       	mov	r9,110
800066f2:	11 8a       	ld.ub	r10,r8[0x0]
800066f4:	f2 0a 18 00 	cp.b	r10,r9
800066f8:	c0 30       	breq	800066fe <d_expr_primary+0x82>
800066fa:	33 45       	mov	r5,52
800066fc:	c0 48       	rjmp	80006704 <d_expr_primary+0x88>
800066fe:	2f f8       	sub	r8,-1
80006700:	33 55       	mov	r5,53
80006702:	8f 38       	st.w	r7[0xc],r8
80006704:	6e 3b       	ld.w	r11,r7[0xc]
80006706:	34 59       	mov	r9,69
80006708:	c0 48       	rjmp	80006710 <d_expr_primary+0x94>
8000670a:	58 08       	cp.w	r8,0
8000670c:	c1 c0       	breq	80006744 <d_expr_primary+0xc8>
8000670e:	8f 3c       	st.w	r7[0xc],r12
80006710:	6e 3a       	ld.w	r10,r7[0xc]
80006712:	f4 cc ff ff 	sub	r12,r10,-1
80006716:	15 88       	ld.ub	r8,r10[0x0]
80006718:	f2 08 18 00 	cp.b	r8,r9
8000671c:	cf 71       	brne	8000670a <d_expr_primary+0x8e>
8000671e:	16 1a       	sub	r10,r11
80006720:	0e 9c       	mov	r12,r7
80006722:	fe b0 f7 61 	rcall	800055e4 <d_make_name>
80006726:	0c 9a       	mov	r10,r6
80006728:	18 99       	mov	r9,r12
8000672a:	0a 9b       	mov	r11,r5
8000672c:	0e 9c       	mov	r12,r7
8000672e:	fe b0 f6 bb 	rcall	800054a4 <d_make_comp>
80006732:	6e 38       	ld.w	r8,r7[0xc]
80006734:	34 59       	mov	r9,69
80006736:	11 8a       	ld.ub	r10,r8[0x0]
80006738:	f2 0a 18 00 	cp.b	r10,r9
8000673c:	c0 41       	brne	80006744 <d_expr_primary+0xc8>
8000673e:	2f f8       	sub	r8,-1
80006740:	8f 38       	st.w	r7[0xc],r8
80006742:	d8 22       	popm	r4-r7,pc
80006744:	d8 2a       	popm	r4-r7,pc,r12=0
	...

80006748 <d_template_args>:
80006748:	d4 31       	pushm	r0-r7,lr
8000674a:	20 1d       	sub	sp,4
8000674c:	34 99       	mov	r9,73
8000674e:	78 38       	ld.w	r8,r12[0xc]
80006750:	18 96       	mov	r6,r12
80006752:	78 b1       	ld.w	r1,r12[0x2c]
80006754:	11 84       	ld.ub	r4,r8[0x0]
80006756:	f2 04 18 00 	cp.b	r4,r9
8000675a:	c4 f1       	brne	800067f8 <d_template_args+0xb0>
8000675c:	2f f8       	sub	r8,-1
8000675e:	99 38       	st.w	r12[0xc],r8
80006760:	34 55       	mov	r5,69
80006762:	11 89       	ld.ub	r9,r8[0x0]
80006764:	ea 09 18 00 	cp.b	r9,r5
80006768:	c0 91       	brne	8000677a <d_template_args+0x32>
8000676a:	2f f8       	sub	r8,-1
8000676c:	30 09       	mov	r9,0
8000676e:	99 38       	st.w	r12[0xc],r8
80006770:	32 ab       	mov	r11,42
80006772:	12 9a       	mov	r10,r9
80006774:	fe b0 f6 98 	rcall	800054a4 <d_make_comp>
80006778:	c4 18       	rjmp	800067fa <d_template_args+0xb2>
8000677a:	fa c7 ff fc 	sub	r7,sp,-4
8000677e:	30 08       	mov	r8,0
80006780:	34 c3       	mov	r3,76
80006782:	0e d8       	st.w	--r7,r8
80006784:	35 82       	mov	r2,88
80006786:	6c 39       	ld.w	r9,r6[0xc]
80006788:	13 88       	ld.ub	r8,r9[0x0]
8000678a:	e6 08 18 00 	cp.b	r8,r3
8000678e:	c1 50       	breq	800067b8 <d_template_args+0x70>
80006790:	e4 08 18 00 	cp.b	r8,r2
80006794:	c0 50       	breq	8000679e <d_template_args+0x56>
80006796:	e8 08 18 00 	cp.b	r8,r4
8000679a:	c1 51       	brne	800067c4 <d_template_args+0x7c>
8000679c:	c1 18       	rjmp	800067be <d_template_args+0x76>
8000679e:	2f f9       	sub	r9,-1
800067a0:	0c 9c       	mov	r12,r6
800067a2:	8d 39       	st.w	r6[0xc],r9
800067a4:	fe b0 f9 b2 	rcall	80005b08 <d_expression>
800067a8:	6c 38       	ld.w	r8,r6[0xc]
800067aa:	11 89       	ld.ub	r9,r8[0x0]
800067ac:	ea 09 18 00 	cp.b	r9,r5
800067b0:	c2 41       	brne	800067f8 <d_template_args+0xb0>
800067b2:	2f f8       	sub	r8,-1
800067b4:	8d 38       	st.w	r6[0xc],r8
800067b6:	c0 a8       	rjmp	800067ca <d_template_args+0x82>
800067b8:	0c 9c       	mov	r12,r6
800067ba:	c6 1f       	rcall	8000667c <d_expr_primary>
800067bc:	c0 78       	rjmp	800067ca <d_template_args+0x82>
800067be:	0c 9c       	mov	r12,r6
800067c0:	cc 4f       	rcall	80006748 <d_template_args>
800067c2:	c0 48       	rjmp	800067ca <d_template_args+0x82>
800067c4:	0c 9c       	mov	r12,r6
800067c6:	fe b0 fa b9 	rcall	80005d38 <d_type>
800067ca:	58 0c       	cp.w	r12,0
800067cc:	c1 60       	breq	800067f8 <d_template_args+0xb0>
800067ce:	18 9a       	mov	r10,r12
800067d0:	30 09       	mov	r9,0
800067d2:	32 ab       	mov	r11,42
800067d4:	0c 9c       	mov	r12,r6
800067d6:	fe b0 f6 67 	rcall	800054a4 <d_make_comp>
800067da:	8f 0c       	st.w	r7[0x0],r12
800067dc:	c0 e0       	breq	800067f8 <d_template_args+0xb0>
800067de:	6c 38       	ld.w	r8,r6[0xc]
800067e0:	11 89       	ld.ub	r9,r8[0x0]
800067e2:	ea 09 18 00 	cp.b	r9,r5
800067e6:	c0 40       	breq	800067ee <d_template_args+0xa6>
800067e8:	f8 c7 ff f8 	sub	r7,r12,-8
800067ec:	cc db       	rjmp	80006786 <d_template_args+0x3e>
800067ee:	8d b1       	st.w	r6[0x2c],r1
800067f0:	2f f8       	sub	r8,-1
800067f2:	40 0c       	lddsp	r12,sp[0x0]
800067f4:	8d 38       	st.w	r6[0xc],r8
800067f6:	c0 28       	rjmp	800067fa <d_template_args+0xb2>
800067f8:	30 0c       	mov	r12,0
800067fa:	2f fd       	sub	sp,-4
800067fc:	d8 32       	popm	r0-r7,pc
	...

80006800 <d_name>:
80006800:	d4 31       	pushm	r0-r7,lr
80006802:	20 1d       	sub	sp,4
80006804:	34 ea       	mov	r10,78
80006806:	78 38       	ld.w	r8,r12[0xc]
80006808:	18 97       	mov	r7,r12
8000680a:	11 89       	ld.ub	r9,r8[0x0]
8000680c:	f4 09 18 00 	cp.b	r9,r10
80006810:	c1 40       	breq	80006838 <d_name+0x38>
80006812:	e0 8b 00 08 	brhi	80006822 <d_name+0x22>
80006816:	34 c8       	mov	r8,76
80006818:	f0 09 18 00 	cp.b	r9,r8
8000681c:	e0 81 00 f8 	brne	80006a0c <d_name+0x20c>
80006820:	cc 98       	rjmp	800069b2 <d_name+0x1b2>
80006822:	35 3a       	mov	r10,83
80006824:	f4 09 18 00 	cp.b	r9,r10
80006828:	e0 80 00 c9 	breq	800069ba <d_name+0x1ba>
8000682c:	35 aa       	mov	r10,90
8000682e:	f4 09 18 00 	cp.b	r9,r10
80006832:	e0 81 00 ed 	brne	80006a0c <d_name+0x20c>
80006836:	c8 48       	rjmp	8000693e <d_name+0x13e>
80006838:	2f f8       	sub	r8,-1
8000683a:	30 1a       	mov	r10,1
8000683c:	99 38       	st.w	r12[0xc],r8
8000683e:	1a 9b       	mov	r11,sp
80006840:	fe b0 f7 3c 	rcall	800056b8 <d_cv_qualifiers>
80006844:	18 93       	mov	r3,r12
80006846:	e0 80 01 02 	breq	80006a4a <d_name+0x24a>
8000684a:	30 02       	mov	r2,0
8000684c:	31 91       	mov	r1,25
8000684e:	30 90       	mov	r0,9
80006850:	04 94       	mov	r4,r2
80006852:	35 35       	mov	r5,83
80006854:	6e 38       	ld.w	r8,r7[0xc]
80006856:	11 86       	ld.ub	r6,r8[0x0]
80006858:	58 06       	cp.w	r6,0
8000685a:	c6 20       	breq	8000691e <d_name+0x11e>
8000685c:	ec c8 00 61 	sub	r8,r6,97
80006860:	e2 08 18 00 	cp.b	r8,r1
80006864:	5f 89       	srls	r9
80006866:	ec c8 00 30 	sub	r8,r6,48
8000686a:	e0 08 18 00 	cp.b	r8,r0
8000686e:	5f 88       	srls	r8
80006870:	f3 e8 10 08 	or	r8,r9,r8
80006874:	e8 08 18 00 	cp.b	r8,r4
80006878:	c1 21       	brne	8000689c <d_name+0x9c>
8000687a:	34 48       	mov	r8,68
8000687c:	f0 06 18 00 	cp.b	r6,r8
80006880:	5f 09       	sreq	r9
80006882:	34 38       	mov	r8,67
80006884:	f0 06 18 00 	cp.b	r6,r8
80006888:	5f 08       	sreq	r8
8000688a:	f3 e8 10 08 	or	r8,r9,r8
8000688e:	e8 08 18 00 	cp.b	r8,r4
80006892:	c0 51       	brne	8000689c <d_name+0x9c>
80006894:	34 c8       	mov	r8,76
80006896:	f0 06 18 00 	cp.b	r6,r8
8000689a:	c0 41       	brne	800068a2 <d_name+0xa2>
8000689c:	0e 9c       	mov	r12,r7
8000689e:	c3 3e       	rcall	80006504 <d_unqualified_name>
800068a0:	c2 08       	rjmp	800068e0 <d_name+0xe0>
800068a2:	ea 06 18 00 	cp.b	r6,r5
800068a6:	c0 61       	brne	800068b2 <d_name+0xb2>
800068a8:	30 1b       	mov	r11,1
800068aa:	0e 9c       	mov	r12,r7
800068ac:	fe b0 f7 86 	rcall	800057b8 <d_substitution>
800068b0:	c1 88       	rjmp	800068e0 <d_name+0xe0>
800068b2:	34 98       	mov	r8,73
800068b4:	f0 06 18 00 	cp.b	r6,r8
800068b8:	c0 71       	brne	800068c6 <d_name+0xc6>
800068ba:	58 02       	cp.w	r2,0
800068bc:	c3 20       	breq	80006920 <d_name+0x120>
800068be:	0e 9c       	mov	r12,r7
800068c0:	c4 4f       	rcall	80006748 <d_template_args>
800068c2:	30 4b       	mov	r11,4
800068c4:	c1 18       	rjmp	800068e6 <d_name+0xe6>
800068c6:	35 48       	mov	r8,84
800068c8:	f0 06 18 00 	cp.b	r6,r8
800068cc:	c0 51       	brne	800068d6 <d_name+0xd6>
800068ce:	0e 9c       	mov	r12,r7
800068d0:	fe b0 f7 40 	rcall	80005750 <d_template_param>
800068d4:	c0 68       	rjmp	800068e0 <d_name+0xe0>
800068d6:	34 58       	mov	r8,69
800068d8:	f0 06 18 00 	cp.b	r6,r8
800068dc:	c2 11       	brne	8000691e <d_name+0x11e>
800068de:	c2 18       	rjmp	80006920 <d_name+0x120>
800068e0:	58 02       	cp.w	r2,0
800068e2:	c0 70       	breq	800068f0 <d_name+0xf0>
800068e4:	30 1b       	mov	r11,1
800068e6:	18 99       	mov	r9,r12
800068e8:	04 9a       	mov	r10,r2
800068ea:	0e 9c       	mov	r12,r7
800068ec:	fe b0 f5 dc 	rcall	800054a4 <d_make_comp>
800068f0:	18 92       	mov	r2,r12
800068f2:	ea 06 18 00 	cp.b	r6,r5
800068f6:	ca f0       	breq	80006854 <d_name+0x54>
800068f8:	6e 38       	ld.w	r8,r7[0xc]
800068fa:	11 89       	ld.ub	r9,r8[0x0]
800068fc:	34 58       	mov	r8,69
800068fe:	f0 09 18 00 	cp.b	r9,r8
80006902:	ca 90       	breq	80006854 <d_name+0x54>
80006904:	58 0c       	cp.w	r12,0
80006906:	c0 d0       	breq	80006920 <d_name+0x120>
80006908:	6e 88       	ld.w	r8,r7[0x20]
8000690a:	6e 99       	ld.w	r9,r7[0x24]
8000690c:	12 38       	cp.w	r8,r9
8000690e:	c0 84       	brge	8000691e <d_name+0x11e>
80006910:	f0 c9 ff ff 	sub	r9,r8,-1
80006914:	8f 89       	st.w	r7[0x20],r9
80006916:	6e 79       	ld.w	r9,r7[0x1c]
80006918:	f2 08 09 2c 	st.w	r9[r8<<0x2],r12
8000691c:	c9 cb       	rjmp	80006854 <d_name+0x54>
8000691e:	30 02       	mov	r2,0
80006920:	87 02       	st.w	r3[0x0],r2
80006922:	58 02       	cp.w	r2,0
80006924:	e0 80 00 93 	breq	80006a4a <d_name+0x24a>
80006928:	6e 38       	ld.w	r8,r7[0xc]
8000692a:	34 59       	mov	r9,69
8000692c:	11 8a       	ld.ub	r10,r8[0x0]
8000692e:	f2 0a 18 00 	cp.b	r10,r9
80006932:	e0 81 00 8c 	brne	80006a4a <d_name+0x24a>
80006936:	2f f8       	sub	r8,-1
80006938:	40 06       	lddsp	r6,sp[0x0]
8000693a:	8f 38       	st.w	r7[0xc],r8
8000693c:	c8 88       	rjmp	80006a4c <d_name+0x24c>
8000693e:	2f f8       	sub	r8,-1
80006940:	30 0b       	mov	r11,0
80006942:	99 38       	st.w	r12[0xc],r8
80006944:	c8 cc       	rcall	80006a5c <d_encoding>
80006946:	6e 38       	ld.w	r8,r7[0xc]
80006948:	18 96       	mov	r6,r12
8000694a:	11 8a       	ld.ub	r10,r8[0x0]
8000694c:	34 59       	mov	r9,69
8000694e:	f2 0a 18 00 	cp.b	r10,r9
80006952:	c7 c1       	brne	80006a4a <d_name+0x24a>
80006954:	2f f8       	sub	r8,-1
80006956:	8f 38       	st.w	r7[0xc],r8
80006958:	37 39       	mov	r9,115
8000695a:	11 8a       	ld.ub	r10,r8[0x0]
8000695c:	f2 0a 18 00 	cp.b	r10,r9
80006960:	c1 51       	brne	8000698a <d_name+0x18a>
80006962:	2f f8       	sub	r8,-1
80006964:	8f 38       	st.w	r7[0xc],r8
80006966:	35 f9       	mov	r9,95
80006968:	11 8a       	ld.ub	r10,r8[0x0]
8000696a:	f2 0a 18 00 	cp.b	r10,r9
8000696e:	c0 71       	brne	8000697c <d_name+0x17c>
80006970:	2f f8       	sub	r8,-1
80006972:	0e 9c       	mov	r12,r7
80006974:	8f 38       	st.w	r7[0xc],r8
80006976:	fe b0 f6 53 	rcall	8000561c <d_number>
8000697a:	c6 85       	brlt	80006a4a <d_name+0x24a>
8000697c:	4b 6b       	lddpc	r11,80006a54 <d_name+0x254>
8000697e:	30 ea       	mov	r10,14
80006980:	0e 9c       	mov	r12,r7
80006982:	fe b0 f6 31 	rcall	800055e4 <d_make_name>
80006986:	18 99       	mov	r9,r12
80006988:	c1 18       	rjmp	800069aa <d_name+0x1aa>
8000698a:	0e 9c       	mov	r12,r7
8000698c:	c3 af       	rcall	80006800 <d_name>
8000698e:	6e 38       	ld.w	r8,r7[0xc]
80006990:	18 95       	mov	r5,r12
80006992:	11 8a       	ld.ub	r10,r8[0x0]
80006994:	35 f9       	mov	r9,95
80006996:	f2 0a 18 00 	cp.b	r10,r9
8000699a:	c0 71       	brne	800069a8 <d_name+0x1a8>
8000699c:	2f f8       	sub	r8,-1
8000699e:	0e 9c       	mov	r12,r7
800069a0:	8f 38       	st.w	r7[0xc],r8
800069a2:	fe b0 f6 3d 	rcall	8000561c <d_number>
800069a6:	c5 25       	brlt	80006a4a <d_name+0x24a>
800069a8:	0a 99       	mov	r9,r5
800069aa:	0c 9a       	mov	r10,r6
800069ac:	0e 9c       	mov	r12,r7
800069ae:	30 2b       	mov	r11,2
800069b0:	c4 a8       	rjmp	80006a44 <d_name+0x244>
800069b2:	fe b0 fd a9 	rcall	80006504 <d_unqualified_name>
800069b6:	18 96       	mov	r6,r12
800069b8:	c4 a8       	rjmp	80006a4c <d_name+0x24c>
800069ba:	11 9a       	ld.ub	r10,r8[0x1]
800069bc:	37 49       	mov	r9,116
800069be:	f2 0a 18 00 	cp.b	r10,r9
800069c2:	c0 70       	breq	800069d0 <d_name+0x1d0>
800069c4:	30 0b       	mov	r11,0
800069c6:	fe b0 f6 f9 	rcall	800057b8 <d_substitution>
800069ca:	30 18       	mov	r8,1
800069cc:	18 96       	mov	r6,r12
800069ce:	c1 68       	rjmp	800069fa <d_name+0x1fa>
800069d0:	2f e8       	sub	r8,-2
800069d2:	99 38       	st.w	r12[0xc],r8
800069d4:	fe b0 fd 98 	rcall	80006504 <d_unqualified_name>
800069d8:	4a 0b       	lddpc	r11,80006a58 <d_name+0x258>
800069da:	18 96       	mov	r6,r12
800069dc:	30 3a       	mov	r10,3
800069de:	0e 9c       	mov	r12,r7
800069e0:	fe b0 f6 02 	rcall	800055e4 <d_make_name>
800069e4:	0c 99       	mov	r9,r6
800069e6:	18 9a       	mov	r10,r12
800069e8:	30 1b       	mov	r11,1
800069ea:	0e 9c       	mov	r12,r7
800069ec:	fe b0 f5 5c 	rcall	800054a4 <d_make_comp>
800069f0:	6e c8       	ld.w	r8,r7[0x30]
800069f2:	2f d8       	sub	r8,-3
800069f4:	18 96       	mov	r6,r12
800069f6:	8f c8       	st.w	r7[0x30],r8
800069f8:	30 08       	mov	r8,0
800069fa:	6e 39       	ld.w	r9,r7[0xc]
800069fc:	13 8a       	ld.ub	r10,r9[0x0]
800069fe:	34 99       	mov	r9,73
80006a00:	f2 0a 18 00 	cp.b	r10,r9
80006a04:	c2 41       	brne	80006a4c <d_name+0x24c>
80006a06:	58 08       	cp.w	r8,0
80006a08:	c1 81       	brne	80006a38 <d_name+0x238>
80006a0a:	c0 b8       	rjmp	80006a20 <d_name+0x220>
80006a0c:	0e 9c       	mov	r12,r7
80006a0e:	fe b0 fd 7b 	rcall	80006504 <d_unqualified_name>
80006a12:	6e 38       	ld.w	r8,r7[0xc]
80006a14:	18 96       	mov	r6,r12
80006a16:	11 89       	ld.ub	r9,r8[0x0]
80006a18:	34 98       	mov	r8,73
80006a1a:	f0 09 18 00 	cp.b	r9,r8
80006a1e:	c1 71       	brne	80006a4c <d_name+0x24c>
80006a20:	58 06       	cp.w	r6,0
80006a22:	c1 50       	breq	80006a4c <d_name+0x24c>
80006a24:	6e 88       	ld.w	r8,r7[0x20]
80006a26:	6e 99       	ld.w	r9,r7[0x24]
80006a28:	12 38       	cp.w	r8,r9
80006a2a:	c1 04       	brge	80006a4a <d_name+0x24a>
80006a2c:	f0 c9 ff ff 	sub	r9,r8,-1
80006a30:	8f 89       	st.w	r7[0x20],r9
80006a32:	6e 79       	ld.w	r9,r7[0x1c]
80006a34:	f2 08 09 26 	st.w	r9[r8<<0x2],r6
80006a38:	0e 9c       	mov	r12,r7
80006a3a:	c8 7e       	rcall	80006748 <d_template_args>
80006a3c:	0c 9a       	mov	r10,r6
80006a3e:	18 99       	mov	r9,r12
80006a40:	30 4b       	mov	r11,4
80006a42:	0e 9c       	mov	r12,r7
80006a44:	fe b0 f5 30 	rcall	800054a4 <d_make_comp>
80006a48:	cb 7b       	rjmp	800069b6 <d_name+0x1b6>
80006a4a:	30 06       	mov	r6,0
80006a4c:	0c 9c       	mov	r12,r6
80006a4e:	2f fd       	sub	sp,-4
80006a50:	d8 32       	popm	r0-r7,pc
80006a52:	00 00       	add	r0,r0
80006a54:	80 00       	ld.sh	r0,r0[0x0]
80006a56:	f6 fc 80 00 	ld.w	r12,r11[-32768]
80006a5a:	f7 0c d4 31 	ld.sh	r12,r11[-11215]

80006a5c <d_encoding>:
80006a5c:	d4 31       	pushm	r0-r7,lr
80006a5e:	78 38       	ld.w	r8,r12[0xc]
80006a60:	11 89       	ld.ub	r9,r8[0x0]
80006a62:	16 94       	mov	r4,r11
80006a64:	35 4a       	mov	r10,84
80006a66:	34 7b       	mov	r11,71
80006a68:	f4 09 18 00 	cp.b	r9,r10
80006a6c:	5f 05       	sreq	r5
80006a6e:	f6 09 18 00 	cp.b	r9,r11
80006a72:	5f 06       	sreq	r6
80006a74:	18 97       	mov	r7,r12
80006a76:	0c 45       	or	r5,r6
80006a78:	30 09       	mov	r9,0
80006a7a:	f2 05 18 00 	cp.b	r5,r9
80006a7e:	e0 80 01 66 	breq	80006d4a <d_encoding+0x2ee>
80006a82:	78 c9       	ld.w	r9,r12[0x30]
80006a84:	f2 c6 ff ec 	sub	r6,r9,-20
80006a88:	99 c6       	st.w	r12[0x30],r6
80006a8a:	11 86       	ld.ub	r6,r8[0x0]
80006a8c:	f4 06 18 00 	cp.b	r6,r10
80006a90:	c0 81       	brne	80006aa0 <d_encoding+0x44>
80006a92:	f0 cb ff ff 	sub	r11,r8,-1
80006a96:	99 3b       	st.w	r12[0xc],r11
80006a98:	17 88       	ld.ub	r8,r11[0x0]
80006a9a:	58 08       	cp.w	r8,0
80006a9c:	c0 71       	brne	80006aaa <d_encoding+0x4e>
80006a9e:	c5 49       	rjmp	80006d46 <d_encoding+0x2ea>
80006aa0:	f6 06 18 00 	cp.b	r6,r11
80006aa4:	e0 81 01 51 	brne	80006d46 <d_encoding+0x2ea>
80006aa8:	cb 08       	rjmp	80006c08 <d_encoding+0x1ac>
80006aaa:	2f fb       	sub	r11,-1
80006aac:	99 3b       	st.w	r12[0xc],r11
80006aae:	35 3b       	mov	r11,83
80006ab0:	f6 08 18 00 	cp.b	r8,r11
80006ab4:	c4 c0       	breq	80006b4c <d_encoding+0xf0>
80006ab6:	e0 8b 00 19 	brhi	80006ae8 <d_encoding+0x8c>
80006aba:	34 69       	mov	r9,70
80006abc:	f2 08 18 00 	cp.b	r8,r9
80006ac0:	e0 80 00 96 	breq	80006bec <d_encoding+0x190>
80006ac4:	e0 8b 00 08 	brhi	80006ad4 <d_encoding+0x78>
80006ac8:	34 39       	mov	r9,67
80006aca:	f2 08 18 00 	cp.b	r8,r9
80006ace:	e0 81 01 3c 	brne	80006d46 <d_encoding+0x2ea>
80006ad2:	c7 18       	rjmp	80006bb4 <d_encoding+0x158>
80006ad4:	34 99       	mov	r9,73
80006ad6:	f2 08 18 00 	cp.b	r8,r9
80006ada:	c3 20       	breq	80006b3e <d_encoding+0xe2>
80006adc:	34 a9       	mov	r9,74
80006ade:	f2 08 18 00 	cp.b	r8,r9
80006ae2:	e0 81 01 32 	brne	80006d46 <d_encoding+0x2ea>
80006ae6:	c8 a8       	rjmp	80006bfa <d_encoding+0x19e>
80006ae8:	36 3b       	mov	r11,99
80006aea:	f6 08 18 00 	cp.b	r8,r11
80006aee:	c5 00       	breq	80006b8e <d_encoding+0x132>
80006af0:	e0 8b 00 0b 	brhi	80006b06 <d_encoding+0xaa>
80006af4:	f4 08 18 00 	cp.b	r8,r10
80006af8:	c1 a0       	breq	80006b2c <d_encoding+0xd0>
80006afa:	35 6a       	mov	r10,86
80006afc:	f4 08 18 00 	cp.b	r8,r10
80006b00:	e0 81 01 23 	brne	80006d46 <d_encoding+0x2ea>
80006b04:	c0 b8       	rjmp	80006b1a <d_encoding+0xbe>
80006b06:	36 89       	mov	r9,104
80006b08:	f2 08 18 00 	cp.b	r8,r9
80006b0c:	c2 70       	breq	80006b5a <d_encoding+0xfe>
80006b0e:	37 69       	mov	r9,118
80006b10:	f2 08 18 00 	cp.b	r8,r9
80006b14:	e0 81 01 19 	brne	80006d46 <d_encoding+0x2ea>
80006b18:	c2 e8       	rjmp	80006b74 <d_encoding+0x118>
80006b1a:	2f 19       	sub	r9,-15
80006b1c:	99 c9       	st.w	r12[0x30],r9
80006b1e:	fe b0 f9 0d 	rcall	80005d38 <d_type>
80006b22:	30 09       	mov	r9,0
80006b24:	18 9a       	mov	r10,r12
80006b26:	30 9b       	mov	r11,9
80006b28:	0e 9c       	mov	r12,r7
80006b2a:	c7 49       	rjmp	80006e12 <d_encoding+0x3b6>
80006b2c:	2f 69       	sub	r9,-10
80006b2e:	99 c9       	st.w	r12[0x30],r9
80006b30:	fe b0 f9 04 	rcall	80005d38 <d_type>
80006b34:	30 09       	mov	r9,0
80006b36:	18 9a       	mov	r10,r12
80006b38:	30 ab       	mov	r11,10
80006b3a:	0e 9c       	mov	r12,r7
80006b3c:	c6 b9       	rjmp	80006e12 <d_encoding+0x3b6>
80006b3e:	fe b0 f8 fd 	rcall	80005d38 <d_type>
80006b42:	30 09       	mov	r9,0
80006b44:	18 9a       	mov	r10,r12
80006b46:	30 cb       	mov	r11,12
80006b48:	0e 9c       	mov	r12,r7
80006b4a:	c6 49       	rjmp	80006e12 <d_encoding+0x3b6>
80006b4c:	fe b0 f8 f6 	rcall	80005d38 <d_type>
80006b50:	30 09       	mov	r9,0
80006b52:	18 9a       	mov	r10,r12
80006b54:	30 db       	mov	r11,13
80006b56:	0e 9c       	mov	r12,r7
80006b58:	c5 d9       	rjmp	80006e12 <d_encoding+0x3b6>
80006b5a:	36 8b       	mov	r11,104
80006b5c:	fe b0 f5 86 	rcall	80005668 <d_call_offset>
80006b60:	e0 80 00 f3 	breq	80006d46 <d_encoding+0x2ea>
80006b64:	30 0b       	mov	r11,0
80006b66:	0e 9c       	mov	r12,r7
80006b68:	c7 af       	rcall	80006a5c <d_encoding>
80006b6a:	30 09       	mov	r9,0
80006b6c:	18 9a       	mov	r10,r12
80006b6e:	30 fb       	mov	r11,15
80006b70:	0e 9c       	mov	r12,r7
80006b72:	c5 09       	rjmp	80006e12 <d_encoding+0x3b6>
80006b74:	37 6b       	mov	r11,118
80006b76:	fe b0 f5 79 	rcall	80005668 <d_call_offset>
80006b7a:	e0 80 00 e6 	breq	80006d46 <d_encoding+0x2ea>
80006b7e:	30 0b       	mov	r11,0
80006b80:	0e 9c       	mov	r12,r7
80006b82:	c6 df       	rcall	80006a5c <d_encoding>
80006b84:	30 09       	mov	r9,0
80006b86:	18 9a       	mov	r10,r12
80006b88:	31 0b       	mov	r11,16
80006b8a:	0e 9c       	mov	r12,r7
80006b8c:	c4 39       	rjmp	80006e12 <d_encoding+0x3b6>
80006b8e:	30 0b       	mov	r11,0
80006b90:	fe b0 f5 6c 	rcall	80005668 <d_call_offset>
80006b94:	e0 80 00 d9 	breq	80006d46 <d_encoding+0x2ea>
80006b98:	30 0b       	mov	r11,0
80006b9a:	0e 9c       	mov	r12,r7
80006b9c:	fe b0 f5 66 	rcall	80005668 <d_call_offset>
80006ba0:	e0 80 00 d3 	breq	80006d46 <d_encoding+0x2ea>
80006ba4:	30 0b       	mov	r11,0
80006ba6:	0e 9c       	mov	r12,r7
80006ba8:	c5 af       	rcall	80006a5c <d_encoding>
80006baa:	30 09       	mov	r9,0
80006bac:	18 9a       	mov	r10,r12
80006bae:	31 1b       	mov	r11,17
80006bb0:	0e 9c       	mov	r12,r7
80006bb2:	c3 09       	rjmp	80006e12 <d_encoding+0x3b6>
80006bb4:	fe b0 f8 c2 	rcall	80005d38 <d_type>
80006bb8:	18 96       	mov	r6,r12
80006bba:	0e 9c       	mov	r12,r7
80006bbc:	fe b0 f5 30 	rcall	8000561c <d_number>
80006bc0:	e0 85 00 c3 	brlt	80006d46 <d_encoding+0x2ea>
80006bc4:	6e 38       	ld.w	r8,r7[0xc]
80006bc6:	35 f9       	mov	r9,95
80006bc8:	11 8a       	ld.ub	r10,r8[0x0]
80006bca:	f2 0a 18 00 	cp.b	r10,r9
80006bce:	e0 81 00 bc 	brne	80006d46 <d_encoding+0x2ea>
80006bd2:	2f f8       	sub	r8,-1
80006bd4:	0e 9c       	mov	r12,r7
80006bd6:	8f 38       	st.w	r7[0xc],r8
80006bd8:	fe b0 f8 b0 	rcall	80005d38 <d_type>
80006bdc:	6e c8       	ld.w	r8,r7[0x30]
80006bde:	18 9a       	mov	r10,r12
80006be0:	2f b8       	sub	r8,-5
80006be2:	0c 99       	mov	r9,r6
80006be4:	0e 9c       	mov	r12,r7
80006be6:	8f c8       	st.w	r7[0x30],r8
80006be8:	30 bb       	mov	r11,11
80006bea:	c1 49       	rjmp	80006e12 <d_encoding+0x3b6>
80006bec:	fe b0 f8 a6 	rcall	80005d38 <d_type>
80006bf0:	30 09       	mov	r9,0
80006bf2:	18 9a       	mov	r10,r12
80006bf4:	30 eb       	mov	r11,14
80006bf6:	0e 9c       	mov	r12,r7
80006bf8:	c0 d9       	rjmp	80006e12 <d_encoding+0x3b6>
80006bfa:	fe b0 f8 9f 	rcall	80005d38 <d_type>
80006bfe:	30 09       	mov	r9,0
80006c00:	18 9a       	mov	r10,r12
80006c02:	31 2b       	mov	r11,18
80006c04:	0e 9c       	mov	r12,r7
80006c06:	c0 69       	rjmp	80006e12 <d_encoding+0x3b6>
80006c08:	f0 c9 ff ff 	sub	r9,r8,-1
80006c0c:	99 39       	st.w	r12[0xc],r9
80006c0e:	13 88       	ld.ub	r8,r9[0x0]
80006c10:	58 08       	cp.w	r8,0
80006c12:	e0 80 00 9a 	breq	80006d46 <d_encoding+0x2ea>
80006c16:	2f f9       	sub	r9,-1
80006c18:	99 39       	st.w	r12[0xc],r9
80006c1a:	35 29       	mov	r9,82
80006c1c:	f2 08 18 00 	cp.b	r8,r9
80006c20:	c1 a0       	breq	80006c54 <d_encoding+0x1f8>
80006c22:	e0 8b 00 08 	brhi	80006c32 <d_encoding+0x1d6>
80006c26:	34 19       	mov	r9,65
80006c28:	f2 08 18 00 	cp.b	r8,r9
80006c2c:	e0 81 00 8d 	brne	80006d46 <d_encoding+0x2ea>
80006c30:	c1 98       	rjmp	80006c62 <d_encoding+0x206>
80006c32:	35 69       	mov	r9,86
80006c34:	f2 08 18 00 	cp.b	r8,r9
80006c38:	c0 70       	breq	80006c46 <d_encoding+0x1ea>
80006c3a:	37 29       	mov	r9,114
80006c3c:	f2 08 18 00 	cp.b	r8,r9
80006c40:	e0 81 00 83 	brne	80006d46 <d_encoding+0x2ea>
80006c44:	c1 68       	rjmp	80006c70 <d_encoding+0x214>
80006c46:	fe b0 fd dd 	rcall	80006800 <d_name>
80006c4a:	30 09       	mov	r9,0
80006c4c:	18 9a       	mov	r10,r12
80006c4e:	31 3b       	mov	r11,19
80006c50:	0e 9c       	mov	r12,r7
80006c52:	ce 08       	rjmp	80006e12 <d_encoding+0x3b6>
80006c54:	fe b0 fd d6 	rcall	80006800 <d_name>
80006c58:	30 09       	mov	r9,0
80006c5a:	18 9a       	mov	r10,r12
80006c5c:	31 4b       	mov	r11,20
80006c5e:	0e 9c       	mov	r12,r7
80006c60:	cd 98       	rjmp	80006e12 <d_encoding+0x3b6>
80006c62:	30 0b       	mov	r11,0
80006c64:	cf ce       	rcall	80006a5c <d_encoding>
80006c66:	30 09       	mov	r9,0
80006c68:	18 9a       	mov	r10,r12
80006c6a:	31 5b       	mov	r11,21
80006c6c:	0e 9c       	mov	r12,r7
80006c6e:	cd 28       	rjmp	80006e12 <d_encoding+0x3b6>
80006c70:	fe b0 f4 d6 	rcall	8000561c <d_number>
80006c74:	58 1c       	cp.w	r12,1
80006c76:	e0 8a 00 68 	brle	80006d46 <d_encoding+0x2ea>
80006c7a:	6e 36       	ld.w	r6,r7[0xc]
80006c7c:	0d 81       	ld.ub	r1,r6[0x0]
80006c7e:	58 01       	cp.w	r1,0
80006c80:	c6 30       	breq	80006d46 <d_encoding+0x2ea>
80006c82:	2f f6       	sub	r6,-1
80006c84:	8f 36       	st.w	r7[0xc],r6
80006c86:	35 f8       	mov	r8,95
80006c88:	f0 01 18 00 	cp.b	r1,r8
80006c8c:	c5 d1       	brne	80006d46 <d_encoding+0x2ea>
80006c8e:	f8 c5 00 01 	sub	r5,r12,1
80006c92:	30 03       	mov	r3,0
80006c94:	32 44       	mov	r4,36
80006c96:	35 30       	mov	r0,83
80006c98:	0d 88       	ld.ub	r8,r6[0x0]
80006c9a:	58 08       	cp.w	r8,0
80006c9c:	c5 50       	breq	80006d46 <d_encoding+0x2ea>
80006c9e:	e8 08 18 00 	cp.b	r8,r4
80006ca2:	c0 30       	breq	80006ca8 <d_encoding+0x24c>
80006ca4:	30 02       	mov	r2,0
80006ca6:	c2 b8       	rjmp	80006cfc <d_encoding+0x2a0>
80006ca8:	0d 99       	ld.ub	r9,r6[0x1]
80006caa:	e0 09 18 00 	cp.b	r9,r0
80006cae:	c0 a0       	breq	80006cc2 <d_encoding+0x266>
80006cb0:	e2 09 18 00 	cp.b	r9,r1
80006cb4:	c0 50       	breq	80006cbe <d_encoding+0x262>
80006cb6:	e8 09 18 00 	cp.b	r9,r4
80006cba:	c4 61       	brne	80006d46 <d_encoding+0x2ea>
80006cbc:	c0 48       	rjmp	80006cc4 <d_encoding+0x268>
80006cbe:	32 e8       	mov	r8,46
80006cc0:	c0 28       	rjmp	80006cc4 <d_encoding+0x268>
80006cc2:	32 f8       	mov	r8,47
80006cc4:	6e 5c       	ld.w	r12,r7[0x14]
80006cc6:	6e 69       	ld.w	r9,r7[0x18]
80006cc8:	12 3c       	cp.w	r12,r9
80006cca:	c0 35       	brlt	80006cd0 <d_encoding+0x274>
80006ccc:	30 0c       	mov	r12,0
80006cce:	c0 d8       	rjmp	80006ce8 <d_encoding+0x28c>
80006cd0:	f8 c9 ff ff 	sub	r9,r12,-1
80006cd4:	8f 59       	st.w	r7[0x14],r9
80006cd6:	f8 0c 00 1c 	add	r12,r12,r12<<0x1
80006cda:	6e 49       	ld.w	r9,r7[0x10]
80006cdc:	f2 0c 00 2c 	add	r12,r9,r12<<0x2
80006ce0:	c0 40       	breq	80006ce8 <d_encoding+0x28c>
80006ce2:	99 18       	st.w	r12[0x4],r8
80006ce4:	33 88       	mov	r8,56
80006ce6:	99 08       	st.w	r12[0x0],r8
80006ce8:	6e 36       	ld.w	r6,r7[0xc]
80006cea:	2f e6       	sub	r6,-2
80006cec:	8f 36       	st.w	r7[0xc],r6
80006cee:	58 0c       	cp.w	r12,0
80006cf0:	c2 b0       	breq	80006d46 <d_encoding+0x2ea>
80006cf2:	20 25       	sub	r5,2
80006cf4:	c1 68       	rjmp	80006d20 <d_encoding+0x2c4>
80006cf6:	2f f2       	sub	r2,-1
80006cf8:	0a 32       	cp.w	r2,r5
80006cfa:	c0 84       	brge	80006d0a <d_encoding+0x2ae>
80006cfc:	ec 02 07 08 	ld.ub	r8,r6[r2]
80006d00:	58 08       	cp.w	r8,0
80006d02:	c0 40       	breq	80006d0a <d_encoding+0x2ae>
80006d04:	e8 08 18 00 	cp.b	r8,r4
80006d08:	cf 71       	brne	80006cf6 <d_encoding+0x29a>
80006d0a:	0c 9b       	mov	r11,r6
80006d0c:	04 9a       	mov	r10,r2
80006d0e:	0e 9c       	mov	r12,r7
80006d10:	fe b0 f4 6a 	rcall	800055e4 <d_make_name>
80006d14:	6e 36       	ld.w	r6,r7[0xc]
80006d16:	04 06       	add	r6,r2
80006d18:	8f 36       	st.w	r7[0xc],r6
80006d1a:	58 0c       	cp.w	r12,0
80006d1c:	c1 50       	breq	80006d46 <d_encoding+0x2ea>
80006d1e:	04 15       	sub	r5,r2
80006d20:	58 03       	cp.w	r3,0
80006d22:	c0 80       	breq	80006d32 <d_encoding+0x2d6>
80006d24:	18 99       	mov	r9,r12
80006d26:	06 9a       	mov	r10,r3
80006d28:	33 7b       	mov	r11,55
80006d2a:	0e 9c       	mov	r12,r7
80006d2c:	fe b0 f3 bc 	rcall	800054a4 <d_make_comp>
80006d30:	c0 b0       	breq	80006d46 <d_encoding+0x2ea>
80006d32:	58 05       	cp.w	r5,0
80006d34:	e0 8a 00 04 	brle	80006d3c <d_encoding+0x2e0>
80006d38:	18 93       	mov	r3,r12
80006d3a:	ca fb       	rjmp	80006c98 <d_encoding+0x23c>
80006d3c:	18 9a       	mov	r10,r12
80006d3e:	30 09       	mov	r9,0
80006d40:	0e 9c       	mov	r12,r7
80006d42:	33 6b       	mov	r11,54
80006d44:	c6 78       	rjmp	80006e12 <d_encoding+0x3b6>
80006d46:	30 06       	mov	r6,0
80006d48:	c6 88       	rjmp	80006e18 <d_encoding+0x3bc>
80006d4a:	fe b0 fd 5b 	rcall	80006800 <d_name>
80006d4e:	58 04       	cp.w	r4,0
80006d50:	5f 18       	srne	r8
80006d52:	58 0c       	cp.w	r12,0
80006d54:	5f 19       	srne	r9
80006d56:	18 96       	mov	r6,r12
80006d58:	f3 e8 00 08 	and	r8,r9,r8
80006d5c:	ea 08 18 00 	cp.b	r8,r5
80006d60:	c1 90       	breq	80006d92 <d_encoding+0x336>
80006d62:	6e 28       	ld.w	r8,r7[0x8]
80006d64:	ed b8 00 00 	bld	r8,0x0
80006d68:	c0 31       	brne	80006d6e <d_encoding+0x312>
80006d6a:	c1 48       	rjmp	80006d92 <d_encoding+0x336>
80006d6c:	6c 16       	ld.w	r6,r6[0x4]
80006d6e:	6c 08       	ld.w	r8,r6[0x0]
80006d70:	f0 c9 00 1a 	sub	r9,r8,26
80006d74:	58 29       	cp.w	r9,2
80006d76:	fe 98 ff fb 	brls	80006d6c <d_encoding+0x310>
80006d7a:	58 28       	cp.w	r8,2
80006d7c:	c4 e1       	brne	80006e18 <d_encoding+0x3bc>
80006d7e:	6c 28       	ld.w	r8,r6[0x8]
80006d80:	c0 28       	rjmp	80006d84 <d_encoding+0x328>
80006d82:	70 18       	ld.w	r8,r8[0x4]
80006d84:	70 09       	ld.w	r9,r8[0x0]
80006d86:	21 a9       	sub	r9,26
80006d88:	58 29       	cp.w	r9,2
80006d8a:	fe 98 ff fc 	brls	80006d82 <d_encoding+0x326>
80006d8e:	8d 28       	st.w	r6[0x8],r8
80006d90:	c4 48       	rjmp	80006e18 <d_encoding+0x3bc>
80006d92:	58 06       	cp.w	r6,0
80006d94:	5f 0b       	sreq	r11
80006d96:	6e 38       	ld.w	r8,r7[0xc]
80006d98:	30 09       	mov	r9,0
80006d9a:	11 88       	ld.ub	r8,r8[0x0]
80006d9c:	f2 08 18 00 	cp.b	r8,r9
80006da0:	5f 0a       	sreq	r10
80006da2:	f7 ea 10 0a 	or	r10,r11,r10
80006da6:	f2 0a 18 00 	cp.b	r10,r9
80006daa:	c3 71       	brne	80006e18 <d_encoding+0x3bc>
80006dac:	34 59       	mov	r9,69
80006dae:	f2 08 18 00 	cp.b	r8,r9
80006db2:	c3 30       	breq	80006e18 <d_encoding+0x3bc>
80006db4:	0c 98       	mov	r8,r6
80006db6:	58 08       	cp.w	r8,0
80006db8:	c2 50       	breq	80006e02 <d_encoding+0x3a6>
80006dba:	70 09       	ld.w	r9,r8[0x0]
80006dbc:	58 49       	cp.w	r9,4
80006dbe:	c0 70       	breq	80006dcc <d_encoding+0x370>
80006dc0:	c2 13       	brcs	80006e02 <d_encoding+0x3a6>
80006dc2:	21 a9       	sub	r9,26
80006dc4:	58 29       	cp.w	r9,2
80006dc6:	e0 8b 00 1e 	brhi	80006e02 <d_encoding+0x3a6>
80006dca:	c1 a8       	rjmp	80006dfe <d_encoding+0x3a2>
80006dcc:	70 19       	ld.w	r9,r8[0x4]
80006dce:	58 09       	cp.w	r9,0
80006dd0:	c1 30       	breq	80006df6 <d_encoding+0x39a>
80006dd2:	72 08       	ld.w	r8,r9[0x0]
80006dd4:	58 88       	cp.w	r8,8
80006dd6:	e0 8b 00 09 	brhi	80006de8 <d_encoding+0x38c>
80006dda:	58 78       	cp.w	r8,7
80006ddc:	c0 92       	brcc	80006dee <d_encoding+0x392>
80006dde:	20 18       	sub	r8,1
80006de0:	58 18       	cp.w	r8,1
80006de2:	e0 8b 00 0a 	brhi	80006df6 <d_encoding+0x39a>
80006de6:	c0 68       	rjmp	80006df2 <d_encoding+0x396>
80006de8:	e0 48 00 2d 	cp.w	r8,45
80006dec:	c0 51       	brne	80006df6 <d_encoding+0x39a>
80006dee:	30 1b       	mov	r11,1
80006df0:	c0 48       	rjmp	80006df8 <d_encoding+0x39c>
80006df2:	72 29       	ld.w	r9,r9[0x8]
80006df4:	ce db       	rjmp	80006dce <d_encoding+0x372>
80006df6:	30 0b       	mov	r11,0
80006df8:	ec 1b 00 01 	eorl	r11,0x1
80006dfc:	c0 48       	rjmp	80006e04 <d_encoding+0x3a8>
80006dfe:	70 18       	ld.w	r8,r8[0x4]
80006e00:	cd bb       	rjmp	80006db6 <d_encoding+0x35a>
80006e02:	30 0b       	mov	r11,0
80006e04:	0e 9c       	mov	r12,r7
80006e06:	fe b0 fa a9 	rcall	80006358 <d_bare_function_type>
80006e0a:	0c 9a       	mov	r10,r6
80006e0c:	18 99       	mov	r9,r12
80006e0e:	30 3b       	mov	r11,3
80006e10:	0e 9c       	mov	r12,r7
80006e12:	fe b0 f3 49 	rcall	800054a4 <d_make_comp>
80006e16:	18 96       	mov	r6,r12
80006e18:	0c 9c       	mov	r12,r6
80006e1a:	d8 32       	popm	r0-r7,pc

80006e1c <d_exprlist>:
80006e1c:	d4 21       	pushm	r4-r7,lr
80006e1e:	20 1d       	sub	sp,4
80006e20:	30 09       	mov	r9,0
80006e22:	50 09       	stdsp	sp[0x0],r9
80006e24:	78 38       	ld.w	r8,r12[0xc]
80006e26:	18 97       	mov	r7,r12
80006e28:	34 55       	mov	r5,69
80006e2a:	11 8a       	ld.ub	r10,r8[0x0]
80006e2c:	ea 0a 18 00 	cp.b	r10,r5
80006e30:	c0 81       	brne	80006e40 <d_exprlist+0x24>
80006e32:	2f f8       	sub	r8,-1
80006e34:	32 9b       	mov	r11,41
80006e36:	99 38       	st.w	r12[0xc],r8
80006e38:	12 9a       	mov	r10,r9
80006e3a:	fe b0 f3 35 	rcall	800054a4 <d_make_comp>
80006e3e:	c1 c8       	rjmp	80006e76 <d_exprlist+0x5a>
80006e40:	1a 96       	mov	r6,sp
80006e42:	0e 9c       	mov	r12,r7
80006e44:	fe b0 f6 62 	rcall	80005b08 <d_expression>
80006e48:	30 09       	mov	r9,0
80006e4a:	18 98       	mov	r8,r12
80006e4c:	18 9a       	mov	r10,r12
80006e4e:	32 9b       	mov	r11,41
80006e50:	0e 9c       	mov	r12,r7
80006e52:	58 08       	cp.w	r8,0
80006e54:	c1 00       	breq	80006e74 <d_exprlist+0x58>
80006e56:	fe b0 f3 27 	rcall	800054a4 <d_make_comp>
80006e5a:	8d 0c       	st.w	r6[0x0],r12
80006e5c:	c0 c0       	breq	80006e74 <d_exprlist+0x58>
80006e5e:	6e 38       	ld.w	r8,r7[0xc]
80006e60:	f8 c6 ff f8 	sub	r6,r12,-8
80006e64:	11 89       	ld.ub	r9,r8[0x0]
80006e66:	ea 09 18 00 	cp.b	r9,r5
80006e6a:	ce c1       	brne	80006e42 <d_exprlist+0x26>
80006e6c:	2f f8       	sub	r8,-1
80006e6e:	40 0c       	lddsp	r12,sp[0x0]
80006e70:	8f 38       	st.w	r7[0xc],r8
80006e72:	c0 28       	rjmp	80006e76 <d_exprlist+0x5a>
80006e74:	30 0c       	mov	r12,0
80006e76:	2f fd       	sub	sp,-4
80006e78:	d8 22       	popm	r4-r7,pc
	...

80006e7c <d_print_comp>:
80006e7c:	d4 31       	pushm	r0-r7,lr
80006e7e:	21 2d       	sub	sp,72
80006e80:	18 97       	mov	r7,r12
80006e82:	16 96       	mov	r6,r11
80006e84:	58 0b       	cp.w	r11,0
80006e86:	e0 80 05 48 	breq	80007916 <d_print_comp+0xa9a>
80006e8a:	f8 f8 01 1c 	ld.w	r8,r12[284]
80006e8e:	58 08       	cp.w	r8,0
80006e90:	e0 81 05 46 	brne	8000791c <d_print_comp+0xaa0>
80006e94:	76 08       	ld.w	r8,r11[0x0]
80006e96:	e0 48 00 3a 	cp.w	r8,58
80006e9a:	e0 8b 05 3e 	brhi	80007916 <d_print_comp+0xa9a>
80006e9e:	fe f9 02 4e 	ld.w	r9,pc[590]
80006ea2:	f2 08 03 2f 	ld.w	pc,r9[r8<<0x2]
80006ea6:	00 00       	add	r0,r0
80006ea8:	80 00       	ld.sh	r0,r0[0x0]
80006eaa:	6f 94       	ld.w	r4,r7[0x64]
80006eac:	80 00       	ld.sh	r0,r0[0x0]
80006eae:	70 4c       	ld.w	r12,r8[0x10]
80006eb0:	80 00       	ld.sh	r0,r0[0x0]
80006eb2:	70 4c       	ld.w	r12,r8[0x10]
80006eb4:	80 00       	ld.sh	r0,r0[0x0]
80006eb6:	70 66       	ld.w	r6,r8[0x18]
80006eb8:	80 00       	ld.sh	r0,r0[0x0]
80006eba:	71 7e       	ld.w	lr,r8[0x5c]
80006ebc:	80 00       	ld.sh	r0,r0[0x0]
80006ebe:	72 04       	ld.w	r4,r9[0x0]
80006ec0:	80 00       	ld.sh	r0,r0[0x0]
80006ec2:	78 f4       	ld.w	r4,r12[0x3c]
80006ec4:	80 00       	ld.sh	r0,r0[0x0]
80006ec6:	78 56       	ld.w	r6,r12[0x14]
80006ec8:	80 00       	ld.sh	r0,r0[0x0]
80006eca:	72 9c       	ld.w	r12,r9[0x24]
80006ecc:	80 00       	ld.sh	r0,r0[0x0]
80006ece:	72 a6       	ld.w	r6,r9[0x28]
80006ed0:	80 00       	ld.sh	r0,r0[0x0]
80006ed2:	72 ac       	ld.w	r12,r9[0x28]
80006ed4:	80 00       	ld.sh	r0,r0[0x0]
80006ed6:	72 b2       	ld.w	r2,r9[0x2c]
80006ed8:	80 00       	ld.sh	r0,r0[0x0]
80006eda:	72 e4       	ld.w	r4,r9[0x38]
80006edc:	80 00       	ld.sh	r0,r0[0x0]
80006ede:	72 ea       	ld.w	r10,r9[0x38]
80006ee0:	80 00       	ld.sh	r0,r0[0x0]
80006ee2:	72 f0       	ld.w	r0,r9[0x3c]
80006ee4:	80 00       	ld.sh	r0,r0[0x0]
80006ee6:	72 f6       	ld.w	r6,r9[0x3c]
80006ee8:	80 00       	ld.sh	r0,r0[0x0]
80006eea:	72 fc       	ld.w	r12,r9[0x3c]
80006eec:	80 00       	ld.sh	r0,r0[0x0]
80006eee:	73 02       	ld.w	r2,r9[0x40]
80006ef0:	80 00       	ld.sh	r0,r0[0x0]
80006ef2:	73 08       	ld.w	r8,r9[0x40]
80006ef4:	80 00       	ld.sh	r0,r0[0x0]
80006ef6:	73 0e       	ld.w	lr,r9[0x40]
80006ef8:	80 00       	ld.sh	r0,r0[0x0]
80006efa:	73 14       	ld.w	r4,r9[0x44]
80006efc:	80 00       	ld.sh	r0,r0[0x0]
80006efe:	73 1a       	ld.w	r10,r9[0x44]
80006f00:	80 00       	ld.sh	r0,r0[0x0]
80006f02:	73 20       	ld.w	r0,r9[0x48]
80006f04:	80 00       	ld.sh	r0,r0[0x0]
80006f06:	73 2c       	ld.w	r12,r9[0x48]
80006f08:	80 00       	ld.sh	r0,r0[0x0]
80006f0a:	73 2c       	ld.w	r12,r9[0x48]
80006f0c:	80 00       	ld.sh	r0,r0[0x0]
80006f0e:	73 2c       	ld.w	r12,r9[0x48]
80006f10:	80 00       	ld.sh	r0,r0[0x0]
80006f12:	73 52       	ld.w	r2,r9[0x54]
80006f14:	80 00       	ld.sh	r0,r0[0x0]
80006f16:	73 52       	ld.w	r2,r9[0x54]
80006f18:	80 00       	ld.sh	r0,r0[0x0]
80006f1a:	73 52       	ld.w	r2,r9[0x54]
80006f1c:	80 00       	ld.sh	r0,r0[0x0]
80006f1e:	73 52       	ld.w	r2,r9[0x54]
80006f20:	80 00       	ld.sh	r0,r0[0x0]
80006f22:	73 52       	ld.w	r2,r9[0x54]
80006f24:	80 00       	ld.sh	r0,r0[0x0]
80006f26:	73 52       	ld.w	r2,r9[0x54]
80006f28:	80 00       	ld.sh	r0,r0[0x0]
80006f2a:	73 52       	ld.w	r2,r9[0x54]
80006f2c:	80 00       	ld.sh	r0,r0[0x0]
80006f2e:	73 52       	ld.w	r2,r9[0x54]
80006f30:	80 00       	ld.sh	r0,r0[0x0]
80006f32:	73 52       	ld.w	r2,r9[0x54]
80006f34:	80 00       	ld.sh	r0,r0[0x0]
80006f36:	73 82       	ld.w	r2,r9[0x60]
80006f38:	80 00       	ld.sh	r0,r0[0x0]
80006f3a:	78 4c       	ld.w	r12,r12[0x10]
80006f3c:	80 00       	ld.sh	r0,r0[0x0]
80006f3e:	73 c0       	ld.w	r0,r9[0x70]
80006f40:	80 00       	ld.sh	r0,r0[0x0]
80006f42:	74 2c       	ld.w	r12,r10[0x8]
80006f44:	80 00       	ld.sh	r0,r0[0x0]
80006f46:	74 de       	ld.w	lr,r10[0x34]
80006f48:	80 00       	ld.sh	r0,r0[0x0]
80006f4a:	75 22       	ld.w	r2,r10[0x48]
80006f4c:	80 00       	ld.sh	r0,r0[0x0]
80006f4e:	75 68       	ld.w	r8,r10[0x58]
80006f50:	80 00       	ld.sh	r0,r0[0x0]
80006f52:	75 68       	ld.w	r8,r10[0x58]
80006f54:	80 00       	ld.sh	r0,r0[0x0]
80006f56:	75 e4       	ld.w	r4,r10[0x78]
80006f58:	80 00       	ld.sh	r0,r0[0x0]
80006f5a:	76 0e       	ld.w	lr,r11[0x0]
80006f5c:	80 00       	ld.sh	r0,r0[0x0]
80006f5e:	76 16       	ld.w	r6,r11[0x4]
80006f60:	80 00       	ld.sh	r0,r0[0x0]
80006f62:	76 48       	ld.w	r8,r11[0x10]
80006f64:	80 00       	ld.sh	r0,r0[0x0]
80006f66:	76 74       	ld.w	r4,r11[0x1c]
80006f68:	80 00       	ld.sh	r0,r0[0x0]
80006f6a:	79 16       	ld.w	r6,r12[0x44]
80006f6c:	80 00       	ld.sh	r0,r0[0x0]
80006f6e:	76 f4       	ld.w	r4,r11[0x3c]
80006f70:	80 00       	ld.sh	r0,r0[0x0]
80006f72:	79 16       	ld.w	r6,r12[0x44]
80006f74:	80 00       	ld.sh	r0,r0[0x0]
80006f76:	79 16       	ld.w	r6,r12[0x44]
80006f78:	80 00       	ld.sh	r0,r0[0x0]
80006f7a:	77 3c       	ld.w	r12,r11[0x4c]
80006f7c:	80 00       	ld.sh	r0,r0[0x0]
80006f7e:	77 3c       	ld.w	r12,r11[0x4c]
80006f80:	80 00       	ld.sh	r0,r0[0x0]
80006f82:	78 46       	ld.w	r6,r12[0x10]
80006f84:	80 00       	ld.sh	r0,r0[0x0]
80006f86:	78 50       	ld.w	r0,r12[0x14]
80006f88:	80 00       	ld.sh	r0,r0[0x0]
80006f8a:	78 60       	ld.w	r0,r12[0x18]
80006f8c:	80 00       	ld.sh	r0,r0[0x0]
80006f8e:	78 64       	ld.w	r4,r12[0x18]
80006f90:	80 00       	ld.sh	r0,r0[0x0]
80006f92:	78 7c       	ld.w	r12,r12[0x1c]
80006f94:	78 08       	ld.w	r8,r12[0x0]
80006f96:	76 1b       	ld.w	r11,r11[0x4]
80006f98:	e2 18 00 04 	andl	r8,0x4,COH
80006f9c:	6c 2a       	ld.w	r10,r6[0x8]
80006f9e:	e0 80 01 c3 	breq	80007324 <d_print_comp+0x4a8>
80006fa2:	16 96       	mov	r6,r11
80006fa4:	f6 0a 00 04 	add	r4,r11,r10
80006fa8:	35 f5       	mov	r5,95
80006faa:	35 50       	mov	r0,85
80006fac:	30 91       	mov	r1,9
80006fae:	30 53       	mov	r3,5
80006fb0:	30 02       	mov	r2,0
80006fb2:	c4 98       	rjmp	80007044 <d_print_comp+0x1c8>
80006fb4:	e8 06 01 08 	sub	r8,r4,r6
80006fb8:	58 38       	cp.w	r8,3
80006fba:	e0 8a 00 40 	brle	8000703a <d_print_comp+0x1be>
80006fbe:	0d 88       	ld.ub	r8,r6[0x0]
80006fc0:	ea 08 18 00 	cp.b	r8,r5
80006fc4:	c3 b1       	brne	8000703a <d_print_comp+0x1be>
80006fc6:	0d 98       	ld.ub	r8,r6[0x1]
80006fc8:	ea 08 18 00 	cp.b	r8,r5
80006fcc:	c3 71       	brne	8000703a <d_print_comp+0x1be>
80006fce:	0d a8       	ld.ub	r8,r6[0x2]
80006fd0:	e0 08 18 00 	cp.b	r8,r0
80006fd4:	c3 31       	brne	8000703a <d_print_comp+0x1be>
80006fd6:	ec c8 ff fd 	sub	r8,r6,-3
80006fda:	30 0b       	mov	r11,0
80006fdc:	c1 e8       	rjmp	80007018 <d_print_comp+0x19c>
80006fde:	11 89       	ld.ub	r9,r8[0x0]
80006fe0:	f2 ca 00 30 	sub	r10,r9,48
80006fe4:	f2 cc 00 30 	sub	r12,r9,48
80006fe8:	e2 0c 18 00 	cp.b	r12,r1
80006fec:	e0 88 00 12 	brls	80007010 <d_print_comp+0x194>
80006ff0:	f2 ca 00 37 	sub	r10,r9,55
80006ff4:	f2 cc 00 41 	sub	r12,r9,65
80006ff8:	e6 0c 18 00 	cp.b	r12,r3
80006ffc:	e0 88 00 0a 	brls	80007010 <d_print_comp+0x194>
80007000:	f2 ca 00 57 	sub	r10,r9,87
80007004:	f2 cc 00 61 	sub	r12,r9,97
80007008:	e6 0c 18 00 	cp.b	r12,r3
8000700c:	e0 8b 00 09 	brhi	8000701e <d_print_comp+0x1a2>
80007010:	a5 6b       	lsl	r11,0x4
80007012:	2f f8       	sub	r8,-1
80007014:	f4 0b 00 0b 	add	r11,r10,r11
80007018:	08 38       	cp.w	r8,r4
8000701a:	ce 23       	brcs	80006fde <d_print_comp+0x162>
8000701c:	c0 f8       	rjmp	8000703a <d_print_comp+0x1be>
8000701e:	ea 09 18 00 	cp.b	r9,r5
80007022:	5f 0a       	sreq	r10
80007024:	e0 4b 00 ff 	cp.w	r11,255
80007028:	5f 89       	srls	r9
8000702a:	f5 e9 00 09 	and	r9,r10,r9
8000702e:	e4 09 18 00 	cp.b	r9,r2
80007032:	c0 40       	breq	8000703a <d_print_comp+0x1be>
80007034:	5c 5b       	castu.b	r11
80007036:	10 96       	mov	r6,r8
80007038:	c0 28       	rjmp	8000703c <d_print_comp+0x1c0>
8000703a:	0d 8b       	ld.ub	r11,r6[0x0]
8000703c:	0e 9c       	mov	r12,r7
8000703e:	2f f6       	sub	r6,-1
80007040:	fe b0 f4 76 	rcall	8000592c <d_append_char>
80007044:	08 36       	cp.w	r6,r4
80007046:	cb 73       	brcs	80006fb4 <d_print_comp+0x138>
80007048:	e0 8f 04 6a 	bral	8000791c <d_print_comp+0xaa0>
8000704c:	76 1b       	ld.w	r11,r11[0x4]
8000704e:	c1 7f       	rcall	80006e7c <d_print_comp>
80007050:	6e 08       	ld.w	r8,r7[0x0]
80007052:	ed b8 00 02 	bld	r8,0x2
80007056:	c0 50       	breq	80007060 <d_print_comp+0x1e4>
80007058:	4a 6b       	lddpc	r11,800070f0 <d_print_comp+0x274>
8000705a:	0e 9c       	mov	r12,r7
8000705c:	e0 8f 02 da 	bral	80007610 <d_print_comp+0x794>
80007060:	32 eb       	mov	r11,46
80007062:	0e 9c       	mov	r12,r7
80007064:	c1 d9       	rjmp	8000729e <d_print_comp+0x422>
80007066:	30 08       	mov	r8,0
80007068:	f8 f3 01 18 	ld.w	r3,r12[280]
8000706c:	10 95       	mov	r5,r8
8000706e:	f9 48 01 18 	st.w	r12[280],r8
80007072:	0a 9a       	mov	r10,r5
80007074:	1a 98       	mov	r8,sp
80007076:	76 14       	ld.w	r4,r11[0x4]
80007078:	c1 78       	rjmp	800070a6 <d_print_comp+0x22a>
8000707a:	58 45       	cp.w	r5,4
8000707c:	e0 80 04 4d 	breq	80007916 <d_print_comp+0xa9a>
80007080:	ee f9 01 18 	ld.w	r9,r7[280]
80007084:	91 09       	st.w	r8[0x0],r9
80007086:	ef 48 01 18 	st.w	r7[280],r8
8000708a:	ee f9 01 14 	ld.w	r9,r7[276]
8000708e:	91 14       	st.w	r8[0x4],r4
80007090:	91 39       	st.w	r8[0xc],r9
80007092:	91 2a       	st.w	r8[0x8],r10
80007094:	68 09       	ld.w	r9,r4[0x0]
80007096:	2f f5       	sub	r5,-1
80007098:	2f 08       	sub	r8,-16
8000709a:	f2 cb 00 1a 	sub	r11,r9,26
8000709e:	58 2b       	cp.w	r11,2
800070a0:	e0 8b 00 07 	brhi	800070ae <d_print_comp+0x232>
800070a4:	68 14       	ld.w	r4,r4[0x4]
800070a6:	58 04       	cp.w	r4,0
800070a8:	ce 91       	brne	8000707a <d_print_comp+0x1fe>
800070aa:	e0 8f 04 36 	bral	80007916 <d_print_comp+0xa9a>
800070ae:	58 49       	cp.w	r9,4
800070b0:	c0 91       	brne	800070c2 <d_print_comp+0x246>
800070b2:	ee f8 01 14 	ld.w	r8,r7[276]
800070b6:	51 08       	stdsp	sp[0x40],r8
800070b8:	51 14       	stdsp	sp[0x44],r4
800070ba:	fa c8 ff c0 	sub	r8,sp,-64
800070be:	ef 48 01 14 	st.w	r7[276],r8
800070c2:	68 08       	ld.w	r8,r4[0x0]
800070c4:	58 28       	cp.w	r8,2
800070c6:	c3 91       	brne	80007138 <d_print_comp+0x2bc>
800070c8:	ea 08 15 04 	lsl	r8,r5,0x4
800070cc:	ea cb 00 01 	sub	r11,r5,1
800070d0:	21 08       	sub	r8,16
800070d2:	a5 6b       	lsl	r11,0x4
800070d4:	ea 0a 15 04 	lsl	r10,r5,0x4
800070d8:	fa 08 00 08 	add	r8,sp,r8
800070dc:	fa 0b 00 0b 	add	r11,sp,r11
800070e0:	fa 0a 00 0a 	add	r10,sp,r10
800070e4:	68 29       	ld.w	r9,r4[0x8]
800070e6:	30 02       	mov	r2,0
800070e8:	c2 08       	rjmp	80007128 <d_print_comp+0x2ac>
800070ea:	00 00       	add	r0,r0
800070ec:	80 00       	ld.sh	r0,r0[0x0]
800070ee:	6e a8       	ld.w	r8,r7[0x28]
800070f0:	80 00       	ld.sh	r0,r0[0x0]
800070f2:	f7 10 58 35 	ld.uh	r0,r11[22581]
800070f6:	e0 8b 04 10 	brhi	80007916 <d_print_comp+0xa9a>
800070fa:	f8 e0 00 00 	ld.d	r0,r12[0]
800070fe:	f0 e1 00 00 	st.d	r8[0],r0
80007102:	f8 e0 00 08 	ld.d	r0,r12[8]
80007106:	91 0b       	st.w	r8[0x0],r11
80007108:	f0 e1 00 08 	st.d	r8[8],r0
8000710c:	ef 4a 01 18 	st.w	r7[280],r10
80007110:	f1 49 ff f4 	st.w	r8[-12],r9
80007114:	f1 42 ff f8 	st.w	r8[-8],r2
80007118:	ee fc 01 14 	ld.w	r12,r7[276]
8000711c:	2f f5       	sub	r5,-1
8000711e:	f1 4c ff fc 	st.w	r8[-4],r12
80007122:	2f 0b       	sub	r11,-16
80007124:	2f 0a       	sub	r10,-16
80007126:	72 19       	ld.w	r9,r9[0x4]
80007128:	2f 08       	sub	r8,-16
8000712a:	72 01       	ld.w	r1,r9[0x0]
8000712c:	f0 cc 00 10 	sub	r12,r8,16
80007130:	21 a1       	sub	r1,26
80007132:	58 21       	cp.w	r1,2
80007134:	fe 98 ff e0 	brls	800070f4 <d_print_comp+0x278>
80007138:	6c 2b       	ld.w	r11,r6[0x8]
8000713a:	0e 9c       	mov	r12,r7
8000713c:	ca 0e       	rcall	80006e7c <d_print_comp>
8000713e:	68 08       	ld.w	r8,r4[0x0]
80007140:	58 48       	cp.w	r8,4
80007142:	c0 41       	brne	8000714a <d_print_comp+0x2ce>
80007144:	41 08       	lddsp	r8,sp[0x40]
80007146:	ef 48 01 14 	st.w	r7[276],r8
8000714a:	ea 06 15 04 	lsl	r6,r5,0x4
8000714e:	fa c8 ff b8 	sub	r8,sp,-72
80007152:	f0 06 00 06 	add	r6,r8,r6
80007156:	25 46       	sub	r6,84
80007158:	20 15       	sub	r5,1
8000715a:	6c 18       	ld.w	r8,r6[0x4]
8000715c:	58 08       	cp.w	r8,0
8000715e:	c0 91       	brne	80007170 <d_print_comp+0x2f4>
80007160:	32 0b       	mov	r11,32
80007162:	0e 9c       	mov	r12,r7
80007164:	fe b0 f3 e4 	rcall	8000592c <d_append_char>
80007168:	6c 0b       	ld.w	r11,r6[0x0]
8000716a:	0e 9c       	mov	r12,r7
8000716c:	e0 a0 04 ea 	rcall	80007b40 <d_print_mod>
80007170:	21 06       	sub	r6,16
80007172:	58 05       	cp.w	r5,0
80007174:	cf 21       	brne	80007158 <d_print_comp+0x2dc>
80007176:	ef 43 01 18 	st.w	r7[280],r3
8000717a:	e0 8f 03 d1 	bral	8000791c <d_print_comp+0xaa0>
8000717e:	30 08       	mov	r8,0
80007180:	f8 f4 01 18 	ld.w	r4,r12[280]
80007184:	f9 48 01 18 	st.w	r12[280],r8
80007188:	78 08       	ld.w	r8,r12[0x0]
8000718a:	76 15       	ld.w	r5,r11[0x4]
8000718c:	e2 18 00 04 	andl	r8,0x4,COH
80007190:	c1 40       	breq	800071b8 <d_print_comp+0x33c>
80007192:	6a 08       	ld.w	r8,r5[0x0]
80007194:	58 08       	cp.w	r8,0
80007196:	c1 11       	brne	800071b8 <d_print_comp+0x33c>
80007198:	6a 2a       	ld.w	r10,r5[0x8]
8000719a:	58 6a       	cp.w	r10,6
8000719c:	c0 e1       	brne	800071b8 <d_print_comp+0x33c>
8000719e:	4c bb       	lddpc	r11,800072c8 <d_print_comp+0x44c>
800071a0:	6a 1c       	ld.w	r12,r5[0x4]
800071a2:	f0 1f 00 4b 	mcall	800072cc <d_print_comp+0x450>
800071a6:	c0 91       	brne	800071b8 <d_print_comp+0x33c>
800071a8:	6c 2b       	ld.w	r11,r6[0x8]
800071aa:	0e 9c       	mov	r12,r7
800071ac:	c6 8e       	rcall	80006e7c <d_print_comp>
800071ae:	4c 9b       	lddpc	r11,800072d0 <d_print_comp+0x454>
800071b0:	0e 9c       	mov	r12,r7
800071b2:	fe b0 f4 47 	rcall	80005a40 <d_append_string>
800071b6:	c2 38       	rjmp	800071fc <d_print_comp+0x380>
800071b8:	0a 9b       	mov	r11,r5
800071ba:	0e 9c       	mov	r12,r7
800071bc:	c6 0e       	rcall	80006e7c <d_print_comp>
800071be:	ef 39 01 08 	ld.ub	r9,r7[264]
800071c2:	33 c8       	mov	r8,60
800071c4:	f0 09 18 00 	cp.b	r9,r8
800071c8:	c0 51       	brne	800071d2 <d_print_comp+0x356>
800071ca:	32 0b       	mov	r11,32
800071cc:	0e 9c       	mov	r12,r7
800071ce:	fe b0 f3 af 	rcall	8000592c <d_append_char>
800071d2:	33 cb       	mov	r11,60
800071d4:	0e 9c       	mov	r12,r7
800071d6:	fe b0 f3 ab 	rcall	8000592c <d_append_char>
800071da:	6c 2b       	ld.w	r11,r6[0x8]
800071dc:	0e 9c       	mov	r12,r7
800071de:	c4 fe       	rcall	80006e7c <d_print_comp>
800071e0:	ef 39 01 08 	ld.ub	r9,r7[264]
800071e4:	33 e8       	mov	r8,62
800071e6:	f0 09 18 00 	cp.b	r9,r8
800071ea:	c0 51       	brne	800071f4 <d_print_comp+0x378>
800071ec:	32 0b       	mov	r11,32
800071ee:	0e 9c       	mov	r12,r7
800071f0:	fe b0 f3 9e 	rcall	8000592c <d_append_char>
800071f4:	33 eb       	mov	r11,62
800071f6:	0e 9c       	mov	r12,r7
800071f8:	fe b0 f3 9a 	rcall	8000592c <d_append_char>
800071fc:	ef 44 01 18 	st.w	r7[280],r4
80007200:	e0 8f 03 8e 	bral	8000791c <d_print_comp+0xaa0>
80007204:	f8 f5 01 14 	ld.w	r5,r12[276]
80007208:	58 05       	cp.w	r5,0
8000720a:	c0 61       	brne	80007216 <d_print_comp+0x39a>
8000720c:	30 18       	mov	r8,1
8000720e:	f9 48 01 1c 	st.w	r12[284],r8
80007212:	e0 8f 03 82 	bral	80007916 <d_print_comp+0xa9a>
80007216:	76 19       	ld.w	r9,r11[0x4]
80007218:	6a 18       	ld.w	r8,r5[0x4]
8000721a:	c0 a8       	rjmp	8000722e <d_print_comp+0x3b2>
8000721c:	70 0a       	ld.w	r10,r8[0x0]
8000721e:	e0 4a 00 2a 	cp.w	r10,42
80007222:	e0 81 03 7a 	brne	80007916 <d_print_comp+0xa9a>
80007226:	58 09       	cp.w	r9,0
80007228:	e0 8a 00 06 	brle	80007234 <d_print_comp+0x3b8>
8000722c:	20 19       	sub	r9,1
8000722e:	70 28       	ld.w	r8,r8[0x8]
80007230:	58 08       	cp.w	r8,0
80007232:	cf 51       	brne	8000721c <d_print_comp+0x3a0>
80007234:	58 09       	cp.w	r9,0
80007236:	5f 19       	srne	r9
80007238:	58 08       	cp.w	r8,0
8000723a:	5f 0a       	sreq	r10
8000723c:	f5 e9 10 09 	or	r9,r10,r9
80007240:	e0 81 03 6b 	brne	80007916 <d_print_comp+0xa9a>
80007244:	70 1b       	ld.w	r11,r8[0x4]
80007246:	58 0b       	cp.w	r11,0
80007248:	e0 80 03 67 	breq	80007916 <d_print_comp+0xa9a>
8000724c:	76 08       	ld.w	r8,r11[0x0]
8000724e:	e0 48 00 2a 	cp.w	r8,42
80007252:	c1 b1       	brne	80007288 <d_print_comp+0x40c>
80007254:	ee f8 01 20 	ld.w	r8,r7[288]
80007258:	76 09       	ld.w	r9,r11[0x0]
8000725a:	e0 49 00 2a 	cp.w	r9,42
8000725e:	e0 81 03 5c 	brne	80007916 <d_print_comp+0xa9a>
80007262:	58 08       	cp.w	r8,0
80007264:	e0 8a 00 06 	brle	80007270 <d_print_comp+0x3f4>
80007268:	20 18       	sub	r8,1
8000726a:	76 2b       	ld.w	r11,r11[0x8]
8000726c:	58 0b       	cp.w	r11,0
8000726e:	cf 51       	brne	80007258 <d_print_comp+0x3dc>
80007270:	58 08       	cp.w	r8,0
80007272:	5f 18       	srne	r8
80007274:	58 0b       	cp.w	r11,0
80007276:	5f 09       	sreq	r9
80007278:	f3 e8 10 08 	or	r8,r9,r8
8000727c:	e0 81 03 4d 	brne	80007916 <d_print_comp+0xa9a>
80007280:	76 1b       	ld.w	r11,r11[0x4]
80007282:	58 0b       	cp.w	r11,0
80007284:	e0 80 03 49 	breq	80007916 <d_print_comp+0xa9a>
80007288:	6a 08       	ld.w	r8,r5[0x0]
8000728a:	0e 9c       	mov	r12,r7
8000728c:	ef 48 01 14 	st.w	r7[276],r8
80007290:	fe b0 fd f6 	rcall	80006e7c <d_print_comp>
80007294:	ef 45 01 14 	st.w	r7[276],r5
80007298:	e0 8f 03 42 	bral	8000791c <d_print_comp+0xaa0>
8000729c:	37 eb       	mov	r11,126
8000729e:	fe b0 f3 47 	rcall	8000592c <d_append_char>
800072a2:	e0 8f 02 da 	bral	80007856 <d_print_comp+0x9da>
800072a6:	48 cb       	lddpc	r11,800072d4 <d_print_comp+0x458>
800072a8:	e0 8f 02 d0 	bral	80007848 <d_print_comp+0x9cc>
800072ac:	48 bb       	lddpc	r11,800072d8 <d_print_comp+0x45c>
800072ae:	e0 8f 02 cd 	bral	80007848 <d_print_comp+0x9cc>
800072b2:	48 bb       	lddpc	r11,800072dc <d_print_comp+0x460>
800072b4:	fe b0 f3 c6 	rcall	80005a40 <d_append_string>
800072b8:	6c 1b       	ld.w	r11,r6[0x4]
800072ba:	0e 9c       	mov	r12,r7
800072bc:	fe b0 fd e0 	rcall	80006e7c <d_print_comp>
800072c0:	0e 9c       	mov	r12,r7
800072c2:	48 8b       	lddpc	r11,800072e0 <d_print_comp+0x464>
800072c4:	e0 8f 01 a6 	bral	80007610 <d_print_comp+0x794>
800072c8:	80 00       	ld.sh	r0,r0[0x0]
800072ca:	f7 14 80 00 	ld.uh	r4,r11[-32768]
800072ce:	a8 18       	st.h	r4[0x2],r8
800072d0:	80 00       	ld.sh	r0,r0[0x0]
800072d2:	f7 1c 80 00 	ld.uh	r12,r11[-32768]
800072d6:	f7 20 80 00 	ld.sb	r0,r11[-32768]
800072da:	f7 2c 80 00 	ld.sb	r12,r11[-32768]
800072de:	f7 38 80 00 	ld.ub	r8,r11[-32768]
800072e2:	f7 54 4a db 	st.h	r11[19163],r4
800072e6:	e0 8f 02 b1 	bral	80007848 <d_print_comp+0x9cc>
800072ea:	4a db       	lddpc	r11,8000739c <d_print_comp+0x520>
800072ec:	e0 8f 02 ae 	bral	80007848 <d_print_comp+0x9cc>
800072f0:	4a cb       	lddpc	r11,800073a0 <d_print_comp+0x524>
800072f2:	e0 8f 02 ab 	bral	80007848 <d_print_comp+0x9cc>
800072f6:	4a cb       	lddpc	r11,800073a4 <d_print_comp+0x528>
800072f8:	e0 8f 02 a8 	bral	80007848 <d_print_comp+0x9cc>
800072fc:	4a bb       	lddpc	r11,800073a8 <d_print_comp+0x52c>
800072fe:	e0 8f 02 a5 	bral	80007848 <d_print_comp+0x9cc>
80007302:	4a bb       	lddpc	r11,800073ac <d_print_comp+0x530>
80007304:	e0 8f 02 a2 	bral	80007848 <d_print_comp+0x9cc>
80007308:	4a ab       	lddpc	r11,800073b0 <d_print_comp+0x534>
8000730a:	e0 8f 02 9f 	bral	80007848 <d_print_comp+0x9cc>
8000730e:	4a ab       	lddpc	r11,800073b4 <d_print_comp+0x538>
80007310:	e0 8f 02 9c 	bral	80007848 <d_print_comp+0x9cc>
80007314:	4a 9b       	lddpc	r11,800073b8 <d_print_comp+0x53c>
80007316:	e0 8f 02 99 	bral	80007848 <d_print_comp+0x9cc>
8000731a:	4a 9b       	lddpc	r11,800073bc <d_print_comp+0x540>
8000731c:	e0 8f 02 96 	bral	80007848 <d_print_comp+0x9cc>
80007320:	76 1b       	ld.w	r11,r11[0x4]
80007322:	6c 2a       	ld.w	r10,r6[0x8]
80007324:	fe b0 f3 28 	rcall	80005974 <d_append_buffer>
80007328:	e0 8f 02 fa 	bral	8000791c <d_print_comp+0xaa0>
8000732c:	f8 f9 01 18 	ld.w	r9,r12[280]
80007330:	c0 f8       	rjmp	8000734e <d_print_comp+0x4d2>
80007332:	72 2a       	ld.w	r10,r9[0x8]
80007334:	58 0a       	cp.w	r10,0
80007336:	c0 b1       	brne	8000734c <d_print_comp+0x4d0>
80007338:	72 1a       	ld.w	r10,r9[0x4]
8000733a:	74 0a       	ld.w	r10,r10[0x0]
8000733c:	f4 cb 00 17 	sub	r11,r10,23
80007340:	58 2b       	cp.w	r11,2
80007342:	e0 8b 00 08 	brhi	80007352 <d_print_comp+0x4d6>
80007346:	10 3a       	cp.w	r10,r8
80007348:	e0 80 02 82 	breq	8000784c <d_print_comp+0x9d0>
8000734c:	72 09       	ld.w	r9,r9[0x0]
8000734e:	58 09       	cp.w	r9,0
80007350:	cf 11       	brne	80007332 <d_print_comp+0x4b6>
80007352:	ee f8 01 18 	ld.w	r8,r7[280]
80007356:	50 08       	stdsp	sp[0x0],r8
80007358:	ee f8 01 14 	ld.w	r8,r7[276]
8000735c:	50 38       	stdsp	sp[0xc],r8
8000735e:	30 08       	mov	r8,0
80007360:	50 16       	stdsp	sp[0x4],r6
80007362:	50 28       	stdsp	sp[0x8],r8
80007364:	ef 4d 01 18 	st.w	r7[280],sp
80007368:	0e 9c       	mov	r12,r7
8000736a:	6c 1b       	ld.w	r11,r6[0x4]
8000736c:	fe b0 fd 88 	rcall	80006e7c <d_print_comp>
80007370:	40 28       	lddsp	r8,sp[0x8]
80007372:	58 08       	cp.w	r8,0
80007374:	e0 81 00 d2 	brne	80007518 <d_print_comp+0x69c>
80007378:	0c 9b       	mov	r11,r6
8000737a:	0e 9c       	mov	r12,r7
8000737c:	e0 a0 03 e2 	rcall	80007b40 <d_print_mod>
80007380:	cc c8       	rjmp	80007518 <d_print_comp+0x69c>
80007382:	76 18       	ld.w	r8,r11[0x4]
80007384:	78 09       	ld.w	r9,r12[0x0]
80007386:	ed b9 00 02 	bld	r9,0x2
8000738a:	c0 40       	breq	80007392 <d_print_comp+0x516>
8000738c:	70 0b       	ld.w	r11,r8[0x0]
8000738e:	70 1a       	ld.w	r10,r8[0x4]
80007390:	cc ab       	rjmp	80007324 <d_print_comp+0x4a8>
80007392:	70 2b       	ld.w	r11,r8[0x8]
80007394:	70 3a       	ld.w	r10,r8[0xc]
80007396:	cc 7b       	rjmp	80007324 <d_print_comp+0x4a8>
80007398:	80 00       	ld.sh	r0,r0[0x0]
8000739a:	f7 5c 80 00 	st.h	r11[-32768],r12
8000739e:	f7 6c 80 00 	st.b	r11[-32768],r12
800073a2:	f7 80       	*unknown*
800073a4:	80 00       	ld.sh	r0,r0[0x0]
800073a6:	f7 94       	*unknown*
800073a8:	80 00       	ld.sh	r0,r0[0x0]
800073aa:	f7 98       	*unknown*
800073ac:	80 00       	ld.sh	r0,r0[0x0]
800073ae:	f7 ac 80 00 	stc0.d	r12[0x2000],cr0
800073b2:	f7 c8       	*unknown*
800073b4:	80 00       	ld.sh	r0,r0[0x0]
800073b6:	f7 d8 80 00 	ldswp.w	r8,r11[0]
800073ba:	f7 ec 80 00 	sthh.w	r0[r0],r11:b,r12:b
800073be:	f8 08       	*unknown*
800073c0:	78 08       	ld.w	r8,r12[0x0]
800073c2:	ed b8 00 05 	bld	r8,0x5
800073c6:	c0 51       	brne	800073d0 <d_print_comp+0x554>
800073c8:	f8 fa 01 18 	ld.w	r10,r12[280]
800073cc:	e0 a0 04 58 	rcall	80007c7c <d_print_function_type>
800073d0:	6c 18       	ld.w	r8,r6[0x4]
800073d2:	58 08       	cp.w	r8,0
800073d4:	c1 f0       	breq	80007412 <d_print_comp+0x596>
800073d6:	ee f8 01 18 	ld.w	r8,r7[280]
800073da:	50 08       	stdsp	sp[0x0],r8
800073dc:	ee f8 01 14 	ld.w	r8,r7[276]
800073e0:	50 38       	stdsp	sp[0xc],r8
800073e2:	30 08       	mov	r8,0
800073e4:	50 16       	stdsp	sp[0x4],r6
800073e6:	50 28       	stdsp	sp[0x8],r8
800073e8:	ef 4d 01 18 	st.w	r7[280],sp
800073ec:	0e 9c       	mov	r12,r7
800073ee:	6c 1b       	ld.w	r11,r6[0x4]
800073f0:	fe b0 fd 46 	rcall	80006e7c <d_print_comp>
800073f4:	40 08       	lddsp	r8,sp[0x0]
800073f6:	ef 48 01 18 	st.w	r7[280],r8
800073fa:	40 28       	lddsp	r8,sp[0x8]
800073fc:	58 08       	cp.w	r8,0
800073fe:	e0 81 02 8f 	brne	8000791c <d_print_comp+0xaa0>
80007402:	6e 08       	ld.w	r8,r7[0x0]
80007404:	ed b8 00 05 	bld	r8,0x5
80007408:	c0 50       	breq	80007412 <d_print_comp+0x596>
8000740a:	32 0b       	mov	r11,32
8000740c:	0e 9c       	mov	r12,r7
8000740e:	fe b0 f2 8f 	rcall	8000592c <d_append_char>
80007412:	6e 08       	ld.w	r8,r7[0x0]
80007414:	ed b8 00 05 	bld	r8,0x5
80007418:	e0 80 02 82 	breq	8000791c <d_print_comp+0xaa0>
8000741c:	0c 9b       	mov	r11,r6
8000741e:	0e 9c       	mov	r12,r7
80007420:	ee fa 01 18 	ld.w	r10,r7[280]
80007424:	e0 a0 04 2c 	rcall	80007c7c <d_print_function_type>
80007428:	e0 8f 02 7a 	bral	8000791c <d_print_comp+0xaa0>
8000742c:	f8 f4 01 18 	ld.w	r4,r12[280]
80007430:	30 09       	mov	r9,0
80007432:	50 04       	stdsp	sp[0x0],r4
80007434:	50 1b       	stdsp	sp[0x4],r11
80007436:	50 29       	stdsp	sp[0x8],r9
80007438:	30 15       	mov	r5,1
8000743a:	ee f9 01 14 	ld.w	r9,r7[276]
8000743e:	ef 4d 01 18 	st.w	r7[280],sp
80007442:	1a 9c       	mov	r12,sp
80007444:	50 39       	stdsp	sp[0xc],r9
80007446:	08 98       	mov	r8,r4
80007448:	0a 9b       	mov	r11,r5
8000744a:	c1 78       	rjmp	80007478 <d_print_comp+0x5fc>
8000744c:	70 23       	ld.w	r3,r8[0x8]
8000744e:	58 03       	cp.w	r3,0
80007450:	c1 31       	brne	80007476 <d_print_comp+0x5fa>
80007452:	58 35       	cp.w	r5,3
80007454:	e0 8b 02 61 	brhi	80007916 <d_print_comp+0xa9a>
80007458:	f0 e2 00 00 	ld.d	r2,r8[0]
8000745c:	f2 e3 00 00 	st.d	r9[0],r2
80007460:	f0 e2 00 08 	ld.d	r2,r8[8]
80007464:	f2 e3 00 08 	st.d	r9[8],r2
80007468:	ee f3 01 18 	ld.w	r3,r7[280]
8000746c:	93 03       	st.w	r9[0x0],r3
8000746e:	ef 4a 01 18 	st.w	r7[280],r10
80007472:	91 2b       	st.w	r8[0x8],r11
80007474:	2f f5       	sub	r5,-1
80007476:	70 08       	ld.w	r8,r8[0x0]
80007478:	ea 0a 15 04 	lsl	r10,r5,0x4
8000747c:	fa c9 ff b8 	sub	r9,sp,-72
80007480:	14 09       	add	r9,r10
80007482:	24 89       	sub	r9,72
80007484:	58 08       	cp.w	r8,0
80007486:	c0 90       	breq	80007498 <d_print_comp+0x61c>
80007488:	70 13       	ld.w	r3,r8[0x4]
8000748a:	f8 0a 00 0a 	add	r10,r12,r10
8000748e:	66 03       	ld.w	r3,r3[0x0]
80007490:	21 73       	sub	r3,23
80007492:	58 23       	cp.w	r3,2
80007494:	fe 98 ff dc 	brls	8000744c <d_print_comp+0x5d0>
80007498:	6c 2b       	ld.w	r11,r6[0x8]
8000749a:	0e 9c       	mov	r12,r7
8000749c:	fe b0 fc f0 	rcall	80006e7c <d_print_comp>
800074a0:	ef 44 01 18 	st.w	r7[280],r4
800074a4:	40 28       	lddsp	r8,sp[0x8]
800074a6:	58 08       	cp.w	r8,0
800074a8:	e0 81 02 3a 	brne	8000791c <d_print_comp+0xaa0>
800074ac:	ea 04 15 04 	lsl	r4,r5,0x4
800074b0:	fa c8 ff b8 	sub	r8,sp,-72
800074b4:	f0 04 00 04 	add	r4,r8,r4
800074b8:	25 44       	sub	r4,84
800074ba:	c0 78       	rjmp	800074c8 <d_print_comp+0x64c>
800074bc:	68 0b       	ld.w	r11,r4[0x0]
800074be:	20 15       	sub	r5,1
800074c0:	21 04       	sub	r4,16
800074c2:	0e 9c       	mov	r12,r7
800074c4:	e0 a0 03 3e 	rcall	80007b40 <d_print_mod>
800074c8:	58 15       	cp.w	r5,1
800074ca:	fe 9b ff f9 	brhi	800074bc <d_print_comp+0x640>
800074ce:	0c 9b       	mov	r11,r6
800074d0:	0e 9c       	mov	r12,r7
800074d2:	ee fa 01 18 	ld.w	r10,r7[280]
800074d6:	e0 a0 04 a7 	rcall	80007e24 <d_print_array_type>
800074da:	e0 8f 02 21 	bral	8000791c <d_print_comp+0xaa0>
800074de:	f8 f8 01 18 	ld.w	r8,r12[280]
800074e2:	50 08       	stdsp	sp[0x0],r8
800074e4:	f8 f8 01 14 	ld.w	r8,r12[276]
800074e8:	50 38       	stdsp	sp[0xc],r8
800074ea:	30 08       	mov	r8,0
800074ec:	50 1b       	stdsp	sp[0x4],r11
800074ee:	50 28       	stdsp	sp[0x8],r8
800074f0:	ef 4d 01 18 	st.w	r7[280],sp
800074f4:	76 2b       	ld.w	r11,r11[0x8]
800074f6:	fe b0 fc c3 	rcall	80006e7c <d_print_comp>
800074fa:	40 28       	lddsp	r8,sp[0x8]
800074fc:	58 08       	cp.w	r8,0
800074fe:	c0 d1       	brne	80007518 <d_print_comp+0x69c>
80007500:	32 0b       	mov	r11,32
80007502:	0e 9c       	mov	r12,r7
80007504:	fe b0 f2 14 	rcall	8000592c <d_append_char>
80007508:	6c 1b       	ld.w	r11,r6[0x4]
8000750a:	0e 9c       	mov	r12,r7
8000750c:	fe b0 fc b8 	rcall	80006e7c <d_print_comp>
80007510:	4c 6b       	lddpc	r11,80007628 <d_print_comp+0x7ac>
80007512:	0e 9c       	mov	r12,r7
80007514:	fe b0 f2 96 	rcall	80005a40 <d_append_string>
80007518:	40 08       	lddsp	r8,sp[0x0]
8000751a:	ef 48 01 18 	st.w	r7[280],r8
8000751e:	e0 8f 01 ff 	bral	8000791c <d_print_comp+0xaa0>
80007522:	96 59       	ld.sh	r9,r11[0xa]
80007524:	30 08       	mov	r8,0
80007526:	f0 09 19 00 	cp.h	r9,r8
8000752a:	c0 40       	breq	80007532 <d_print_comp+0x6b6>
8000752c:	4c 0b       	lddpc	r11,8000762c <d_print_comp+0x7b0>
8000752e:	fe b0 f2 89 	rcall	80005a40 <d_append_string>
80007532:	6c 1b       	ld.w	r11,r6[0x4]
80007534:	4b f8       	lddpc	r8,80007630 <d_print_comp+0x7b4>
80007536:	76 19       	ld.w	r9,r11[0x4]
80007538:	f0 c8 fe 9c 	sub	r8,r8,-356
8000753c:	10 39       	cp.w	r9,r8
8000753e:	c0 80       	breq	8000754e <d_print_comp+0x6d2>
80007540:	0e 9c       	mov	r12,r7
80007542:	fe b0 fc 9d 	rcall	80006e7c <d_print_comp>
80007546:	32 0b       	mov	r11,32
80007548:	0e 9c       	mov	r12,r7
8000754a:	fe b0 f1 f1 	rcall	8000592c <d_append_char>
8000754e:	8c 49       	ld.sh	r9,r6[0x8]
80007550:	30 08       	mov	r8,0
80007552:	f0 09 19 00 	cp.h	r9,r8
80007556:	c0 50       	breq	80007560 <d_print_comp+0x6e4>
80007558:	0e 9c       	mov	r12,r7
8000755a:	4b 7b       	lddpc	r11,80007634 <d_print_comp+0x7b8>
8000755c:	e0 8f 01 9c 	bral	80007894 <d_print_comp+0xa18>
80007560:	0e 9c       	mov	r12,r7
80007562:	4b 6b       	lddpc	r11,80007638 <d_print_comp+0x7bc>
80007564:	e0 8f 01 98 	bral	80007894 <d_print_comp+0xa18>
80007568:	76 1b       	ld.w	r11,r11[0x4]
8000756a:	58 0b       	cp.w	r11,0
8000756c:	c0 30       	breq	80007572 <d_print_comp+0x6f6>
8000756e:	fe b0 fc 87 	rcall	80006e7c <d_print_comp>
80007572:	6c 28       	ld.w	r8,r6[0x8]
80007574:	58 08       	cp.w	r8,0
80007576:	e0 80 01 d3 	breq	8000791c <d_print_comp+0xaa0>
8000757a:	ee f8 01 04 	ld.w	r8,r7[260]
8000757e:	e0 48 00 fd 	cp.w	r8,253
80007582:	e0 88 00 16 	brls	800075ae <d_print_comp+0x732>
80007586:	10 9b       	mov	r11,r8
80007588:	30 09       	mov	r9,0
8000758a:	ee 08 00 08 	add	r8,r7,r8
8000758e:	ee fa 01 10 	ld.w	r10,r7[272]
80007592:	b0 c9       	st.b	r8[0x4],r9
80007594:	ee cc ff fc 	sub	r12,r7,-4
80007598:	ee f8 01 0c 	ld.w	r8,r7[268]
8000759c:	5d 18       	icall	r8
8000759e:	ee f8 01 24 	ld.w	r8,r7[292]
800075a2:	2f f8       	sub	r8,-1
800075a4:	ef 48 01 24 	st.w	r7[292],r8
800075a8:	30 08       	mov	r8,0
800075aa:	ef 48 01 04 	st.w	r7[260],r8
800075ae:	4a 4b       	lddpc	r11,8000763c <d_print_comp+0x7c0>
800075b0:	0e 9c       	mov	r12,r7
800075b2:	fe b0 f2 47 	rcall	80005a40 <d_append_string>
800075b6:	6c 2b       	ld.w	r11,r6[0x8]
800075b8:	ee f5 01 24 	ld.w	r5,r7[292]
800075bc:	ee f6 01 04 	ld.w	r6,r7[260]
800075c0:	0e 9c       	mov	r12,r7
800075c2:	fe b0 fc 5d 	rcall	80006e7c <d_print_comp>
800075c6:	ee f8 01 24 	ld.w	r8,r7[292]
800075ca:	0a 38       	cp.w	r8,r5
800075cc:	e0 81 01 a8 	brne	8000791c <d_print_comp+0xaa0>
800075d0:	ee f8 01 04 	ld.w	r8,r7[260]
800075d4:	0c 38       	cp.w	r8,r6
800075d6:	e0 81 01 a3 	brne	8000791c <d_print_comp+0xaa0>
800075da:	20 28       	sub	r8,2
800075dc:	ef 48 01 04 	st.w	r7[260],r8
800075e0:	e0 8f 01 9e 	bral	8000791c <d_print_comp+0xaa0>
800075e4:	49 7b       	lddpc	r11,80007640 <d_print_comp+0x7c4>
800075e6:	fe b0 f2 2d 	rcall	80005a40 <d_append_string>
800075ea:	6c 18       	ld.w	r8,r6[0x4]
800075ec:	70 18       	ld.w	r8,r8[0x4]
800075ee:	11 89       	ld.ub	r9,r8[0x0]
800075f0:	31 98       	mov	r8,25
800075f2:	26 19       	sub	r9,97
800075f4:	f0 09 18 00 	cp.b	r9,r8
800075f8:	e0 8b 00 06 	brhi	80007604 <d_print_comp+0x788>
800075fc:	32 0b       	mov	r11,32
800075fe:	0e 9c       	mov	r12,r7
80007600:	fe b0 f1 96 	rcall	8000592c <d_append_char>
80007604:	6c 18       	ld.w	r8,r6[0x4]
80007606:	0e 9c       	mov	r12,r7
80007608:	70 1b       	ld.w	r11,r8[0x4]
8000760a:	70 2a       	ld.w	r10,r8[0x8]
8000760c:	c8 ca       	rjmp	80007324 <d_print_comp+0x4a8>
8000760e:	48 eb       	lddpc	r11,80007644 <d_print_comp+0x7c8>
80007610:	fe b0 f2 18 	rcall	80005a40 <d_append_string>
80007614:	c2 19       	rjmp	80007856 <d_print_comp+0x9da>
80007616:	48 cb       	lddpc	r11,80007644 <d_print_comp+0x7c8>
80007618:	fe b0 f2 14 	rcall	80005a40 <d_append_string>
8000761c:	0c 9b       	mov	r11,r6
8000761e:	0e 9c       	mov	r12,r7
80007620:	e0 a0 04 40 	rcall	80007ea0 <d_print_cast>
80007624:	e0 8f 01 7c 	bral	8000791c <d_print_comp+0xaa0>
80007628:	80 00       	ld.sh	r0,r0[0x0]
8000762a:	f8 1c 80 00 	mems	0,0x19
8000762e:	f8 20 80 00 	sub	r0,-491520
80007632:	80 bc       	ld.uh	r12,r0[0x6]
80007634:	80 00       	ld.sh	r0,r0[0x0]
80007636:	f8 28 80 00 	sub	r8,-491520
8000763a:	f8 30 80 00 	sub	r0,-425984
8000763e:	f8 38 80 00 	sub	r8,-425984
80007642:	f8 3c 80 00 	sub	r12,-425984
80007646:	f8 48 76 1b 	cp.w	r8,-494053
8000764a:	76 08       	ld.w	r8,r11[0x0]
8000764c:	e0 48 00 2d 	cp.w	r8,45
80007650:	c0 40       	breq	80007658 <d_print_comp+0x7dc>
80007652:	e0 a0 04 69 	rcall	80007f24 <d_print_expr_op>
80007656:	c0 c8       	rjmp	8000766e <d_print_comp+0x7f2>
80007658:	32 8b       	mov	r11,40
8000765a:	fe b0 f1 69 	rcall	8000592c <d_append_char>
8000765e:	6c 1b       	ld.w	r11,r6[0x4]
80007660:	0e 9c       	mov	r12,r7
80007662:	e0 a0 04 1f 	rcall	80007ea0 <d_print_cast>
80007666:	32 9b       	mov	r11,41
80007668:	0e 9c       	mov	r12,r7
8000766a:	fe b0 f1 61 	rcall	8000592c <d_append_char>
8000766e:	6c 2b       	ld.w	r11,r6[0x8]
80007670:	0e 9c       	mov	r12,r7
80007672:	c6 28       	rjmp	80007736 <d_print_comp+0x8ba>
80007674:	76 28       	ld.w	r8,r11[0x8]
80007676:	70 08       	ld.w	r8,r8[0x0]
80007678:	e0 48 00 30 	cp.w	r8,48
8000767c:	e0 81 01 4d 	brne	80007916 <d_print_comp+0xa9a>
80007680:	76 18       	ld.w	r8,r11[0x4]
80007682:	70 09       	ld.w	r9,r8[0x0]
80007684:	e0 49 00 2b 	cp.w	r9,43
80007688:	c0 e1       	brne	800076a4 <d_print_comp+0x828>
8000768a:	70 18       	ld.w	r8,r8[0x4]
8000768c:	70 29       	ld.w	r9,r8[0x8]
8000768e:	58 19       	cp.w	r9,1
80007690:	c0 a1       	brne	800076a4 <d_print_comp+0x828>
80007692:	70 18       	ld.w	r8,r8[0x4]
80007694:	11 89       	ld.ub	r9,r8[0x0]
80007696:	33 e8       	mov	r8,62
80007698:	f0 09 18 00 	cp.b	r9,r8
8000769c:	c0 41       	brne	800076a4 <d_print_comp+0x828>
8000769e:	32 8b       	mov	r11,40
800076a0:	fe b0 f1 46 	rcall	8000592c <d_append_char>
800076a4:	6c 28       	ld.w	r8,r6[0x8]
800076a6:	0e 9c       	mov	r12,r7
800076a8:	70 1b       	ld.w	r11,r8[0x4]
800076aa:	e0 a0 04 4b 	rcall	80007f40 <d_print_subexpr>
800076ae:	6c 15       	ld.w	r5,r6[0x4]
800076b0:	6a 18       	ld.w	r8,r5[0x4]
800076b2:	4c 1b       	lddpc	r11,800077b4 <d_print_comp+0x938>
800076b4:	70 0c       	ld.w	r12,r8[0x0]
800076b6:	f0 1f 00 41 	mcall	800077b8 <d_print_comp+0x93c>
800076ba:	c0 50       	breq	800076c4 <d_print_comp+0x848>
800076bc:	0a 9b       	mov	r11,r5
800076be:	0e 9c       	mov	r12,r7
800076c0:	e0 a0 04 32 	rcall	80007f24 <d_print_expr_op>
800076c4:	6c 28       	ld.w	r8,r6[0x8]
800076c6:	0e 9c       	mov	r12,r7
800076c8:	70 2b       	ld.w	r11,r8[0x8]
800076ca:	e0 a0 04 3b 	rcall	80007f40 <d_print_subexpr>
800076ce:	6c 18       	ld.w	r8,r6[0x4]
800076d0:	70 09       	ld.w	r9,r8[0x0]
800076d2:	e0 49 00 2b 	cp.w	r9,43
800076d6:	e0 81 01 23 	brne	8000791c <d_print_comp+0xaa0>
800076da:	70 18       	ld.w	r8,r8[0x4]
800076dc:	70 29       	ld.w	r9,r8[0x8]
800076de:	58 19       	cp.w	r9,1
800076e0:	e0 81 01 1e 	brne	8000791c <d_print_comp+0xaa0>
800076e4:	70 18       	ld.w	r8,r8[0x4]
800076e6:	11 89       	ld.ub	r9,r8[0x0]
800076e8:	33 e8       	mov	r8,62
800076ea:	f0 09 18 00 	cp.b	r9,r8
800076ee:	e0 81 01 17 	brne	8000791c <d_print_comp+0xaa0>
800076f2:	cc 08       	rjmp	80007872 <d_print_comp+0x9f6>
800076f4:	76 28       	ld.w	r8,r11[0x8]
800076f6:	70 09       	ld.w	r9,r8[0x0]
800076f8:	e0 49 00 32 	cp.w	r9,50
800076fc:	e0 81 01 0d 	brne	80007916 <d_print_comp+0xa9a>
80007700:	70 29       	ld.w	r9,r8[0x8]
80007702:	72 09       	ld.w	r9,r9[0x0]
80007704:	e0 49 00 33 	cp.w	r9,51
80007708:	e0 81 01 07 	brne	80007916 <d_print_comp+0xa9a>
8000770c:	70 1b       	ld.w	r11,r8[0x4]
8000770e:	e0 a0 04 19 	rcall	80007f40 <d_print_subexpr>
80007712:	6c 1b       	ld.w	r11,r6[0x4]
80007714:	0e 9c       	mov	r12,r7
80007716:	e0 a0 04 07 	rcall	80007f24 <d_print_expr_op>
8000771a:	6c 28       	ld.w	r8,r6[0x8]
8000771c:	70 28       	ld.w	r8,r8[0x8]
8000771e:	0e 9c       	mov	r12,r7
80007720:	70 1b       	ld.w	r11,r8[0x4]
80007722:	e0 a0 04 0f 	rcall	80007f40 <d_print_subexpr>
80007726:	0e 9c       	mov	r12,r7
80007728:	4a 5b       	lddpc	r11,800077bc <d_print_comp+0x940>
8000772a:	fe b0 f1 8b 	rcall	80005a40 <d_append_string>
8000772e:	6c 28       	ld.w	r8,r6[0x8]
80007730:	0e 9c       	mov	r12,r7
80007732:	70 28       	ld.w	r8,r8[0x8]
80007734:	70 2b       	ld.w	r11,r8[0x8]
80007736:	e0 a0 04 05 	rcall	80007f40 <d_print_subexpr>
8000773a:	cf 18       	rjmp	8000791c <d_print_comp+0xaa0>
8000773c:	76 19       	ld.w	r9,r11[0x4]
8000773e:	72 0a       	ld.w	r10,r9[0x0]
80007740:	e0 4a 00 23 	cp.w	r10,35
80007744:	c5 d1       	brne	800077fe <d_print_comp+0x982>
80007746:	72 19       	ld.w	r9,r9[0x4]
80007748:	72 45       	ld.w	r5,r9[0x10]
8000774a:	58 15       	cp.w	r5,1
8000774c:	c5 a3       	brcs	80007800 <d_print_comp+0x984>
8000774e:	58 65       	cp.w	r5,6
80007750:	e0 88 00 05 	brls	8000775a <d_print_comp+0x8de>
80007754:	58 75       	cp.w	r5,7
80007756:	c5 51       	brne	80007800 <d_print_comp+0x984>
80007758:	c3 a8       	rjmp	800077cc <d_print_comp+0x950>
8000775a:	76 29       	ld.w	r9,r11[0x8]
8000775c:	72 09       	ld.w	r9,r9[0x0]
8000775e:	58 09       	cp.w	r9,0
80007760:	c5 01       	brne	80007800 <d_print_comp+0x984>
80007762:	e0 48 00 35 	cp.w	r8,53
80007766:	c0 41       	brne	8000776e <d_print_comp+0x8f2>
80007768:	32 db       	mov	r11,45
8000776a:	fe b0 f0 e1 	rcall	8000592c <d_append_char>
8000776e:	6c 2b       	ld.w	r11,r6[0x8]
80007770:	0e 9c       	mov	r12,r7
80007772:	fe b0 fb 85 	rcall	80006e7c <d_print_comp>
80007776:	58 45       	cp.w	r5,4
80007778:	c1 50       	breq	800077a2 <d_print_comp+0x926>
8000777a:	e0 8b 00 08 	brhi	8000778a <d_print_comp+0x90e>
8000777e:	58 25       	cp.w	r5,2
80007780:	c0 b0       	breq	80007796 <d_print_comp+0x91a>
80007782:	58 35       	cp.w	r5,3
80007784:	e0 81 00 cc 	brne	8000791c <d_print_comp+0xaa0>
80007788:	c0 a8       	rjmp	8000779c <d_print_comp+0x920>
8000778a:	58 55       	cp.w	r5,5
8000778c:	c0 e0       	breq	800077a8 <d_print_comp+0x92c>
8000778e:	58 65       	cp.w	r5,6
80007790:	e0 81 00 c6 	brne	8000791c <d_print_comp+0xaa0>
80007794:	c0 d8       	rjmp	800077ae <d_print_comp+0x932>
80007796:	0e 9c       	mov	r12,r7
80007798:	37 5b       	mov	r11,117
8000779a:	c6 e8       	rjmp	80007876 <d_print_comp+0x9fa>
8000779c:	0e 9c       	mov	r12,r7
8000779e:	36 cb       	mov	r11,108
800077a0:	c6 b8       	rjmp	80007876 <d_print_comp+0x9fa>
800077a2:	0e 9c       	mov	r12,r7
800077a4:	48 7b       	lddpc	r11,800077c0 <d_print_comp+0x944>
800077a6:	c7 78       	rjmp	80007894 <d_print_comp+0xa18>
800077a8:	0e 9c       	mov	r12,r7
800077aa:	48 7b       	lddpc	r11,800077c4 <d_print_comp+0x948>
800077ac:	c7 48       	rjmp	80007894 <d_print_comp+0xa18>
800077ae:	0e 9c       	mov	r12,r7
800077b0:	48 6b       	lddpc	r11,800077c8 <d_print_comp+0x94c>
800077b2:	c7 18       	rjmp	80007894 <d_print_comp+0xa18>
800077b4:	80 00       	ld.sh	r0,r0[0x0]
800077b6:	f6 f8 80 00 	ld.w	r8,r11[-32768]
800077ba:	a7 48       	asr	r8,0x6
800077bc:	80 00       	ld.sh	r0,r0[0x0]
800077be:	f8 54 80 00 	cp.w	r4,-425984
800077c2:	f8 58 80 00 	cp.w	r8,-425984
800077c6:	f8 5c 80 00 	cp.w	r12,-425984
800077ca:	f8 60 76 29 	mov	r0,-494039
800077ce:	72 0a       	ld.w	r10,r9[0x0]
800077d0:	58 0a       	cp.w	r10,0
800077d2:	c1 71       	brne	80007800 <d_print_comp+0x984>
800077d4:	72 2a       	ld.w	r10,r9[0x8]
800077d6:	58 1a       	cp.w	r10,1
800077d8:	c1 41       	brne	80007800 <d_print_comp+0x984>
800077da:	e0 48 00 34 	cp.w	r8,52
800077de:	c1 11       	brne	80007800 <d_print_comp+0x984>
800077e0:	72 18       	ld.w	r8,r9[0x4]
800077e2:	33 09       	mov	r9,48
800077e4:	11 88       	ld.ub	r8,r8[0x0]
800077e6:	f2 08 18 00 	cp.b	r8,r9
800077ea:	c0 60       	breq	800077f6 <d_print_comp+0x97a>
800077ec:	33 19       	mov	r9,49
800077ee:	f2 08 18 00 	cp.b	r8,r9
800077f2:	c0 71       	brne	80007800 <d_print_comp+0x984>
800077f4:	c0 38       	rjmp	800077fa <d_print_comp+0x97e>
800077f6:	4b ab       	lddpc	r11,800078dc <d_print_comp+0xa60>
800077f8:	c4 e8       	rjmp	80007894 <d_print_comp+0xa18>
800077fa:	4b ab       	lddpc	r11,800078e0 <d_print_comp+0xa64>
800077fc:	c4 c8       	rjmp	80007894 <d_print_comp+0xa18>
800077fe:	30 05       	mov	r5,0
80007800:	32 8b       	mov	r11,40
80007802:	0e 9c       	mov	r12,r7
80007804:	fe b0 f0 94 	rcall	8000592c <d_append_char>
80007808:	6c 1b       	ld.w	r11,r6[0x4]
8000780a:	0e 9c       	mov	r12,r7
8000780c:	fe b0 fb 38 	rcall	80006e7c <d_print_comp>
80007810:	32 9b       	mov	r11,41
80007812:	0e 9c       	mov	r12,r7
80007814:	fe b0 f0 8c 	rcall	8000592c <d_append_char>
80007818:	6c 08       	ld.w	r8,r6[0x0]
8000781a:	e0 48 00 35 	cp.w	r8,53
8000781e:	c0 51       	brne	80007828 <d_print_comp+0x9ac>
80007820:	32 db       	mov	r11,45
80007822:	0e 9c       	mov	r12,r7
80007824:	fe b0 f0 84 	rcall	8000592c <d_append_char>
80007828:	58 85       	cp.w	r5,8
8000782a:	c0 51       	brne	80007834 <d_print_comp+0x9b8>
8000782c:	35 bb       	mov	r11,91
8000782e:	0e 9c       	mov	r12,r7
80007830:	fe b0 f0 7e 	rcall	8000592c <d_append_char>
80007834:	6c 2b       	ld.w	r11,r6[0x8]
80007836:	0e 9c       	mov	r12,r7
80007838:	fe b0 fb 22 	rcall	80006e7c <d_print_comp>
8000783c:	58 85       	cp.w	r5,8
8000783e:	c6 f1       	brne	8000791c <d_print_comp+0xaa0>
80007840:	0e 9c       	mov	r12,r7
80007842:	35 db       	mov	r11,93
80007844:	c1 98       	rjmp	80007876 <d_print_comp+0x9fa>
80007846:	4a 8b       	lddpc	r11,800078e4 <d_print_comp+0xa68>
80007848:	fe b0 f0 fc 	rcall	80005a40 <d_append_string>
8000784c:	6c 1b       	ld.w	r11,r6[0x4]
8000784e:	c0 58       	rjmp	80007858 <d_print_comp+0x9dc>
80007850:	76 1b       	ld.w	r11,r11[0x4]
80007852:	fe b0 fb 15 	rcall	80006e7c <d_print_comp>
80007856:	6c 2b       	ld.w	r11,r6[0x8]
80007858:	0e 9c       	mov	r12,r7
8000785a:	fe b0 fb 11 	rcall	80006e7c <d_print_comp>
8000785e:	c5 f8       	rjmp	8000791c <d_print_comp+0xaa0>
80007860:	17 fb       	ld.ub	r11,r11[0x7]
80007862:	c0 a8       	rjmp	80007876 <d_print_comp+0x9fa>
80007864:	4a 1b       	lddpc	r11,800078e8 <d_print_comp+0xa6c>
80007866:	fe b0 f0 ed 	rcall	80005a40 <d_append_string>
8000786a:	6c 1b       	ld.w	r11,r6[0x4]
8000786c:	0e 9c       	mov	r12,r7
8000786e:	fe b0 fb 07 	rcall	80006e7c <d_print_comp>
80007872:	0e 9c       	mov	r12,r7
80007874:	32 9b       	mov	r11,41
80007876:	fe b0 f0 5b 	rcall	8000592c <d_append_char>
8000787a:	c5 18       	rjmp	8000791c <d_print_comp+0xaa0>
8000787c:	76 1b       	ld.w	r11,r11[0x4]
8000787e:	fe b0 f0 89 	rcall	80005990 <d_find_pack>
80007882:	c0 30       	breq	80007888 <d_print_comp+0xa0c>
80007884:	30 05       	mov	r5,0
80007886:	c0 e8       	rjmp	800078a2 <d_print_comp+0xa26>
80007888:	6c 1b       	ld.w	r11,r6[0x4]
8000788a:	0e 9c       	mov	r12,r7
8000788c:	e0 a0 03 5a 	rcall	80007f40 <d_print_subexpr>
80007890:	0e 9c       	mov	r12,r7
80007892:	49 7b       	lddpc	r11,800078ec <d_print_comp+0xa70>
80007894:	fe b0 f0 d6 	rcall	80005a40 <d_append_string>
80007898:	c4 28       	rjmp	8000791c <d_print_comp+0xaa0>
8000789a:	2f f5       	sub	r5,-1
8000789c:	78 2c       	ld.w	r12,r12[0x8]
8000789e:	58 0c       	cp.w	r12,0
800078a0:	c0 80       	breq	800078b0 <d_print_comp+0xa34>
800078a2:	78 08       	ld.w	r8,r12[0x0]
800078a4:	e0 48 00 2a 	cp.w	r8,42
800078a8:	c0 41       	brne	800078b0 <d_print_comp+0xa34>
800078aa:	78 18       	ld.w	r8,r12[0x4]
800078ac:	58 08       	cp.w	r8,0
800078ae:	cf 61       	brne	8000789a <d_print_comp+0xa1e>
800078b0:	6c 13       	ld.w	r3,r6[0x4]
800078b2:	ea c4 00 01 	sub	r4,r5,1
800078b6:	30 06       	mov	r6,0
800078b8:	c0 e8       	rjmp	800078d4 <d_print_comp+0xa58>
800078ba:	ef 46 01 20 	st.w	r7[288],r6
800078be:	06 9b       	mov	r11,r3
800078c0:	0e 9c       	mov	r12,r7
800078c2:	fe b0 fa dd 	rcall	80006e7c <d_print_comp>
800078c6:	08 36       	cp.w	r6,r4
800078c8:	c0 54       	brge	800078d2 <d_print_comp+0xa56>
800078ca:	48 ab       	lddpc	r11,800078f0 <d_print_comp+0xa74>
800078cc:	0e 9c       	mov	r12,r7
800078ce:	fe b0 f0 b9 	rcall	80005a40 <d_append_string>
800078d2:	2f f6       	sub	r6,-1
800078d4:	0a 36       	cp.w	r6,r5
800078d6:	cf 25       	brlt	800078ba <d_print_comp+0xa3e>
800078d8:	c2 28       	rjmp	8000791c <d_print_comp+0xaa0>
800078da:	00 00       	add	r0,r0
800078dc:	80 00       	ld.sh	r0,r0[0x0]
800078de:	f8 64 80 00 	mov	r4,-491520
800078e2:	f8 6c 80 00 	mov	r12,-491520
800078e6:	f8 74 80 00 	mov	r4,-425984
800078ea:	f8 84 80 00 	brge	7ff178ea <_estack+0x7ff0f8ea>
800078ee:	f8 90 80 00 	breq	7ff378ee <_estack+0x7ff2f8ee>
800078f2:	f8 38 48 bb 	sub	r8,-440133
800078f6:	fe b0 f0 a5 	rcall	80005a40 <d_append_string>
800078fa:	6c 18       	ld.w	r8,r6[0x4]
800078fc:	48 ab       	lddpc	r11,80007924 <d_print_comp+0xaa8>
800078fe:	1a d8       	st.w	--sp,r8
80007900:	fa c6 ff fc 	sub	r6,sp,-4
80007904:	0c 9c       	mov	r12,r6
80007906:	f0 1f 00 09 	mcall	80007928 <d_print_comp+0xaac>
8000790a:	0c 9b       	mov	r11,r6
8000790c:	0e 9c       	mov	r12,r7
8000790e:	fe b0 f0 99 	rcall	80005a40 <d_append_string>
80007912:	2f fd       	sub	sp,-4
80007914:	c0 48       	rjmp	8000791c <d_print_comp+0xaa0>
80007916:	30 18       	mov	r8,1
80007918:	ef 48 01 1c 	st.w	r7[284],r8
8000791c:	2e ed       	sub	sp,-72
8000791e:	d8 32       	popm	r0-r7,pc
80007920:	80 00       	ld.sh	r0,r0[0x0]
80007922:	f8 94 80 00 	brge	7ff37922 <_estack+0x7ff2f922>
80007926:	f8 9c 80 00 	brvs	7ff37926 <_estack+0x7ff2f926>
8000792a:	a6 e4       	st.b	r3[0x6],r4

8000792c <d_demangle_callback>:
8000792c:	d4 31       	pushm	r0-r7,lr
8000792e:	1a 97       	mov	r7,sp
80007930:	fa cd 01 5c 	sub	sp,sp,348
80007934:	35 f8       	mov	r8,95
80007936:	12 92       	mov	r2,r9
80007938:	18 90       	mov	r0,r12
8000793a:	16 96       	mov	r6,r11
8000793c:	14 95       	mov	r5,r10
8000793e:	1a 94       	mov	r4,sp
80007940:	19 89       	ld.ub	r9,r12[0x0]
80007942:	f0 09 18 00 	cp.b	r9,r8
80007946:	c0 81       	brne	80007956 <d_demangle_callback+0x2a>
80007948:	19 99       	ld.ub	r9,r12[0x1]
8000794a:	35 a8       	mov	r8,90
8000794c:	f0 09 18 00 	cp.b	r9,r8
80007950:	c0 31       	brne	80007956 <d_demangle_callback+0x2a>
80007952:	30 01       	mov	r1,0
80007954:	c4 98       	rjmp	800079e6 <d_demangle_callback+0xba>
80007956:	30 8a       	mov	r10,8
80007958:	4c 9b       	lddpc	r11,80007a7c <d_demangle_callback+0x150>
8000795a:	00 9c       	mov	r12,r0
8000795c:	f0 1f 00 49 	mcall	80007a80 <d_demangle_callback+0x154>
80007960:	c3 d1       	brne	800079da <d_demangle_callback+0xae>
80007962:	35 f9       	mov	r9,95
80007964:	e1 38 00 08 	ld.ub	r8,r0[8]
80007968:	f2 08 18 00 	cp.b	r8,r9
8000796c:	5f 0a       	sreq	r10
8000796e:	32 e9       	mov	r9,46
80007970:	f2 08 18 00 	cp.b	r8,r9
80007974:	5f 09       	sreq	r9
80007976:	f5 e9 10 09 	or	r9,r10,r9
8000797a:	f8 09 18 00 	cp.b	r9,r12
8000797e:	c0 51       	brne	80007988 <d_demangle_callback+0x5c>
80007980:	32 49       	mov	r9,36
80007982:	f2 08 18 00 	cp.b	r8,r9
80007986:	c2 a1       	brne	800079da <d_demangle_callback+0xae>
80007988:	e1 39 00 09 	ld.ub	r9,r0[9]
8000798c:	34 98       	mov	r8,73
8000798e:	34 4a       	mov	r10,68
80007990:	f0 09 18 00 	cp.b	r9,r8
80007994:	5f 08       	sreq	r8
80007996:	f4 09 18 00 	cp.b	r9,r10
8000799a:	5f 09       	sreq	r9
8000799c:	f1 e9 10 09 	or	r9,r8,r9
800079a0:	c1 d0       	breq	800079da <d_demangle_callback+0xae>
800079a2:	e1 3a 00 0a 	ld.ub	r10,r0[10]
800079a6:	35 f9       	mov	r9,95
800079a8:	f2 0a 18 00 	cp.b	r10,r9
800079ac:	c1 71       	brne	800079da <d_demangle_callback+0xae>
800079ae:	4b 69       	lddpc	r9,80007a84 <d_demangle_callback+0x158>
800079b0:	4b 66       	lddpc	r6,80007a88 <d_demangle_callback+0x15c>
800079b2:	58 08       	cp.w	r8,0
800079b4:	f2 06 17 00 	moveq	r6,r9
800079b8:	0c 9c       	mov	r12,r6
800079ba:	f0 1f 00 35 	mcall	80007a8c <d_demangle_callback+0x160>
800079be:	04 9a       	mov	r10,r2
800079c0:	18 9b       	mov	r11,r12
800079c2:	0c 9c       	mov	r12,r6
800079c4:	5d 15       	icall	r5
800079c6:	2f 50       	sub	r0,-11
800079c8:	00 9c       	mov	r12,r0
800079ca:	f0 1f 00 31 	mcall	80007a8c <d_demangle_callback+0x160>
800079ce:	04 9a       	mov	r10,r2
800079d0:	18 9b       	mov	r11,r12
800079d2:	00 9c       	mov	r12,r0
800079d4:	5d 15       	icall	r5
800079d6:	30 1c       	mov	r12,1
800079d8:	c9 d8       	rjmp	80007b12 <d_demangle_callback+0x1e6>
800079da:	0c 9c       	mov	r12,r6
800079dc:	e2 1c 00 10 	andl	r12,0x10,COH
800079e0:	e0 80 00 99 	breq	80007b12 <d_demangle_callback+0x1e6>
800079e4:	30 11       	mov	r1,1
800079e6:	00 9c       	mov	r12,r0
800079e8:	f0 1f 00 29 	mcall	80007a8c <d_demangle_callback+0x160>
800079ec:	30 08       	mov	r8,0
800079ee:	ef 48 ff fc 	st.w	r7[-4],r8
800079f2:	ef 48 ff e0 	st.w	r7[-32],r8
800079f6:	ef 48 ff ec 	st.w	r7[-20],r8
800079fa:	ef 48 ff f4 	st.w	r7[-12],r8
800079fe:	ef 48 ff f8 	st.w	r7[-8],r8
80007a02:	f8 08 15 01 	lsl	r8,r12,0x1
80007a06:	f8 09 15 02 	lsl	r9,r12,0x2
80007a0a:	1a 93       	mov	r3,sp
80007a0c:	f2 ca ff fc 	sub	r10,r9,-4
80007a10:	ef 4c ff f0 	st.w	r7[-16],r12
80007a14:	10 09       	add	r9,r8
80007a16:	ef 48 ff e4 	st.w	r7[-28],r8
80007a1a:	a3 69       	lsl	r9,0x2
80007a1c:	e0 0c 00 0c 	add	r12,r0,r12
80007a20:	2f c9       	sub	r9,-4
80007a22:	ef 40 ff cc 	st.w	r7[-52],r0
80007a26:	12 1d       	sub	sp,r9
80007a28:	ef 46 ff d4 	st.w	r7[-44],r6
80007a2c:	1a 98       	mov	r8,sp
80007a2e:	ef 40 ff d8 	st.w	r7[-40],r0
80007a32:	14 1d       	sub	sp,r10
80007a34:	ef 4c ff d0 	st.w	r7[-48],r12
80007a38:	ef 48 ff dc 	st.w	r7[-36],r8
80007a3c:	ef 4d ff e8 	st.w	r7[-24],sp
80007a40:	58 01       	cp.w	r1,0
80007a42:	c0 60       	breq	80007a4e <d_demangle_callback+0x122>
80007a44:	ee cc 00 34 	sub	r12,r7,52
80007a48:	fe b0 f1 78 	rcall	80005d38 <d_type>
80007a4c:	c2 38       	rjmp	80007a92 <d_demangle_callback+0x166>
80007a4e:	01 89       	ld.ub	r9,r0[0x0]
80007a50:	35 f8       	mov	r8,95
80007a52:	f0 09 18 00 	cp.b	r9,r8
80007a56:	c1 d1       	brne	80007a90 <d_demangle_callback+0x164>
80007a58:	2f f0       	sub	r0,-1
80007a5a:	ef 40 ff d8 	st.w	r7[-40],r0
80007a5e:	35 a8       	mov	r8,90
80007a60:	01 89       	ld.ub	r9,r0[0x0]
80007a62:	f0 09 18 00 	cp.b	r9,r8
80007a66:	c1 51       	brne	80007a90 <d_demangle_callback+0x164>
80007a68:	2f f0       	sub	r0,-1
80007a6a:	30 1b       	mov	r11,1
80007a6c:	ef 40 ff d8 	st.w	r7[-40],r0
80007a70:	ee cc 00 34 	sub	r12,r7,52
80007a74:	fe b0 f7 f4 	rcall	80006a5c <d_encoding>
80007a78:	c0 d8       	rjmp	80007a92 <d_demangle_callback+0x166>
80007a7a:	00 00       	add	r0,r0
80007a7c:	80 00       	ld.sh	r0,r0[0x0]
80007a7e:	f6 d4 80 00 	satsub.w	r4,r11,-32768
80007a82:	a8 18       	st.h	r4[0x2],r8
80007a84:	80 00       	ld.sh	r0,r0[0x0]
80007a86:	f8 a0 80 00 	rcall	7ff17a86 <_estack+0x7ff0fa86>
80007a8a:	f8 c0 80 00 	sub	r0,r12,-32768
80007a8e:	a8 02       	st.h	r4[0x0],r2
80007a90:	30 0c       	mov	r12,0
80007a92:	ed b6 00 00 	bld	r6,0x0
80007a96:	c0 81       	brne	80007aa6 <d_demangle_callback+0x17a>
80007a98:	ee f8 ff d8 	ld.w	r8,r7[-40]
80007a9c:	11 89       	ld.ub	r9,r8[0x0]
80007a9e:	30 08       	mov	r8,0
80007aa0:	f0 09 18 00 	cp.b	r9,r8
80007aa4:	c3 51       	brne	80007b0e <d_demangle_callback+0x1e2>
80007aa6:	58 0c       	cp.w	r12,0
80007aa8:	c3 30       	breq	80007b0e <d_demangle_callback+0x1e2>
80007aaa:	18 9b       	mov	r11,r12
80007aac:	ef 46 fe a4 	st.w	r7[-348],r6
80007ab0:	ee cc 01 5c 	sub	r12,r7,348
80007ab4:	30 06       	mov	r6,0
80007ab6:	ef 45 ff b0 	st.w	r7[-80],r5
80007aba:	ef 42 ff b4 	st.w	r7[-76],r2
80007abe:	ef 46 ff a8 	st.w	r7[-88],r6
80007ac2:	ef 66 ff ac 	st.b	r7[-84],r6
80007ac6:	ef 46 ff b8 	st.w	r7[-72],r6
80007aca:	ef 46 ff bc 	st.w	r7[-68],r6
80007ace:	ef 46 ff c8 	st.w	r7[-56],r6
80007ad2:	ef 46 ff c0 	st.w	r7[-64],r6
80007ad6:	fe b0 f9 d3 	rcall	80006e7c <d_print_comp>
80007ada:	ee f8 ff a8 	ld.w	r8,r7[-88]
80007ade:	10 9b       	mov	r11,r8
80007ae0:	ee 08 00 08 	add	r8,r7,r8
80007ae4:	ee cc 01 58 	sub	r12,r7,344
80007ae8:	f1 66 fe a8 	st.b	r8[-344],r6
80007aec:	ee fa ff b4 	ld.w	r10,r7[-76]
80007af0:	ee f8 ff b0 	ld.w	r8,r7[-80]
80007af4:	5d 18       	icall	r8
80007af6:	ee f8 ff c8 	ld.w	r8,r7[-56]
80007afa:	2f f8       	sub	r8,-1
80007afc:	ef 46 ff a8 	st.w	r7[-88],r6
80007b00:	ef 48 ff c8 	st.w	r7[-56],r8
80007b04:	ee f8 ff c0 	ld.w	r8,r7[-64]
80007b08:	58 08       	cp.w	r8,0
80007b0a:	5f 0c       	sreq	r12
80007b0c:	c0 28       	rjmp	80007b10 <d_demangle_callback+0x1e4>
80007b0e:	30 0c       	mov	r12,0
80007b10:	06 9d       	mov	sp,r3
80007b12:	08 9d       	mov	sp,r4
80007b14:	2a 9d       	sub	sp,-348
80007b16:	d8 32       	popm	r0-r7,pc

80007b18 <__gcclibcxx_demangle_callback>:
80007b18:	d4 01       	pushm	lr
80007b1a:	58 0b       	cp.w	r11,0
80007b1c:	5f 09       	sreq	r9
80007b1e:	58 0c       	cp.w	r12,0
80007b20:	5f 08       	sreq	r8
80007b22:	f3 e8 10 08 	or	r8,r9,r8
80007b26:	14 99       	mov	r9,r10
80007b28:	c0 30       	breq	80007b2e <__gcclibcxx_demangle_callback+0x16>
80007b2a:	3f dc       	mov	r12,-3
80007b2c:	d8 02       	popm	pc
80007b2e:	16 9a       	mov	r10,r11
80007b30:	31 1b       	mov	r11,17
80007b32:	cf de       	rcall	8000792c <d_demangle_callback>
80007b34:	f9 bc 00 fe 	moveq	r12,-2
80007b38:	f9 bc 01 00 	movne	r12,0
80007b3c:	d8 02       	popm	pc
	...

80007b40 <d_print_mod>:
80007b40:	d4 21       	pushm	r4-r7,lr
80007b42:	76 08       	ld.w	r8,r11[0x0]
80007b44:	16 96       	mov	r6,r11
80007b46:	18 97       	mov	r7,r12
80007b48:	20 38       	sub	r8,3
80007b4a:	e0 48 00 24 	cp.w	r8,36
80007b4e:	e0 8b 00 81 	brhi	80007c50 <d_print_mod+0x110>
80007b52:	4c 39       	lddpc	r9,80007c5c <d_print_mod+0x11c>
80007b54:	f2 08 03 2f 	ld.w	pc,r9[r8<<0x2]
80007b58:	80 00       	ld.sh	r0,r0[0x0]
80007b5a:	7c 46       	ld.w	r6,lr[0x10]
80007b5c:	80 00       	ld.sh	r0,r0[0x0]
80007b5e:	7c 50       	ld.w	r0,lr[0x14]
80007b60:	80 00       	ld.sh	r0,r0[0x0]
80007b62:	7c 50       	ld.w	r0,lr[0x14]
80007b64:	80 00       	ld.sh	r0,r0[0x0]
80007b66:	7c 50       	ld.w	r0,lr[0x14]
80007b68:	80 00       	ld.sh	r0,r0[0x0]
80007b6a:	7c 50       	ld.w	r0,lr[0x14]
80007b6c:	80 00       	ld.sh	r0,r0[0x0]
80007b6e:	7c 50       	ld.w	r0,lr[0x14]
80007b70:	80 00       	ld.sh	r0,r0[0x0]
80007b72:	7c 50       	ld.w	r0,lr[0x14]
80007b74:	80 00       	ld.sh	r0,r0[0x0]
80007b76:	7c 50       	ld.w	r0,lr[0x14]
80007b78:	80 00       	ld.sh	r0,r0[0x0]
80007b7a:	7c 50       	ld.w	r0,lr[0x14]
80007b7c:	80 00       	ld.sh	r0,r0[0x0]
80007b7e:	7c 50       	ld.w	r0,lr[0x14]
80007b80:	80 00       	ld.sh	r0,r0[0x0]
80007b82:	7c 50       	ld.w	r0,lr[0x14]
80007b84:	80 00       	ld.sh	r0,r0[0x0]
80007b86:	7c 50       	ld.w	r0,lr[0x14]
80007b88:	80 00       	ld.sh	r0,r0[0x0]
80007b8a:	7c 50       	ld.w	r0,lr[0x14]
80007b8c:	80 00       	ld.sh	r0,r0[0x0]
80007b8e:	7c 50       	ld.w	r0,lr[0x14]
80007b90:	80 00       	ld.sh	r0,r0[0x0]
80007b92:	7c 50       	ld.w	r0,lr[0x14]
80007b94:	80 00       	ld.sh	r0,r0[0x0]
80007b96:	7c 50       	ld.w	r0,lr[0x14]
80007b98:	80 00       	ld.sh	r0,r0[0x0]
80007b9a:	7c 50       	ld.w	r0,lr[0x14]
80007b9c:	80 00       	ld.sh	r0,r0[0x0]
80007b9e:	7c 50       	ld.w	r0,lr[0x14]
80007ba0:	80 00       	ld.sh	r0,r0[0x0]
80007ba2:	7c 50       	ld.w	r0,lr[0x14]
80007ba4:	80 00       	ld.sh	r0,r0[0x0]
80007ba6:	7c 50       	ld.w	r0,lr[0x14]
80007ba8:	80 00       	ld.sh	r0,r0[0x0]
80007baa:	7b ec       	ld.w	r12,sp[0x78]
80007bac:	80 00       	ld.sh	r0,r0[0x0]
80007bae:	7b f0       	ld.w	r0,sp[0x7c]
80007bb0:	80 00       	ld.sh	r0,r0[0x0]
80007bb2:	7b f4       	ld.w	r4,sp[0x7c]
80007bb4:	80 00       	ld.sh	r0,r0[0x0]
80007bb6:	7b ec       	ld.w	r12,sp[0x78]
80007bb8:	80 00       	ld.sh	r0,r0[0x0]
80007bba:	7b f0       	ld.w	r0,sp[0x7c]
80007bbc:	80 00       	ld.sh	r0,r0[0x0]
80007bbe:	7b f4       	ld.w	r4,sp[0x7c]
80007bc0:	80 00       	ld.sh	r0,r0[0x0]
80007bc2:	7b f8       	ld.w	r8,sp[0x7c]
80007bc4:	80 00       	ld.sh	r0,r0[0x0]
80007bc6:	7c 02       	ld.w	r2,lr[0x0]
80007bc8:	80 00       	ld.sh	r0,r0[0x0]
80007bca:	7c 0e       	ld.w	lr,lr[0x0]
80007bcc:	80 00       	ld.sh	r0,r0[0x0]
80007bce:	7c 16       	ld.w	r6,lr[0x4]
80007bd0:	80 00       	ld.sh	r0,r0[0x0]
80007bd2:	7c 1a       	ld.w	r10,lr[0x4]
80007bd4:	80 00       	ld.sh	r0,r0[0x0]
80007bd6:	7c 1e       	ld.w	lr,lr[0x4]
80007bd8:	80 00       	ld.sh	r0,r0[0x0]
80007bda:	7c 50       	ld.w	r0,lr[0x14]
80007bdc:	80 00       	ld.sh	r0,r0[0x0]
80007bde:	7c 50       	ld.w	r0,lr[0x14]
80007be0:	80 00       	ld.sh	r0,r0[0x0]
80007be2:	7c 50       	ld.w	r0,lr[0x14]
80007be4:	80 00       	ld.sh	r0,r0[0x0]
80007be6:	7c 50       	ld.w	r0,lr[0x14]
80007be8:	80 00       	ld.sh	r0,r0[0x0]
80007bea:	7c 22       	ld.w	r2,lr[0x8]
80007bec:	49 db       	lddpc	r11,80007c60 <d_print_mod+0x120>
80007bee:	c2 98       	rjmp	80007c40 <d_print_mod+0x100>
80007bf0:	49 db       	lddpc	r11,80007c64 <d_print_mod+0x124>
80007bf2:	c2 78       	rjmp	80007c40 <d_print_mod+0x100>
80007bf4:	49 db       	lddpc	r11,80007c68 <d_print_mod+0x128>
80007bf6:	c2 58       	rjmp	80007c40 <d_print_mod+0x100>
80007bf8:	32 0b       	mov	r11,32
80007bfa:	fe b0 ee 99 	rcall	8000592c <d_append_char>
80007bfe:	6c 2b       	ld.w	r11,r6[0x8]
80007c00:	c2 48       	rjmp	80007c48 <d_print_mod+0x108>
80007c02:	78 08       	ld.w	r8,r12[0x0]
80007c04:	ed b8 00 02 	bld	r8,0x2
80007c08:	c2 80       	breq	80007c58 <d_print_mod+0x118>
80007c0a:	32 ab       	mov	r11,42
80007c0c:	c0 28       	rjmp	80007c10 <d_print_mod+0xd0>
80007c0e:	32 6b       	mov	r11,38
80007c10:	fe b0 ee 8e 	rcall	8000592c <d_append_char>
80007c14:	d8 22       	popm	r4-r7,pc
80007c16:	49 6b       	lddpc	r11,80007c6c <d_print_mod+0x12c>
80007c18:	c1 48       	rjmp	80007c40 <d_print_mod+0x100>
80007c1a:	49 6b       	lddpc	r11,80007c70 <d_print_mod+0x130>
80007c1c:	c1 28       	rjmp	80007c40 <d_print_mod+0x100>
80007c1e:	49 6b       	lddpc	r11,80007c74 <d_print_mod+0x134>
80007c20:	c1 08       	rjmp	80007c40 <d_print_mod+0x100>
80007c22:	f9 39 01 08 	ld.ub	r9,r12[264]
80007c26:	32 88       	mov	r8,40
80007c28:	f0 09 18 00 	cp.b	r9,r8
80007c2c:	c0 40       	breq	80007c34 <d_print_mod+0xf4>
80007c2e:	32 0b       	mov	r11,32
80007c30:	fe b0 ee 7e 	rcall	8000592c <d_append_char>
80007c34:	6c 1b       	ld.w	r11,r6[0x4]
80007c36:	0e 9c       	mov	r12,r7
80007c38:	fe b0 f9 22 	rcall	80006e7c <d_print_comp>
80007c3c:	0e 9c       	mov	r12,r7
80007c3e:	48 fb       	lddpc	r11,80007c78 <d_print_mod+0x138>
80007c40:	fe b0 ef 00 	rcall	80005a40 <d_append_string>
80007c44:	d8 22       	popm	r4-r7,pc
80007c46:	76 1b       	ld.w	r11,r11[0x4]
80007c48:	0e 9c       	mov	r12,r7
80007c4a:	fe b0 f9 19 	rcall	80006e7c <d_print_comp>
80007c4e:	d8 22       	popm	r4-r7,pc
80007c50:	0c 9b       	mov	r11,r6
80007c52:	0e 9c       	mov	r12,r7
80007c54:	fe b0 f9 14 	rcall	80006e7c <d_print_comp>
80007c58:	d8 22       	popm	r4-r7,pc
80007c5a:	00 00       	add	r0,r0
80007c5c:	80 00       	ld.sh	r0,r0[0x0]
80007c5e:	7b 58       	ld.w	r8,sp[0x54]
80007c60:	80 00       	ld.sh	r0,r0[0x0]
80007c62:	f8 e0 80 00 	ld.d	r0,r12[-32768]
80007c66:	f8 ec 80 00 	ld.d	r12,r12[-32768]
80007c6a:	f8 f8 80 00 	ld.w	r8,r12[-32768]
80007c6e:	f9 00 80 00 	ld.sh	r0,r12[-32768]
80007c72:	f9 04 80 00 	ld.sh	r4,r12[-32768]
80007c76:	f9 10 80 00 	ld.uh	r0,r12[-32768]
80007c7a:	f8 1c d4 31 	mems	-44860,0x19

80007c7c <d_print_function_type>:
80007c7c:	d4 31       	pushm	r0-r7,lr
80007c7e:	30 09       	mov	r9,0
80007c80:	16 94       	mov	r4,r11
80007c82:	14 95       	mov	r5,r10
80007c84:	18 97       	mov	r7,r12
80007c86:	14 98       	mov	r8,r10
80007c88:	30 1b       	mov	r11,1
80007c8a:	c1 c8       	rjmp	80007cc2 <d_print_function_type+0x46>
80007c8c:	70 2a       	ld.w	r10,r8[0x8]
80007c8e:	58 0a       	cp.w	r10,0
80007c90:	c1 b1       	brne	80007cc6 <d_print_function_type+0x4a>
80007c92:	70 19       	ld.w	r9,r8[0x4]
80007c94:	72 0a       	ld.w	r10,r9[0x0]
80007c96:	21 7a       	sub	r10,23
80007c98:	59 0a       	cp.w	r10,16
80007c9a:	e0 8b 00 12 	brhi	80007cbe <d_print_function_type+0x42>
80007c9e:	f6 0a 09 4a 	lsl	r10,r11,r10
80007ca2:	14 99       	mov	r9,r10
80007ca4:	e4 1a 00 01 	andh	r10,0x1
80007ca8:	e0 1a 0c 47 	andl	r10,0xc47
80007cac:	e2 19 03 80 	andl	r9,0x380,COH
80007cb0:	58 0a       	cp.w	r10,0
80007cb2:	c0 41       	brne	80007cba <d_print_function_type+0x3e>
80007cb4:	58 09       	cp.w	r9,0
80007cb6:	c5 21       	brne	80007d5a <d_print_function_type+0xde>
80007cb8:	c0 38       	rjmp	80007cbe <d_print_function_type+0x42>
80007cba:	30 18       	mov	r8,1
80007cbc:	c5 08       	rjmp	80007d5c <d_print_function_type+0xe0>
80007cbe:	70 08       	ld.w	r8,r8[0x0]
80007cc0:	30 19       	mov	r9,1
80007cc2:	58 08       	cp.w	r8,0
80007cc4:	ce 41       	brne	80007c8c <d_print_function_type+0x10>
80007cc6:	30 08       	mov	r8,0
80007cc8:	10 96       	mov	r6,r8
80007cca:	ec 19 00 01 	eorl	r9,0x1
80007cce:	68 1a       	ld.w	r10,r4[0x4]
80007cd0:	58 0a       	cp.w	r10,0
80007cd2:	5f 1a       	srne	r10
80007cd4:	14 69       	and	r9,r10
80007cd6:	c0 31       	brne	80007cdc <d_print_function_type+0x60>
80007cd8:	58 06       	cp.w	r6,0
80007cda:	c1 c0       	breq	80007d12 <d_print_function_type+0x96>
80007cdc:	58 08       	cp.w	r8,0
80007cde:	c0 b1       	brne	80007cf4 <d_print_function_type+0x78>
80007ce0:	ef 38 01 08 	ld.ub	r8,r7[264]
80007ce4:	32 89       	mov	r9,40
80007ce6:	f2 08 18 00 	cp.b	r8,r9
80007cea:	c0 f0       	breq	80007d08 <d_print_function_type+0x8c>
80007cec:	32 a9       	mov	r9,42
80007cee:	f2 08 18 00 	cp.b	r8,r9
80007cf2:	c0 b0       	breq	80007d08 <d_print_function_type+0x8c>
80007cf4:	ef 39 01 08 	ld.ub	r9,r7[264]
80007cf8:	32 08       	mov	r8,32
80007cfa:	f0 09 18 00 	cp.b	r9,r8
80007cfe:	c0 50       	breq	80007d08 <d_print_function_type+0x8c>
80007d00:	32 0b       	mov	r11,32
80007d02:	0e 9c       	mov	r12,r7
80007d04:	fe b0 ee 14 	rcall	8000592c <d_append_char>
80007d08:	32 8b       	mov	r11,40
80007d0a:	0e 9c       	mov	r12,r7
80007d0c:	30 16       	mov	r6,1
80007d0e:	fe b0 ee 0f 	rcall	8000592c <d_append_char>
80007d12:	30 08       	mov	r8,0
80007d14:	ee f3 01 18 	ld.w	r3,r7[280]
80007d18:	10 9a       	mov	r10,r8
80007d1a:	ef 48 01 18 	st.w	r7[280],r8
80007d1e:	0a 9b       	mov	r11,r5
80007d20:	0e 9c       	mov	r12,r7
80007d22:	c2 1c       	rcall	80007d64 <d_print_mod_list>
80007d24:	58 06       	cp.w	r6,0
80007d26:	c0 50       	breq	80007d30 <d_print_function_type+0xb4>
80007d28:	32 9b       	mov	r11,41
80007d2a:	0e 9c       	mov	r12,r7
80007d2c:	fe b0 ee 00 	rcall	8000592c <d_append_char>
80007d30:	32 8b       	mov	r11,40
80007d32:	0e 9c       	mov	r12,r7
80007d34:	fe b0 ed fc 	rcall	8000592c <d_append_char>
80007d38:	68 2b       	ld.w	r11,r4[0x8]
80007d3a:	58 0b       	cp.w	r11,0
80007d3c:	c0 40       	breq	80007d44 <d_print_function_type+0xc8>
80007d3e:	0e 9c       	mov	r12,r7
80007d40:	fe b0 f8 9e 	rcall	80006e7c <d_print_comp>
80007d44:	32 9b       	mov	r11,41
80007d46:	0e 9c       	mov	r12,r7
80007d48:	fe b0 ed f2 	rcall	8000592c <d_append_char>
80007d4c:	0a 9b       	mov	r11,r5
80007d4e:	30 1a       	mov	r10,1
80007d50:	0e 9c       	mov	r12,r7
80007d52:	c0 9c       	rcall	80007d64 <d_print_mod_list>
80007d54:	ef 43 01 18 	st.w	r7[280],r3
80007d58:	d8 32       	popm	r0-r7,pc
80007d5a:	14 98       	mov	r8,r10
80007d5c:	30 19       	mov	r9,1
80007d5e:	12 96       	mov	r6,r9
80007d60:	cb 5b       	rjmp	80007cca <d_print_function_type+0x4e>
	...

80007d64 <d_print_mod_list>:
80007d64:	d4 31       	pushm	r0-r7,lr
80007d66:	30 14       	mov	r4,1
80007d68:	18 97       	mov	r7,r12
80007d6a:	16 96       	mov	r6,r11
80007d6c:	14 93       	mov	r3,r10
80007d6e:	58 06       	cp.w	r6,0
80007d70:	c5 70       	breq	80007e1e <d_print_mod_list+0xba>
80007d72:	ee f8 01 1c 	ld.w	r8,r7[284]
80007d76:	58 08       	cp.w	r8,0
80007d78:	c5 31       	brne	80007e1e <d_print_mod_list+0xba>
80007d7a:	6c 28       	ld.w	r8,r6[0x8]
80007d7c:	58 08       	cp.w	r8,0
80007d7e:	c4 e1       	brne	80007e1a <d_print_mod_list+0xb6>
80007d80:	58 03       	cp.w	r3,0
80007d82:	c0 71       	brne	80007d90 <d_print_mod_list+0x2c>
80007d84:	6c 18       	ld.w	r8,r6[0x4]
80007d86:	70 08       	ld.w	r8,r8[0x0]
80007d88:	21 a8       	sub	r8,26
80007d8a:	58 28       	cp.w	r8,2
80007d8c:	e0 88 00 47 	brls	80007e1a <d_print_mod_list+0xb6>
80007d90:	6c 38       	ld.w	r8,r6[0xc]
80007d92:	ee f5 01 14 	ld.w	r5,r7[276]
80007d96:	8d 24       	st.w	r6[0x8],r4
80007d98:	ef 48 01 14 	st.w	r7[276],r8
80007d9c:	6c 18       	ld.w	r8,r6[0x4]
80007d9e:	10 9b       	mov	r11,r8
80007da0:	70 09       	ld.w	r9,r8[0x0]
80007da2:	e0 49 00 25 	cp.w	r9,37
80007da6:	c0 51       	brne	80007db0 <d_print_mod_list+0x4c>
80007da8:	6c 0a       	ld.w	r10,r6[0x0]
80007daa:	0e 9c       	mov	r12,r7
80007dac:	c6 8f       	rcall	80007c7c <d_print_function_type>
80007dae:	c2 f8       	rjmp	80007e0c <d_print_mod_list+0xa8>
80007db0:	e0 49 00 26 	cp.w	r9,38
80007db4:	c0 61       	brne	80007dc0 <d_print_mod_list+0x5c>
80007db6:	6c 0a       	ld.w	r10,r6[0x0]
80007db8:	10 9b       	mov	r11,r8
80007dba:	0e 9c       	mov	r12,r7
80007dbc:	c3 4c       	rcall	80007e24 <d_print_array_type>
80007dbe:	c2 78       	rjmp	80007e0c <d_print_mod_list+0xa8>
80007dc0:	58 29       	cp.w	r9,2
80007dc2:	c2 81       	brne	80007e12 <d_print_mod_list+0xae>
80007dc4:	30 09       	mov	r9,0
80007dc6:	ee f4 01 18 	ld.w	r4,r7[280]
80007dca:	0e 9c       	mov	r12,r7
80007dcc:	ef 49 01 18 	st.w	r7[280],r9
80007dd0:	70 1b       	ld.w	r11,r8[0x4]
80007dd2:	fe b0 f8 55 	rcall	80006e7c <d_print_comp>
80007dd6:	ef 44 01 18 	st.w	r7[280],r4
80007dda:	6e 08       	ld.w	r8,r7[0x0]
80007ddc:	ed b8 00 02 	bld	r8,0x2
80007de0:	c0 60       	breq	80007dec <d_print_mod_list+0x88>
80007de2:	49 0b       	lddpc	r11,80007e20 <d_print_mod_list+0xbc>
80007de4:	0e 9c       	mov	r12,r7
80007de6:	fe b0 ee 2d 	rcall	80005a40 <d_append_string>
80007dea:	c0 58       	rjmp	80007df4 <d_print_mod_list+0x90>
80007dec:	32 eb       	mov	r11,46
80007dee:	0e 9c       	mov	r12,r7
80007df0:	fe b0 ed 9e 	rcall	8000592c <d_append_char>
80007df4:	6c 18       	ld.w	r8,r6[0x4]
80007df6:	70 2b       	ld.w	r11,r8[0x8]
80007df8:	c0 28       	rjmp	80007dfc <d_print_mod_list+0x98>
80007dfa:	76 1b       	ld.w	r11,r11[0x4]
80007dfc:	76 08       	ld.w	r8,r11[0x0]
80007dfe:	21 a8       	sub	r8,26
80007e00:	58 28       	cp.w	r8,2
80007e02:	fe 98 ff fc 	brls	80007dfa <d_print_mod_list+0x96>
80007e06:	0e 9c       	mov	r12,r7
80007e08:	fe b0 f8 3a 	rcall	80006e7c <d_print_comp>
80007e0c:	ef 45 01 14 	st.w	r7[276],r5
80007e10:	d8 32       	popm	r0-r7,pc
80007e12:	0e 9c       	mov	r12,r7
80007e14:	c9 6e       	rcall	80007b40 <d_print_mod>
80007e16:	ef 45 01 14 	st.w	r7[276],r5
80007e1a:	6c 06       	ld.w	r6,r6[0x0]
80007e1c:	ca 9b       	rjmp	80007d6e <d_print_mod_list+0xa>
80007e1e:	d8 32       	popm	r0-r7,pc
80007e20:	80 00       	ld.sh	r0,r0[0x0]
80007e22:	f7 10 d4 31 	ld.uh	r0,r11[-11215]

80007e24 <d_print_array_type>:
80007e24:	d4 31       	pushm	r0-r7,lr
80007e26:	18 97       	mov	r7,r12
80007e28:	16 94       	mov	r4,r11
80007e2a:	14 93       	mov	r3,r10
80007e2c:	58 0a       	cp.w	r10,0
80007e2e:	c1 c0       	breq	80007e66 <d_print_array_type+0x42>
80007e30:	14 98       	mov	r8,r10
80007e32:	70 26       	ld.w	r6,r8[0x8]
80007e34:	58 06       	cp.w	r6,0
80007e36:	c0 71       	brne	80007e44 <d_print_array_type+0x20>
80007e38:	70 18       	ld.w	r8,r8[0x4]
80007e3a:	70 08       	ld.w	r8,r8[0x0]
80007e3c:	e0 48 00 26 	cp.w	r8,38
80007e40:	c2 61       	brne	80007e8c <d_print_array_type+0x68>
80007e42:	c0 58       	rjmp	80007e4c <d_print_array_type+0x28>
80007e44:	70 08       	ld.w	r8,r8[0x0]
80007e46:	58 08       	cp.w	r8,0
80007e48:	cf 51       	brne	80007e32 <d_print_array_type+0xe>
80007e4a:	30 16       	mov	r6,1
80007e4c:	30 05       	mov	r5,0
80007e4e:	06 9b       	mov	r11,r3
80007e50:	30 0a       	mov	r10,0
80007e52:	0e 9c       	mov	r12,r7
80007e54:	c8 8f       	rcall	80007d64 <d_print_mod_list>
80007e56:	58 05       	cp.w	r5,0
80007e58:	c0 50       	breq	80007e62 <d_print_array_type+0x3e>
80007e5a:	32 9b       	mov	r11,41
80007e5c:	0e 9c       	mov	r12,r7
80007e5e:	fe b0 ed 67 	rcall	8000592c <d_append_char>
80007e62:	58 06       	cp.w	r6,0
80007e64:	c0 50       	breq	80007e6e <d_print_array_type+0x4a>
80007e66:	32 0b       	mov	r11,32
80007e68:	0e 9c       	mov	r12,r7
80007e6a:	fe b0 ed 61 	rcall	8000592c <d_append_char>
80007e6e:	35 bb       	mov	r11,91
80007e70:	0e 9c       	mov	r12,r7
80007e72:	fe b0 ed 5d 	rcall	8000592c <d_append_char>
80007e76:	68 1b       	ld.w	r11,r4[0x4]
80007e78:	58 0b       	cp.w	r11,0
80007e7a:	c0 40       	breq	80007e82 <d_print_array_type+0x5e>
80007e7c:	0e 9c       	mov	r12,r7
80007e7e:	fe b0 f7 ff 	rcall	80006e7c <d_print_comp>
80007e82:	0e 9c       	mov	r12,r7
80007e84:	35 db       	mov	r11,93
80007e86:	fe b0 ed 53 	rcall	8000592c <d_append_char>
80007e8a:	d8 32       	popm	r0-r7,pc
80007e8c:	48 4b       	lddpc	r11,80007e9c <d_print_array_type+0x78>
80007e8e:	0e 9c       	mov	r12,r7
80007e90:	30 15       	mov	r5,1
80007e92:	fe b0 ed d7 	rcall	80005a40 <d_append_string>
80007e96:	0a 96       	mov	r6,r5
80007e98:	cd bb       	rjmp	80007e4e <d_print_array_type+0x2a>
80007e9a:	00 00       	add	r0,r0
80007e9c:	80 00       	ld.sh	r0,r0[0x0]
80007e9e:	f8 8c d4 21 	brvs	7ff226e0 <_estack+0x7ff1a6e0>

80007ea0 <d_print_cast>:
80007ea0:	d4 21       	pushm	r4-r7,lr
80007ea2:	20 2d       	sub	sp,8
80007ea4:	16 96       	mov	r6,r11
80007ea6:	18 97       	mov	r7,r12
80007ea8:	76 1b       	ld.w	r11,r11[0x4]
80007eaa:	76 08       	ld.w	r8,r11[0x0]
80007eac:	58 48       	cp.w	r8,4
80007eae:	c0 40       	breq	80007eb6 <d_print_cast+0x16>
80007eb0:	fe b0 f7 e6 	rcall	80006e7c <d_print_comp>
80007eb4:	c3 58       	rjmp	80007f1e <d_print_cast+0x7e>
80007eb6:	f8 f8 01 14 	ld.w	r8,r12[276]
80007eba:	50 08       	stdsp	sp[0x0],r8
80007ebc:	30 08       	mov	r8,0
80007ebe:	50 1b       	stdsp	sp[0x4],r11
80007ec0:	f8 f5 01 18 	ld.w	r5,r12[280]
80007ec4:	ef 4d 01 14 	st.w	r7[276],sp
80007ec8:	f9 48 01 18 	st.w	r12[280],r8
80007ecc:	76 1b       	ld.w	r11,r11[0x4]
80007ece:	fe b0 f7 d7 	rcall	80006e7c <d_print_comp>
80007ed2:	40 08       	lddsp	r8,sp[0x0]
80007ed4:	ef 48 01 14 	st.w	r7[276],r8
80007ed8:	ef 39 01 08 	ld.ub	r9,r7[264]
80007edc:	33 c8       	mov	r8,60
80007ede:	f0 09 18 00 	cp.b	r9,r8
80007ee2:	c0 51       	brne	80007eec <d_print_cast+0x4c>
80007ee4:	32 0b       	mov	r11,32
80007ee6:	0e 9c       	mov	r12,r7
80007ee8:	fe b0 ed 22 	rcall	8000592c <d_append_char>
80007eec:	33 cb       	mov	r11,60
80007eee:	0e 9c       	mov	r12,r7
80007ef0:	fe b0 ed 1e 	rcall	8000592c <d_append_char>
80007ef4:	6c 18       	ld.w	r8,r6[0x4]
80007ef6:	0e 9c       	mov	r12,r7
80007ef8:	70 2b       	ld.w	r11,r8[0x8]
80007efa:	fe b0 f7 c1 	rcall	80006e7c <d_print_comp>
80007efe:	ef 39 01 08 	ld.ub	r9,r7[264]
80007f02:	33 e8       	mov	r8,62
80007f04:	f0 09 18 00 	cp.b	r9,r8
80007f08:	c0 51       	brne	80007f12 <d_print_cast+0x72>
80007f0a:	32 0b       	mov	r11,32
80007f0c:	0e 9c       	mov	r12,r7
80007f0e:	fe b0 ed 0f 	rcall	8000592c <d_append_char>
80007f12:	33 eb       	mov	r11,62
80007f14:	0e 9c       	mov	r12,r7
80007f16:	fe b0 ed 0b 	rcall	8000592c <d_append_char>
80007f1a:	ef 45 01 18 	st.w	r7[280],r5
80007f1e:	2f ed       	sub	sp,-8
80007f20:	d8 22       	popm	r4-r7,pc
	...

80007f24 <d_print_expr_op>:
80007f24:	d4 01       	pushm	lr
80007f26:	76 09       	ld.w	r9,r11[0x0]
80007f28:	e0 49 00 2b 	cp.w	r9,43
80007f2c:	c0 71       	brne	80007f3a <d_print_expr_op+0x16>
80007f2e:	76 18       	ld.w	r8,r11[0x4]
80007f30:	70 1b       	ld.w	r11,r8[0x4]
80007f32:	70 2a       	ld.w	r10,r8[0x8]
80007f34:	fe b0 ed 20 	rcall	80005974 <d_append_buffer>
80007f38:	d8 02       	popm	pc
80007f3a:	fe b0 f7 a1 	rcall	80006e7c <d_print_comp>
80007f3e:	d8 02       	popm	pc

80007f40 <d_print_subexpr>:
80007f40:	d4 21       	pushm	r4-r7,lr
80007f42:	76 08       	ld.w	r8,r11[0x0]
80007f44:	16 95       	mov	r5,r11
80007f46:	58 08       	cp.w	r8,0
80007f48:	5f 09       	sreq	r9
80007f4a:	58 68       	cp.w	r8,6
80007f4c:	5f 08       	sreq	r8
80007f4e:	18 97       	mov	r7,r12
80007f50:	12 48       	or	r8,r9
80007f52:	c0 30       	breq	80007f58 <d_print_subexpr+0x18>
80007f54:	30 16       	mov	r6,1
80007f56:	c0 58       	rjmp	80007f60 <d_print_subexpr+0x20>
80007f58:	32 8b       	mov	r11,40
80007f5a:	30 06       	mov	r6,0
80007f5c:	fe b0 ec e8 	rcall	8000592c <d_append_char>
80007f60:	0a 9b       	mov	r11,r5
80007f62:	0e 9c       	mov	r12,r7
80007f64:	fe b0 f7 8c 	rcall	80006e7c <d_print_comp>
80007f68:	58 06       	cp.w	r6,0
80007f6a:	c0 51       	brne	80007f74 <d_print_subexpr+0x34>
80007f6c:	0e 9c       	mov	r12,r7
80007f6e:	32 9b       	mov	r11,41
80007f70:	fe b0 ec de 	rcall	8000592c <d_append_char>
80007f74:	d8 22       	popm	r4-r7,pc
	...

80007f78 <__cxa_demangle>:
80007f78:	d4 31       	pushm	r0-r7,lr
80007f7a:	20 4d       	sub	sp,16
80007f7c:	16 95       	mov	r5,r11
80007f7e:	14 96       	mov	r6,r10
80007f80:	12 97       	mov	r7,r9
80007f82:	18 94       	mov	r4,r12
80007f84:	58 0c       	cp.w	r12,0
80007f86:	c0 51       	brne	80007f90 <__cxa_demangle+0x18>
80007f88:	58 09       	cp.w	r9,0
80007f8a:	c4 c0       	breq	80008022 <__cxa_demangle+0xaa>
80007f8c:	3f d8       	mov	r8,-3
80007f8e:	c4 88       	rjmp	8000801e <__cxa_demangle+0xa6>
80007f90:	58 0a       	cp.w	r10,0
80007f92:	5f 09       	sreq	r9
80007f94:	58 0b       	cp.w	r11,0
80007f96:	5f 18       	srne	r8
80007f98:	f3 e8 00 08 	and	r8,r9,r8
80007f9c:	c0 50       	breq	80007fa6 <__cxa_demangle+0x2e>
80007f9e:	58 07       	cp.w	r7,0
80007fa0:	c4 10       	breq	80008022 <__cxa_demangle+0xaa>
80007fa2:	3f d8       	mov	r8,-3
80007fa4:	c2 18       	rjmp	80007fe6 <__cxa_demangle+0x6e>
80007fa6:	30 08       	mov	r8,0
80007fa8:	1a 99       	mov	r9,sp
80007faa:	50 38       	stdsp	sp[0xc],r8
80007fac:	50 08       	stdsp	sp[0x0],r8
80007fae:	50 18       	stdsp	sp[0x4],r8
80007fb0:	50 28       	stdsp	sp[0x8],r8
80007fb2:	49 fa       	lddpc	r10,8000802c <__cxa_demangle+0xb4>
80007fb4:	31 1b       	mov	r11,17
80007fb6:	fe b0 fc bb 	rcall	8000792c <d_demangle_callback>
80007fba:	18 93       	mov	r3,r12
80007fbc:	40 0c       	lddsp	r12,sp[0x0]
80007fbe:	58 03       	cp.w	r3,0
80007fc0:	c0 51       	brne	80007fca <__cxa_demangle+0x52>
80007fc2:	f0 1f 00 1c 	mcall	80008030 <__cxa_demangle+0xb8>
80007fc6:	06 98       	mov	r8,r3
80007fc8:	c0 88       	rjmp	80007fd8 <__cxa_demangle+0x60>
80007fca:	40 38       	lddsp	r8,sp[0xc]
80007fcc:	18 94       	mov	r4,r12
80007fce:	58 08       	cp.w	r8,0
80007fd0:	5f 13       	srne	r3
80007fd2:	06 98       	mov	r8,r3
80007fd4:	58 0c       	cp.w	r12,0
80007fd6:	c0 a1       	brne	80007fea <__cxa_demangle+0x72>
80007fd8:	58 07       	cp.w	r7,0
80007fda:	c2 40       	breq	80008022 <__cxa_demangle+0xaa>
80007fdc:	58 18       	cp.w	r8,1
80007fde:	c0 31       	brne	80007fe4 <__cxa_demangle+0x6c>
80007fe0:	3f f8       	mov	r8,-1
80007fe2:	c0 28       	rjmp	80007fe6 <__cxa_demangle+0x6e>
80007fe4:	3f e8       	mov	r8,-2
80007fe6:	8f 08       	st.w	r7[0x0],r8
80007fe8:	c1 d8       	rjmp	80008022 <__cxa_demangle+0xaa>
80007fea:	58 05       	cp.w	r5,0
80007fec:	c0 41       	brne	80007ff4 <__cxa_demangle+0x7c>
80007fee:	58 06       	cp.w	r6,0
80007ff0:	c1 31       	brne	80008016 <__cxa_demangle+0x9e>
80007ff2:	c1 38       	rjmp	80008018 <__cxa_demangle+0xa0>
80007ff4:	f0 1f 00 10 	mcall	80008034 <__cxa_demangle+0xbc>
80007ff8:	6c 08       	ld.w	r8,r6[0x0]
80007ffa:	10 3c       	cp.w	r12,r8
80007ffc:	c0 a2       	brcc	80008010 <__cxa_demangle+0x98>
80007ffe:	08 9b       	mov	r11,r4
80008000:	0a 9c       	mov	r12,r5
80008002:	f0 1f 00 0e 	mcall	80008038 <__cxa_demangle+0xc0>
80008006:	08 9c       	mov	r12,r4
80008008:	0a 94       	mov	r4,r5
8000800a:	f0 1f 00 0a 	mcall	80008030 <__cxa_demangle+0xb8>
8000800e:	c0 58       	rjmp	80008018 <__cxa_demangle+0xa0>
80008010:	0a 9c       	mov	r12,r5
80008012:	f0 1f 00 08 	mcall	80008030 <__cxa_demangle+0xb8>
80008016:	8d 03       	st.w	r6[0x0],r3
80008018:	58 07       	cp.w	r7,0
8000801a:	c0 50       	breq	80008024 <__cxa_demangle+0xac>
8000801c:	30 08       	mov	r8,0
8000801e:	8f 08       	st.w	r7[0x0],r8
80008020:	c0 28       	rjmp	80008024 <__cxa_demangle+0xac>
80008022:	30 04       	mov	r4,0
80008024:	08 9c       	mov	r12,r4
80008026:	2f cd       	sub	sp,-16
80008028:	d8 32       	popm	r0-r7,pc
8000802a:	00 00       	add	r0,r0
8000802c:	80 00       	ld.sh	r0,r0[0x0]
8000802e:	80 3c       	ld.sh	r12,r0[0x6]
80008030:	80 00       	ld.sh	r0,r0[0x0]
80008032:	9c 40       	ld.sh	r0,lr[0x8]
80008034:	80 00       	ld.sh	r0,r0[0x0]
80008036:	a8 02       	st.h	r4[0x0],r2
80008038:	80 00       	ld.sh	r0,r0[0x0]
8000803a:	a7 f0       	*unknown*

8000803c <d_growable_string_callback_adapter>:
8000803c:	d4 31       	pushm	r0-r7,lr
8000803e:	74 18       	ld.w	r8,r10[0x4]
80008040:	14 97       	mov	r7,r10
80008042:	2f f8       	sub	r8,-1
80008044:	16 96       	mov	r6,r11
80008046:	18 94       	mov	r4,r12
80008048:	16 08       	add	r8,r11
8000804a:	74 25       	ld.w	r5,r10[0x8]
8000804c:	0a 38       	cp.w	r8,r5
8000804e:	e0 88 00 1d 	brls	80008088 <d_growable_string_callback_adapter+0x4c>
80008052:	74 39       	ld.w	r9,r10[0xc]
80008054:	58 09       	cp.w	r9,0
80008056:	c1 91       	brne	80008088 <d_growable_string_callback_adapter+0x4c>
80008058:	58 05       	cp.w	r5,0
8000805a:	f9 b5 00 02 	moveq	r5,2
8000805e:	c0 28       	rjmp	80008062 <d_growable_string_callback_adapter+0x26>
80008060:	a1 75       	lsl	r5,0x1
80008062:	10 35       	cp.w	r5,r8
80008064:	cf e3       	brcs	80008060 <d_growable_string_callback_adapter+0x24>
80008066:	0a 9b       	mov	r11,r5
80008068:	6e 0c       	ld.w	r12,r7[0x0]
8000806a:	f0 1f 00 12 	mcall	800080b0 <d_growable_string_callback_adapter+0x74>
8000806e:	18 93       	mov	r3,r12
80008070:	c0 a1       	brne	80008084 <d_growable_string_callback_adapter+0x48>
80008072:	6e 0c       	ld.w	r12,r7[0x0]
80008074:	f0 1f 00 10 	mcall	800080b4 <d_growable_string_callback_adapter+0x78>
80008078:	30 18       	mov	r8,1
8000807a:	8f 23       	st.w	r7[0x8],r3
8000807c:	8f 03       	st.w	r7[0x0],r3
8000807e:	8f 13       	st.w	r7[0x4],r3
80008080:	8f 38       	st.w	r7[0xc],r8
80008082:	c0 38       	rjmp	80008088 <d_growable_string_callback_adapter+0x4c>
80008084:	8f 0c       	st.w	r7[0x0],r12
80008086:	8f 25       	st.w	r7[0x8],r5
80008088:	6e 35       	ld.w	r5,r7[0xc]
8000808a:	58 05       	cp.w	r5,0
8000808c:	c1 11       	brne	800080ae <d_growable_string_callback_adapter+0x72>
8000808e:	6e 18       	ld.w	r8,r7[0x4]
80008090:	6e 0c       	ld.w	r12,r7[0x0]
80008092:	0c 9a       	mov	r10,r6
80008094:	10 0c       	add	r12,r8
80008096:	08 9b       	mov	r11,r4
80008098:	f0 1f 00 08 	mcall	800080b8 <d_growable_string_callback_adapter+0x7c>
8000809c:	6e 18       	ld.w	r8,r7[0x4]
8000809e:	6e 09       	ld.w	r9,r7[0x0]
800080a0:	0c 09       	add	r9,r6
800080a2:	f2 08 0b 05 	st.b	r9[r8],r5
800080a6:	6e 18       	ld.w	r8,r7[0x4]
800080a8:	f0 06 00 06 	add	r6,r8,r6
800080ac:	8f 16       	st.w	r7[0x4],r6
800080ae:	d8 32       	popm	r0-r7,pc
800080b0:	80 00       	ld.sh	r0,r0[0x0]
800080b2:	a3 1c       	ld.d	r12,--r1
800080b4:	80 00       	ld.sh	r0,r0[0x0]
800080b6:	9c 40       	ld.sh	r0,lr[0x8]
800080b8:	80 00       	ld.sh	r0,r0[0x0]
800080ba:	a0 f8       	st.b	r0[0x7],r8

800080bc <standard_subs>:
800080bc:	74 00 00 00 80 00 f7 0c 00 00 00 03 80 00 f7 0c     t...............
800080cc:	00 00 00 03 00 00 00 00 00 00 00 00 61 00 00 00     ............a...
800080dc:	80 00 fa 64 00 00 00 0e 80 00 fa 64 00 00 00 0e     ...d.......d....
800080ec:	80 00 fa 74 00 00 00 09 62 00 00 00 80 00 fa 80     ...t....b.......
800080fc:	00 00 00 11 80 00 fa 80 00 00 00 11 80 00 fa 94     ................
8000810c:	00 00 00 0c 73 00 00 00 80 00 fa a4 00 00 00 0b     ....s...........
8000811c:	80 00 fa b0 00 00 00 46 80 00 fa 94 00 00 00 0c     .......F........
8000812c:	69 00 00 00 80 00 fa f8 00 00 00 0c 80 00 fb 08     i...............
8000813c:	00 00 00 31 80 00 fb 3c 00 00 00 0d 6f 00 00 00     ...1...<....o...
8000814c:	80 00 fb 4c 00 00 00 0c 80 00 fb 5c 00 00 00 31     ...L.......\...1
8000815c:	80 00 fb 90 00 00 00 0d 64 00 00 00 80 00 fb a0     ........d.......
8000816c:	00 00 00 0d 80 00 fb b0 00 00 00 32 80 00 fb e4     ...........2....
8000817c:	00 00 00 0e                                         ....

80008180 <cplus_demangle_builtin_types>:
80008180:	80 00 f9 1c 00 00 00 0b 80 00 f9 1c 00 00 00 0b     ................
80008190:	00 00 00 00 80 00 f9 28 00 00 00 04 80 00 f9 30     .......(.......0
800081a0:	00 00 00 07 00 00 00 07 80 00 f9 38 00 00 00 04     ...........8....
800081b0:	80 00 f9 40 00 00 00 04 00 00 00 00 80 00 f9 48     ...@...........H
800081c0:	00 00 00 06 80 00 f9 48 00 00 00 06 00 00 00 08     .......H........
800081d0:	80 00 f9 50 00 00 00 0b 80 00 f9 50 00 00 00 0b     ...P.......P....
800081e0:	00 00 00 08 80 00 f9 5c 00 00 00 05 80 00 f9 5c     .......\.......\
800081f0:	00 00 00 05 00 00 00 08 80 00 f9 64 00 00 00 0a     ...........d....
80008200:	80 00 f9 64 00 00 00 0a 00 00 00 08 80 00 f9 70     ...d...........p
80008210:	00 00 00 0d 80 00 f9 70 00 00 00 0d 00 00 00 00     .......p........
80008220:	80 00 f9 80 00 00 00 03 80 00 f9 80 00 00 00 03     ................
80008230:	00 00 00 01 80 00 f9 84 00 00 00 0c 80 00 f9 94     ................
80008240:	00 00 00 08 00 00 00 02 00 00 00 00 00 00 00 00     ................
	...
8000825c:	80 00 f9 a0 00 00 00 04 80 00 f9 a0 00 00 00 04     ................
8000826c:	00 00 00 03 80 00 f9 a8 00 00 00 0d 80 00 f9 a8     ................
8000827c:	00 00 00 0d 00 00 00 04 80 00 f9 b8 00 00 00 08     ................
8000828c:	80 00 f9 b8 00 00 00 08 00 00 00 00 80 00 f9 c4     ................
8000829c:	00 00 00 11 80 00 f9 c4 00 00 00 11 00 00 00 00     ................
	...
800082e8:	80 00 f9 d8 00 00 00 05 80 00 f9 d8 00 00 00 05     ................
800082f8:	00 00 00 00 80 00 f9 e0 00 00 00 0e 80 00 f9 e0     ................
80008308:	00 00 00 0e 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
80008324:	80 00 f9 f0 00 00 00 04 80 00 f9 f0 00 00 00 04     ................
80008334:	00 00 00 09 80 00 f9 f8 00 00 00 07 80 00 f9 38     ...............8
80008344:	00 00 00 04 00 00 00 00 80 00 fa 00 00 00 00 09     ................
80008354:	80 00 f9 a0 00 00 00 04 00 00 00 05 80 00 fa 0c     ................
80008364:	00 00 00 12 80 00 fa 0c 00 00 00 12 00 00 00 06     ................
80008374:	80 00 f8 90 00 00 00 03 80 00 f8 90 00 00 00 03     ................
80008384:	00 00 00 00 80 00 fa 20 00 00 00 09 80 00 fa 20     ....... ....... 
80008394:	00 00 00 09 00 00 00 00 80 00 fa 2c 00 00 00 09     ...........,....
800083a4:	80 00 fa 2c 00 00 00 09 00 00 00 00 80 00 fa 38     ...,...........8
800083b4:	00 00 00 0a 80 00 fa 38 00 00 00 0a 00 00 00 00     .......8........
800083c4:	80 00 fa 44 00 00 00 04 80 00 fa 44 00 00 00 04     ...D.......D....
800083d4:	00 00 00 08 80 00 fa 4c 00 00 00 08 80 00 fa 4c     .......L.......L
800083e4:	00 00 00 08 00 00 00 00 80 00 fa 58 00 00 00 08     ...........X....
800083f4:	80 00 fa 58 00 00 00 08 00 00 00 00                 ...X........

80008400 <cplus_demangle_operators>:
80008400:	80 00 fb f4 80 00 fb f8 00 00 00 02 00 00 00 02     ................
80008410:	80 00 fb fc 80 00 fc 00 00 00 00 01 00 00 00 02     ................
80008420:	80 00 fc 04 80 00 f9 00 00 00 00 02 00 00 00 02     ................
80008430:	80 00 fc 08 80 00 fc 0c 00 00 00 01 00 00 00 01     ................
80008440:	80 00 fc 10 80 00 fc 0c 00 00 00 01 00 00 00 02     ................
80008450:	80 00 f6 f8 80 00 fc 14 00 00 00 02 00 00 00 02     ................
80008460:	80 00 fc 18 80 00 fc 1c 00 00 00 01 00 00 00 02     ................
80008470:	80 00 fc 20 80 00 fc 24 00 00 00 01 00 00 00 01     ... ...$........
80008480:	80 00 fc 28 80 00 fc 2c 00 00 00 02 00 00 00 02     ...(...,........
80008490:	80 00 fc 30 80 00 fc 34 00 00 00 08 00 00 00 01     ...0...4........
800084a0:	80 00 fc 40 80 00 fc 44 00 00 00 01 00 00 00 01     ...@...D........
800084b0:	80 00 fc 48 80 00 fc 4c 00 00 00 06 00 00 00 01     ...H...L........
800084c0:	80 00 fc 54 80 00 fc 58 00 00 00 01 00 00 00 02     ...T...X........
800084d0:	80 00 fc 5c 80 00 fc 60 00 00 00 01 00 00 00 02     ...\...`........
800084e0:	80 00 fc 64 80 00 fc 68 00 00 00 02 00 00 00 02     ...d...h........
800084f0:	80 00 fc 6c 80 00 fc 70 00 00 00 01 00 00 00 02     ...l...p........
80008500:	80 00 fc 74 80 00 fc 78 00 00 00 02 00 00 00 02     ...t...x........
80008510:	80 00 fc 7c 80 00 fc 80 00 00 00 02 00 00 00 02     ...|............
80008520:	80 00 fc 84 80 00 fb 38 00 00 00 01 00 00 00 02     .......8........
80008530:	80 00 fc 88 80 00 f7 1c 00 00 00 02 00 00 00 02     ................
80008540:	80 00 fc 8c 80 00 fc 90 00 00 00 03 00 00 00 02     ................
80008550:	80 00 f9 4c 80 00 fc 94 00 00 00 02 00 00 00 02     ...L............
80008560:	80 00 fc 98 80 00 fc 9c 00 00 00 02 00 00 00 02     ................
80008570:	80 00 fc a0 80 00 fc a4 00 00 00 01 00 00 00 02     ................
80008580:	80 00 fc a8 80 00 fc ac 00 00 00 02 00 00 00 02     ................
80008590:	80 00 fc b0 80 00 fc b4 00 00 00 02 00 00 00 02     ................
800085a0:	80 00 fc b8 80 00 fc bc 00 00 00 01 00 00 00 02     ................
800085b0:	80 00 fc c0 80 00 fc 44 00 00 00 01 00 00 00 02     .......D........
800085c0:	80 00 fc c4 80 00 fc c8 00 00 00 02 00 00 00 01     ................
800085d0:	80 00 fc cc 80 00 fc d0 00 00 00 05 00 00 00 01     ................
800085e0:	80 00 fc d8 80 00 fc dc 00 00 00 02 00 00 00 02     ................
800085f0:	80 00 fa 1c 80 00 fc bc 00 00 00 01 00 00 00 01     ................
80008600:	80 00 fc e0 80 00 fc e4 00 00 00 01 00 00 00 01     ................
80008610:	80 00 fc e8 80 00 fc ec 00 00 00 03 00 00 00 01     ................
80008620:	80 00 fc f0 80 00 fc f4 00 00 00 02 00 00 00 02     ................
80008630:	80 00 fc f8 80 00 fc fc 00 00 00 02 00 00 00 02     ................
80008640:	80 00 fa 70 80 00 fd 00 00 00 00 01 00 00 00 02     ...p............
80008650:	80 00 fd 04 80 00 fd 08 00 00 00 02 00 00 00 02     ................
80008660:	80 00 fd 0c 80 00 fd 10 00 00 00 01 00 00 00 02     ................
80008670:	80 00 fd 14 80 00 fd 18 00 00 00 03 00 00 00 02     ................
80008680:	80 00 fd 1c 80 00 fd 20 00 00 00 02 00 00 00 01     ....... ........
80008690:	80 00 fd 24 80 00 fd 10 00 00 00 01 00 00 00 01     ...$............
800086a0:	80 00 fd 28 80 00 fd 2c 00 00 00 02 00 00 00 02     ...(...,........
800086b0:	80 00 fd 30 80 00 fd 34 00 00 00 01 00 00 00 03     ...0...4........
800086c0:	80 00 fd 38 80 00 fd 3c 00 00 00 02 00 00 00 02     ...8...<........
800086d0:	80 00 fd 40 80 00 fd 44 00 00 00 03 00 00 00 02     ...@...D........
800086e0:	80 00 fd 48 80 00 fd 4c 00 00 00 01 00 00 00 02     ...H...L........
800086f0:	80 00 fd 50 80 00 fd 54 00 00 00 02 00 00 00 02     ...P...T........
80008700:	80 00 f8 fc 80 00 fd 58 00 00 00 07 00 00 00 01     .......X........
80008710:	80 00 fd 60 80 00 fd 58 00 00 00 07 00 00 00 01     ...`...X........
80008720:	80 00 fd 64 80 00 fd 68 00 00 00 08 00 00 00 01     ...d...h........
80008730:	80 00 fd 74 80 00 fd 68 00 00 00 08 00 00 00 01     ...t...h........
	...

80008750 <__avr32_f64_mul>:
80008750:	f5 eb 10 1c 	or	r12,r10,r11<<0x1
80008754:	e0 80 00 dc 	breq	8000890c <__avr32_f64_mul_op1_zero>
80008758:	d4 21       	pushm	r4-r7,lr
8000875a:	f7 e9 20 0e 	eor	lr,r11,r9
8000875e:	ef db c2 8b 	bfextu	r7,r11,0x14,0xb
80008762:	30 15       	mov	r5,1
80008764:	c4 30       	breq	800087ea <__avr32_f64_mul_op1_subnormal>
80008766:	ab 6b       	lsl	r11,0xa
80008768:	f7 ea 13 6b 	or	r11,r11,r10>>0x16
8000876c:	ab 6a       	lsl	r10,0xa
8000876e:	f7 d5 d3 c2 	bfins	r11,r5,0x1e,0x2
80008772:	ed d9 c2 8b 	bfextu	r6,r9,0x14,0xb
80008776:	c5 c0       	breq	8000882e <__avr32_f64_mul_op2_subnormal>
80008778:	a1 78       	lsl	r8,0x1
8000877a:	5c f9       	rol	r9
8000877c:	f3 d5 d2 ab 	bfins	r9,r5,0x15,0xb
80008780:	e0 47 07 ff 	cp.w	r7,2047
80008784:	c7 70       	breq	80008872 <__avr32_f64_mul_op_nan_or_inf>
80008786:	e0 46 07 ff 	cp.w	r6,2047
8000878a:	c7 40       	breq	80008872 <__avr32_f64_mul_op_nan_or_inf>
8000878c:	ee 06 00 0c 	add	r12,r7,r6
80008790:	e0 2c 03 fe 	sub	r12,1022
80008794:	f6 08 06 44 	mulu.d	r4,r11,r8
80008798:	f4 09 07 44 	macu.d	r4,r10,r9
8000879c:	f4 08 06 46 	mulu.d	r6,r10,r8
800087a0:	f6 09 06 4a 	mulu.d	r10,r11,r9
800087a4:	08 07       	add	r7,r4
800087a6:	f4 05 00 4a 	adc	r10,r10,r5
800087aa:	5c 0b       	acr	r11
800087ac:	ed bb 00 14 	bld	r11,0x14
800087b0:	c0 50       	breq	800087ba <__avr32_f64_mul+0x6a>
800087b2:	a1 77       	lsl	r7,0x1
800087b4:	5c fa       	rol	r10
800087b6:	5c fb       	rol	r11
800087b8:	20 1c       	sub	r12,1
800087ba:	58 0c       	cp.w	r12,0
800087bc:	e0 8a 00 6f 	brle	8000889a <__avr32_f64_mul_res_subnormal>
800087c0:	e0 4c 07 ff 	cp.w	r12,2047
800087c4:	e0 84 00 9c 	brge	800088fc <__avr32_f64_mul_res_inf>
800087c8:	f7 dc d2 8b 	bfins	r11,r12,0x14,0xb
800087cc:	ed ea 11 f6 	or	r6,r6,r10<<0x1f
800087d0:	ef e6 12 17 	or	r7,r7,r6>>0x1
800087d4:	ee 17 80 00 	eorh	r7,0x8000
800087d8:	f1 b7 04 20 	satu	r7,0x1
800087dc:	0e 0a       	add	r10,r7
800087de:	5c 0b       	acr	r11
800087e0:	ed be 00 1f 	bld	lr,0x1f
800087e4:	ef bb 00 1f 	bst	r11,0x1f
800087e8:	d8 22       	popm	r4-r7,pc

800087ea <__avr32_f64_mul_op1_subnormal>:
800087ea:	e4 1b 00 0f 	andh	r11,0xf
800087ee:	f4 0c 12 00 	clz	r12,r10
800087f2:	f6 06 12 00 	clz	r6,r11
800087f6:	f7 bc 03 e1 	sublo	r12,-31
800087fa:	f8 06 17 30 	movlo	r6,r12
800087fe:	f7 b6 02 01 	subhs	r6,1
80008802:	e0 46 00 20 	cp.w	r6,32
80008806:	c0 d4       	brge	80008820 <__avr32_f64_mul_op1_subnormal+0x36>
80008808:	ec 0c 11 20 	rsub	r12,r6,32
8000880c:	f6 06 09 4b 	lsl	r11,r11,r6
80008810:	f4 0c 0a 4c 	lsr	r12,r10,r12
80008814:	18 4b       	or	r11,r12
80008816:	f4 06 09 4a 	lsl	r10,r10,r6
8000881a:	20 b6       	sub	r6,11
8000881c:	0c 17       	sub	r7,r6
8000881e:	ca ab       	rjmp	80008772 <__avr32_f64_mul+0x22>
80008820:	f4 06 09 4b 	lsl	r11,r10,r6
80008824:	c6 40       	breq	800088ec <__avr32_f64_mul_res_zero>
80008826:	30 0a       	mov	r10,0
80008828:	20 b6       	sub	r6,11
8000882a:	0c 17       	sub	r7,r6
8000882c:	ca 3b       	rjmp	80008772 <__avr32_f64_mul+0x22>

8000882e <__avr32_f64_mul_op2_subnormal>:
8000882e:	e4 19 00 0f 	andh	r9,0xf
80008832:	f0 0c 12 00 	clz	r12,r8
80008836:	f2 05 12 00 	clz	r5,r9
8000883a:	f7 bc 03 ea 	sublo	r12,-22
8000883e:	f8 05 17 30 	movlo	r5,r12
80008842:	f7 b5 02 0a 	subhs	r5,10
80008846:	e0 45 00 20 	cp.w	r5,32
8000884a:	c0 d4       	brge	80008864 <__avr32_f64_mul_op2_subnormal+0x36>
8000884c:	ea 0c 11 20 	rsub	r12,r5,32
80008850:	f2 05 09 49 	lsl	r9,r9,r5
80008854:	f0 0c 0a 4c 	lsr	r12,r8,r12
80008858:	18 49       	or	r9,r12
8000885a:	f0 05 09 48 	lsl	r8,r8,r5
8000885e:	20 25       	sub	r5,2
80008860:	0a 16       	sub	r6,r5
80008862:	c8 fb       	rjmp	80008780 <__avr32_f64_mul+0x30>
80008864:	f0 05 09 49 	lsl	r9,r8,r5
80008868:	c4 20       	breq	800088ec <__avr32_f64_mul_res_zero>
8000886a:	30 08       	mov	r8,0
8000886c:	20 25       	sub	r5,2
8000886e:	0a 16       	sub	r6,r5
80008870:	c8 8b       	rjmp	80008780 <__avr32_f64_mul+0x30>

80008872 <__avr32_f64_mul_op_nan_or_inf>:
80008872:	e4 19 00 0f 	andh	r9,0xf
80008876:	e4 1b 00 0f 	andh	r11,0xf
8000887a:	14 4b       	or	r11,r10
8000887c:	10 49       	or	r9,r8
8000887e:	e0 47 07 ff 	cp.w	r7,2047
80008882:	c0 91       	brne	80008894 <__avr32_f64_mul_op1_not_naninf>
80008884:	58 0b       	cp.w	r11,0
80008886:	c3 81       	brne	800088f6 <__avr32_f64_mul_res_nan>
80008888:	e0 46 07 ff 	cp.w	r6,2047
8000888c:	c3 81       	brne	800088fc <__avr32_f64_mul_res_inf>
8000888e:	58 09       	cp.w	r9,0
80008890:	c3 60       	breq	800088fc <__avr32_f64_mul_res_inf>
80008892:	c3 28       	rjmp	800088f6 <__avr32_f64_mul_res_nan>

80008894 <__avr32_f64_mul_op1_not_naninf>:
80008894:	58 09       	cp.w	r9,0
80008896:	c3 30       	breq	800088fc <__avr32_f64_mul_res_inf>
80008898:	c2 f8       	rjmp	800088f6 <__avr32_f64_mul_res_nan>

8000889a <__avr32_f64_mul_res_subnormal>:
8000889a:	5c 3c       	neg	r12
8000889c:	2f fc       	sub	r12,-1
8000889e:	f1 bc 04 c0 	satu	r12,0x6
800088a2:	e0 4c 00 20 	cp.w	r12,32
800088a6:	c1 14       	brge	800088c8 <__avr32_f64_mul_res_subnormal+0x2e>
800088a8:	f8 08 11 20 	rsub	r8,r12,32
800088ac:	0e 46       	or	r6,r7
800088ae:	ee 0c 0a 47 	lsr	r7,r7,r12
800088b2:	f4 08 09 49 	lsl	r9,r10,r8
800088b6:	12 47       	or	r7,r9
800088b8:	f4 0c 0a 4a 	lsr	r10,r10,r12
800088bc:	f6 08 09 49 	lsl	r9,r11,r8
800088c0:	12 4a       	or	r10,r9
800088c2:	f6 0c 0a 4b 	lsr	r11,r11,r12
800088c6:	c8 3b       	rjmp	800087cc <__avr32_f64_mul+0x7c>
800088c8:	f8 08 11 20 	rsub	r8,r12,32
800088cc:	f9 b9 00 00 	moveq	r9,0
800088d0:	c0 30       	breq	800088d6 <__avr32_f64_mul_res_subnormal+0x3c>
800088d2:	f6 08 09 49 	lsl	r9,r11,r8
800088d6:	0e 46       	or	r6,r7
800088d8:	ed ea 10 16 	or	r6,r6,r10<<0x1
800088dc:	f4 0c 0a 4a 	lsr	r10,r10,r12
800088e0:	f3 ea 10 07 	or	r7,r9,r10
800088e4:	f6 0c 0a 4a 	lsr	r10,r11,r12
800088e8:	30 0b       	mov	r11,0
800088ea:	c7 1b       	rjmp	800087cc <__avr32_f64_mul+0x7c>

800088ec <__avr32_f64_mul_res_zero>:
800088ec:	1c 9b       	mov	r11,lr
800088ee:	e6 1b 80 00 	andh	r11,0x8000,COH
800088f2:	30 0a       	mov	r10,0
800088f4:	d8 22       	popm	r4-r7,pc

800088f6 <__avr32_f64_mul_res_nan>:
800088f6:	3f fb       	mov	r11,-1
800088f8:	3f fa       	mov	r10,-1
800088fa:	d8 22       	popm	r4-r7,pc

800088fc <__avr32_f64_mul_res_inf>:
800088fc:	f0 6b 00 00 	mov	r11,-1048576
80008900:	ed be 00 1f 	bld	lr,0x1f
80008904:	ef bb 00 1f 	bst	r11,0x1f
80008908:	30 0a       	mov	r10,0
8000890a:	d8 22       	popm	r4-r7,pc

8000890c <__avr32_f64_mul_op1_zero>:
8000890c:	f7 e9 20 0b 	eor	r11,r11,r9
80008910:	e6 1b 80 00 	andh	r11,0x8000,COH
80008914:	f9 d9 c2 8b 	bfextu	r12,r9,0x14,0xb
80008918:	e0 4c 07 ff 	cp.w	r12,2047
8000891c:	5e 1c       	retne	r12
8000891e:	3f fa       	mov	r10,-1
80008920:	3f fb       	mov	r11,-1
80008922:	5e fc       	retal	r12

80008924 <__avr32_f64_sub_from_add>:
80008924:	ee 19 80 00 	eorh	r9,0x8000

80008928 <__avr32_f64_sub>:
80008928:	f7 e9 20 0c 	eor	r12,r11,r9
8000892c:	e0 86 00 ca 	brmi	80008ac0 <__avr32_f64_add_from_sub>
80008930:	eb cd 40 e0 	pushm	r5-r7,lr
80008934:	16 9c       	mov	r12,r11
80008936:	e6 1c 80 00 	andh	r12,0x8000,COH
8000893a:	bf db       	cbr	r11,0x1f
8000893c:	bf d9       	cbr	r9,0x1f
8000893e:	10 3a       	cp.w	r10,r8
80008940:	f2 0b 13 00 	cpc	r11,r9
80008944:	c0 92       	brcc	80008956 <__avr32_f64_sub+0x2e>
80008946:	16 97       	mov	r7,r11
80008948:	12 9b       	mov	r11,r9
8000894a:	0e 99       	mov	r9,r7
8000894c:	14 97       	mov	r7,r10
8000894e:	10 9a       	mov	r10,r8
80008950:	0e 98       	mov	r8,r7
80008952:	ee 1c 80 00 	eorh	r12,0x8000
80008956:	f6 07 16 14 	lsr	r7,r11,0x14
8000895a:	ab 7b       	lsl	r11,0xb
8000895c:	f7 ea 13 5b 	or	r11,r11,r10>>0x15
80008960:	ab 7a       	lsl	r10,0xb
80008962:	bf bb       	sbr	r11,0x1f
80008964:	f2 06 16 14 	lsr	r6,r9,0x14
80008968:	c4 50       	breq	800089f2 <__avr32_f64_sub_opL_subnormal>
8000896a:	ab 79       	lsl	r9,0xb
8000896c:	f3 e8 13 59 	or	r9,r9,r8>>0x15
80008970:	ab 78       	lsl	r8,0xb
80008972:	bf b9       	sbr	r9,0x1f

80008974 <__avr32_f64_sub_opL_subnormal_done>:
80008974:	e0 47 07 ff 	cp.w	r7,2047
80008978:	c5 00       	breq	80008a18 <__avr32_f64_sub_opH_nan_or_inf>
8000897a:	0e 26       	rsub	r6,r7
8000897c:	c1 20       	breq	800089a0 <__avr32_f64_sub_shift_done>
8000897e:	ec 05 11 20 	rsub	r5,r6,32
80008982:	e0 46 00 20 	cp.w	r6,32
80008986:	c7 d2       	brcc	80008a80 <__avr32_f64_sub_longshift>
80008988:	f0 05 09 4e 	lsl	lr,r8,r5
8000898c:	f2 05 09 45 	lsl	r5,r9,r5
80008990:	f0 06 0a 48 	lsr	r8,r8,r6
80008994:	f2 06 0a 49 	lsr	r9,r9,r6
80008998:	0a 48       	or	r8,r5
8000899a:	58 0e       	cp.w	lr,0
8000899c:	5f 1e       	srne	lr
8000899e:	1c 48       	or	r8,lr

800089a0 <__avr32_f64_sub_shift_done>:
800089a0:	10 1a       	sub	r10,r8
800089a2:	f6 09 01 4b 	sbc	r11,r11,r9
800089a6:	f6 06 12 00 	clz	r6,r11
800089aa:	c0 e0       	breq	800089c6 <__avr32_f64_sub_longnormalize_done>
800089ac:	c7 93       	brcs	80008a9e <__avr32_f64_sub_longnormalize>
800089ae:	ec 0e 11 20 	rsub	lr,r6,32
800089b2:	f6 06 09 4b 	lsl	r11,r11,r6
800089b6:	f4 0e 0a 4e 	lsr	lr,r10,lr
800089ba:	1c 4b       	or	r11,lr
800089bc:	f4 06 09 4a 	lsl	r10,r10,r6
800089c0:	0c 17       	sub	r7,r6
800089c2:	e0 8a 00 3a 	brle	80008a36 <__avr32_f64_sub_subnormal_result>

800089c6 <__avr32_f64_sub_longnormalize_done>:
800089c6:	f4 09 15 15 	lsl	r9,r10,0x15
800089ca:	ab 9a       	lsr	r10,0xb
800089cc:	f5 eb 11 5a 	or	r10,r10,r11<<0x15
800089d0:	ab 9b       	lsr	r11,0xb
800089d2:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
800089d6:	18 4b       	or	r11,r12

800089d8 <__avr32_f64_sub_round>:
800089d8:	30 07       	mov	r7,0
800089da:	ea 17 80 00 	orh	r7,0x8000
800089de:	ed ba 00 00 	bld	r10,0x0
800089e2:	f7 b7 01 ff 	subne	r7,-1
800089e6:	0e 39       	cp.w	r9,r7
800089e8:	5f 29       	srhs	r9
800089ea:	12 0a       	add	r10,r9
800089ec:	5c 0b       	acr	r11
800089ee:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

800089f2 <__avr32_f64_sub_opL_subnormal>:
800089f2:	ab 79       	lsl	r9,0xb
800089f4:	f3 e8 13 59 	or	r9,r9,r8>>0x15
800089f8:	ab 78       	lsl	r8,0xb
800089fa:	f3 e8 10 0e 	or	lr,r9,r8
800089fe:	f9 b6 01 01 	movne	r6,1
80008a02:	ee 0e 11 00 	rsub	lr,r7,0
80008a06:	f9 b7 00 01 	moveq	r7,1
80008a0a:	ef bb 00 1f 	bst	r11,0x1f
80008a0e:	f7 ea 10 0e 	or	lr,r11,r10
80008a12:	f9 b7 00 00 	moveq	r7,0
80008a16:	ca fb       	rjmp	80008974 <__avr32_f64_sub_opL_subnormal_done>

80008a18 <__avr32_f64_sub_opH_nan_or_inf>:
80008a18:	bf db       	cbr	r11,0x1f
80008a1a:	f7 ea 10 0e 	or	lr,r11,r10
80008a1e:	c0 81       	brne	80008a2e <__avr32_f64_sub_return_nan>
80008a20:	e0 46 07 ff 	cp.w	r6,2047
80008a24:	c0 50       	breq	80008a2e <__avr32_f64_sub_return_nan>
80008a26:	f9 e7 11 4b 	or	r11,r12,r7<<0x14
80008a2a:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008a2e <__avr32_f64_sub_return_nan>:
80008a2e:	3f fa       	mov	r10,-1
80008a30:	3f fb       	mov	r11,-1
80008a32:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008a36 <__avr32_f64_sub_subnormal_result>:
80008a36:	5c 37       	neg	r7
80008a38:	2f f7       	sub	r7,-1
80008a3a:	f1 b7 04 c0 	satu	r7,0x6
80008a3e:	e0 47 00 20 	cp.w	r7,32
80008a42:	c1 14       	brge	80008a64 <__avr32_f64_sub_subnormal_result+0x2e>
80008a44:	ee 08 11 20 	rsub	r8,r7,32
80008a48:	f4 08 09 49 	lsl	r9,r10,r8
80008a4c:	5f 16       	srne	r6
80008a4e:	f4 07 0a 4a 	lsr	r10,r10,r7
80008a52:	0c 4a       	or	r10,r6
80008a54:	f6 08 09 49 	lsl	r9,r11,r8
80008a58:	f5 e9 10 0a 	or	r10,r10,r9
80008a5c:	f4 07 0a 4b 	lsr	r11,r10,r7
80008a60:	30 07       	mov	r7,0
80008a62:	cb 2b       	rjmp	800089c6 <__avr32_f64_sub_longnormalize_done>
80008a64:	ee 08 11 40 	rsub	r8,r7,64
80008a68:	f6 08 09 49 	lsl	r9,r11,r8
80008a6c:	14 49       	or	r9,r10
80008a6e:	5f 16       	srne	r6
80008a70:	f6 07 0a 4a 	lsr	r10,r11,r7
80008a74:	0c 4a       	or	r10,r6
80008a76:	30 0b       	mov	r11,0
80008a78:	30 07       	mov	r7,0
80008a7a:	ca 6b       	rjmp	800089c6 <__avr32_f64_sub_longnormalize_done>
80008a7c:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008a80 <__avr32_f64_sub_longshift>:
80008a80:	f1 b6 04 c0 	satu	r6,0x6
80008a84:	f0 0e 17 00 	moveq	lr,r8
80008a88:	c0 40       	breq	80008a90 <__avr32_f64_sub_longshift+0x10>
80008a8a:	f2 05 09 4e 	lsl	lr,r9,r5
80008a8e:	10 4e       	or	lr,r8
80008a90:	f2 06 0a 48 	lsr	r8,r9,r6
80008a94:	30 09       	mov	r9,0
80008a96:	58 0e       	cp.w	lr,0
80008a98:	5f 1e       	srne	lr
80008a9a:	1c 48       	or	r8,lr
80008a9c:	c8 2b       	rjmp	800089a0 <__avr32_f64_sub_shift_done>

80008a9e <__avr32_f64_sub_longnormalize>:
80008a9e:	f4 06 12 00 	clz	r6,r10
80008aa2:	f9 b7 03 00 	movlo	r7,0
80008aa6:	f9 b6 03 00 	movlo	r6,0
80008aaa:	f9 bc 03 00 	movlo	r12,0
80008aae:	f7 b6 02 e0 	subhs	r6,-32
80008ab2:	f4 06 09 4b 	lsl	r11,r10,r6
80008ab6:	30 0a       	mov	r10,0
80008ab8:	0c 17       	sub	r7,r6
80008aba:	fe 9a ff be 	brle	80008a36 <__avr32_f64_sub_subnormal_result>
80008abe:	c8 4b       	rjmp	800089c6 <__avr32_f64_sub_longnormalize_done>

80008ac0 <__avr32_f64_add_from_sub>:
80008ac0:	ee 19 80 00 	eorh	r9,0x8000

80008ac4 <__avr32_f64_add>:
80008ac4:	f7 e9 20 0c 	eor	r12,r11,r9
80008ac8:	fe 96 ff 2e 	brmi	80008924 <__avr32_f64_sub_from_add>
80008acc:	eb cd 40 e0 	pushm	r5-r7,lr
80008ad0:	16 9c       	mov	r12,r11
80008ad2:	e6 1c 80 00 	andh	r12,0x8000,COH
80008ad6:	bf db       	cbr	r11,0x1f
80008ad8:	bf d9       	cbr	r9,0x1f
80008ada:	12 3b       	cp.w	r11,r9
80008adc:	c0 72       	brcc	80008aea <__avr32_f64_add+0x26>
80008ade:	16 97       	mov	r7,r11
80008ae0:	12 9b       	mov	r11,r9
80008ae2:	0e 99       	mov	r9,r7
80008ae4:	14 97       	mov	r7,r10
80008ae6:	10 9a       	mov	r10,r8
80008ae8:	0e 98       	mov	r8,r7
80008aea:	30 0e       	mov	lr,0
80008aec:	ef db c2 8b 	bfextu	r7,r11,0x14,0xb
80008af0:	f7 db c0 14 	bfextu	r11,r11,0x0,0x14
80008af4:	b5 ab       	sbr	r11,0x14
80008af6:	ed d9 c2 8b 	bfextu	r6,r9,0x14,0xb
80008afa:	c6 30       	breq	80008bc0 <__avr32_f64_add_op2_subnormal>
80008afc:	f3 d9 c0 14 	bfextu	r9,r9,0x0,0x14
80008b00:	b5 a9       	sbr	r9,0x14
80008b02:	e0 47 07 ff 	cp.w	r7,2047
80008b06:	c2 80       	breq	80008b56 <__avr32_f64_add_opH_nan_or_inf>
80008b08:	0e 26       	rsub	r6,r7
80008b0a:	c1 20       	breq	80008b2e <__avr32_f64_add_shift_done>
80008b0c:	e0 46 00 36 	cp.w	r6,54
80008b10:	c1 52       	brcc	80008b3a <__avr32_f64_add_res_of_done>
80008b12:	ec 05 11 20 	rsub	r5,r6,32
80008b16:	e0 46 00 20 	cp.w	r6,32
80008b1a:	c3 62       	brcc	80008b86 <__avr32_f64_add_longshift>
80008b1c:	f0 05 09 4e 	lsl	lr,r8,r5
80008b20:	f2 05 09 45 	lsl	r5,r9,r5
80008b24:	f0 06 0a 48 	lsr	r8,r8,r6
80008b28:	f2 06 0a 49 	lsr	r9,r9,r6
80008b2c:	0a 48       	or	r8,r5

80008b2e <__avr32_f64_add_shift_done>:
80008b2e:	10 0a       	add	r10,r8
80008b30:	f6 09 00 4b 	adc	r11,r11,r9
80008b34:	ed bb 00 15 	bld	r11,0x15
80008b38:	c3 50       	breq	80008ba2 <__avr32_f64_add_res_of>

80008b3a <__avr32_f64_add_res_of_done>:
80008b3a:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
80008b3e:	18 4b       	or	r11,r12

80008b40 <__avr32_f64_add_round>:
80008b40:	f9 da c0 01 	bfextu	r12,r10,0x0,0x1
80008b44:	18 4e       	or	lr,r12
80008b46:	ee 1e 80 00 	eorh	lr,0x8000
80008b4a:	f1 be 04 20 	satu	lr,0x1
80008b4e:	1c 0a       	add	r10,lr
80008b50:	5c 0b       	acr	r11
80008b52:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008b56 <__avr32_f64_add_opH_nan_or_inf>:
80008b56:	b5 cb       	cbr	r11,0x14
80008b58:	f7 ea 10 0e 	or	lr,r11,r10
80008b5c:	c1 11       	brne	80008b7e <__avr32_f64_add_return_nan>
80008b5e:	e0 46 07 ff 	cp.w	r6,2047
80008b62:	c0 30       	breq	80008b68 <__avr32_f64_add_opL_nan_or_inf>
80008b64:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008b68 <__avr32_f64_add_opL_nan_or_inf>:
80008b68:	b5 c9       	cbr	r9,0x14
80008b6a:	f3 e8 10 0e 	or	lr,r9,r8
80008b6e:	c0 81       	brne	80008b7e <__avr32_f64_add_return_nan>
80008b70:	30 0a       	mov	r10,0
80008b72:	30 0b       	mov	r11,0
80008b74:	ea 1b 7f f0 	orh	r11,0x7ff0
80008b78:	18 4b       	or	r11,r12
80008b7a:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008b7e <__avr32_f64_add_return_nan>:
80008b7e:	3f fa       	mov	r10,-1
80008b80:	3f fb       	mov	r11,-1
80008b82:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008b86 <__avr32_f64_add_longshift>:
80008b86:	f1 b6 04 c0 	satu	r6,0x6
80008b8a:	f0 0e 17 00 	moveq	lr,r8
80008b8e:	c0 60       	breq	80008b9a <__avr32_f64_add_longshift+0x14>
80008b90:	f2 05 09 4e 	lsl	lr,r9,r5
80008b94:	58 08       	cp.w	r8,0
80008b96:	5f 18       	srne	r8
80008b98:	10 4e       	or	lr,r8
80008b9a:	f2 06 0a 48 	lsr	r8,r9,r6
80008b9e:	30 09       	mov	r9,0
80008ba0:	cc 7b       	rjmp	80008b2e <__avr32_f64_add_shift_done>

80008ba2 <__avr32_f64_add_res_of>:
80008ba2:	fd ee 10 1e 	or	lr,lr,lr<<0x1
80008ba6:	a1 9b       	lsr	r11,0x1
80008ba8:	5d 0a       	ror	r10
80008baa:	5d 0e       	ror	lr
80008bac:	2f f7       	sub	r7,-1
80008bae:	e0 47 07 ff 	cp.w	r7,2047
80008bb2:	f9 ba 00 00 	moveq	r10,0
80008bb6:	f9 bb 00 00 	moveq	r11,0
80008bba:	f9 be 00 00 	moveq	lr,0
80008bbe:	cb eb       	rjmp	80008b3a <__avr32_f64_add_res_of_done>

80008bc0 <__avr32_f64_add_op2_subnormal>:
80008bc0:	30 16       	mov	r6,1
80008bc2:	58 07       	cp.w	r7,0
80008bc4:	c9 f1       	brne	80008b02 <__avr32_f64_add+0x3e>
80008bc6:	b5 cb       	cbr	r11,0x14
80008bc8:	10 0a       	add	r10,r8
80008bca:	f6 09 00 4b 	adc	r11,r11,r9
80008bce:	18 4b       	or	r11,r12
80008bd0:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008bd4 <__avr32_f64_to_u32>:
80008bd4:	58 0b       	cp.w	r11,0
80008bd6:	5e 6d       	retmi	0

80008bd8 <__avr32_f64_to_s32>:
80008bd8:	f6 0c 15 01 	lsl	r12,r11,0x1
80008bdc:	b5 9c       	lsr	r12,0x15
80008bde:	e0 2c 03 ff 	sub	r12,1023
80008be2:	5e 3d       	retlo	0
80008be4:	f8 0c 11 1f 	rsub	r12,r12,31
80008be8:	16 99       	mov	r9,r11
80008bea:	ab 7b       	lsl	r11,0xb
80008bec:	bf bb       	sbr	r11,0x1f
80008bee:	f7 ea 13 5b 	or	r11,r11,r10>>0x15
80008bf2:	f6 0c 0a 4b 	lsr	r11,r11,r12
80008bf6:	a1 79       	lsl	r9,0x1
80008bf8:	5e 2b       	reths	r11
80008bfa:	5c 3b       	neg	r11
80008bfc:	5e fb       	retal	r11

80008bfe <__avr32_f32_cmp_lt>:
80008bfe:	f8 0a 15 01 	lsl	r10,r12,0x1
80008c02:	f6 09 15 01 	lsl	r9,r11,0x1
80008c06:	f5 ba 00 00 	subfeq	r10,0
80008c0a:	5e 0d       	reteq	0
80008c0c:	30 08       	mov	r8,0
80008c0e:	ea 18 ff 00 	orh	r8,0xff00
80008c12:	10 3a       	cp.w	r10,r8
80008c14:	5e bd       	rethi	0
80008c16:	10 39       	cp.w	r9,r8
80008c18:	5e bd       	rethi	0
80008c1a:	f7 ec 20 08 	eor	r8,r11,r12
80008c1e:	ed bc 00 1f 	bld	r12,0x1f
80008c22:	5f 38       	srlo	r8
80008c24:	5e 68       	retmi	r8
80008c26:	c0 43       	brcs	80008c2e <__avr32_f32_cmp_lt+0x30>
80008c28:	16 3c       	cp.w	r12,r11
80008c2a:	5e 2d       	reths	0
80008c2c:	5e 3f       	retlo	1
80008c2e:	18 3b       	cp.w	r11,r12
80008c30:	5e 2d       	reths	0
80008c32:	5e 3f       	retlo	1

80008c34 <__avr32_f64_div>:
80008c34:	eb cd 40 ff 	pushm	r0-r7,lr
80008c38:	f7 e9 20 0e 	eor	lr,r11,r9
80008c3c:	f6 07 16 14 	lsr	r7,r11,0x14
80008c40:	a9 7b       	lsl	r11,0x9
80008c42:	f7 ea 13 7b 	or	r11,r11,r10>>0x17
80008c46:	a9 7a       	lsl	r10,0x9
80008c48:	bd bb       	sbr	r11,0x1d
80008c4a:	e4 1b 3f ff 	andh	r11,0x3fff
80008c4e:	ab d7       	cbr	r7,0xb
80008c50:	e0 80 00 cd 	breq	80008dea <__avr32_f64_div_round_subnormal+0x54>
80008c54:	e0 47 07 ff 	cp.w	r7,2047
80008c58:	e0 84 00 b6 	brge	80008dc4 <__avr32_f64_div_round_subnormal+0x2e>
80008c5c:	f2 06 16 14 	lsr	r6,r9,0x14
80008c60:	a9 79       	lsl	r9,0x9
80008c62:	f3 e8 13 79 	or	r9,r9,r8>>0x17
80008c66:	a9 78       	lsl	r8,0x9
80008c68:	bd b9       	sbr	r9,0x1d
80008c6a:	e4 19 3f ff 	andh	r9,0x3fff
80008c6e:	ab d6       	cbr	r6,0xb
80008c70:	e0 80 00 e3 	breq	80008e36 <__avr32_f64_div_round_subnormal+0xa0>
80008c74:	e0 46 07 ff 	cp.w	r6,2047
80008c78:	e0 84 00 b3 	brge	80008dde <__avr32_f64_div_round_subnormal+0x48>
80008c7c:	0c 17       	sub	r7,r6
80008c7e:	fe 37 fc 01 	sub	r7,-1023
80008c82:	30 0c       	mov	r12,0
80008c84:	ea 1c 80 00 	orh	r12,0x8000
80008c88:	f8 03 16 01 	lsr	r3,r12,0x1
80008c8c:	e9 d9 c3 62 	bfextu	r4,r9,0x1b,0x2
80008c90:	5c d4       	com	r4
80008c92:	e7 d4 d3 82 	bfins	r3,r4,0x1c,0x2
80008c96:	e6 09 06 44 	mulu.d	r4,r3,r9
80008c9a:	f8 05 01 25 	sub	r5,r12,r5<<0x2
80008c9e:	e6 05 06 44 	mulu.d	r4,r3,r5
80008ca2:	ea 03 15 02 	lsl	r3,r5,0x2
80008ca6:	e6 09 06 44 	mulu.d	r4,r3,r9
80008caa:	f8 05 01 25 	sub	r5,r12,r5<<0x2
80008cae:	e6 05 06 44 	mulu.d	r4,r3,r5
80008cb2:	ea 03 15 02 	lsl	r3,r5,0x2
80008cb6:	e6 09 06 44 	mulu.d	r4,r3,r9
80008cba:	f8 05 01 25 	sub	r5,r12,r5<<0x2
80008cbe:	e6 05 06 44 	mulu.d	r4,r3,r5
80008cc2:	ea 03 15 02 	lsl	r3,r5,0x2
80008cc6:	e6 08 06 40 	mulu.d	r0,r3,r8
80008cca:	e4 09 07 40 	macu.d	r0,r2,r9
80008cce:	e6 09 06 44 	mulu.d	r4,r3,r9
80008cd2:	02 04       	add	r4,r1
80008cd4:	5c 05       	acr	r5
80008cd6:	a3 65       	lsl	r5,0x2
80008cd8:	eb e4 13 e5 	or	r5,r5,r4>>0x1e
80008cdc:	a3 64       	lsl	r4,0x2
80008cde:	5c 34       	neg	r4
80008ce0:	f8 05 01 45 	sbc	r5,r12,r5
80008ce4:	e6 04 06 40 	mulu.d	r0,r3,r4
80008ce8:	e4 05 07 40 	macu.d	r0,r2,r5
80008cec:	e6 05 06 44 	mulu.d	r4,r3,r5
80008cf0:	02 04       	add	r4,r1
80008cf2:	5c 05       	acr	r5
80008cf4:	ea 03 15 02 	lsl	r3,r5,0x2
80008cf8:	e7 e4 13 e3 	or	r3,r3,r4>>0x1e
80008cfc:	e8 02 15 02 	lsl	r2,r4,0x2
80008d00:	e6 08 06 40 	mulu.d	r0,r3,r8
80008d04:	e4 09 07 40 	macu.d	r0,r2,r9
80008d08:	e6 09 06 44 	mulu.d	r4,r3,r9
80008d0c:	02 04       	add	r4,r1
80008d0e:	5c 05       	acr	r5
80008d10:	a3 65       	lsl	r5,0x2
80008d12:	eb e4 13 e5 	or	r5,r5,r4>>0x1e
80008d16:	a3 64       	lsl	r4,0x2
80008d18:	5c 34       	neg	r4
80008d1a:	f8 05 01 45 	sbc	r5,r12,r5
80008d1e:	e6 04 06 40 	mulu.d	r0,r3,r4
80008d22:	e4 05 07 40 	macu.d	r0,r2,r5
80008d26:	e6 05 06 44 	mulu.d	r4,r3,r5
80008d2a:	02 04       	add	r4,r1
80008d2c:	5c 05       	acr	r5
80008d2e:	ea 03 15 02 	lsl	r3,r5,0x2
80008d32:	e7 e4 13 e3 	or	r3,r3,r4>>0x1e
80008d36:	e8 02 15 02 	lsl	r2,r4,0x2
80008d3a:	e6 0a 06 40 	mulu.d	r0,r3,r10
80008d3e:	e4 0b 07 40 	macu.d	r0,r2,r11
80008d42:	e6 0b 06 42 	mulu.d	r2,r3,r11
80008d46:	02 02       	add	r2,r1
80008d48:	5c 03       	acr	r3
80008d4a:	ed b3 00 1c 	bld	r3,0x1c
80008d4e:	c0 90       	breq	80008d60 <__avr32_f64_div+0x12c>
80008d50:	a1 72       	lsl	r2,0x1
80008d52:	5c f3       	rol	r3
80008d54:	20 17       	sub	r7,1
80008d56:	a3 9a       	lsr	r10,0x3
80008d58:	f5 eb 11 da 	or	r10,r10,r11<<0x1d
80008d5c:	a3 9b       	lsr	r11,0x3
80008d5e:	c0 58       	rjmp	80008d68 <__avr32_f64_div+0x134>
80008d60:	a5 8a       	lsr	r10,0x4
80008d62:	f5 eb 11 ca 	or	r10,r10,r11<<0x1c
80008d66:	a5 8b       	lsr	r11,0x4
80008d68:	58 07       	cp.w	r7,0
80008d6a:	e0 8a 00 8b 	brle	80008e80 <__avr32_f64_div_res_subnormal>
80008d6e:	e0 12 ff 00 	andl	r2,0xff00
80008d72:	e8 12 00 80 	orl	r2,0x80
80008d76:	e6 08 06 40 	mulu.d	r0,r3,r8
80008d7a:	e4 09 07 40 	macu.d	r0,r2,r9
80008d7e:	e4 08 06 44 	mulu.d	r4,r2,r8
80008d82:	e6 09 06 48 	mulu.d	r8,r3,r9
80008d86:	00 05       	add	r5,r0
80008d88:	f0 01 00 48 	adc	r8,r8,r1
80008d8c:	5c 09       	acr	r9
80008d8e:	f9 d2 c1 01 	bfextu	r12,r2,0x8,0x1
80008d92:	58 04       	cp.w	r4,0
80008d94:	5c 25       	cpc	r5

80008d96 <__avr32_f64_div_round_subnormal>:
80008d96:	f4 08 13 00 	cpc	r8,r10
80008d9a:	f6 09 13 00 	cpc	r9,r11
80008d9e:	5f 36       	srlo	r6
80008da0:	f8 06 17 00 	moveq	r6,r12
80008da4:	e4 0a 16 08 	lsr	r10,r2,0x8
80008da8:	f5 e3 11 8a 	or	r10,r10,r3<<0x18
80008dac:	e6 0b 16 08 	lsr	r11,r3,0x8
80008db0:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
80008db4:	ed be 00 1f 	bld	lr,0x1f
80008db8:	ef bb 00 1f 	bst	r11,0x1f
80008dbc:	0c 0a       	add	r10,r6
80008dbe:	5c 0b       	acr	r11
80008dc0:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
80008dc4:	e4 1b 00 0f 	andh	r11,0xf
80008dc8:	14 4b       	or	r11,r10
80008dca:	e0 81 00 a7 	brne	80008f18 <__avr32_f64_div_res_subnormal+0x98>
80008dce:	f2 06 16 14 	lsr	r6,r9,0x14
80008dd2:	ab d6       	cbr	r6,0xb
80008dd4:	e0 46 07 ff 	cp.w	r6,2047
80008dd8:	e0 81 00 a4 	brne	80008f20 <__avr32_f64_div_res_subnormal+0xa0>
80008ddc:	c9 e8       	rjmp	80008f18 <__avr32_f64_div_res_subnormal+0x98>
80008dde:	e4 19 00 0f 	andh	r9,0xf
80008de2:	10 49       	or	r9,r8
80008de4:	e0 81 00 9a 	brne	80008f18 <__avr32_f64_div_res_subnormal+0x98>
80008de8:	c9 28       	rjmp	80008f0c <__avr32_f64_div_res_subnormal+0x8c>
80008dea:	a3 7b       	lsl	r11,0x3
80008dec:	f7 ea 13 db 	or	r11,r11,r10>>0x1d
80008df0:	a3 7a       	lsl	r10,0x3
80008df2:	f5 eb 10 04 	or	r4,r10,r11
80008df6:	e0 80 00 a0 	breq	80008f36 <__avr32_f64_div_op1_zero>
80008dfa:	f6 04 12 00 	clz	r4,r11
80008dfe:	c1 70       	breq	80008e2c <__avr32_f64_div_round_subnormal+0x96>
80008e00:	c0 c3       	brcs	80008e18 <__avr32_f64_div_round_subnormal+0x82>
80008e02:	e8 05 11 20 	rsub	r5,r4,32
80008e06:	f6 04 09 4b 	lsl	r11,r11,r4
80008e0a:	f4 05 0a 45 	lsr	r5,r10,r5
80008e0e:	0a 4b       	or	r11,r5
80008e10:	f4 04 09 4a 	lsl	r10,r10,r4
80008e14:	08 17       	sub	r7,r4
80008e16:	c0 b8       	rjmp	80008e2c <__avr32_f64_div_round_subnormal+0x96>
80008e18:	f4 04 12 00 	clz	r4,r10
80008e1c:	f9 b4 03 00 	movlo	r4,0
80008e20:	f7 b4 02 e0 	subhs	r4,-32
80008e24:	f4 04 09 4b 	lsl	r11,r10,r4
80008e28:	30 0a       	mov	r10,0
80008e2a:	08 17       	sub	r7,r4
80008e2c:	a3 8a       	lsr	r10,0x2
80008e2e:	f5 eb 11 ea 	or	r10,r10,r11<<0x1e
80008e32:	a3 8b       	lsr	r11,0x2
80008e34:	c1 0b       	rjmp	80008c54 <__avr32_f64_div+0x20>
80008e36:	a3 79       	lsl	r9,0x3
80008e38:	f3 e8 13 d9 	or	r9,r9,r8>>0x1d
80008e3c:	a3 78       	lsl	r8,0x3
80008e3e:	f3 e8 10 04 	or	r4,r9,r8
80008e42:	c6 f0       	breq	80008f20 <__avr32_f64_div_res_subnormal+0xa0>
80008e44:	f2 04 12 00 	clz	r4,r9
80008e48:	c1 70       	breq	80008e76 <__avr32_f64_div_round_subnormal+0xe0>
80008e4a:	c0 c3       	brcs	80008e62 <__avr32_f64_div_round_subnormal+0xcc>
80008e4c:	e8 05 11 20 	rsub	r5,r4,32
80008e50:	f2 04 09 49 	lsl	r9,r9,r4
80008e54:	f0 05 0a 45 	lsr	r5,r8,r5
80008e58:	0a 49       	or	r9,r5
80008e5a:	f0 04 09 48 	lsl	r8,r8,r4
80008e5e:	08 16       	sub	r6,r4
80008e60:	c0 b8       	rjmp	80008e76 <__avr32_f64_div_round_subnormal+0xe0>
80008e62:	f0 04 12 00 	clz	r4,r8
80008e66:	f9 b4 03 00 	movlo	r4,0
80008e6a:	f7 b4 02 e0 	subhs	r4,-32
80008e6e:	f0 04 09 49 	lsl	r9,r8,r4
80008e72:	30 08       	mov	r8,0
80008e74:	08 16       	sub	r6,r4
80008e76:	a3 88       	lsr	r8,0x2
80008e78:	f1 e9 11 e8 	or	r8,r8,r9<<0x1e
80008e7c:	a3 89       	lsr	r9,0x2
80008e7e:	cf ba       	rjmp	80008c74 <__avr32_f64_div+0x40>

80008e80 <__avr32_f64_div_res_subnormal>:
80008e80:	5c 37       	neg	r7
80008e82:	2f f7       	sub	r7,-1
80008e84:	f1 b7 04 c0 	satu	r7,0x6
80008e88:	e0 47 00 20 	cp.w	r7,32
80008e8c:	c1 54       	brge	80008eb6 <__avr32_f64_div_res_subnormal+0x36>
80008e8e:	ee 06 11 20 	rsub	r6,r7,32
80008e92:	e4 07 0a 42 	lsr	r2,r2,r7
80008e96:	e6 06 09 4c 	lsl	r12,r3,r6
80008e9a:	18 42       	or	r2,r12
80008e9c:	e6 07 0a 43 	lsr	r3,r3,r7
80008ea0:	f4 06 09 41 	lsl	r1,r10,r6
80008ea4:	f4 07 0a 4a 	lsr	r10,r10,r7
80008ea8:	f6 06 09 4c 	lsl	r12,r11,r6
80008eac:	18 4a       	or	r10,r12
80008eae:	f6 07 0a 4b 	lsr	r11,r11,r7
80008eb2:	30 00       	mov	r0,0
80008eb4:	c1 58       	rjmp	80008ede <__avr32_f64_div_res_subnormal+0x5e>
80008eb6:	ee 06 11 20 	rsub	r6,r7,32
80008eba:	f9 b0 00 00 	moveq	r0,0
80008ebe:	f9 bc 00 00 	moveq	r12,0
80008ec2:	c0 50       	breq	80008ecc <__avr32_f64_div_res_subnormal+0x4c>
80008ec4:	f4 06 09 40 	lsl	r0,r10,r6
80008ec8:	f6 06 09 4c 	lsl	r12,r11,r6
80008ecc:	e6 07 0a 42 	lsr	r2,r3,r7
80008ed0:	30 03       	mov	r3,0
80008ed2:	f4 07 0a 41 	lsr	r1,r10,r7
80008ed6:	18 41       	or	r1,r12
80008ed8:	f6 07 0a 4a 	lsr	r10,r11,r7
80008edc:	30 0b       	mov	r11,0
80008ede:	e0 12 ff 00 	andl	r2,0xff00
80008ee2:	e8 12 00 80 	orl	r2,0x80
80008ee6:	e6 08 06 46 	mulu.d	r6,r3,r8
80008eea:	e4 09 07 46 	macu.d	r6,r2,r9
80008eee:	e4 08 06 44 	mulu.d	r4,r2,r8
80008ef2:	e6 09 06 48 	mulu.d	r8,r3,r9
80008ef6:	0c 05       	add	r5,r6
80008ef8:	f0 07 00 48 	adc	r8,r8,r7
80008efc:	5c 09       	acr	r9
80008efe:	30 07       	mov	r7,0
80008f00:	f9 d2 c1 01 	bfextu	r12,r2,0x8,0x1
80008f04:	00 34       	cp.w	r4,r0
80008f06:	e2 05 13 00 	cpc	r5,r1
80008f0a:	c4 6b       	rjmp	80008d96 <__avr32_f64_div_round_subnormal>
80008f0c:	1c 9b       	mov	r11,lr
80008f0e:	e6 1b 80 00 	andh	r11,0x8000,COH
80008f12:	30 0a       	mov	r10,0
80008f14:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
80008f18:	3f fb       	mov	r11,-1
80008f1a:	30 0a       	mov	r10,0
80008f1c:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
80008f20:	f5 eb 10 04 	or	r4,r10,r11
80008f24:	c0 90       	breq	80008f36 <__avr32_f64_div_op1_zero>
80008f26:	1c 9b       	mov	r11,lr
80008f28:	e6 1b 80 00 	andh	r11,0x8000,COH
80008f2c:	ea 1b 7f f0 	orh	r11,0x7ff0
80008f30:	30 0a       	mov	r10,0
80008f32:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc

80008f36 <__avr32_f64_div_op1_zero>:
80008f36:	f1 e9 10 15 	or	r5,r8,r9<<0x1
80008f3a:	ce f0       	breq	80008f18 <__avr32_f64_div_res_subnormal+0x98>
80008f3c:	e9 d9 c2 8b 	bfextu	r4,r9,0x14,0xb
80008f40:	e0 44 07 ff 	cp.w	r4,2047
80008f44:	ce 41       	brne	80008f0c <__avr32_f64_div_res_subnormal+0x8c>
80008f46:	f1 e9 10 c5 	or	r5,r8,r9<<0xc
80008f4a:	ce 10       	breq	80008f0c <__avr32_f64_div_res_subnormal+0x8c>
80008f4c:	ce 6b       	rjmp	80008f18 <__avr32_f64_div_res_subnormal+0x98>
	...

80008f50 <__avr32_f32_div>:
80008f50:	f7 ec 20 08 	eor	r8,r11,r12
80008f54:	a1 7c       	lsl	r12,0x1
80008f56:	a1 7b       	lsl	r11,0x1
80008f58:	c7 e0       	breq	80009054 <__divsf_return_op1+0x18>
80008f5a:	18 7c       	tst	r12,r12
80008f5c:	f9 b9 00 00 	moveq	r9,0
80008f60:	c0 a0       	breq	80008f74 <__avr32_f32_div+0x24>
80008f62:	f8 09 16 18 	lsr	r9,r12,0x18
80008f66:	e0 80 00 83 	breq	8000906c <__divsf_return_op1+0x30>
80008f6a:	e0 49 00 ff 	cp.w	r9,255
80008f6e:	c6 a2       	brcc	80009042 <__divsf_return_op1+0x6>
80008f70:	a7 7c       	lsl	r12,0x7
80008f72:	bf bc       	sbr	r12,0x1f
80008f74:	f6 0a 16 18 	lsr	r10,r11,0x18
80008f78:	e0 80 00 82 	breq	8000907c <__divsf_return_op1+0x40>
80008f7c:	e0 4a 00 ff 	cp.w	r10,255
80008f80:	c6 82       	brcc	80009050 <__divsf_return_op1+0x14>
80008f82:	a7 7b       	lsl	r11,0x7
80008f84:	bf bb       	sbr	r11,0x1f
80008f86:	58 09       	cp.w	r9,0
80008f88:	f5 bc 00 00 	subfeq	r12,0
80008f8c:	5e 0d       	reteq	0
80008f8e:	1a d5       	st.w	--sp,r5
80008f90:	bb 27       	st.d	--sp,r6
80008f92:	14 19       	sub	r9,r10
80008f94:	28 19       	sub	r9,-127
80008f96:	30 0a       	mov	r10,0
80008f98:	ea 1a 80 00 	orh	r10,0x8000
80008f9c:	a3 8c       	lsr	r12,0x2
80008f9e:	f6 05 16 02 	lsr	r5,r11,0x2
80008fa2:	f4 0b 16 01 	lsr	r11,r10,0x1
80008fa6:	ed d5 c3 62 	bfextu	r6,r5,0x1b,0x2
80008faa:	5c d6       	com	r6
80008fac:	f7 d6 d3 82 	bfins	r11,r6,0x1c,0x2
80008fb0:	f6 05 06 46 	mulu.d	r6,r11,r5
80008fb4:	f4 07 01 27 	sub	r7,r10,r7<<0x2
80008fb8:	f6 07 06 46 	mulu.d	r6,r11,r7
80008fbc:	ee 0b 15 02 	lsl	r11,r7,0x2
80008fc0:	f6 05 06 46 	mulu.d	r6,r11,r5
80008fc4:	f4 07 01 27 	sub	r7,r10,r7<<0x2
80008fc8:	f6 07 06 46 	mulu.d	r6,r11,r7
80008fcc:	ee 0b 15 02 	lsl	r11,r7,0x2
80008fd0:	f6 05 06 46 	mulu.d	r6,r11,r5
80008fd4:	f4 07 01 27 	sub	r7,r10,r7<<0x2
80008fd8:	f6 07 06 46 	mulu.d	r6,r11,r7
80008fdc:	ee 0b 15 02 	lsl	r11,r7,0x2
80008fe0:	f6 05 06 46 	mulu.d	r6,r11,r5
80008fe4:	f4 07 01 27 	sub	r7,r10,r7<<0x2
80008fe8:	f6 07 06 46 	mulu.d	r6,r11,r7
80008fec:	ee 0b 15 02 	lsl	r11,r7,0x2
80008ff0:	f6 0c 06 46 	mulu.d	r6,r11,r12
80008ff4:	a5 8c       	lsr	r12,0x4
80008ff6:	ed b7 00 1c 	bld	r7,0x1c
80008ffa:	c0 40       	breq	80009002 <__avr32_f32_div+0xb2>
80008ffc:	a1 77       	lsl	r7,0x1
80008ffe:	20 19       	sub	r9,1
80009000:	a1 7c       	lsl	r12,0x1
80009002:	58 09       	cp.w	r9,0
80009004:	e0 8a 00 44 	brle	8000908c <__avr32_f32_div_res_subnormal>
80009008:	e0 17 ff e0 	andl	r7,0xffe0
8000900c:	e8 17 00 10 	orl	r7,0x10
80009010:	ea 07 06 4a 	mulu.d	r10,r5,r7
80009014:	eb d7 c0 a1 	bfextu	r5,r7,0x5,0x1
80009018:	58 0a       	cp.w	r10,0

8000901a <__avr32_f32_div_round_subnormal>:
8000901a:	f8 0b 13 00 	cpc	r11,r12
8000901e:	5f 3b       	srlo	r11
80009020:	ea 0b 17 00 	moveq	r11,r5
80009024:	ee 0c 16 05 	lsr	r12,r7,0x5
80009028:	f9 d9 d2 e8 	bfins	r12,r9,0x17,0x8
8000902c:	bb 07       	ld.d	r6,sp++
8000902e:	1b 05       	ld.w	r5,sp++
80009030:	ed b8 00 1f 	bld	r8,0x1f
80009034:	ef bc 00 1f 	bst	r12,0x1f
80009038:	16 0c       	add	r12,r11
8000903a:	5e fc       	retal	r12

8000903c <__divsf_return_op1>:
8000903c:	a1 78       	lsl	r8,0x1
8000903e:	5d 0c       	ror	r12
80009040:	5e fc       	retal	r12
80009042:	5e 1e       	retne	-1
80009044:	30 09       	mov	r9,0
80009046:	ea 19 ff 00 	orh	r9,0xff00
8000904a:	12 3b       	cp.w	r11,r9
8000904c:	cf 83       	brcs	8000903c <__divsf_return_op1>
8000904e:	5e fe       	retal	-1
80009050:	5e 0d       	reteq	0
80009052:	5e fe       	retal	-1
80009054:	18 7c       	tst	r12,r12
80009056:	5e 0e       	reteq	-1
80009058:	f8 09 16 18 	lsr	r9,r12,0x18
8000905c:	c0 80       	breq	8000906c <__divsf_return_op1+0x30>
8000905e:	e0 49 00 ff 	cp.w	r9,255
80009062:	cf 02       	brcc	80009042 <__divsf_return_op1+0x6>
80009064:	30 0c       	mov	r12,0
80009066:	ea 1c ff 00 	orh	r12,0xff00
8000906a:	ce 9b       	rjmp	8000903c <__divsf_return_op1>
8000906c:	a7 7c       	lsl	r12,0x7
8000906e:	f8 09 12 00 	clz	r9,r12
80009072:	f8 09 09 4c 	lsl	r12,r12,r9
80009076:	f2 09 11 01 	rsub	r9,r9,1
8000907a:	c7 db       	rjmp	80008f74 <__avr32_f32_div+0x24>
8000907c:	a7 7b       	lsl	r11,0x7
8000907e:	f6 0a 12 00 	clz	r10,r11
80009082:	f6 0a 09 4b 	lsl	r11,r11,r10
80009086:	f4 0a 11 01 	rsub	r10,r10,1
8000908a:	c8 2b       	rjmp	80008f8e <__avr32_f32_div+0x3e>

8000908c <__avr32_f32_div_res_subnormal>:
8000908c:	5c 39       	neg	r9
8000908e:	2f f9       	sub	r9,-1
80009090:	f1 b9 04 a0 	satu	r9,0x5
80009094:	f2 0a 11 20 	rsub	r10,r9,32
80009098:	ee 09 0a 47 	lsr	r7,r7,r9
8000909c:	f8 0a 09 46 	lsl	r6,r12,r10
800090a0:	f8 09 0a 4c 	lsr	r12,r12,r9
800090a4:	e0 17 ff e0 	andl	r7,0xffe0
800090a8:	e8 17 00 10 	orl	r7,0x10
800090ac:	ea 07 06 4a 	mulu.d	r10,r5,r7
800090b0:	30 09       	mov	r9,0
800090b2:	eb d7 c0 a1 	bfextu	r5,r7,0x5,0x1
800090b6:	0c 3a       	cp.w	r10,r6
800090b8:	cb 1b       	rjmp	8000901a <__avr32_f32_div_round_subnormal>
	...

800090bc <__avr32_f32_sub_from_add>:
800090bc:	ee 1b 80 00 	eorh	r11,0x8000

800090c0 <__avr32_f32_sub>:
800090c0:	f7 ec 20 08 	eor	r8,r11,r12
800090c4:	c6 66       	brmi	80009190 <__avr32_f32_add_from_sub>
800090c6:	18 98       	mov	r8,r12
800090c8:	e6 1c 80 00 	andh	r12,0x8000,COH
800090cc:	bf db       	cbr	r11,0x1f
800090ce:	bf d8       	cbr	r8,0x1f
800090d0:	f0 0b 0c 4a 	max	r10,r8,r11
800090d4:	f0 0b 0d 49 	min	r9,r8,r11
800090d8:	10 3a       	cp.w	r10,r8
800090da:	f7 bc 01 01 	subne	r12,1
800090de:	e6 1c 80 00 	andh	r12,0x8000,COH
800090e2:	f4 08 15 08 	lsl	r8,r10,0x8
800090e6:	bf b8       	sbr	r8,0x1f
800090e8:	b7 9a       	lsr	r10,0x17
800090ea:	e0 4a 00 ff 	cp.w	r10,255
800090ee:	c3 90       	breq	80009160 <__avr32_f32_sub_op1_nan_or_inf>
800090f0:	f2 0b 15 08 	lsl	r11,r9,0x8
800090f4:	bf bb       	sbr	r11,0x1f
800090f6:	b7 99       	lsr	r9,0x17
800090f8:	1a dc       	st.w	--sp,r12
800090fa:	c2 a0       	breq	8000914e <__avr32_f32_sub_op2_subnormal>
800090fc:	f4 09 01 0c 	sub	r12,r10,r9
80009100:	c0 c0       	breq	80009118 <__avr32_f32_sub_shift_done>
80009102:	f1 bc 04 a0 	satu	r12,0x5
80009106:	f8 09 11 20 	rsub	r9,r12,32
8000910a:	f6 09 09 49 	lsl	r9,r11,r9
8000910e:	f7 b8 01 01 	subne	r8,1
80009112:	5f 19       	srne	r9
80009114:	f6 0c 0a 4b 	lsr	r11,r11,r12

80009118 <__avr32_f32_sub_shift_done>:
80009118:	16 18       	sub	r8,r11
8000911a:	1b 0c       	ld.w	r12,sp++
8000911c:	f0 0b 12 00 	clz	r11,r8
80009120:	5e 3d       	retlo	0
80009122:	f0 0b 09 48 	lsl	r8,r8,r11
80009126:	16 1a       	sub	r10,r11
80009128:	e0 8a 00 27 	brle	80009176 <__avr32_f32_sub_subnormal_result>
8000912c:	f3 e8 11 89 	or	r9,r9,r8<<0x18
80009130:	f9 e8 12 8c 	or	r12,r12,r8>>0x8
80009134:	f9 da d2 e8 	bfins	r12,r10,0x17,0x8

80009138 <__avr32_f32_sub_round>:
80009138:	30 0a       	mov	r10,0
8000913a:	ea 1a 80 00 	orh	r10,0x8000
8000913e:	ed bc 00 00 	bld	r12,0x0
80009142:	f7 ba 01 ff 	subne	r10,-1
80009146:	14 39       	cp.w	r9,r10
80009148:	f7 bc 02 ff 	subhs	r12,-1
8000914c:	5e fc       	retal	r12

8000914e <__avr32_f32_sub_op2_subnormal>:
8000914e:	bf db       	cbr	r11,0x1f
80009150:	f9 b9 01 01 	movne	r9,1
80009154:	58 0a       	cp.w	r10,0
80009156:	cd 31       	brne	800090fc <__avr32_f32_sub+0x3c>
80009158:	bf d8       	cbr	r8,0x1f
8000915a:	f9 ba 01 01 	movne	r10,1
8000915e:	cc fb       	rjmp	800090fc <__avr32_f32_sub+0x3c>

80009160 <__avr32_f32_sub_op1_nan_or_inf>:
80009160:	f0 0b 15 01 	lsl	r11,r8,0x1
80009164:	5e 1e       	retne	-1
80009166:	f9 da d2 e8 	bfins	r12,r10,0x17,0x8
8000916a:	f2 0b 16 17 	lsr	r11,r9,0x17
8000916e:	e0 4b 00 ff 	cp.w	r11,255
80009172:	5e 1c       	retne	r12
80009174:	5e fe       	retal	-1

80009176 <__avr32_f32_sub_subnormal_result>:
80009176:	f4 0a 11 09 	rsub	r10,r10,9
8000917a:	f4 0b 11 20 	rsub	r11,r10,32
8000917e:	5e 3d       	retlo	0
80009180:	f0 0a 0a 4a 	lsr	r10,r8,r10
80009184:	14 4c       	or	r12,r10
80009186:	f0 0b 09 48 	lsl	r8,r8,r11
8000918a:	10 49       	or	r9,r8
8000918c:	cd 6b       	rjmp	80009138 <__avr32_f32_sub_round>
	...

80009190 <__avr32_f32_add_from_sub>:
80009190:	ee 1b 80 00 	eorh	r11,0x8000

80009194 <__avr32_f32_add>:
80009194:	f7 ec 20 08 	eor	r8,r11,r12
80009198:	c9 26       	brmi	800090bc <__avr32_f32_sub_from_add>
8000919a:	18 98       	mov	r8,r12
8000919c:	e6 1c 80 00 	andh	r12,0x8000,COH
800091a0:	bf db       	cbr	r11,0x1f
800091a2:	bf d8       	cbr	r8,0x1f
800091a4:	f0 0b 0c 4a 	max	r10,r8,r11
800091a8:	f0 0b 0d 49 	min	r9,r8,r11
800091ac:	f4 08 15 08 	lsl	r8,r10,0x8
800091b0:	bf b8       	sbr	r8,0x1f
800091b2:	b7 9a       	lsr	r10,0x17
800091b4:	e0 4a 00 ff 	cp.w	r10,255
800091b8:	c2 e0       	breq	80009214 <__avr32_f32_add_op1_nan_or_inf>
800091ba:	f2 0b 15 08 	lsl	r11,r9,0x8
800091be:	bf bb       	sbr	r11,0x1f
800091c0:	b7 99       	lsr	r9,0x17
800091c2:	c1 f0       	breq	80009200 <__avr32_f32_add_op2_subnormal>
800091c4:	1a dc       	st.w	--sp,r12
800091c6:	14 29       	rsub	r9,r10
800091c8:	f1 b9 04 a0 	satu	r9,0x5
800091cc:	f6 09 0a 4c 	lsr	r12,r11,r9
800091d0:	f2 09 11 18 	rsub	r9,r9,24
800091d4:	f6 09 09 4b 	lsl	r11,r11,r9
800091d8:	f7 dc d3 08 	bfins	r11,r12,0x18,0x8
800091dc:	18 08       	add	r8,r12
800091de:	1b 0c       	ld.w	r12,sp++
800091e0:	c2 73       	brcs	8000922e <__avr32_f32_add_res_of>
800091e2:	f9 e8 12 8c 	or	r12,r12,r8>>0x8
800091e6:	f9 da d2 e8 	bfins	r12,r10,0x17,0x8
800091ea:	30 0a       	mov	r10,0
800091ec:	ea 1a 80 00 	orh	r10,0x8000
800091f0:	ed bc 00 00 	bld	r12,0x0
800091f4:	f7 ba 01 ff 	subne	r10,-1
800091f8:	14 3b       	cp.w	r11,r10
800091fa:	f7 bc 02 ff 	subhs	r12,-1
800091fe:	5e fc       	retal	r12

80009200 <__avr32_f32_add_op2_subnormal>:
80009200:	bf db       	cbr	r11,0x1f
80009202:	f9 b9 01 01 	movne	r9,1
80009206:	58 0a       	cp.w	r10,0
80009208:	cd e1       	brne	800091c4 <__avr32_f32_add+0x30>
8000920a:	bf d8       	cbr	r8,0x1f
8000920c:	10 0b       	add	r11,r8
8000920e:	f9 eb 12 8c 	or	r12,r12,r11>>0x8
80009212:	5e fc       	retal	r12

80009214 <__avr32_f32_add_op1_nan_or_inf>:
80009214:	f0 0b 15 01 	lsl	r11,r8,0x1
80009218:	5e 1e       	retne	-1
8000921a:	f9 da d2 e8 	bfins	r12,r10,0x17,0x8
8000921e:	f2 0b 16 17 	lsr	r11,r9,0x17
80009222:	e0 4b 00 ff 	cp.w	r11,255
80009226:	5e 1c       	retne	r12
80009228:	a9 79       	lsl	r9,0x9
8000922a:	5e 0c       	reteq	r12
8000922c:	5e fe       	retal	-1

8000922e <__avr32_f32_add_res_of>:
8000922e:	a1 98       	lsr	r8,0x1
80009230:	2f fa       	sub	r10,-1
80009232:	e0 4a 00 ff 	cp.w	r10,255
80009236:	f9 b8 00 00 	moveq	r8,0
8000923a:	f9 bb 00 00 	moveq	r11,0
8000923e:	cd 2b       	rjmp	800091e2 <__avr32_f32_add+0x4e>

80009240 <__avr32_f32_mul>:
80009240:	18 98       	mov	r8,r12
80009242:	16 5c       	eor	r12,r11
80009244:	e6 1c 80 00 	andh	r12,0x8000,COH
80009248:	bf d8       	cbr	r8,0x1f
8000924a:	c6 70       	breq	80009318 <__avr32_f32_mul_op1_zero>
8000924c:	bf db       	cbr	r11,0x1f
8000924e:	f0 0b 0c 4a 	max	r10,r8,r11
80009252:	f0 0b 0d 49 	min	r9,r8,r11
80009256:	f4 08 15 08 	lsl	r8,r10,0x8
8000925a:	bf b8       	sbr	r8,0x1f
8000925c:	b7 9a       	lsr	r10,0x17
8000925e:	e0 4a 00 ff 	cp.w	r10,255
80009262:	c3 e0       	breq	800092de <__avr32_f32_mul_op1_nan_or_inf>
80009264:	f2 0b 15 08 	lsl	r11,r9,0x8
80009268:	bf bb       	sbr	r11,0x1f
8000926a:	b7 99       	lsr	r9,0x17
8000926c:	c2 50       	breq	800092b6 <__avr32_f32_mul_op2_subnormal>
8000926e:	14 09       	add	r9,r10
80009270:	f0 0b 06 4a 	mulu.d	r10,r8,r11
80009274:	f6 08 15 01 	lsl	r8,r11,0x1
80009278:	f0 0b 17 20 	movhs	r11,r8
8000927c:	f7 b9 02 01 	subhs	r9,1
80009280:	a9 8a       	lsr	r10,0x8
80009282:	f5 db d3 08 	bfins	r10,r11,0x18,0x8
80009286:	27 e9       	sub	r9,126
80009288:	e0 8a 00 3a 	brle	800092fc <__avr32_f32_mul_res_subnormal>
8000928c:	e0 49 00 ff 	cp.w	r9,255
80009290:	c1 04       	brge	800092b0 <__avr32_f32_mul_round+0x16>
80009292:	f9 eb 12 8c 	or	r12,r12,r11>>0x8
80009296:	f9 d9 d2 e8 	bfins	r12,r9,0x17,0x8

8000929a <__avr32_f32_mul_round>:
8000929a:	30 08       	mov	r8,0
8000929c:	ea 18 80 00 	orh	r8,0x8000
800092a0:	ed bc 00 00 	bld	r12,0x0
800092a4:	f7 b8 01 ff 	subne	r8,-1
800092a8:	10 3a       	cp.w	r10,r8
800092aa:	f7 bc 02 ff 	subhs	r12,-1
800092ae:	5e fc       	retal	r12
800092b0:	ea 1c 7f 80 	orh	r12,0x7f80
800092b4:	5e fc       	retal	r12

800092b6 <__avr32_f32_mul_op2_subnormal>:
800092b6:	bf db       	cbr	r11,0x1f
800092b8:	f6 09 12 00 	clz	r9,r11
800092bc:	5e 3d       	retlo	0
800092be:	20 89       	sub	r9,8
800092c0:	f6 09 09 4b 	lsl	r11,r11,r9
800092c4:	f2 09 11 01 	rsub	r9,r9,1
800092c8:	14 7a       	tst	r10,r10
800092ca:	cd 21       	brne	8000926e <__avr32_f32_mul+0x2e>
800092cc:	bf d8       	cbr	r8,0x1f
800092ce:	f6 0a 12 00 	clz	r10,r11
800092d2:	5e 3d       	retlo	0
800092d4:	f0 0a 09 48 	lsl	r8,r8,r10
800092d8:	f4 0a 11 01 	rsub	r10,r10,1
800092dc:	cc 9b       	rjmp	8000926e <__avr32_f32_mul+0x2e>

800092de <__avr32_f32_mul_op1_nan_or_inf>:
800092de:	f0 0b 15 01 	lsl	r11,r8,0x1
800092e2:	5e 1e       	retne	-1
800092e4:	12 79       	tst	r9,r9
800092e6:	5e 0e       	reteq	-1
800092e8:	f9 da d2 e8 	bfins	r12,r10,0x17,0x8
800092ec:	f2 0b 16 17 	lsr	r11,r9,0x17
800092f0:	e0 4b 00 ff 	cp.w	r11,255
800092f4:	5e 1c       	retne	r12
800092f6:	a9 79       	lsl	r9,0x9
800092f8:	5e 0c       	reteq	r12
800092fa:	5e fe       	retal	-1

800092fc <__avr32_f32_mul_res_subnormal>:
800092fc:	f2 09 11 09 	rsub	r9,r9,9
80009300:	f2 08 11 20 	rsub	r8,r9,32
80009304:	5e 3d       	retlo	0
80009306:	f6 09 0a 49 	lsr	r9,r11,r9
8000930a:	12 4c       	or	r12,r9
8000930c:	f6 08 09 4b 	lsl	r11,r11,r8
80009310:	e4 1a 00 ff 	andh	r10,0xff
80009314:	16 4a       	or	r10,r11
80009316:	cc 2b       	rjmp	8000929a <__avr32_f32_mul_round>

80009318 <__avr32_f32_mul_op1_zero>:
80009318:	f5 db c2 e8 	bfextu	r10,r11,0x17,0x8
8000931c:	e0 4a 00 ff 	cp.w	r10,255
80009320:	5e 1c       	retne	r12
80009322:	5e 0e       	reteq	-1

80009324 <__avr32_s32_to_f32>:
80009324:	58 0c       	cp.w	r12,0
80009326:	5e 0c       	reteq	r12
80009328:	18 9b       	mov	r11,r12
8000932a:	5c 4c       	abs	r12
8000932c:	e0 6a 00 9e 	mov	r10,158
80009330:	f8 09 12 00 	clz	r9,r12
80009334:	12 1a       	sub	r10,r9
80009336:	f8 09 09 4c 	lsl	r12,r12,r9
8000933a:	58 0a       	cp.w	r10,0
8000933c:	e0 8a 00 15 	brle	80009366 <__avr32_s32_to_f32_subnormal>
80009340:	37 f9       	mov	r9,127
80009342:	ed bc 00 08 	bld	r12,0x8
80009346:	f7 b9 00 ff 	subeq	r9,-1
8000934a:	12 0c       	add	r12,r9
8000934c:	f7 ba 03 fe 	sublo	r10,-2
80009350:	ed bc 00 1f 	bld	r12,0x1f
80009354:	f7 ba 01 01 	subne	r10,1
80009358:	f8 0c 16 07 	lsr	r12,r12,0x7
8000935c:	f9 da d3 08 	bfins	r12,r10,0x18,0x8
80009360:	a1 7b       	lsl	r11,0x1
80009362:	5d 0c       	ror	r12
80009364:	5e fc       	retal	r12

80009366 <__avr32_s32_to_f32_subnormal>:
80009366:	f4 0a 11 01 	rsub	r10,r10,1
8000936a:	59 9a       	cp.w	r10,25
8000936c:	f9 bc 02 00 	movhs	r12,0
80009370:	c1 32       	brcc	80009396 <__avr32_s32_to_f32_subnormal+0x30>
80009372:	f4 09 11 20 	rsub	r9,r10,32
80009376:	f8 09 09 49 	lsl	r9,r12,r9
8000937a:	5f 19       	srne	r9
8000937c:	f8 0a 0a 4c 	lsr	r12,r12,r10
80009380:	12 4c       	or	r12,r9
80009382:	37 f9       	mov	r9,127
80009384:	ed bc 00 08 	bld	r12,0x8
80009388:	f7 b9 00 ff 	subeq	r9,-1
8000938c:	12 0c       	add	r12,r9
8000938e:	f8 0c 16 07 	lsr	r12,r12,0x7
80009392:	a1 7b       	lsl	r11,0x1
80009394:	5d 0c       	ror	r12
80009396:	5e fc       	retal	r12

80009398 <__avr32_u32_to_f32>:
80009398:	58 0c       	cp.w	r12,0
8000939a:	5e 0c       	reteq	r12
8000939c:	e0 6a 00 9e 	mov	r10,158
800093a0:	f8 09 12 00 	clz	r9,r12
800093a4:	12 1a       	sub	r10,r9
800093a6:	f8 09 09 4c 	lsl	r12,r12,r9
800093aa:	58 0a       	cp.w	r10,0
800093ac:	e0 8a 00 14 	brle	800093d4 <__avr32_u32_to_f32_subnormal>
800093b0:	37 f9       	mov	r9,127
800093b2:	ed bc 00 08 	bld	r12,0x8
800093b6:	f7 b9 00 ff 	subeq	r9,-1
800093ba:	12 0c       	add	r12,r9
800093bc:	f7 ba 03 fe 	sublo	r10,-2
800093c0:	ed bc 00 1f 	bld	r12,0x1f
800093c4:	f7 ba 01 01 	subne	r10,1
800093c8:	f8 0c 16 07 	lsr	r12,r12,0x7
800093cc:	f9 da d3 08 	bfins	r12,r10,0x18,0x8
800093d0:	a1 9c       	lsr	r12,0x1
800093d2:	5e fc       	retal	r12

800093d4 <__avr32_u32_to_f32_subnormal>:
800093d4:	30 08       	mov	r8,0
800093d6:	f4 0a 11 01 	rsub	r10,r10,1
800093da:	59 9a       	cp.w	r10,25
800093dc:	f9 bc 02 00 	movhs	r12,0
800093e0:	c1 32       	brcc	80009406 <__avr32_u32_to_f32_subnormal+0x32>
800093e2:	f4 09 11 20 	rsub	r9,r10,32
800093e6:	f8 09 09 49 	lsl	r9,r12,r9
800093ea:	5f 19       	srne	r9
800093ec:	f8 0a 0a 4c 	lsr	r12,r12,r10
800093f0:	12 4c       	or	r12,r9
800093f2:	37 f9       	mov	r9,127
800093f4:	ed bc 00 08 	bld	r12,0x8
800093f8:	f7 b9 00 ff 	subeq	r9,-1
800093fc:	12 0c       	add	r12,r9
800093fe:	f8 0c 16 07 	lsr	r12,r12,0x7
80009402:	a1 78       	lsl	r8,0x1
80009404:	5d 0c       	ror	r12
80009406:	5e fc       	retal	r12

80009408 <__avr32_f32_to_s32>:
80009408:	f7 dc c2 e8 	bfextu	r11,r12,0x17,0x8
8000940c:	27 fb       	sub	r11,127
8000940e:	5e 3d       	retlo	0
80009410:	f6 0b 11 1f 	rsub	r11,r11,31
80009414:	f8 0a 15 08 	lsl	r10,r12,0x8
80009418:	bf ba       	sbr	r10,0x1f
8000941a:	f4 0b 0a 4a 	lsr	r10,r10,r11
8000941e:	a1 7c       	lsl	r12,0x1
80009420:	5e 2a       	reths	r10
80009422:	5c 3a       	neg	r10
80009424:	5e fa       	retal	r10

80009426 <__avr32_f32_to_f64>:
80009426:	f8 0b 15 01 	lsl	r11,r12,0x1
8000942a:	f9 ba 00 00 	moveq	r10,0
8000942e:	5e 0b       	reteq	r11
80009430:	f3 db c3 08 	bfextu	r9,r11,0x18,0x8
80009434:	e0 49 00 ff 	cp.w	r9,255
80009438:	c1 e0       	breq	80009474 <__extendsfdf_return_op1+0x6>
8000943a:	a7 7b       	lsl	r11,0x7
8000943c:	30 0a       	mov	r10,0
8000943e:	58 09       	cp.w	r9,0
80009440:	f7 b9 00 ff 	subeq	r9,-1
80009444:	5f 18       	srne	r8
80009446:	f7 e8 11 fb 	or	r11,r11,r8<<0x1f
8000944a:	fe 39 fc 80 	sub	r9,-896
8000944e:	f6 08 12 00 	clz	r8,r11
80009452:	10 19       	sub	r9,r8
80009454:	f6 08 09 4b 	lsl	r11,r11,r8
80009458:	ed bb 00 1f 	bld	r11,0x1f
8000945c:	f7 b9 01 01 	subne	r9,1
80009460:	ab 9a       	lsr	r10,0xb
80009462:	f5 eb 11 5a 	or	r10,r10,r11<<0x15
80009466:	a1 7b       	lsl	r11,0x1
80009468:	ab 9b       	lsr	r11,0xb
8000946a:	f7 e9 11 5b 	or	r11,r11,r9<<0x15

8000946e <__extendsfdf_return_op1>:
8000946e:	a1 7c       	lsl	r12,0x1
80009470:	5d 0b       	ror	r11
80009472:	5e fb       	retal	r11
80009474:	30 0a       	mov	r10,0
80009476:	ea 1a ff e0 	orh	r10,0xffe0
8000947a:	a9 6b       	lsl	r11,0x8
8000947c:	f9 bb 01 ff 	movne	r11,-1
80009480:	f4 0b 17 00 	moveq	r11,r10
80009484:	30 0a       	mov	r10,0
80009486:	cf 4b       	rjmp	8000946e <__extendsfdf_return_op1>

80009488 <__avr32_f64_to_f32>:
80009488:	f6 09 15 01 	lsl	r9,r11,0x1
8000948c:	b5 99       	lsr	r9,0x15
8000948e:	5e 0d       	reteq	0
80009490:	f6 08 15 0a 	lsl	r8,r11,0xa
80009494:	f1 ea 13 6c 	or	r12,r8,r10>>0x16
80009498:	ab 6a       	lsl	r10,0xa
8000949a:	5c 3a       	neg	r10
8000949c:	5c fc       	rol	r12
8000949e:	e0 49 07 ff 	cp.w	r9,2047
800094a2:	c1 a0       	breq	800094d6 <__truncdfsf_return_op1+0x6>
800094a4:	e0 29 03 80 	sub	r9,896
800094a8:	bf bc       	sbr	r12,0x1f
800094aa:	58 09       	cp.w	r9,0
800094ac:	e0 8a 00 1b 	brle	800094e2 <__truncdfsf_return_op1+0x12>
800094b0:	37 fa       	mov	r10,127
800094b2:	ed bc 00 08 	bld	r12,0x8
800094b6:	f7 ba 00 ff 	subeq	r10,-1
800094ba:	14 0c       	add	r12,r10
800094bc:	f7 b9 03 fe 	sublo	r9,-2
800094c0:	ed bc 00 1f 	bld	r12,0x1f
800094c4:	f7 b9 01 01 	subne	r9,1
800094c8:	f8 0c 16 07 	lsr	r12,r12,0x7
800094cc:	f9 d9 d3 08 	bfins	r12,r9,0x18,0x8

800094d0 <__truncdfsf_return_op1>:
800094d0:	a1 7b       	lsl	r11,0x1
800094d2:	5d 0c       	ror	r12
800094d4:	5e fc       	retal	r12
800094d6:	bf dc       	cbr	r12,0x1f
800094d8:	5e 1e       	retne	-1
800094da:	30 0c       	mov	r12,0
800094dc:	ea 1c 7f 80 	orh	r12,0x7f80
800094e0:	5e fc       	retal	r12
800094e2:	f2 09 11 01 	rsub	r9,r9,1
800094e6:	59 99       	cp.w	r9,25
800094e8:	f9 bc 02 00 	movhs	r12,0
800094ec:	c1 32       	brcc	80009512 <__truncdfsf_return_op1+0x42>
800094ee:	f2 0a 11 20 	rsub	r10,r9,32
800094f2:	f8 0a 09 4a 	lsl	r10,r12,r10
800094f6:	5f 1a       	srne	r10
800094f8:	f8 09 0a 4c 	lsr	r12,r12,r9
800094fc:	14 4c       	or	r12,r10
800094fe:	37 fa       	mov	r10,127
80009500:	ed bc 00 08 	bld	r12,0x8
80009504:	f7 ba 00 ff 	subeq	r10,-1
80009508:	14 0c       	add	r12,r10
8000950a:	f8 0c 16 07 	lsr	r12,r12,0x7
8000950e:	a1 7b       	lsl	r11,0x1
80009510:	5d 0c       	ror	r12
80009512:	5e fc       	retal	r12

80009514 <_Unwind_SjLj_Register>:
80009514:	48 38       	lddpc	r8,80009520 <_Unwind_SjLj_Register+0xc>
80009516:	70 09       	ld.w	r9,r8[0x0]
80009518:	99 09       	st.w	r12[0x0],r9
8000951a:	91 0c       	st.w	r8[0x0],r12
8000951c:	5e fc       	retal	r12
8000951e:	00 00       	add	r0,r0
80009520:	00 00       	add	r0,r0
80009522:	0f 88       	ld.ub	r8,r7[0x0]

80009524 <_Unwind_SjLj_Unregister>:
80009524:	78 09       	ld.w	r9,r12[0x0]
80009526:	48 28       	lddpc	r8,8000952c <_Unwind_SjLj_Unregister+0x8>
80009528:	91 09       	st.w	r8[0x0],r9
8000952a:	5e fc       	retal	r12
8000952c:	00 00       	add	r0,r0
8000952e:	0f 88       	ld.ub	r8,r7[0x0]

80009530 <_Unwind_GetGR>:
80009530:	78 08       	ld.w	r8,r12[0x0]
80009532:	2f eb       	sub	r11,-2
80009534:	f0 0b 03 2c 	ld.w	r12,r8[r11<<0x2]
80009538:	5e fc       	retal	r12

8000953a <_Unwind_GetCFA>:
8000953a:	78 0c       	ld.w	r12,r12[0x0]
8000953c:	58 0c       	cp.w	r12,0
8000953e:	5e 0c       	reteq	r12
80009540:	78 ac       	ld.w	r12,r12[0x28]
80009542:	5e fc       	retal	r12

80009544 <_Unwind_SetGR>:
80009544:	78 08       	ld.w	r8,r12[0x0]
80009546:	2f eb       	sub	r11,-2
80009548:	f0 0b 09 2a 	st.w	r8[r11<<0x2],r10
8000954c:	5e fc       	retal	r12

8000954e <_Unwind_GetIP>:
8000954e:	78 08       	ld.w	r8,r12[0x0]
80009550:	70 1c       	ld.w	r12,r8[0x4]
80009552:	2f fc       	sub	r12,-1
80009554:	5e fc       	retal	r12

80009556 <_Unwind_GetIPInfo>:
80009556:	30 08       	mov	r8,0
80009558:	97 08       	st.w	r11[0x0],r8
8000955a:	78 0c       	ld.w	r12,r12[0x0]
8000955c:	58 0c       	cp.w	r12,0
8000955e:	5e 0c       	reteq	r12
80009560:	78 1c       	ld.w	r12,r12[0x4]
80009562:	2f fc       	sub	r12,-1
80009564:	5e fc       	retal	r12

80009566 <_Unwind_SetIP>:
80009566:	78 08       	ld.w	r8,r12[0x0]
80009568:	20 1b       	sub	r11,1
8000956a:	91 1b       	st.w	r8[0x4],r11
8000956c:	5e fc       	retal	r12

8000956e <_Unwind_GetLanguageSpecificData>:
8000956e:	78 08       	ld.w	r8,r12[0x0]
80009570:	70 7c       	ld.w	r12,r8[0x1c]
80009572:	5e fc       	retal	r12

80009574 <_Unwind_GetRegionStart>:
80009574:	5e fd       	retal	0

80009576 <_Unwind_FindEnclosingFunction>:
80009576:	5e fd       	retal	0

80009578 <_Unwind_GetDataRelBase>:
80009578:	5e fd       	retal	0

8000957a <_Unwind_GetTextRelBase>:
8000957a:	5e fd       	retal	0

8000957c <_Unwind_ForcedUnwind_Phase2>:
8000957c:	d4 31       	pushm	r0-r7,lr
8000957e:	30 03       	mov	r3,0
80009580:	18 95       	mov	r5,r12
80009582:	16 96       	mov	r6,r11
80009584:	78 32       	ld.w	r2,r12[0xc]
80009586:	78 41       	ld.w	r1,r12[0x10]
80009588:	49 d0       	lddpc	r0,800095fc <_Unwind_ForcedUnwind_Phase2+0x80>
8000958a:	6c 04       	ld.w	r4,r6[0x0]
8000958c:	58 04       	cp.w	r4,0
8000958e:	c0 31       	brne	80009594 <_Unwind_ForcedUnwind_Phase2+0x18>
80009590:	30 57       	mov	r7,5
80009592:	c0 38       	rjmp	80009598 <_Unwind_ForcedUnwind_Phase2+0x1c>
80009594:	68 64       	ld.w	r4,r4[0x18]
80009596:	30 07       	mov	r7,0
80009598:	58 57       	cp.w	r7,5
8000959a:	5f 19       	srne	r9
8000959c:	58 07       	cp.w	r7,0
8000959e:	5f 18       	srne	r8
800095a0:	f3 e8 00 08 	and	r8,r9,r8
800095a4:	e6 08 18 00 	cp.b	r8,r3
800095a8:	c2 61       	brne	800095f4 <_Unwind_ForcedUnwind_Phase2+0x78>
800095aa:	1a d1       	st.w	--sp,r1
800095ac:	58 57       	cp.w	r7,5
800095ae:	f9 bb 01 0a 	movne	r11,10
800095b2:	f9 bb 00 1a 	moveq	r11,26
800095b6:	1a d6       	st.w	--sp,r6
800095b8:	0a 9a       	mov	r10,r5
800095ba:	ea e8 00 00 	ld.d	r8,r5[0]
800095be:	30 1c       	mov	r12,1
800095c0:	5d 12       	icall	r2
800095c2:	2f ed       	sub	sp,-8
800095c4:	58 0c       	cp.w	r12,0
800095c6:	c1 71       	brne	800095f4 <_Unwind_ForcedUnwind_Phase2+0x78>
800095c8:	58 57       	cp.w	r7,5
800095ca:	c1 60       	breq	800095f6 <_Unwind_ForcedUnwind_Phase2+0x7a>
800095cc:	58 04       	cp.w	r4,0
800095ce:	c0 e0       	breq	800095ea <_Unwind_ForcedUnwind_Phase2+0x6e>
800095d0:	1a d6       	st.w	--sp,r6
800095d2:	0a 9a       	mov	r10,r5
800095d4:	ea e8 00 00 	ld.d	r8,r5[0]
800095d8:	30 ab       	mov	r11,10
800095da:	30 1c       	mov	r12,1
800095dc:	5d 14       	icall	r4
800095de:	2f fd       	sub	sp,-4
800095e0:	18 97       	mov	r7,r12
800095e2:	58 7c       	cp.w	r12,7
800095e4:	c0 90       	breq	800095f6 <_Unwind_ForcedUnwind_Phase2+0x7a>
800095e6:	58 8c       	cp.w	r12,8
800095e8:	c0 61       	brne	800095f4 <_Unwind_ForcedUnwind_Phase2+0x78>
800095ea:	6c 08       	ld.w	r8,r6[0x0]
800095ec:	70 08       	ld.w	r8,r8[0x0]
800095ee:	81 08       	st.w	r0[0x0],r8
800095f0:	8d 08       	st.w	r6[0x0],r8
800095f2:	cc cb       	rjmp	8000958a <_Unwind_ForcedUnwind_Phase2+0xe>
800095f4:	30 27       	mov	r7,2
800095f6:	0e 9c       	mov	r12,r7
800095f8:	d8 32       	popm	r0-r7,pc
800095fa:	00 00       	add	r0,r0
800095fc:	00 00       	add	r0,r0
800095fe:	0f 88       	ld.ub	r8,r7[0x0]

80009600 <_Unwind_DeleteException>:
80009600:	d4 01       	pushm	lr
80009602:	18 9b       	mov	r11,r12
80009604:	78 28       	ld.w	r8,r12[0x8]
80009606:	58 08       	cp.w	r8,0
80009608:	c0 30       	breq	8000960e <_Unwind_DeleteException+0xe>
8000960a:	30 1c       	mov	r12,1
8000960c:	5d 18       	icall	r8
8000960e:	d8 02       	popm	pc

80009610 <_Unwind_Backtrace>:
80009610:	d4 31       	pushm	r0-r7,lr
80009612:	20 1d       	sub	sp,4
80009614:	49 38       	lddpc	r8,80009660 <_Unwind_Backtrace+0x50>
80009616:	fa c7 ff fc 	sub	r7,sp,-4
8000961a:	70 08       	ld.w	r8,r8[0x0]
8000961c:	18 93       	mov	r3,r12
8000961e:	16 94       	mov	r4,r11
80009620:	0e d8       	st.w	--r7,r8
80009622:	30 05       	mov	r5,0
80009624:	40 06       	lddsp	r6,sp[0x0]
80009626:	58 06       	cp.w	r6,0
80009628:	f9 b6 00 05 	moveq	r6,5
8000962c:	f9 b6 01 00 	movne	r6,0
80009630:	58 56       	cp.w	r6,5
80009632:	5f 19       	srne	r9
80009634:	58 06       	cp.w	r6,0
80009636:	5f 18       	srne	r8
80009638:	f3 e8 00 08 	and	r8,r9,r8
8000963c:	ea 08 18 00 	cp.b	r8,r5
80009640:	c0 b1       	brne	80009656 <_Unwind_Backtrace+0x46>
80009642:	08 9b       	mov	r11,r4
80009644:	1a 9c       	mov	r12,sp
80009646:	5d 13       	icall	r3
80009648:	c0 71       	brne	80009656 <_Unwind_Backtrace+0x46>
8000964a:	58 56       	cp.w	r6,5
8000964c:	c0 60       	breq	80009658 <_Unwind_Backtrace+0x48>
8000964e:	40 08       	lddsp	r8,sp[0x0]
80009650:	70 08       	ld.w	r8,r8[0x0]
80009652:	50 08       	stdsp	sp[0x0],r8
80009654:	ce 8b       	rjmp	80009624 <_Unwind_Backtrace+0x14>
80009656:	30 36       	mov	r6,3
80009658:	0c 9c       	mov	r12,r6
8000965a:	2f fd       	sub	sp,-4
8000965c:	d8 32       	popm	r0-r7,pc
8000965e:	00 00       	add	r0,r0
80009660:	00 00       	add	r0,r0
80009662:	0f 88       	ld.ub	r8,r7[0x0]

80009664 <_Unwind_RaiseException_Phase2>:
80009664:	d4 21       	pushm	r4-r7,lr
80009666:	18 96       	mov	r6,r12
80009668:	16 97       	mov	r7,r11
8000966a:	6e 08       	ld.w	r8,r7[0x0]
8000966c:	58 08       	cp.w	r8,0
8000966e:	c0 41       	brne	80009676 <_Unwind_RaiseException_Phase2+0x12>
80009670:	10 95       	mov	r5,r8
80009672:	30 59       	mov	r9,5
80009674:	c0 38       	rjmp	8000967a <_Unwind_RaiseException_Phase2+0x16>
80009676:	70 65       	ld.w	r5,r8[0x18]
80009678:	30 09       	mov	r9,0
8000967a:	6c 44       	ld.w	r4,r6[0x10]
8000967c:	08 38       	cp.w	r8,r4
8000967e:	f9 b4 00 04 	moveq	r4,4
80009682:	f9 b4 01 00 	movne	r4,0
80009686:	58 09       	cp.w	r9,0
80009688:	c1 81       	brne	800096b8 <_Unwind_RaiseException_Phase2+0x54>
8000968a:	58 05       	cp.w	r5,0
8000968c:	c0 e0       	breq	800096a8 <_Unwind_RaiseException_Phase2+0x44>
8000968e:	1a d7       	st.w	--sp,r7
80009690:	0c 9a       	mov	r10,r6
80009692:	ec e8 00 00 	ld.d	r8,r6[0]
80009696:	08 9b       	mov	r11,r4
80009698:	30 1c       	mov	r12,1
8000969a:	a1 bb       	sbr	r11,0x1
8000969c:	5d 15       	icall	r5
8000969e:	2f fd       	sub	sp,-4
800096a0:	58 7c       	cp.w	r12,7
800096a2:	c0 c0       	breq	800096ba <_Unwind_RaiseException_Phase2+0x56>
800096a4:	58 8c       	cp.w	r12,8
800096a6:	c0 91       	brne	800096b8 <_Unwind_RaiseException_Phase2+0x54>
800096a8:	58 04       	cp.w	r4,0
800096aa:	c0 30       	breq	800096b0 <_Unwind_RaiseException_Phase2+0x4c>
800096ac:	f0 1f 00 04 	mcall	800096bc <_Unwind_RaiseException_Phase2+0x58>
800096b0:	6e 08       	ld.w	r8,r7[0x0]
800096b2:	70 08       	ld.w	r8,r8[0x0]
800096b4:	8f 08       	st.w	r7[0x0],r8
800096b6:	cd ab       	rjmp	8000966a <_Unwind_RaiseException_Phase2+0x6>
800096b8:	30 2c       	mov	r12,2
800096ba:	d8 22       	popm	r4-r7,pc
800096bc:	80 00       	ld.sh	r0,r0[0x0]
800096be:	97 e0       	st.w	r11[0x38],r0

800096c0 <uw_install_context>:
800096c0:	d4 21       	pushm	r4-r7,lr
800096c2:	76 09       	ld.w	r9,r11[0x0]
800096c4:	1a 97       	mov	r7,sp
800096c6:	f2 c8 ff e0 	sub	r8,r9,-32
800096ca:	48 4a       	lddpc	r10,800096d8 <uw_install_context+0x18>
800096cc:	95 09       	st.w	r10[0x0],r9
800096ce:	70 19       	ld.w	r9,r8[0x4]
800096d0:	70 07       	ld.w	r7,r8[0x0]
800096d2:	70 2d       	ld.w	sp,r8[0x8]
800096d4:	12 9f       	mov	pc,r9
800096d6:	00 00       	add	r0,r0
800096d8:	00 00       	add	r0,r0
800096da:	0f 88       	ld.ub	r8,r7[0x0]

800096dc <_Unwind_SjLj_Resume>:
800096dc:	d4 01       	pushm	lr
800096de:	20 2d       	sub	sp,8
800096e0:	48 a8       	lddpc	r8,80009708 <_Unwind_SjLj_Resume+0x2c>
800096e2:	70 08       	ld.w	r8,r8[0x0]
800096e4:	50 08       	stdsp	sp[0x0],r8
800096e6:	50 18       	stdsp	sp[0x4],r8
800096e8:	1a 9b       	mov	r11,sp
800096ea:	78 38       	ld.w	r8,r12[0xc]
800096ec:	58 08       	cp.w	r8,0
800096ee:	c0 31       	brne	800096f4 <_Unwind_SjLj_Resume+0x18>
800096f0:	cb af       	rcall	80009664 <_Unwind_RaiseException_Phase2>
800096f2:	c0 38       	rjmp	800096f8 <_Unwind_SjLj_Resume+0x1c>
800096f4:	1a 9b       	mov	r11,sp
800096f6:	c4 3f       	rcall	8000957c <_Unwind_ForcedUnwind_Phase2>
800096f8:	58 7c       	cp.w	r12,7
800096fa:	c0 30       	breq	80009700 <_Unwind_SjLj_Resume+0x24>
800096fc:	f0 1f 00 04 	mcall	8000970c <_Unwind_SjLj_Resume+0x30>
80009700:	1a 9b       	mov	r11,sp
80009702:	fa cc ff fc 	sub	r12,sp,-4
80009706:	cd df       	rcall	800096c0 <uw_install_context>
80009708:	00 00       	add	r0,r0
8000970a:	0f 88       	ld.ub	r8,r7[0x0]
8000970c:	80 00       	ld.sh	r0,r0[0x0]
8000970e:	97 e0       	st.w	r11[0x38],r0

80009710 <_Unwind_SjLj_ForcedUnwind>:
80009710:	d4 21       	pushm	r4-r7,lr
80009712:	20 2d       	sub	sp,8
80009714:	48 98       	lddpc	r8,80009738 <_Unwind_SjLj_ForcedUnwind+0x28>
80009716:	70 08       	ld.w	r8,r8[0x0]
80009718:	99 3b       	st.w	r12[0xc],r11
8000971a:	99 4a       	st.w	r12[0x10],r10
8000971c:	50 08       	stdsp	sp[0x0],r8
8000971e:	50 18       	stdsp	sp[0x4],r8
80009720:	1a 97       	mov	r7,sp
80009722:	1a 9b       	mov	r11,sp
80009724:	c2 cf       	rcall	8000957c <_Unwind_ForcedUnwind_Phase2>
80009726:	58 7c       	cp.w	r12,7
80009728:	c0 30       	breq	8000972e <_Unwind_SjLj_ForcedUnwind+0x1e>
8000972a:	2f ed       	sub	sp,-8
8000972c:	d8 22       	popm	r4-r7,pc
8000972e:	1a 9b       	mov	r11,sp
80009730:	fa cc ff fc 	sub	r12,sp,-4
80009734:	cc 6f       	rcall	800096c0 <uw_install_context>
80009736:	00 00       	add	r0,r0
80009738:	00 00       	add	r0,r0
8000973a:	0f 88       	ld.ub	r8,r7[0x0]

8000973c <_Unwind_SjLj_RaiseException>:
8000973c:	d4 21       	pushm	r4-r7,lr
8000973e:	20 2d       	sub	sp,8
80009740:	49 88       	lddpc	r8,800097a0 <_Unwind_SjLj_RaiseException+0x64>
80009742:	18 97       	mov	r7,r12
80009744:	70 08       	ld.w	r8,r8[0x0]
80009746:	1a 95       	mov	r5,sp
80009748:	50 08       	stdsp	sp[0x0],r8
8000974a:	50 18       	stdsp	sp[0x4],r8
8000974c:	40 08       	lddsp	r8,sp[0x0]
8000974e:	58 08       	cp.w	r8,0
80009750:	c2 50       	breq	8000979a <_Unwind_SjLj_RaiseException+0x5e>
80009752:	70 66       	ld.w	r6,r8[0x18]
80009754:	58 06       	cp.w	r6,0
80009756:	c0 f0       	breq	80009774 <_Unwind_SjLj_RaiseException+0x38>
80009758:	1a d5       	st.w	--sp,r5
8000975a:	30 1b       	mov	r11,1
8000975c:	0e 9a       	mov	r10,r7
8000975e:	ee e8 00 00 	ld.d	r8,r7[0]
80009762:	16 9c       	mov	r12,r11
80009764:	5d 16       	icall	r6
80009766:	2f fd       	sub	sp,-4
80009768:	58 6c       	cp.w	r12,6
8000976a:	c0 90       	breq	8000977c <_Unwind_SjLj_RaiseException+0x40>
8000976c:	58 8c       	cp.w	r12,8
8000976e:	c0 30       	breq	80009774 <_Unwind_SjLj_RaiseException+0x38>
80009770:	30 3c       	mov	r12,3
80009772:	c1 58       	rjmp	8000979c <_Unwind_SjLj_RaiseException+0x60>
80009774:	40 08       	lddsp	r8,sp[0x0]
80009776:	70 08       	ld.w	r8,r8[0x0]
80009778:	50 08       	stdsp	sp[0x0],r8
8000977a:	ce 9b       	rjmp	8000974c <_Unwind_SjLj_RaiseException+0x10>
8000977c:	40 08       	lddsp	r8,sp[0x0]
8000977e:	8f 48       	st.w	r7[0x10],r8
80009780:	40 18       	lddsp	r8,sp[0x4]
80009782:	50 08       	stdsp	sp[0x0],r8
80009784:	30 08       	mov	r8,0
80009786:	0e 9c       	mov	r12,r7
80009788:	8f 38       	st.w	r7[0xc],r8
8000978a:	1a 9b       	mov	r11,sp
8000978c:	c6 cf       	rcall	80009664 <_Unwind_RaiseException_Phase2>
8000978e:	58 7c       	cp.w	r12,7
80009790:	c0 61       	brne	8000979c <_Unwind_SjLj_RaiseException+0x60>
80009792:	1a 9b       	mov	r11,sp
80009794:	fa cc ff fc 	sub	r12,sp,-4
80009798:	c9 4f       	rcall	800096c0 <uw_install_context>
8000979a:	30 5c       	mov	r12,5
8000979c:	2f ed       	sub	sp,-8
8000979e:	d8 22       	popm	r4-r7,pc
800097a0:	00 00       	add	r0,r0
800097a2:	0f 88       	ld.ub	r8,r7[0x0]

800097a4 <_Unwind_SjLj_Resume_or_Rethrow>:
800097a4:	d4 21       	pushm	r4-r7,lr
800097a6:	20 2d       	sub	sp,8
800097a8:	78 38       	ld.w	r8,r12[0xc]
800097aa:	58 08       	cp.w	r8,0
800097ac:	c0 51       	brne	800097b6 <_Unwind_SjLj_Resume_or_Rethrow+0x12>
800097ae:	f0 1f 00 0a 	mcall	800097d4 <_Unwind_SjLj_Resume_or_Rethrow+0x30>
800097b2:	2f ed       	sub	sp,-8
800097b4:	d8 22       	popm	r4-r7,pc
800097b6:	48 98       	lddpc	r8,800097d8 <_Unwind_SjLj_Resume_or_Rethrow+0x34>
800097b8:	70 08       	ld.w	r8,r8[0x0]
800097ba:	1a 9b       	mov	r11,sp
800097bc:	50 08       	stdsp	sp[0x0],r8
800097be:	50 18       	stdsp	sp[0x4],r8
800097c0:	cd ee       	rcall	8000957c <_Unwind_ForcedUnwind_Phase2>
800097c2:	58 7c       	cp.w	r12,7
800097c4:	c0 30       	breq	800097ca <_Unwind_SjLj_Resume_or_Rethrow+0x26>
800097c6:	f0 1f 00 06 	mcall	800097dc <_Unwind_SjLj_Resume_or_Rethrow+0x38>
800097ca:	1a 9b       	mov	r11,sp
800097cc:	fa cc ff fc 	sub	r12,sp,-4
800097d0:	c7 8f       	rcall	800096c0 <uw_install_context>
800097d2:	00 00       	add	r0,r0
800097d4:	80 00       	ld.sh	r0,r0[0x0]
800097d6:	97 3c       	st.w	r11[0xc],r12
800097d8:	00 00       	add	r0,r0
800097da:	0f 88       	ld.ub	r8,r7[0x0]
800097dc:	80 00       	ld.sh	r0,r0[0x0]
800097de:	97 e0       	st.w	r11[0x38],r0

800097e0 <abort>:
800097e0:	d4 01       	pushm	lr
800097e2:	30 6c       	mov	r12,6
800097e4:	f0 1f 00 03 	mcall	800097f0 <abort+0x10>
800097e8:	30 1c       	mov	r12,1
800097ea:	f0 1f 00 03 	mcall	800097f4 <abort+0x14>
800097ee:	00 00       	add	r0,r0
800097f0:	80 00       	ld.sh	r0,r0[0x0]
800097f2:	a6 94       	st.b	r3[0x1],r4
800097f4:	80 00       	ld.sh	r0,r0[0x0]
800097f6:	a8 3e       	st.h	r4[0x6],lr

800097f8 <_fputc_r>:
800097f8:	d4 21       	pushm	r4-r7,lr
800097fa:	20 2d       	sub	sp,8
800097fc:	18 97       	mov	r7,r12
800097fe:	58 0c       	cp.w	r12,0
80009800:	c0 a0       	breq	80009814 <_fputc_r+0x1c>
80009802:	78 68       	ld.w	r8,r12[0x18]
80009804:	58 08       	cp.w	r8,0
80009806:	c0 71       	brne	80009814 <_fputc_r+0x1c>
80009808:	50 1b       	stdsp	sp[0x4],r11
8000980a:	50 0a       	stdsp	sp[0x0],r10
8000980c:	f0 1f 00 0c 	mcall	8000983c <_fputc_r+0x44>
80009810:	40 0a       	lddsp	r10,sp[0x0]
80009812:	40 1b       	lddsp	r11,sp[0x4]
80009814:	48 b8       	lddpc	r8,80009840 <_fputc_r+0x48>
80009816:	10 3a       	cp.w	r10,r8
80009818:	c0 31       	brne	8000981e <_fputc_r+0x26>
8000981a:	6e 0a       	ld.w	r10,r7[0x0]
8000981c:	c0 a8       	rjmp	80009830 <_fputc_r+0x38>
8000981e:	48 a8       	lddpc	r8,80009844 <_fputc_r+0x4c>
80009820:	10 3a       	cp.w	r10,r8
80009822:	c0 31       	brne	80009828 <_fputc_r+0x30>
80009824:	6e 1a       	ld.w	r10,r7[0x4]
80009826:	c0 58       	rjmp	80009830 <_fputc_r+0x38>
80009828:	48 88       	lddpc	r8,80009848 <_fputc_r+0x50>
8000982a:	10 3a       	cp.w	r10,r8
8000982c:	c0 21       	brne	80009830 <_fputc_r+0x38>
8000982e:	6e 2a       	ld.w	r10,r7[0x8]
80009830:	0e 9c       	mov	r12,r7
80009832:	f0 1f 00 07 	mcall	8000984c <_fputc_r+0x54>
80009836:	2f ed       	sub	sp,-8
80009838:	d8 22       	popm	r4-r7,pc
8000983a:	00 00       	add	r0,r0
8000983c:	80 00       	ld.sh	r0,r0[0x0]
8000983e:	dd ac       	*unknown*
80009840:	80 01       	ld.sh	r1,r0[0x0]
80009842:	01 64       	ld.uh	r4,--r0
80009844:	80 01       	ld.sh	r1,r0[0x0]
80009846:	01 84       	ld.ub	r4,r0[0x0]
80009848:	80 01       	ld.sh	r1,r0[0x0]
8000984a:	01 a4       	ld.ub	r4,r0[0x2]
8000984c:	80 00       	ld.sh	r0,r0[0x0]
8000984e:	a2 90       	st.b	r1[0x1],r0

80009850 <fputc>:
80009850:	d4 01       	pushm	lr
80009852:	48 48       	lddpc	r8,80009860 <fputc+0x10>
80009854:	16 9a       	mov	r10,r11
80009856:	18 9b       	mov	r11,r12
80009858:	70 0c       	ld.w	r12,r8[0x0]
8000985a:	f0 1f 00 03 	mcall	80009864 <fputc+0x14>
8000985e:	d8 02       	popm	pc
80009860:	00 00       	add	r0,r0
80009862:	02 04       	add	r4,r1
80009864:	80 00       	ld.sh	r0,r0[0x0]
80009866:	97 f8       	st.w	r11[0x3c],r8

80009868 <_fputs_r>:
80009868:	d4 21       	pushm	r4-r7,lr
8000986a:	20 5d       	sub	sp,20
8000986c:	18 97       	mov	r7,r12
8000986e:	14 96       	mov	r6,r10
80009870:	50 3b       	stdsp	sp[0xc],r11
80009872:	16 9c       	mov	r12,r11
80009874:	f0 1f 00 13 	mcall	800098c0 <_fputs_r+0x58>
80009878:	fa c8 ff f4 	sub	r8,sp,-12
8000987c:	50 4c       	stdsp	sp[0x10],r12
8000987e:	50 08       	stdsp	sp[0x0],r8
80009880:	50 2c       	stdsp	sp[0x8],r12
80009882:	30 18       	mov	r8,1
80009884:	50 18       	stdsp	sp[0x4],r8
80009886:	58 07       	cp.w	r7,0
80009888:	c0 70       	breq	80009896 <_fputs_r+0x2e>
8000988a:	6e 68       	ld.w	r8,r7[0x18]
8000988c:	58 08       	cp.w	r8,0
8000988e:	c0 41       	brne	80009896 <_fputs_r+0x2e>
80009890:	0e 9c       	mov	r12,r7
80009892:	f0 1f 00 0d 	mcall	800098c4 <_fputs_r+0x5c>
80009896:	48 d8       	lddpc	r8,800098c8 <_fputs_r+0x60>
80009898:	10 36       	cp.w	r6,r8
8000989a:	c0 31       	brne	800098a0 <_fputs_r+0x38>
8000989c:	6e 06       	ld.w	r6,r7[0x0]
8000989e:	c0 a8       	rjmp	800098b2 <_fputs_r+0x4a>
800098a0:	48 b8       	lddpc	r8,800098cc <_fputs_r+0x64>
800098a2:	10 36       	cp.w	r6,r8
800098a4:	c0 31       	brne	800098aa <_fputs_r+0x42>
800098a6:	6e 16       	ld.w	r6,r7[0x4]
800098a8:	c0 58       	rjmp	800098b2 <_fputs_r+0x4a>
800098aa:	48 a8       	lddpc	r8,800098d0 <_fputs_r+0x68>
800098ac:	10 36       	cp.w	r6,r8
800098ae:	c0 21       	brne	800098b2 <_fputs_r+0x4a>
800098b0:	6e 26       	ld.w	r6,r7[0x8]
800098b2:	0c 9b       	mov	r11,r6
800098b4:	0e 9c       	mov	r12,r7
800098b6:	1a 9a       	mov	r10,sp
800098b8:	f0 1f 00 07 	mcall	800098d4 <_fputs_r+0x6c>
800098bc:	2f bd       	sub	sp,-20
800098be:	d8 22       	popm	r4-r7,pc
800098c0:	80 00       	ld.sh	r0,r0[0x0]
800098c2:	a8 02       	st.h	r4[0x0],r2
800098c4:	80 00       	ld.sh	r0,r0[0x0]
800098c6:	dd ac       	*unknown*
800098c8:	80 01       	ld.sh	r1,r0[0x0]
800098ca:	01 64       	ld.uh	r4,--r0
800098cc:	80 01       	ld.sh	r1,r0[0x0]
800098ce:	01 84       	ld.ub	r4,r0[0x0]
800098d0:	80 01       	ld.sh	r1,r0[0x0]
800098d2:	01 a4       	ld.ub	r4,r0[0x2]
800098d4:	80 00       	ld.sh	r0,r0[0x0]
800098d6:	98 f0       	ld.uh	r0,r12[0xe]

800098d8 <fputs>:
800098d8:	d4 01       	pushm	lr
800098da:	48 48       	lddpc	r8,800098e8 <fputs+0x10>
800098dc:	16 9a       	mov	r10,r11
800098de:	18 9b       	mov	r11,r12
800098e0:	70 0c       	ld.w	r12,r8[0x0]
800098e2:	f0 1f 00 03 	mcall	800098ec <fputs+0x14>
800098e6:	d8 02       	popm	pc
800098e8:	00 00       	add	r0,r0
800098ea:	02 04       	add	r4,r1
800098ec:	80 00       	ld.sh	r0,r0[0x0]
800098ee:	98 68       	ld.sh	r8,r12[0xc]

800098f0 <__sfvwrite_r>:
800098f0:	d4 31       	pushm	r0-r7,lr
800098f2:	20 3d       	sub	sp,12
800098f4:	14 94       	mov	r4,r10
800098f6:	18 95       	mov	r5,r12
800098f8:	16 97       	mov	r7,r11
800098fa:	74 28       	ld.w	r8,r10[0x8]
800098fc:	58 08       	cp.w	r8,0
800098fe:	e0 80 01 43 	breq	80009b84 <__sfvwrite_r+0x294>
80009902:	96 68       	ld.sh	r8,r11[0xc]
80009904:	ed b8 00 03 	bld	r8,0x3
80009908:	c0 41       	brne	80009910 <__sfvwrite_r+0x20>
8000990a:	76 48       	ld.w	r8,r11[0x10]
8000990c:	58 08       	cp.w	r8,0
8000990e:	c0 c1       	brne	80009926 <__sfvwrite_r+0x36>
80009910:	0e 9b       	mov	r11,r7
80009912:	0a 9c       	mov	r12,r5
80009914:	f0 1f 00 9e 	mcall	80009b8c <__sfvwrite_r+0x29c>
80009918:	c0 70       	breq	80009926 <__sfvwrite_r+0x36>
8000991a:	8e 68       	ld.sh	r8,r7[0xc]
8000991c:	a7 a8       	sbr	r8,0x6
8000991e:	ae 68       	st.h	r7[0xc],r8
80009920:	30 98       	mov	r8,9
80009922:	8b 38       	st.w	r5[0xc],r8
80009924:	c2 e9       	rjmp	80009b80 <__sfvwrite_r+0x290>
80009926:	8e 63       	ld.sh	r3,r7[0xc]
80009928:	68 00       	ld.w	r0,r4[0x0]
8000992a:	06 96       	mov	r6,r3
8000992c:	e2 16 00 02 	andl	r6,0x2,COH
80009930:	c2 10       	breq	80009972 <__sfvwrite_r+0x82>
80009932:	30 03       	mov	r3,0
80009934:	e0 62 04 00 	mov	r2,1024
80009938:	06 96       	mov	r6,r3
8000993a:	c0 48       	rjmp	80009942 <__sfvwrite_r+0x52>
8000993c:	60 03       	ld.w	r3,r0[0x0]
8000993e:	60 16       	ld.w	r6,r0[0x4]
80009940:	2f 80       	sub	r0,-8
80009942:	58 06       	cp.w	r6,0
80009944:	cf c0       	breq	8000993c <__sfvwrite_r+0x4c>
80009946:	e0 46 04 00 	cp.w	r6,1024
8000994a:	ec 09 17 80 	movls	r9,r6
8000994e:	e4 09 17 b0 	movhi	r9,r2
80009952:	06 9a       	mov	r10,r3
80009954:	6e a8       	ld.w	r8,r7[0x28]
80009956:	6e 8b       	ld.w	r11,r7[0x20]
80009958:	0a 9c       	mov	r12,r5
8000995a:	5d 18       	icall	r8
8000995c:	18 16       	sub	r6,r12
8000995e:	58 0c       	cp.w	r12,0
80009960:	e0 8a 01 0d 	brle	80009b7a <__sfvwrite_r+0x28a>
80009964:	68 28       	ld.w	r8,r4[0x8]
80009966:	18 18       	sub	r8,r12
80009968:	89 28       	st.w	r4[0x8],r8
8000996a:	e0 80 01 0d 	breq	80009b84 <__sfvwrite_r+0x294>
8000996e:	18 03       	add	r3,r12
80009970:	ce 9b       	rjmp	80009942 <__sfvwrite_r+0x52>
80009972:	e7 d3 c0 01 	bfextu	r3,r3,0x0,0x1
80009976:	c0 70       	breq	80009984 <__sfvwrite_r+0x94>
80009978:	50 06       	stdsp	sp[0x0],r6
8000997a:	0c 93       	mov	r3,r6
8000997c:	0c 91       	mov	r1,r6
8000997e:	50 15       	stdsp	sp[0x4],r5
80009980:	08 92       	mov	r2,r4
80009982:	ca 08       	rjmp	80009ac2 <__sfvwrite_r+0x1d2>
80009984:	06 96       	mov	r6,r3
80009986:	08 91       	mov	r1,r4
80009988:	c0 48       	rjmp	80009990 <__sfvwrite_r+0xa0>
8000998a:	60 03       	ld.w	r3,r0[0x0]
8000998c:	60 16       	ld.w	r6,r0[0x4]
8000998e:	2f 80       	sub	r0,-8
80009990:	58 06       	cp.w	r6,0
80009992:	cf c0       	breq	8000998a <__sfvwrite_r+0x9a>
80009994:	8e 68       	ld.sh	r8,r7[0xc]
80009996:	6e 24       	ld.w	r4,r7[0x8]
80009998:	10 99       	mov	r9,r8
8000999a:	e2 19 02 00 	andl	r9,0x200,COH
8000999e:	c5 70       	breq	80009a4c <__sfvwrite_r+0x15c>
800099a0:	08 36       	cp.w	r6,r4
800099a2:	c4 53       	brcs	80009a2c <__sfvwrite_r+0x13c>
800099a4:	10 99       	mov	r9,r8
800099a6:	e2 19 04 80 	andl	r9,0x480,COH
800099aa:	c4 10       	breq	80009a2c <__sfvwrite_r+0x13c>
800099ac:	6e 4b       	ld.w	r11,r7[0x10]
800099ae:	6e 09       	ld.w	r9,r7[0x0]
800099b0:	16 19       	sub	r9,r11
800099b2:	50 09       	stdsp	sp[0x0],r9
800099b4:	6e 59       	ld.w	r9,r7[0x14]
800099b6:	10 9c       	mov	r12,r8
800099b8:	f2 09 00 1a 	add	r10,r9,r9<<0x1
800099bc:	30 28       	mov	r8,2
800099be:	f4 08 0c 08 	divs	r8,r10,r8
800099c2:	fa e9 00 04 	st.d	sp[4],r8
800099c6:	10 94       	mov	r4,r8
800099c8:	40 09       	lddsp	r9,sp[0x0]
800099ca:	e2 1c 04 00 	andl	r12,0x400,COH
800099ce:	2f f9       	sub	r9,-1
800099d0:	0c 09       	add	r9,r6
800099d2:	12 38       	cp.w	r8,r9
800099d4:	f2 04 17 30 	movlo	r4,r9
800099d8:	58 0c       	cp.w	r12,0
800099da:	c1 10       	breq	800099fc <__sfvwrite_r+0x10c>
800099dc:	08 9b       	mov	r11,r4
800099de:	0a 9c       	mov	r12,r5
800099e0:	f0 1f 00 6c 	mcall	80009b90 <__sfvwrite_r+0x2a0>
800099e4:	18 92       	mov	r2,r12
800099e6:	c1 50       	breq	80009a10 <__sfvwrite_r+0x120>
800099e8:	40 0a       	lddsp	r10,sp[0x0]
800099ea:	6e 4b       	ld.w	r11,r7[0x10]
800099ec:	f0 1f 00 6a 	mcall	80009b94 <__sfvwrite_r+0x2a4>
800099f0:	8e 68       	ld.sh	r8,r7[0xc]
800099f2:	e0 18 fb 7f 	andl	r8,0xfb7f
800099f6:	a7 b8       	sbr	r8,0x7
800099f8:	ae 68       	st.h	r7[0xc],r8
800099fa:	c0 e8       	rjmp	80009a16 <__sfvwrite_r+0x126>
800099fc:	08 9a       	mov	r10,r4
800099fe:	0a 9c       	mov	r12,r5
80009a00:	f0 1f 00 66 	mcall	80009b98 <__sfvwrite_r+0x2a8>
80009a04:	18 92       	mov	r2,r12
80009a06:	c0 81       	brne	80009a16 <__sfvwrite_r+0x126>
80009a08:	6e 4b       	ld.w	r11,r7[0x10]
80009a0a:	0a 9c       	mov	r12,r5
80009a0c:	f0 1f 00 64 	mcall	80009b9c <__sfvwrite_r+0x2ac>
80009a10:	30 c8       	mov	r8,12
80009a12:	8b 38       	st.w	r5[0xc],r8
80009a14:	cb 38       	rjmp	80009b7a <__sfvwrite_r+0x28a>
80009a16:	40 0a       	lddsp	r10,sp[0x0]
80009a18:	40 09       	lddsp	r9,sp[0x0]
80009a1a:	e8 0a 01 0a 	sub	r10,r4,r10
80009a1e:	e4 09 00 08 	add	r8,r2,r9
80009a22:	8f 54       	st.w	r7[0x14],r4
80009a24:	8f 2a       	st.w	r7[0x8],r10
80009a26:	8f 08       	st.w	r7[0x0],r8
80009a28:	8f 42       	st.w	r7[0x10],r2
80009a2a:	0c 94       	mov	r4,r6
80009a2c:	08 36       	cp.w	r6,r4
80009a2e:	ec 04 17 30 	movlo	r4,r6
80009a32:	06 9b       	mov	r11,r3
80009a34:	08 9a       	mov	r10,r4
80009a36:	6e 0c       	ld.w	r12,r7[0x0]
80009a38:	f0 1f 00 5a 	mcall	80009ba0 <__sfvwrite_r+0x2b0>
80009a3c:	6e 08       	ld.w	r8,r7[0x0]
80009a3e:	08 08       	add	r8,r4
80009a40:	8f 08       	st.w	r7[0x0],r8
80009a42:	6e 28       	ld.w	r8,r7[0x8]
80009a44:	08 18       	sub	r8,r4
80009a46:	0c 94       	mov	r4,r6
80009a48:	8f 28       	st.w	r7[0x8],r8
80009a4a:	c3 08       	rjmp	80009aaa <__sfvwrite_r+0x1ba>
80009a4c:	08 36       	cp.w	r6,r4
80009a4e:	5f ba       	srhi	r10
80009a50:	6e 0c       	ld.w	r12,r7[0x0]
80009a52:	6e 48       	ld.w	r8,r7[0x10]
80009a54:	10 3c       	cp.w	r12,r8
80009a56:	5f b8       	srhi	r8
80009a58:	f5 e8 00 08 	and	r8,r10,r8
80009a5c:	f2 08 18 00 	cp.b	r8,r9
80009a60:	c0 e0       	breq	80009a7c <__sfvwrite_r+0x18c>
80009a62:	06 9b       	mov	r11,r3
80009a64:	08 9a       	mov	r10,r4
80009a66:	f0 1f 00 4f 	mcall	80009ba0 <__sfvwrite_r+0x2b0>
80009a6a:	6e 08       	ld.w	r8,r7[0x0]
80009a6c:	08 08       	add	r8,r4
80009a6e:	0e 9b       	mov	r11,r7
80009a70:	8f 08       	st.w	r7[0x0],r8
80009a72:	0a 9c       	mov	r12,r5
80009a74:	f0 1f 00 4c 	mcall	80009ba4 <__sfvwrite_r+0x2b4>
80009a78:	c1 90       	breq	80009aaa <__sfvwrite_r+0x1ba>
80009a7a:	c8 08       	rjmp	80009b7a <__sfvwrite_r+0x28a>
80009a7c:	6e 59       	ld.w	r9,r7[0x14]
80009a7e:	12 36       	cp.w	r6,r9
80009a80:	c0 a3       	brcs	80009a94 <__sfvwrite_r+0x1a4>
80009a82:	6e a8       	ld.w	r8,r7[0x28]
80009a84:	06 9a       	mov	r10,r3
80009a86:	6e 8b       	ld.w	r11,r7[0x20]
80009a88:	0a 9c       	mov	r12,r5
80009a8a:	5d 18       	icall	r8
80009a8c:	18 94       	mov	r4,r12
80009a8e:	e0 89 00 0e 	brgt	80009aaa <__sfvwrite_r+0x1ba>
80009a92:	c7 48       	rjmp	80009b7a <__sfvwrite_r+0x28a>
80009a94:	0c 9a       	mov	r10,r6
80009a96:	06 9b       	mov	r11,r3
80009a98:	f0 1f 00 42 	mcall	80009ba0 <__sfvwrite_r+0x2b0>
80009a9c:	6e 08       	ld.w	r8,r7[0x0]
80009a9e:	0c 08       	add	r8,r6
80009aa0:	0c 94       	mov	r4,r6
80009aa2:	8f 08       	st.w	r7[0x0],r8
80009aa4:	6e 28       	ld.w	r8,r7[0x8]
80009aa6:	0c 18       	sub	r8,r6
80009aa8:	8f 28       	st.w	r7[0x8],r8
80009aaa:	62 28       	ld.w	r8,r1[0x8]
80009aac:	08 18       	sub	r8,r4
80009aae:	83 28       	st.w	r1[0x8],r8
80009ab0:	c6 a0       	breq	80009b84 <__sfvwrite_r+0x294>
80009ab2:	08 16       	sub	r6,r4
80009ab4:	08 03       	add	r3,r4
80009ab6:	c6 db       	rjmp	80009990 <__sfvwrite_r+0xa0>
80009ab8:	60 03       	ld.w	r3,r0[0x0]
80009aba:	60 11       	ld.w	r1,r0[0x4]
80009abc:	30 08       	mov	r8,0
80009abe:	2f 80       	sub	r0,-8
80009ac0:	50 08       	stdsp	sp[0x0],r8
80009ac2:	58 01       	cp.w	r1,0
80009ac4:	cf a0       	breq	80009ab8 <__sfvwrite_r+0x1c8>
80009ac6:	40 0a       	lddsp	r10,sp[0x0]
80009ac8:	58 0a       	cp.w	r10,0
80009aca:	c1 11       	brne	80009aec <__sfvwrite_r+0x1fc>
80009acc:	02 9a       	mov	r10,r1
80009ace:	30 ab       	mov	r11,10
80009ad0:	06 9c       	mov	r12,r3
80009ad2:	f0 1f 00 36 	mcall	80009ba8 <__sfvwrite_r+0x2b8>
80009ad6:	c0 70       	breq	80009ae4 <__sfvwrite_r+0x1f4>
80009ad8:	f8 c6 ff ff 	sub	r6,r12,-1
80009adc:	30 19       	mov	r9,1
80009ade:	06 16       	sub	r6,r3
80009ae0:	50 09       	stdsp	sp[0x0],r9
80009ae2:	c0 58       	rjmp	80009aec <__sfvwrite_r+0x1fc>
80009ae4:	30 18       	mov	r8,1
80009ae6:	e2 c6 ff ff 	sub	r6,r1,-1
80009aea:	50 08       	stdsp	sp[0x0],r8
80009aec:	02 36       	cp.w	r6,r1
80009aee:	ec 04 17 80 	movls	r4,r6
80009af2:	e2 04 17 b0 	movhi	r4,r1
80009af6:	6e 59       	ld.w	r9,r7[0x14]
80009af8:	6e 25       	ld.w	r5,r7[0x8]
80009afa:	f2 05 00 05 	add	r5,r9,r5
80009afe:	0a 34       	cp.w	r4,r5
80009b00:	5f 9a       	srgt	r10
80009b02:	6e 0c       	ld.w	r12,r7[0x0]
80009b04:	6e 48       	ld.w	r8,r7[0x10]
80009b06:	10 3c       	cp.w	r12,r8
80009b08:	5f b8       	srhi	r8
80009b0a:	f5 e8 00 08 	and	r8,r10,r8
80009b0e:	30 0a       	mov	r10,0
80009b10:	f4 08 18 00 	cp.b	r8,r10
80009b14:	c0 e0       	breq	80009b30 <__sfvwrite_r+0x240>
80009b16:	06 9b       	mov	r11,r3
80009b18:	0a 9a       	mov	r10,r5
80009b1a:	f0 1f 00 22 	mcall	80009ba0 <__sfvwrite_r+0x2b0>
80009b1e:	6e 08       	ld.w	r8,r7[0x0]
80009b20:	0a 08       	add	r8,r5
80009b22:	0e 9b       	mov	r11,r7
80009b24:	8f 08       	st.w	r7[0x0],r8
80009b26:	40 1c       	lddsp	r12,sp[0x4]
80009b28:	f0 1f 00 1f 	mcall	80009ba4 <__sfvwrite_r+0x2b4>
80009b2c:	c1 80       	breq	80009b5c <__sfvwrite_r+0x26c>
80009b2e:	c2 68       	rjmp	80009b7a <__sfvwrite_r+0x28a>
80009b30:	12 34       	cp.w	r4,r9
80009b32:	c0 a5       	brlt	80009b46 <__sfvwrite_r+0x256>
80009b34:	6e a8       	ld.w	r8,r7[0x28]
80009b36:	06 9a       	mov	r10,r3
80009b38:	6e 8b       	ld.w	r11,r7[0x20]
80009b3a:	40 1c       	lddsp	r12,sp[0x4]
80009b3c:	5d 18       	icall	r8
80009b3e:	18 95       	mov	r5,r12
80009b40:	e0 89 00 0e 	brgt	80009b5c <__sfvwrite_r+0x26c>
80009b44:	c1 b8       	rjmp	80009b7a <__sfvwrite_r+0x28a>
80009b46:	08 9a       	mov	r10,r4
80009b48:	06 9b       	mov	r11,r3
80009b4a:	f0 1f 00 16 	mcall	80009ba0 <__sfvwrite_r+0x2b0>
80009b4e:	6e 08       	ld.w	r8,r7[0x0]
80009b50:	08 08       	add	r8,r4
80009b52:	08 95       	mov	r5,r4
80009b54:	8f 08       	st.w	r7[0x0],r8
80009b56:	6e 28       	ld.w	r8,r7[0x8]
80009b58:	08 18       	sub	r8,r4
80009b5a:	8f 28       	st.w	r7[0x8],r8
80009b5c:	0a 16       	sub	r6,r5
80009b5e:	c0 71       	brne	80009b6c <__sfvwrite_r+0x27c>
80009b60:	0e 9b       	mov	r11,r7
80009b62:	40 1c       	lddsp	r12,sp[0x4]
80009b64:	f0 1f 00 10 	mcall	80009ba4 <__sfvwrite_r+0x2b4>
80009b68:	c0 91       	brne	80009b7a <__sfvwrite_r+0x28a>
80009b6a:	50 06       	stdsp	sp[0x0],r6
80009b6c:	64 28       	ld.w	r8,r2[0x8]
80009b6e:	0a 18       	sub	r8,r5
80009b70:	85 28       	st.w	r2[0x8],r8
80009b72:	c0 90       	breq	80009b84 <__sfvwrite_r+0x294>
80009b74:	0a 11       	sub	r1,r5
80009b76:	0a 03       	add	r3,r5
80009b78:	ca 5b       	rjmp	80009ac2 <__sfvwrite_r+0x1d2>
80009b7a:	8e 68       	ld.sh	r8,r7[0xc]
80009b7c:	a7 a8       	sbr	r8,0x6
80009b7e:	ae 68       	st.h	r7[0xc],r8
80009b80:	3f fc       	mov	r12,-1
80009b82:	c0 28       	rjmp	80009b86 <__sfvwrite_r+0x296>
80009b84:	30 0c       	mov	r12,0
80009b86:	2f dd       	sub	sp,-12
80009b88:	d8 32       	popm	r0-r7,pc
80009b8a:	00 00       	add	r0,r0
80009b8c:	80 00       	ld.sh	r0,r0[0x0]
80009b8e:	cd 10       	breq	80009b30 <__sfvwrite_r+0x240>
80009b90:	80 00       	ld.sh	r0,r0[0x0]
80009b92:	9c 70       	ld.sh	r0,lr[0xe]
80009b94:	80 00       	ld.sh	r0,r0[0x0]
80009b96:	a0 f8       	st.b	r0[0x7],r8
80009b98:	80 00       	ld.sh	r0,r0[0x0]
80009b9a:	a3 34       	mul	r4,r1
80009b9c:	80 00       	ld.sh	r0,r0[0x0]
80009b9e:	df 04       	*unknown*
80009ba0:	80 00       	ld.sh	r0,r0[0x0]
80009ba2:	a2 40       	st.h	r1[0x8],r0
80009ba4:	80 00       	ld.sh	r0,r0[0x0]
80009ba6:	db d4       	*unknown*
80009ba8:	80 00       	ld.sh	r0,r0[0x0]
80009baa:	a0 bc       	st.b	r0[0x3],r12

80009bac <_fwrite_r>:
80009bac:	d4 31       	pushm	r0-r7,lr
80009bae:	20 5d       	sub	sp,20
80009bb0:	12 96       	mov	r6,r9
80009bb2:	fa c9 ff f4 	sub	r9,sp,-12
80009bb6:	ec 0a 02 45 	mul	r5,r6,r10
80009bba:	50 09       	stdsp	sp[0x0],r9
80009bbc:	50 3b       	stdsp	sp[0xc],r11
80009bbe:	30 19       	mov	r9,1
80009bc0:	50 45       	stdsp	sp[0x10],r5
80009bc2:	50 25       	stdsp	sp[0x8],r5
80009bc4:	50 19       	stdsp	sp[0x4],r9
80009bc6:	14 97       	mov	r7,r10
80009bc8:	10 93       	mov	r3,r8
80009bca:	18 94       	mov	r4,r12
80009bcc:	58 0c       	cp.w	r12,0
80009bce:	c0 60       	breq	80009bda <_fwrite_r+0x2e>
80009bd0:	78 68       	ld.w	r8,r12[0x18]
80009bd2:	58 08       	cp.w	r8,0
80009bd4:	c0 31       	brne	80009bda <_fwrite_r+0x2e>
80009bd6:	f0 1f 00 0f 	mcall	80009c10 <_fwrite_r+0x64>
80009bda:	48 f8       	lddpc	r8,80009c14 <_fwrite_r+0x68>
80009bdc:	10 33       	cp.w	r3,r8
80009bde:	c0 31       	brne	80009be4 <_fwrite_r+0x38>
80009be0:	68 03       	ld.w	r3,r4[0x0]
80009be2:	c0 a8       	rjmp	80009bf6 <_fwrite_r+0x4a>
80009be4:	48 d8       	lddpc	r8,80009c18 <_fwrite_r+0x6c>
80009be6:	10 33       	cp.w	r3,r8
80009be8:	c0 31       	brne	80009bee <_fwrite_r+0x42>
80009bea:	68 13       	ld.w	r3,r4[0x4]
80009bec:	c0 58       	rjmp	80009bf6 <_fwrite_r+0x4a>
80009bee:	48 c8       	lddpc	r8,80009c1c <_fwrite_r+0x70>
80009bf0:	10 33       	cp.w	r3,r8
80009bf2:	c0 21       	brne	80009bf6 <_fwrite_r+0x4a>
80009bf4:	68 23       	ld.w	r3,r4[0x8]
80009bf6:	06 9b       	mov	r11,r3
80009bf8:	08 9c       	mov	r12,r4
80009bfa:	1a 9a       	mov	r10,sp
80009bfc:	f0 1f 00 09 	mcall	80009c20 <_fwrite_r+0x74>
80009c00:	c0 50       	breq	80009c0a <_fwrite_r+0x5e>
80009c02:	40 28       	lddsp	r8,sp[0x8]
80009c04:	10 15       	sub	r5,r8
80009c06:	ea 07 0d 06 	divu	r6,r5,r7
80009c0a:	0c 9c       	mov	r12,r6
80009c0c:	2f bd       	sub	sp,-20
80009c0e:	d8 32       	popm	r0-r7,pc
80009c10:	80 00       	ld.sh	r0,r0[0x0]
80009c12:	dd ac       	*unknown*
80009c14:	80 01       	ld.sh	r1,r0[0x0]
80009c16:	01 64       	ld.uh	r4,--r0
80009c18:	80 01       	ld.sh	r1,r0[0x0]
80009c1a:	01 84       	ld.ub	r4,r0[0x0]
80009c1c:	80 01       	ld.sh	r1,r0[0x0]
80009c1e:	01 a4       	ld.ub	r4,r0[0x2]
80009c20:	80 00       	ld.sh	r0,r0[0x0]
80009c22:	98 f0       	ld.uh	r0,r12[0xe]

80009c24 <fwrite>:
80009c24:	d4 01       	pushm	lr
80009c26:	12 98       	mov	r8,r9
80009c28:	14 99       	mov	r9,r10
80009c2a:	16 9a       	mov	r10,r11
80009c2c:	18 9b       	mov	r11,r12
80009c2e:	48 3c       	lddpc	r12,80009c38 <fwrite+0x14>
80009c30:	78 0c       	ld.w	r12,r12[0x0]
80009c32:	f0 1f 00 03 	mcall	80009c3c <fwrite+0x18>
80009c36:	d8 02       	popm	pc
80009c38:	00 00       	add	r0,r0
80009c3a:	02 04       	add	r4,r1
80009c3c:	80 00       	ld.sh	r0,r0[0x0]
80009c3e:	9b ac       	st.w	sp[0x28],r12

80009c40 <free>:
80009c40:	d4 01       	pushm	lr
80009c42:	48 48       	lddpc	r8,80009c50 <free+0x10>
80009c44:	18 9b       	mov	r11,r12
80009c46:	70 0c       	ld.w	r12,r8[0x0]
80009c48:	f0 1f 00 03 	mcall	80009c54 <free+0x14>
80009c4c:	d8 02       	popm	pc
80009c4e:	00 00       	add	r0,r0
80009c50:	00 00       	add	r0,r0
80009c52:	02 04       	add	r4,r1
80009c54:	80 00       	ld.sh	r0,r0[0x0]
80009c56:	df 04       	*unknown*

80009c58 <malloc>:
80009c58:	d4 01       	pushm	lr
80009c5a:	48 48       	lddpc	r8,80009c68 <malloc+0x10>
80009c5c:	18 9b       	mov	r11,r12
80009c5e:	70 0c       	ld.w	r12,r8[0x0]
80009c60:	f0 1f 00 03 	mcall	80009c6c <malloc+0x14>
80009c64:	d8 02       	popm	pc
80009c66:	00 00       	add	r0,r0
80009c68:	00 00       	add	r0,r0
80009c6a:	02 04       	add	r4,r1
80009c6c:	80 00       	ld.sh	r0,r0[0x0]
80009c6e:	9c 70       	ld.sh	r0,lr[0xe]

80009c70 <_malloc_r>:
80009c70:	d4 31       	pushm	r0-r7,lr
80009c72:	f6 c8 ff f5 	sub	r8,r11,-11
80009c76:	18 95       	mov	r5,r12
80009c78:	10 97       	mov	r7,r8
80009c7a:	e0 17 ff f8 	andl	r7,0xfff8
80009c7e:	59 68       	cp.w	r8,22
80009c80:	f9 b7 08 10 	movls	r7,16
80009c84:	16 37       	cp.w	r7,r11
80009c86:	5f 38       	srlo	r8
80009c88:	f1 e7 13 f8 	or	r8,r8,r7>>0x1f
80009c8c:	c0 50       	breq	80009c96 <_malloc_r+0x26>
80009c8e:	30 c8       	mov	r8,12
80009c90:	99 38       	st.w	r12[0xc],r8
80009c92:	e0 8f 01 f2 	bral	8000a076 <_malloc_r+0x406>
80009c96:	f0 1f 00 50 	mcall	80009dd4 <_malloc_r+0x164>
80009c9a:	e0 47 01 f7 	cp.w	r7,503
80009c9e:	e0 8b 00 1c 	brhi	80009cd6 <_malloc_r+0x66>
80009ca2:	ee 03 16 03 	lsr	r3,r7,0x3
80009ca6:	4c d8       	lddpc	r8,80009dd8 <_malloc_r+0x168>
80009ca8:	f0 03 00 38 	add	r8,r8,r3<<0x3
80009cac:	70 36       	ld.w	r6,r8[0xc]
80009cae:	10 36       	cp.w	r6,r8
80009cb0:	c0 61       	brne	80009cbc <_malloc_r+0x4c>
80009cb2:	ec c8 ff f8 	sub	r8,r6,-8
80009cb6:	70 36       	ld.w	r6,r8[0xc]
80009cb8:	10 36       	cp.w	r6,r8
80009cba:	c0 c0       	breq	80009cd2 <_malloc_r+0x62>
80009cbc:	6c 18       	ld.w	r8,r6[0x4]
80009cbe:	e0 18 ff fc 	andl	r8,0xfffc
80009cc2:	6c 3a       	ld.w	r10,r6[0xc]
80009cc4:	ec 08 00 09 	add	r9,r6,r8
80009cc8:	0a 9c       	mov	r12,r5
80009cca:	6c 28       	ld.w	r8,r6[0x8]
80009ccc:	95 28       	st.w	r10[0x8],r8
80009cce:	91 3a       	st.w	r8[0xc],r10
80009cd0:	c4 68       	rjmp	80009d5c <_malloc_r+0xec>
80009cd2:	2f e3       	sub	r3,-2
80009cd4:	c4 c8       	rjmp	80009d6c <_malloc_r+0xfc>
80009cd6:	ee 03 16 09 	lsr	r3,r7,0x9
80009cda:	c0 41       	brne	80009ce2 <_malloc_r+0x72>
80009cdc:	ee 03 16 03 	lsr	r3,r7,0x3
80009ce0:	c2 68       	rjmp	80009d2c <_malloc_r+0xbc>
80009ce2:	58 43       	cp.w	r3,4
80009ce4:	e0 8b 00 06 	brhi	80009cf0 <_malloc_r+0x80>
80009ce8:	ee 03 16 06 	lsr	r3,r7,0x6
80009cec:	2c 83       	sub	r3,-56
80009cee:	c1 f8       	rjmp	80009d2c <_malloc_r+0xbc>
80009cf0:	59 43       	cp.w	r3,20
80009cf2:	e0 8b 00 04 	brhi	80009cfa <_malloc_r+0x8a>
80009cf6:	2a 53       	sub	r3,-91
80009cf8:	c1 a8       	rjmp	80009d2c <_malloc_r+0xbc>
80009cfa:	e0 43 00 54 	cp.w	r3,84
80009cfe:	e0 8b 00 06 	brhi	80009d0a <_malloc_r+0x9a>
80009d02:	ee 03 16 0c 	lsr	r3,r7,0xc
80009d06:	29 23       	sub	r3,-110
80009d08:	c1 28       	rjmp	80009d2c <_malloc_r+0xbc>
80009d0a:	e0 43 01 54 	cp.w	r3,340
80009d0e:	e0 8b 00 06 	brhi	80009d1a <_malloc_r+0xaa>
80009d12:	ee 03 16 0f 	lsr	r3,r7,0xf
80009d16:	28 93       	sub	r3,-119
80009d18:	c0 a8       	rjmp	80009d2c <_malloc_r+0xbc>
80009d1a:	e0 43 05 54 	cp.w	r3,1364
80009d1e:	e0 88 00 04 	brls	80009d26 <_malloc_r+0xb6>
80009d22:	37 e3       	mov	r3,126
80009d24:	c0 48       	rjmp	80009d2c <_malloc_r+0xbc>
80009d26:	ee 03 16 12 	lsr	r3,r7,0x12
80009d2a:	28 43       	sub	r3,-124
80009d2c:	4a ba       	lddpc	r10,80009dd8 <_malloc_r+0x168>
80009d2e:	f4 03 00 3a 	add	r10,r10,r3<<0x3
80009d32:	74 36       	ld.w	r6,r10[0xc]
80009d34:	c1 98       	rjmp	80009d66 <_malloc_r+0xf6>
80009d36:	6c 19       	ld.w	r9,r6[0x4]
80009d38:	e0 19 ff fc 	andl	r9,0xfffc
80009d3c:	f2 07 01 0b 	sub	r11,r9,r7
80009d40:	58 fb       	cp.w	r11,15
80009d42:	e0 8a 00 04 	brle	80009d4a <_malloc_r+0xda>
80009d46:	20 13       	sub	r3,1
80009d48:	c1 18       	rjmp	80009d6a <_malloc_r+0xfa>
80009d4a:	6c 38       	ld.w	r8,r6[0xc]
80009d4c:	58 0b       	cp.w	r11,0
80009d4e:	c0 b5       	brlt	80009d64 <_malloc_r+0xf4>
80009d50:	6c 2a       	ld.w	r10,r6[0x8]
80009d52:	ec 09 00 09 	add	r9,r6,r9
80009d56:	0a 9c       	mov	r12,r5
80009d58:	91 2a       	st.w	r8[0x8],r10
80009d5a:	95 38       	st.w	r10[0xc],r8
80009d5c:	72 18       	ld.w	r8,r9[0x4]
80009d5e:	a1 a8       	sbr	r8,0x0
80009d60:	93 18       	st.w	r9[0x4],r8
80009d62:	cb c8       	rjmp	80009eda <_malloc_r+0x26a>
80009d64:	10 96       	mov	r6,r8
80009d66:	14 36       	cp.w	r6,r10
80009d68:	ce 71       	brne	80009d36 <_malloc_r+0xc6>
80009d6a:	2f f3       	sub	r3,-1
80009d6c:	49 ba       	lddpc	r10,80009dd8 <_malloc_r+0x168>
80009d6e:	f4 cc ff f8 	sub	r12,r10,-8
80009d72:	78 26       	ld.w	r6,r12[0x8]
80009d74:	18 36       	cp.w	r6,r12
80009d76:	c6 e0       	breq	80009e52 <_malloc_r+0x1e2>
80009d78:	6c 19       	ld.w	r9,r6[0x4]
80009d7a:	e0 19 ff fc 	andl	r9,0xfffc
80009d7e:	f2 07 01 08 	sub	r8,r9,r7
80009d82:	58 f8       	cp.w	r8,15
80009d84:	e0 89 00 90 	brgt	80009ea4 <_malloc_r+0x234>
80009d88:	99 3c       	st.w	r12[0xc],r12
80009d8a:	99 2c       	st.w	r12[0x8],r12
80009d8c:	58 08       	cp.w	r8,0
80009d8e:	c0 55       	brlt	80009d98 <_malloc_r+0x128>
80009d90:	ec 09 00 09 	add	r9,r6,r9
80009d94:	0a 9c       	mov	r12,r5
80009d96:	ce 3b       	rjmp	80009d5c <_malloc_r+0xec>
80009d98:	e0 49 01 ff 	cp.w	r9,511
80009d9c:	e0 8b 00 13 	brhi	80009dc2 <_malloc_r+0x152>
80009da0:	a3 99       	lsr	r9,0x3
80009da2:	f4 09 00 38 	add	r8,r10,r9<<0x3
80009da6:	70 2b       	ld.w	r11,r8[0x8]
80009da8:	8d 38       	st.w	r6[0xc],r8
80009daa:	8d 2b       	st.w	r6[0x8],r11
80009dac:	97 36       	st.w	r11[0xc],r6
80009dae:	91 26       	st.w	r8[0x8],r6
80009db0:	a3 49       	asr	r9,0x2
80009db2:	74 18       	ld.w	r8,r10[0x4]
80009db4:	30 1b       	mov	r11,1
80009db6:	f6 09 09 49 	lsl	r9,r11,r9
80009dba:	f1 e9 10 09 	or	r9,r8,r9
80009dbe:	95 19       	st.w	r10[0x4],r9
80009dc0:	c4 98       	rjmp	80009e52 <_malloc_r+0x1e2>
80009dc2:	f2 0a 16 09 	lsr	r10,r9,0x9
80009dc6:	58 4a       	cp.w	r10,4
80009dc8:	e0 8b 00 0a 	brhi	80009ddc <_malloc_r+0x16c>
80009dcc:	f2 0a 16 06 	lsr	r10,r9,0x6
80009dd0:	2c 8a       	sub	r10,-56
80009dd2:	c2 38       	rjmp	80009e18 <_malloc_r+0x1a8>
80009dd4:	80 00       	ld.sh	r0,r0[0x0]
80009dd6:	a2 8c       	st.b	r1[0x0],r12
80009dd8:	00 00       	add	r0,r0
80009dda:	02 08       	add	r8,r1
80009ddc:	59 4a       	cp.w	r10,20
80009dde:	e0 8b 00 04 	brhi	80009de6 <_malloc_r+0x176>
80009de2:	2a 5a       	sub	r10,-91
80009de4:	c1 a8       	rjmp	80009e18 <_malloc_r+0x1a8>
80009de6:	e0 4a 00 54 	cp.w	r10,84
80009dea:	e0 8b 00 06 	brhi	80009df6 <_malloc_r+0x186>
80009dee:	f2 0a 16 0c 	lsr	r10,r9,0xc
80009df2:	29 2a       	sub	r10,-110
80009df4:	c1 28       	rjmp	80009e18 <_malloc_r+0x1a8>
80009df6:	e0 4a 01 54 	cp.w	r10,340
80009dfa:	e0 8b 00 06 	brhi	80009e06 <_malloc_r+0x196>
80009dfe:	f2 0a 16 0f 	lsr	r10,r9,0xf
80009e02:	28 9a       	sub	r10,-119
80009e04:	c0 a8       	rjmp	80009e18 <_malloc_r+0x1a8>
80009e06:	e0 4a 05 54 	cp.w	r10,1364
80009e0a:	e0 88 00 04 	brls	80009e12 <_malloc_r+0x1a2>
80009e0e:	37 ea       	mov	r10,126
80009e10:	c0 48       	rjmp	80009e18 <_malloc_r+0x1a8>
80009e12:	f2 0a 16 12 	lsr	r10,r9,0x12
80009e16:	28 4a       	sub	r10,-124
80009e18:	4c 8b       	lddpc	r11,80009f38 <_malloc_r+0x2c8>
80009e1a:	f6 0a 00 34 	add	r4,r11,r10<<0x3
80009e1e:	68 28       	ld.w	r8,r4[0x8]
80009e20:	08 38       	cp.w	r8,r4
80009e22:	c0 e1       	brne	80009e3e <_malloc_r+0x1ce>
80009e24:	76 19       	ld.w	r9,r11[0x4]
80009e26:	a3 4a       	asr	r10,0x2
80009e28:	30 1e       	mov	lr,1
80009e2a:	fc 0a 09 4a 	lsl	r10,lr,r10
80009e2e:	f3 ea 10 0a 	or	r10,r9,r10
80009e32:	10 99       	mov	r9,r8
80009e34:	97 1a       	st.w	r11[0x4],r10
80009e36:	c0 a8       	rjmp	80009e4a <_malloc_r+0x1da>
80009e38:	70 28       	ld.w	r8,r8[0x8]
80009e3a:	08 38       	cp.w	r8,r4
80009e3c:	c0 60       	breq	80009e48 <_malloc_r+0x1d8>
80009e3e:	70 1a       	ld.w	r10,r8[0x4]
80009e40:	e0 1a ff fc 	andl	r10,0xfffc
80009e44:	14 39       	cp.w	r9,r10
80009e46:	cf 93       	brcs	80009e38 <_malloc_r+0x1c8>
80009e48:	70 39       	ld.w	r9,r8[0xc]
80009e4a:	8d 39       	st.w	r6[0xc],r9
80009e4c:	8d 28       	st.w	r6[0x8],r8
80009e4e:	91 36       	st.w	r8[0xc],r6
80009e50:	93 26       	st.w	r9[0x8],r6
80009e52:	e6 08 14 02 	asr	r8,r3,0x2
80009e56:	30 1b       	mov	r11,1
80009e58:	4b 84       	lddpc	r4,80009f38 <_malloc_r+0x2c8>
80009e5a:	f6 08 09 4b 	lsl	r11,r11,r8
80009e5e:	68 18       	ld.w	r8,r4[0x4]
80009e60:	10 3b       	cp.w	r11,r8
80009e62:	e0 8b 00 6f 	brhi	80009f40 <_malloc_r+0x2d0>
80009e66:	f7 e8 00 09 	and	r9,r11,r8
80009e6a:	c0 b1       	brne	80009e80 <_malloc_r+0x210>
80009e6c:	e0 13 ff fc 	andl	r3,0xfffc
80009e70:	a1 7b       	lsl	r11,0x1
80009e72:	2f c3       	sub	r3,-4
80009e74:	c0 38       	rjmp	80009e7a <_malloc_r+0x20a>
80009e76:	2f c3       	sub	r3,-4
80009e78:	a1 7b       	lsl	r11,0x1
80009e7a:	f7 e8 00 09 	and	r9,r11,r8
80009e7e:	cf c0       	breq	80009e76 <_malloc_r+0x206>
80009e80:	e8 03 00 3e 	add	lr,r4,r3<<0x3
80009e84:	06 92       	mov	r2,r3
80009e86:	1c 91       	mov	r1,lr
80009e88:	62 36       	ld.w	r6,r1[0xc]
80009e8a:	c2 e8       	rjmp	80009ee6 <_malloc_r+0x276>
80009e8c:	6c 1a       	ld.w	r10,r6[0x4]
80009e8e:	e0 1a ff fc 	andl	r10,0xfffc
80009e92:	f4 07 01 08 	sub	r8,r10,r7
80009e96:	58 f8       	cp.w	r8,15
80009e98:	e0 8a 00 15 	brle	80009ec2 <_malloc_r+0x252>
80009e9c:	6c 3a       	ld.w	r10,r6[0xc]
80009e9e:	6c 29       	ld.w	r9,r6[0x8]
80009ea0:	95 29       	st.w	r10[0x8],r9
80009ea2:	93 3a       	st.w	r9[0xc],r10
80009ea4:	0e 99       	mov	r9,r7
80009ea6:	ec 07 00 07 	add	r7,r6,r7
80009eaa:	a1 a9       	sbr	r9,0x0
80009eac:	99 37       	st.w	r12[0xc],r7
80009eae:	99 27       	st.w	r12[0x8],r7
80009eb0:	8d 19       	st.w	r6[0x4],r9
80009eb2:	ee 08 09 08 	st.w	r7[r8],r8
80009eb6:	8f 2c       	st.w	r7[0x8],r12
80009eb8:	8f 3c       	st.w	r7[0xc],r12
80009eba:	a1 a8       	sbr	r8,0x0
80009ebc:	0a 9c       	mov	r12,r5
80009ebe:	8f 18       	st.w	r7[0x4],r8
80009ec0:	c0 d8       	rjmp	80009eda <_malloc_r+0x26a>
80009ec2:	6c 39       	ld.w	r9,r6[0xc]
80009ec4:	58 08       	cp.w	r8,0
80009ec6:	c0 f5       	brlt	80009ee4 <_malloc_r+0x274>
80009ec8:	ec 0a 00 0a 	add	r10,r6,r10
80009ecc:	74 18       	ld.w	r8,r10[0x4]
80009ece:	a1 a8       	sbr	r8,0x0
80009ed0:	0a 9c       	mov	r12,r5
80009ed2:	95 18       	st.w	r10[0x4],r8
80009ed4:	6c 28       	ld.w	r8,r6[0x8]
80009ed6:	93 28       	st.w	r9[0x8],r8
80009ed8:	91 39       	st.w	r8[0xc],r9
80009eda:	f0 1f 00 19 	mcall	80009f3c <_malloc_r+0x2cc>
80009ede:	ec cc ff f8 	sub	r12,r6,-8
80009ee2:	d8 32       	popm	r0-r7,pc
80009ee4:	12 96       	mov	r6,r9
80009ee6:	02 36       	cp.w	r6,r1
80009ee8:	cd 21       	brne	80009e8c <_malloc_r+0x21c>
80009eea:	2f f2       	sub	r2,-1
80009eec:	f1 d2 c0 02 	bfextu	r8,r2,0x0,0x2
80009ef0:	c0 30       	breq	80009ef6 <_malloc_r+0x286>
80009ef2:	2f 81       	sub	r1,-8
80009ef4:	cc ab       	rjmp	80009e88 <_malloc_r+0x218>
80009ef6:	1c 98       	mov	r8,lr
80009ef8:	f3 d3 c0 02 	bfextu	r9,r3,0x0,0x2
80009efc:	c0 81       	brne	80009f0c <_malloc_r+0x29c>
80009efe:	68 19       	ld.w	r9,r4[0x4]
80009f00:	f6 08 11 ff 	rsub	r8,r11,-1
80009f04:	f3 e8 00 08 	and	r8,r9,r8
80009f08:	89 18       	st.w	r4[0x4],r8
80009f0a:	c0 78       	rjmp	80009f18 <_malloc_r+0x2a8>
80009f0c:	f0 c9 00 08 	sub	r9,r8,8
80009f10:	20 13       	sub	r3,1
80009f12:	70 08       	ld.w	r8,r8[0x0]
80009f14:	12 38       	cp.w	r8,r9
80009f16:	cf 10       	breq	80009ef8 <_malloc_r+0x288>
80009f18:	a1 7b       	lsl	r11,0x1
80009f1a:	68 18       	ld.w	r8,r4[0x4]
80009f1c:	10 3b       	cp.w	r11,r8
80009f1e:	e0 8b 00 11 	brhi	80009f40 <_malloc_r+0x2d0>
80009f22:	58 0b       	cp.w	r11,0
80009f24:	c0 e0       	breq	80009f40 <_malloc_r+0x2d0>
80009f26:	04 93       	mov	r3,r2
80009f28:	c0 38       	rjmp	80009f2e <_malloc_r+0x2be>
80009f2a:	2f c3       	sub	r3,-4
80009f2c:	a1 7b       	lsl	r11,0x1
80009f2e:	f7 e8 00 09 	and	r9,r11,r8
80009f32:	ca 71       	brne	80009e80 <_malloc_r+0x210>
80009f34:	cf bb       	rjmp	80009f2a <_malloc_r+0x2ba>
80009f36:	00 00       	add	r0,r0
80009f38:	00 00       	add	r0,r0
80009f3a:	02 08       	add	r8,r1
80009f3c:	80 00       	ld.sh	r0,r0[0x0]
80009f3e:	a2 8e       	st.b	r1[0x0],lr
80009f40:	68 23       	ld.w	r3,r4[0x8]
80009f42:	66 12       	ld.w	r2,r3[0x4]
80009f44:	e0 12 ff fc 	andl	r2,0xfffc
80009f48:	0e 32       	cp.w	r2,r7
80009f4a:	5f 39       	srlo	r9
80009f4c:	e4 07 01 08 	sub	r8,r2,r7
80009f50:	58 f8       	cp.w	r8,15
80009f52:	5f aa       	srle	r10
80009f54:	f5 e9 10 09 	or	r9,r10,r9
80009f58:	e0 80 00 a0 	breq	8000a098 <_malloc_r+0x428>
80009f5c:	4c 78       	lddpc	r8,8000a078 <_malloc_r+0x408>
80009f5e:	70 01       	ld.w	r1,r8[0x0]
80009f60:	4c 78       	lddpc	r8,8000a07c <_malloc_r+0x40c>
80009f62:	2f 01       	sub	r1,-16
80009f64:	70 08       	ld.w	r8,r8[0x0]
80009f66:	0e 01       	add	r1,r7
80009f68:	5b f8       	cp.w	r8,-1
80009f6a:	c0 40       	breq	80009f72 <_malloc_r+0x302>
80009f6c:	28 11       	sub	r1,-127
80009f6e:	e0 11 ff 80 	andl	r1,0xff80
80009f72:	02 9b       	mov	r11,r1
80009f74:	0a 9c       	mov	r12,r5
80009f76:	f0 1f 00 43 	mcall	8000a080 <_malloc_r+0x410>
80009f7a:	18 96       	mov	r6,r12
80009f7c:	5b fc       	cp.w	r12,-1
80009f7e:	c6 d0       	breq	8000a058 <_malloc_r+0x3e8>
80009f80:	e6 02 00 08 	add	r8,r3,r2
80009f84:	10 3c       	cp.w	r12,r8
80009f86:	c0 32       	brcc	80009f8c <_malloc_r+0x31c>
80009f88:	08 33       	cp.w	r3,r4
80009f8a:	c6 71       	brne	8000a058 <_malloc_r+0x3e8>
80009f8c:	4b ea       	lddpc	r10,8000a084 <_malloc_r+0x414>
80009f8e:	74 09       	ld.w	r9,r10[0x0]
80009f90:	e2 09 00 09 	add	r9,r1,r9
80009f94:	95 09       	st.w	r10[0x0],r9
80009f96:	10 36       	cp.w	r6,r8
80009f98:	c0 a1       	brne	80009fac <_malloc_r+0x33c>
80009f9a:	f5 d6 c0 07 	bfextu	r10,r6,0x0,0x7
80009f9e:	c0 71       	brne	80009fac <_malloc_r+0x33c>
80009fa0:	e2 02 00 02 	add	r2,r1,r2
80009fa4:	68 28       	ld.w	r8,r4[0x8]
80009fa6:	a1 a2       	sbr	r2,0x0
80009fa8:	91 12       	st.w	r8[0x4],r2
80009faa:	c4 98       	rjmp	8000a03c <_malloc_r+0x3cc>
80009fac:	4b 4a       	lddpc	r10,8000a07c <_malloc_r+0x40c>
80009fae:	74 0b       	ld.w	r11,r10[0x0]
80009fb0:	5b fb       	cp.w	r11,-1
80009fb2:	c0 31       	brne	80009fb8 <_malloc_r+0x348>
80009fb4:	95 06       	st.w	r10[0x0],r6
80009fb6:	c0 68       	rjmp	80009fc2 <_malloc_r+0x352>
80009fb8:	ec 09 00 09 	add	r9,r6,r9
80009fbc:	4b 2a       	lddpc	r10,8000a084 <_malloc_r+0x414>
80009fbe:	10 19       	sub	r9,r8
80009fc0:	95 09       	st.w	r10[0x0],r9
80009fc2:	f1 d6 c0 03 	bfextu	r8,r6,0x0,0x3
80009fc6:	c0 40       	breq	80009fce <_malloc_r+0x35e>
80009fc8:	f0 08 11 08 	rsub	r8,r8,8
80009fcc:	10 06       	add	r6,r8
80009fce:	28 08       	sub	r8,-128
80009fd0:	ec 01 00 01 	add	r1,r6,r1
80009fd4:	0a 9c       	mov	r12,r5
80009fd6:	e3 d1 c0 07 	bfextu	r1,r1,0x0,0x7
80009fda:	f0 01 01 01 	sub	r1,r8,r1
80009fde:	02 9b       	mov	r11,r1
80009fe0:	f0 1f 00 28 	mcall	8000a080 <_malloc_r+0x410>
80009fe4:	30 08       	mov	r8,0
80009fe6:	5b fc       	cp.w	r12,-1
80009fe8:	c0 31       	brne	80009fee <_malloc_r+0x37e>
80009fea:	0c 9c       	mov	r12,r6
80009fec:	10 91       	mov	r1,r8
80009fee:	4a 68       	lddpc	r8,8000a084 <_malloc_r+0x414>
80009ff0:	0c 1c       	sub	r12,r6
80009ff2:	70 09       	ld.w	r9,r8[0x0]
80009ff4:	02 0c       	add	r12,r1
80009ff6:	89 26       	st.w	r4[0x8],r6
80009ff8:	a1 ac       	sbr	r12,0x0
80009ffa:	12 01       	add	r1,r9
80009ffc:	8d 1c       	st.w	r6[0x4],r12
80009ffe:	91 01       	st.w	r8[0x0],r1
8000a000:	08 33       	cp.w	r3,r4
8000a002:	c1 d0       	breq	8000a03c <_malloc_r+0x3cc>
8000a004:	58 f2       	cp.w	r2,15
8000a006:	e0 8b 00 05 	brhi	8000a010 <_malloc_r+0x3a0>
8000a00a:	30 18       	mov	r8,1
8000a00c:	8d 18       	st.w	r6[0x4],r8
8000a00e:	c2 58       	rjmp	8000a058 <_malloc_r+0x3e8>
8000a010:	30 59       	mov	r9,5
8000a012:	20 c2       	sub	r2,12
8000a014:	e0 12 ff f8 	andl	r2,0xfff8
8000a018:	e6 02 00 08 	add	r8,r3,r2
8000a01c:	91 29       	st.w	r8[0x8],r9
8000a01e:	91 19       	st.w	r8[0x4],r9
8000a020:	66 18       	ld.w	r8,r3[0x4]
8000a022:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
8000a026:	e5 e8 10 08 	or	r8,r2,r8
8000a02a:	87 18       	st.w	r3[0x4],r8
8000a02c:	58 f2       	cp.w	r2,15
8000a02e:	e0 88 00 07 	brls	8000a03c <_malloc_r+0x3cc>
8000a032:	e6 cb ff f8 	sub	r11,r3,-8
8000a036:	0a 9c       	mov	r12,r5
8000a038:	f0 1f 00 14 	mcall	8000a088 <_malloc_r+0x418>
8000a03c:	49 28       	lddpc	r8,8000a084 <_malloc_r+0x414>
8000a03e:	49 49       	lddpc	r9,8000a08c <_malloc_r+0x41c>
8000a040:	70 08       	ld.w	r8,r8[0x0]
8000a042:	72 0a       	ld.w	r10,r9[0x0]
8000a044:	14 38       	cp.w	r8,r10
8000a046:	e0 88 00 03 	brls	8000a04c <_malloc_r+0x3dc>
8000a04a:	93 08       	st.w	r9[0x0],r8
8000a04c:	49 19       	lddpc	r9,8000a090 <_malloc_r+0x420>
8000a04e:	72 0a       	ld.w	r10,r9[0x0]
8000a050:	14 38       	cp.w	r8,r10
8000a052:	e0 88 00 03 	brls	8000a058 <_malloc_r+0x3e8>
8000a056:	93 08       	st.w	r9[0x0],r8
8000a058:	68 28       	ld.w	r8,r4[0x8]
8000a05a:	70 18       	ld.w	r8,r8[0x4]
8000a05c:	e0 18 ff fc 	andl	r8,0xfffc
8000a060:	0e 38       	cp.w	r8,r7
8000a062:	5f 39       	srlo	r9
8000a064:	0e 18       	sub	r8,r7
8000a066:	58 f8       	cp.w	r8,15
8000a068:	5f aa       	srle	r10
8000a06a:	f5 e9 10 09 	or	r9,r10,r9
8000a06e:	c1 50       	breq	8000a098 <_malloc_r+0x428>
8000a070:	0a 9c       	mov	r12,r5
8000a072:	f0 1f 00 09 	mcall	8000a094 <_malloc_r+0x424>
8000a076:	d8 3a       	popm	r0-r7,pc,r12=0
8000a078:	00 00       	add	r0,r0
8000a07a:	0f 94       	ld.ub	r4,r7[0x1]
8000a07c:	00 00       	add	r0,r0
8000a07e:	06 14       	sub	r4,r3
8000a080:	80 00       	ld.sh	r0,r0[0x0]
8000a082:	a6 14       	st.h	r3[0x2],r4
8000a084:	00 00       	add	r0,r0
8000a086:	0f 98       	ld.ub	r8,r7[0x1]
8000a088:	80 00       	ld.sh	r0,r0[0x0]
8000a08a:	df 04       	*unknown*
8000a08c:	00 00       	add	r0,r0
8000a08e:	0f 90       	ld.ub	r0,r7[0x1]
8000a090:	00 00       	add	r0,r0
8000a092:	0f 8c       	ld.ub	r12,r7[0x0]
8000a094:	80 00       	ld.sh	r0,r0[0x0]
8000a096:	a2 8e       	st.b	r1[0x0],lr
8000a098:	68 26       	ld.w	r6,r4[0x8]
8000a09a:	a1 a8       	sbr	r8,0x0
8000a09c:	0e 99       	mov	r9,r7
8000a09e:	a1 a9       	sbr	r9,0x0
8000a0a0:	8d 19       	st.w	r6[0x4],r9
8000a0a2:	ec 07 00 07 	add	r7,r6,r7
8000a0a6:	0a 9c       	mov	r12,r5
8000a0a8:	89 27       	st.w	r4[0x8],r7
8000a0aa:	8f 18       	st.w	r7[0x4],r8
8000a0ac:	f0 1f 00 03 	mcall	8000a0b8 <_malloc_r+0x448>
8000a0b0:	ec cc ff f8 	sub	r12,r6,-8
8000a0b4:	d8 32       	popm	r0-r7,pc
8000a0b6:	00 00       	add	r0,r0
8000a0b8:	80 00       	ld.sh	r0,r0[0x0]
8000a0ba:	a2 8e       	st.b	r1[0x0],lr

8000a0bc <memchr>:
8000a0bc:	f7 db c0 08 	bfextu	r11,r11,0x0,0x8
8000a0c0:	c0 68       	rjmp	8000a0cc <memchr+0x10>
8000a0c2:	20 1a       	sub	r10,1
8000a0c4:	19 88       	ld.ub	r8,r12[0x0]
8000a0c6:	16 38       	cp.w	r8,r11
8000a0c8:	5e 0c       	reteq	r12
8000a0ca:	2f fc       	sub	r12,-1
8000a0cc:	58 0a       	cp.w	r10,0
8000a0ce:	cf a1       	brne	8000a0c2 <memchr+0x6>
8000a0d0:	5e fa       	retal	r10

8000a0d2 <memcmp>:
8000a0d2:	d4 01       	pushm	lr
8000a0d4:	30 08       	mov	r8,0
8000a0d6:	c0 d8       	rjmp	8000a0f0 <memcmp+0x1e>
8000a0d8:	f8 08 07 0e 	ld.ub	lr,r12[r8]
8000a0dc:	f6 08 07 09 	ld.ub	r9,r11[r8]
8000a0e0:	20 1a       	sub	r10,1
8000a0e2:	2f f8       	sub	r8,-1
8000a0e4:	f2 0e 18 00 	cp.b	lr,r9
8000a0e8:	c0 40       	breq	8000a0f0 <memcmp+0x1e>
8000a0ea:	fc 09 01 0c 	sub	r12,lr,r9
8000a0ee:	d8 02       	popm	pc
8000a0f0:	58 0a       	cp.w	r10,0
8000a0f2:	cf 31       	brne	8000a0d8 <memcmp+0x6>
8000a0f4:	14 9c       	mov	r12,r10
8000a0f6:	d8 02       	popm	pc

8000a0f8 <memcpy>:
8000a0f8:	58 8a       	cp.w	r10,8
8000a0fa:	c2 f5       	brlt	8000a158 <memcpy+0x60>
8000a0fc:	f9 eb 10 09 	or	r9,r12,r11
8000a100:	e2 19 00 03 	andl	r9,0x3,COH
8000a104:	e0 81 00 97 	brne	8000a232 <memcpy+0x13a>
8000a108:	e0 4a 00 20 	cp.w	r10,32
8000a10c:	c3 b4       	brge	8000a182 <memcpy+0x8a>
8000a10e:	f4 08 14 02 	asr	r8,r10,0x2
8000a112:	f0 09 11 08 	rsub	r9,r8,8
8000a116:	fe 09 00 2f 	add	pc,pc,r9<<0x2
8000a11a:	76 69       	ld.w	r9,r11[0x18]
8000a11c:	99 69       	st.w	r12[0x18],r9
8000a11e:	76 59       	ld.w	r9,r11[0x14]
8000a120:	99 59       	st.w	r12[0x14],r9
8000a122:	76 49       	ld.w	r9,r11[0x10]
8000a124:	99 49       	st.w	r12[0x10],r9
8000a126:	76 39       	ld.w	r9,r11[0xc]
8000a128:	99 39       	st.w	r12[0xc],r9
8000a12a:	76 29       	ld.w	r9,r11[0x8]
8000a12c:	99 29       	st.w	r12[0x8],r9
8000a12e:	76 19       	ld.w	r9,r11[0x4]
8000a130:	99 19       	st.w	r12[0x4],r9
8000a132:	76 09       	ld.w	r9,r11[0x0]
8000a134:	99 09       	st.w	r12[0x0],r9
8000a136:	f6 08 00 2b 	add	r11,r11,r8<<0x2
8000a13a:	f8 08 00 28 	add	r8,r12,r8<<0x2
8000a13e:	e0 1a 00 03 	andl	r10,0x3
8000a142:	f4 0a 11 04 	rsub	r10,r10,4
8000a146:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
8000a14a:	17 a9       	ld.ub	r9,r11[0x2]
8000a14c:	b0 a9       	st.b	r8[0x2],r9
8000a14e:	17 99       	ld.ub	r9,r11[0x1]
8000a150:	b0 99       	st.b	r8[0x1],r9
8000a152:	17 89       	ld.ub	r9,r11[0x0]
8000a154:	b0 89       	st.b	r8[0x0],r9
8000a156:	5e fc       	retal	r12
8000a158:	f4 0a 11 09 	rsub	r10,r10,9
8000a15c:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
8000a160:	17 f9       	ld.ub	r9,r11[0x7]
8000a162:	b8 f9       	st.b	r12[0x7],r9
8000a164:	17 e9       	ld.ub	r9,r11[0x6]
8000a166:	b8 e9       	st.b	r12[0x6],r9
8000a168:	17 d9       	ld.ub	r9,r11[0x5]
8000a16a:	b8 d9       	st.b	r12[0x5],r9
8000a16c:	17 c9       	ld.ub	r9,r11[0x4]
8000a16e:	b8 c9       	st.b	r12[0x4],r9
8000a170:	17 b9       	ld.ub	r9,r11[0x3]
8000a172:	b8 b9       	st.b	r12[0x3],r9
8000a174:	17 a9       	ld.ub	r9,r11[0x2]
8000a176:	b8 a9       	st.b	r12[0x2],r9
8000a178:	17 99       	ld.ub	r9,r11[0x1]
8000a17a:	b8 99       	st.b	r12[0x1],r9
8000a17c:	17 89       	ld.ub	r9,r11[0x0]
8000a17e:	b8 89       	st.b	r12[0x0],r9
8000a180:	5e fc       	retal	r12
8000a182:	eb cd 40 c0 	pushm	r6-r7,lr
8000a186:	18 99       	mov	r9,r12
8000a188:	22 0a       	sub	r10,32
8000a18a:	b7 07       	ld.d	r6,r11++
8000a18c:	b3 26       	st.d	r9++,r6
8000a18e:	b7 07       	ld.d	r6,r11++
8000a190:	b3 26       	st.d	r9++,r6
8000a192:	b7 07       	ld.d	r6,r11++
8000a194:	b3 26       	st.d	r9++,r6
8000a196:	b7 07       	ld.d	r6,r11++
8000a198:	b3 26       	st.d	r9++,r6
8000a19a:	22 0a       	sub	r10,32
8000a19c:	cf 74       	brge	8000a18a <memcpy+0x92>
8000a19e:	2f 0a       	sub	r10,-16
8000a1a0:	c0 65       	brlt	8000a1ac <memcpy+0xb4>
8000a1a2:	b7 07       	ld.d	r6,r11++
8000a1a4:	b3 26       	st.d	r9++,r6
8000a1a6:	b7 07       	ld.d	r6,r11++
8000a1a8:	b3 26       	st.d	r9++,r6
8000a1aa:	21 0a       	sub	r10,16
8000a1ac:	5c 3a       	neg	r10
8000a1ae:	fe 0a 00 3f 	add	pc,pc,r10<<0x3
8000a1b2:	d7 03       	nop
8000a1b4:	d7 03       	nop
8000a1b6:	f7 36 00 0e 	ld.ub	r6,r11[14]
8000a1ba:	f3 66 00 0e 	st.b	r9[14],r6
8000a1be:	f7 36 00 0d 	ld.ub	r6,r11[13]
8000a1c2:	f3 66 00 0d 	st.b	r9[13],r6
8000a1c6:	f7 36 00 0c 	ld.ub	r6,r11[12]
8000a1ca:	f3 66 00 0c 	st.b	r9[12],r6
8000a1ce:	f7 36 00 0b 	ld.ub	r6,r11[11]
8000a1d2:	f3 66 00 0b 	st.b	r9[11],r6
8000a1d6:	f7 36 00 0a 	ld.ub	r6,r11[10]
8000a1da:	f3 66 00 0a 	st.b	r9[10],r6
8000a1de:	f7 36 00 09 	ld.ub	r6,r11[9]
8000a1e2:	f3 66 00 09 	st.b	r9[9],r6
8000a1e6:	f7 36 00 08 	ld.ub	r6,r11[8]
8000a1ea:	f3 66 00 08 	st.b	r9[8],r6
8000a1ee:	f7 36 00 07 	ld.ub	r6,r11[7]
8000a1f2:	f3 66 00 07 	st.b	r9[7],r6
8000a1f6:	f7 36 00 06 	ld.ub	r6,r11[6]
8000a1fa:	f3 66 00 06 	st.b	r9[6],r6
8000a1fe:	f7 36 00 05 	ld.ub	r6,r11[5]
8000a202:	f3 66 00 05 	st.b	r9[5],r6
8000a206:	f7 36 00 04 	ld.ub	r6,r11[4]
8000a20a:	f3 66 00 04 	st.b	r9[4],r6
8000a20e:	f7 36 00 03 	ld.ub	r6,r11[3]
8000a212:	f3 66 00 03 	st.b	r9[3],r6
8000a216:	f7 36 00 02 	ld.ub	r6,r11[2]
8000a21a:	f3 66 00 02 	st.b	r9[2],r6
8000a21e:	f7 36 00 01 	ld.ub	r6,r11[1]
8000a222:	f3 66 00 01 	st.b	r9[1],r6
8000a226:	f7 36 00 00 	ld.ub	r6,r11[0]
8000a22a:	f3 66 00 00 	st.b	r9[0],r6
8000a22e:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
8000a232:	20 1a       	sub	r10,1
8000a234:	f6 0a 07 09 	ld.ub	r9,r11[r10]
8000a238:	f8 0a 0b 09 	st.b	r12[r10],r9
8000a23c:	cf b1       	brne	8000a232 <memcpy+0x13a>
8000a23e:	5e fc       	retal	r12

8000a240 <memmove>:
8000a240:	d4 01       	pushm	lr
8000a242:	18 3b       	cp.w	r11,r12
8000a244:	c1 92       	brcc	8000a276 <memmove+0x36>
8000a246:	f6 0a 00 09 	add	r9,r11,r10
8000a24a:	12 3c       	cp.w	r12,r9
8000a24c:	c1 52       	brcc	8000a276 <memmove+0x36>
8000a24e:	f8 0a 00 0b 	add	r11,r12,r10
8000a252:	30 08       	mov	r8,0
8000a254:	c0 68       	rjmp	8000a260 <memmove+0x20>
8000a256:	f2 08 07 0e 	ld.ub	lr,r9[r8]
8000a25a:	20 1a       	sub	r10,1
8000a25c:	f6 08 0b 0e 	st.b	r11[r8],lr
8000a260:	20 18       	sub	r8,1
8000a262:	58 0a       	cp.w	r10,0
8000a264:	cf 91       	brne	8000a256 <memmove+0x16>
8000a266:	d8 02       	popm	pc
8000a268:	f6 08 07 09 	ld.ub	r9,r11[r8]
8000a26c:	20 1a       	sub	r10,1
8000a26e:	f8 08 0b 09 	st.b	r12[r8],r9
8000a272:	2f f8       	sub	r8,-1
8000a274:	c0 28       	rjmp	8000a278 <memmove+0x38>
8000a276:	30 08       	mov	r8,0
8000a278:	58 0a       	cp.w	r10,0
8000a27a:	cf 71       	brne	8000a268 <memmove+0x28>
8000a27c:	d8 02       	popm	pc

8000a27e <memset>:
8000a27e:	18 98       	mov	r8,r12
8000a280:	c0 38       	rjmp	8000a286 <memset+0x8>
8000a282:	10 cb       	st.b	r8++,r11
8000a284:	20 1a       	sub	r10,1
8000a286:	58 0a       	cp.w	r10,0
8000a288:	cf d1       	brne	8000a282 <memset+0x4>
8000a28a:	5e fc       	retal	r12

8000a28c <__malloc_lock>:
8000a28c:	5e fc       	retal	r12

8000a28e <__malloc_unlock>:
8000a28e:	5e fc       	retal	r12

8000a290 <_putc_r>:
8000a290:	d4 21       	pushm	r4-r7,lr
8000a292:	20 2d       	sub	sp,8
8000a294:	18 97       	mov	r7,r12
8000a296:	58 0c       	cp.w	r12,0
8000a298:	c0 a0       	breq	8000a2ac <_putc_r+0x1c>
8000a29a:	78 68       	ld.w	r8,r12[0x18]
8000a29c:	58 08       	cp.w	r8,0
8000a29e:	c0 71       	brne	8000a2ac <_putc_r+0x1c>
8000a2a0:	50 1b       	stdsp	sp[0x4],r11
8000a2a2:	50 0a       	stdsp	sp[0x0],r10
8000a2a4:	f0 1f 00 19 	mcall	8000a308 <_putc_r+0x78>
8000a2a8:	40 0a       	lddsp	r10,sp[0x0]
8000a2aa:	40 1b       	lddsp	r11,sp[0x4]
8000a2ac:	49 88       	lddpc	r8,8000a30c <_putc_r+0x7c>
8000a2ae:	10 3a       	cp.w	r10,r8
8000a2b0:	c0 31       	brne	8000a2b6 <_putc_r+0x26>
8000a2b2:	6e 0a       	ld.w	r10,r7[0x0]
8000a2b4:	c0 a8       	rjmp	8000a2c8 <_putc_r+0x38>
8000a2b6:	49 78       	lddpc	r8,8000a310 <_putc_r+0x80>
8000a2b8:	10 3a       	cp.w	r10,r8
8000a2ba:	c0 31       	brne	8000a2c0 <_putc_r+0x30>
8000a2bc:	6e 1a       	ld.w	r10,r7[0x4]
8000a2be:	c0 58       	rjmp	8000a2c8 <_putc_r+0x38>
8000a2c0:	49 58       	lddpc	r8,8000a314 <_putc_r+0x84>
8000a2c2:	10 3a       	cp.w	r10,r8
8000a2c4:	c0 21       	brne	8000a2c8 <_putc_r+0x38>
8000a2c6:	6e 2a       	ld.w	r10,r7[0x8]
8000a2c8:	74 28       	ld.w	r8,r10[0x8]
8000a2ca:	20 18       	sub	r8,1
8000a2cc:	95 28       	st.w	r10[0x8],r8
8000a2ce:	c1 57       	brpl	8000a2f8 <_putc_r+0x68>
8000a2d0:	74 69       	ld.w	r9,r10[0x18]
8000a2d2:	12 38       	cp.w	r8,r9
8000a2d4:	c0 e5       	brlt	8000a2f0 <_putc_r+0x60>
8000a2d6:	74 08       	ld.w	r8,r10[0x0]
8000a2d8:	b0 8b       	st.b	r8[0x0],r11
8000a2da:	30 a9       	mov	r9,10
8000a2dc:	74 08       	ld.w	r8,r10[0x0]
8000a2de:	11 8c       	ld.ub	r12,r8[0x0]
8000a2e0:	f2 0c 18 00 	cp.b	r12,r9
8000a2e4:	c0 30       	breq	8000a2ea <_putc_r+0x5a>
8000a2e6:	2f f8       	sub	r8,-1
8000a2e8:	c0 c8       	rjmp	8000a300 <_putc_r+0x70>
8000a2ea:	0e 9c       	mov	r12,r7
8000a2ec:	30 ab       	mov	r11,10
8000a2ee:	c0 28       	rjmp	8000a2f2 <_putc_r+0x62>
8000a2f0:	0e 9c       	mov	r12,r7
8000a2f2:	f0 1f 00 0a 	mcall	8000a318 <_putc_r+0x88>
8000a2f6:	c0 68       	rjmp	8000a302 <_putc_r+0x72>
8000a2f8:	74 08       	ld.w	r8,r10[0x0]
8000a2fa:	b0 8b       	st.b	r8[0x0],r11
8000a2fc:	74 08       	ld.w	r8,r10[0x0]
8000a2fe:	11 3c       	ld.ub	r12,r8++
8000a300:	95 08       	st.w	r10[0x0],r8
8000a302:	2f ed       	sub	sp,-8
8000a304:	d8 22       	popm	r4-r7,pc
8000a306:	00 00       	add	r0,r0
8000a308:	80 00       	ld.sh	r0,r0[0x0]
8000a30a:	dd ac       	*unknown*
8000a30c:	80 01       	ld.sh	r1,r0[0x0]
8000a30e:	01 64       	ld.uh	r4,--r0
8000a310:	80 01       	ld.sh	r1,r0[0x0]
8000a312:	01 84       	ld.ub	r4,r0[0x0]
8000a314:	80 01       	ld.sh	r1,r0[0x0]
8000a316:	01 a4       	ld.ub	r4,r0[0x2]
8000a318:	80 00       	ld.sh	r0,r0[0x0]
8000a31a:	cc 54       	brge	8000a2a4 <_putc_r+0x14>

8000a31c <realloc>:
8000a31c:	d4 01       	pushm	lr
8000a31e:	48 48       	lddpc	r8,8000a32c <realloc+0x10>
8000a320:	16 9a       	mov	r10,r11
8000a322:	18 9b       	mov	r11,r12
8000a324:	70 0c       	ld.w	r12,r8[0x0]
8000a326:	f0 1f 00 03 	mcall	8000a330 <realloc+0x14>
8000a32a:	d8 02       	popm	pc
8000a32c:	00 00       	add	r0,r0
8000a32e:	02 04       	add	r4,r1
8000a330:	80 00       	ld.sh	r0,r0[0x0]
8000a332:	a3 34       	mul	r4,r1

8000a334 <_realloc_r>:
8000a334:	d4 31       	pushm	r0-r7,lr
8000a336:	20 1d       	sub	sp,4
8000a338:	16 94       	mov	r4,r11
8000a33a:	18 92       	mov	r2,r12
8000a33c:	14 9b       	mov	r11,r10
8000a33e:	58 04       	cp.w	r4,0
8000a340:	c0 51       	brne	8000a34a <_realloc_r+0x16>
8000a342:	f0 1f 00 5b 	mcall	8000a4ac <_realloc_r+0x178>
8000a346:	18 95       	mov	r5,r12
8000a348:	c5 b9       	rjmp	8000a5fe <_realloc_r+0x2ca>
8000a34a:	50 0a       	stdsp	sp[0x0],r10
8000a34c:	f0 1f 00 59 	mcall	8000a4b0 <_realloc_r+0x17c>
8000a350:	40 0b       	lddsp	r11,sp[0x0]
8000a352:	f6 c8 ff f5 	sub	r8,r11,-11
8000a356:	e8 c1 00 08 	sub	r1,r4,8
8000a35a:	10 96       	mov	r6,r8
8000a35c:	62 1c       	ld.w	r12,r1[0x4]
8000a35e:	e0 16 ff f8 	andl	r6,0xfff8
8000a362:	59 68       	cp.w	r8,22
8000a364:	f9 b6 08 10 	movls	r6,16
8000a368:	16 36       	cp.w	r6,r11
8000a36a:	5f 38       	srlo	r8
8000a36c:	f1 e6 13 f8 	or	r8,r8,r6>>0x1f
8000a370:	c0 50       	breq	8000a37a <_realloc_r+0x46>
8000a372:	30 c8       	mov	r8,12
8000a374:	30 05       	mov	r5,0
8000a376:	85 38       	st.w	r2[0xc],r8
8000a378:	c4 39       	rjmp	8000a5fe <_realloc_r+0x2ca>
8000a37a:	18 90       	mov	r0,r12
8000a37c:	e0 10 ff fc 	andl	r0,0xfffc
8000a380:	0c 30       	cp.w	r0,r6
8000a382:	e0 84 01 13 	brge	8000a5a8 <_realloc_r+0x274>
8000a386:	4c c8       	lddpc	r8,8000a4b4 <_realloc_r+0x180>
8000a388:	e2 00 00 09 	add	r9,r1,r0
8000a38c:	70 25       	ld.w	r5,r8[0x8]
8000a38e:	0a 39       	cp.w	r9,r5
8000a390:	c0 90       	breq	8000a3a2 <_realloc_r+0x6e>
8000a392:	72 1a       	ld.w	r10,r9[0x4]
8000a394:	a1 ca       	cbr	r10,0x0
8000a396:	f2 0a 00 0a 	add	r10,r9,r10
8000a39a:	74 1a       	ld.w	r10,r10[0x4]
8000a39c:	ed ba 00 00 	bld	r10,0x0
8000a3a0:	c2 20       	breq	8000a3e4 <_realloc_r+0xb0>
8000a3a2:	72 1a       	ld.w	r10,r9[0x4]
8000a3a4:	e0 1a ff fc 	andl	r10,0xfffc
8000a3a8:	f4 00 00 03 	add	r3,r10,r0
8000a3ac:	0a 39       	cp.w	r9,r5
8000a3ae:	c1 31       	brne	8000a3d4 <_realloc_r+0xa0>
8000a3b0:	ec c7 ff f0 	sub	r7,r6,-16
8000a3b4:	0e 33       	cp.w	r3,r7
8000a3b6:	c1 95       	brlt	8000a3e8 <_realloc_r+0xb4>
8000a3b8:	e2 06 00 09 	add	r9,r1,r6
8000a3bc:	0c 13       	sub	r3,r6
8000a3be:	a1 a3       	sbr	r3,0x0
8000a3c0:	93 13       	st.w	r9[0x4],r3
8000a3c2:	91 29       	st.w	r8[0x8],r9
8000a3c4:	04 9c       	mov	r12,r2
8000a3c6:	62 18       	ld.w	r8,r1[0x4]
8000a3c8:	08 95       	mov	r5,r4
8000a3ca:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
8000a3ce:	10 46       	or	r6,r8
8000a3d0:	83 16       	st.w	r1[0x4],r6
8000a3d2:	c1 49       	rjmp	8000a5fa <_realloc_r+0x2c6>
8000a3d4:	0c 33       	cp.w	r3,r6
8000a3d6:	c0 95       	brlt	8000a3e8 <_realloc_r+0xb4>
8000a3d8:	72 28       	ld.w	r8,r9[0x8]
8000a3da:	02 97       	mov	r7,r1
8000a3dc:	72 39       	ld.w	r9,r9[0xc]
8000a3de:	93 28       	st.w	r9[0x8],r8
8000a3e0:	91 39       	st.w	r8[0xc],r9
8000a3e2:	ce 58       	rjmp	8000a5ac <_realloc_r+0x278>
8000a3e4:	30 0a       	mov	r10,0
8000a3e6:	14 99       	mov	r9,r10
8000a3e8:	ed bc 00 00 	bld	r12,0x0
8000a3ec:	e0 80 00 9e 	breq	8000a528 <_realloc_r+0x1f4>
8000a3f0:	62 07       	ld.w	r7,r1[0x0]
8000a3f2:	e2 07 01 07 	sub	r7,r1,r7
8000a3f6:	6e 1c       	ld.w	r12,r7[0x4]
8000a3f8:	e0 1c ff fc 	andl	r12,0xfffc
8000a3fc:	58 09       	cp.w	r9,0
8000a3fe:	c5 f0       	breq	8000a4bc <_realloc_r+0x188>
8000a400:	f8 00 00 03 	add	r3,r12,r0
8000a404:	0a 39       	cp.w	r9,r5
8000a406:	c4 81       	brne	8000a496 <_realloc_r+0x162>
8000a408:	14 03       	add	r3,r10
8000a40a:	ec c9 ff f0 	sub	r9,r6,-16
8000a40e:	12 33       	cp.w	r3,r9
8000a410:	c5 65       	brlt	8000a4bc <_realloc_r+0x188>
8000a412:	6e 3a       	ld.w	r10,r7[0xc]
8000a414:	6e 29       	ld.w	r9,r7[0x8]
8000a416:	95 29       	st.w	r10[0x8],r9
8000a418:	93 3a       	st.w	r9[0xc],r10
8000a41a:	ee c5 ff f8 	sub	r5,r7,-8
8000a41e:	e0 ca 00 04 	sub	r10,r0,4
8000a422:	e0 4a 00 24 	cp.w	r10,36
8000a426:	e0 8b 00 25 	brhi	8000a470 <_realloc_r+0x13c>
8000a42a:	0a 99       	mov	r9,r5
8000a42c:	59 3a       	cp.w	r10,19
8000a42e:	e0 88 00 1a 	brls	8000a462 <_realloc_r+0x12e>
8000a432:	09 09       	ld.w	r9,r4++
8000a434:	8b 09       	st.w	r5[0x0],r9
8000a436:	09 09       	ld.w	r9,r4++
8000a438:	8f 39       	st.w	r7[0xc],r9
8000a43a:	ee c9 ff f0 	sub	r9,r7,-16
8000a43e:	59 ba       	cp.w	r10,27
8000a440:	e0 88 00 11 	brls	8000a462 <_realloc_r+0x12e>
8000a444:	09 0b       	ld.w	r11,r4++
8000a446:	93 0b       	st.w	r9[0x0],r11
8000a448:	09 09       	ld.w	r9,r4++
8000a44a:	8f 59       	st.w	r7[0x14],r9
8000a44c:	ee c9 ff e8 	sub	r9,r7,-24
8000a450:	e0 4a 00 24 	cp.w	r10,36
8000a454:	c0 71       	brne	8000a462 <_realloc_r+0x12e>
8000a456:	09 0a       	ld.w	r10,r4++
8000a458:	93 0a       	st.w	r9[0x0],r10
8000a45a:	ee c9 ff e0 	sub	r9,r7,-32
8000a45e:	09 0a       	ld.w	r10,r4++
8000a460:	8f 7a       	st.w	r7[0x1c],r10
8000a462:	09 0a       	ld.w	r10,r4++
8000a464:	12 aa       	st.w	r9++,r10
8000a466:	68 0a       	ld.w	r10,r4[0x0]
8000a468:	93 0a       	st.w	r9[0x0],r10
8000a46a:	68 1a       	ld.w	r10,r4[0x4]
8000a46c:	93 1a       	st.w	r9[0x4],r10
8000a46e:	c0 78       	rjmp	8000a47c <_realloc_r+0x148>
8000a470:	50 08       	stdsp	sp[0x0],r8
8000a472:	08 9b       	mov	r11,r4
8000a474:	0a 9c       	mov	r12,r5
8000a476:	f0 1f 00 11 	mcall	8000a4b8 <_realloc_r+0x184>
8000a47a:	40 08       	lddsp	r8,sp[0x0]
8000a47c:	ee 06 00 09 	add	r9,r7,r6
8000a480:	0c 13       	sub	r3,r6
8000a482:	a1 a3       	sbr	r3,0x0
8000a484:	93 13       	st.w	r9[0x4],r3
8000a486:	91 29       	st.w	r8[0x8],r9
8000a488:	04 9c       	mov	r12,r2
8000a48a:	6e 18       	ld.w	r8,r7[0x4]
8000a48c:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
8000a490:	10 46       	or	r6,r8
8000a492:	8f 16       	st.w	r7[0x4],r6
8000a494:	cb 38       	rjmp	8000a5fa <_realloc_r+0x2c6>
8000a496:	14 03       	add	r3,r10
8000a498:	0c 33       	cp.w	r3,r6
8000a49a:	c1 15       	brlt	8000a4bc <_realloc_r+0x188>
8000a49c:	72 28       	ld.w	r8,r9[0x8]
8000a49e:	72 39       	ld.w	r9,r9[0xc]
8000a4a0:	93 28       	st.w	r9[0x8],r8
8000a4a2:	91 39       	st.w	r8[0xc],r9
8000a4a4:	6e 28       	ld.w	r8,r7[0x8]
8000a4a6:	6e 39       	ld.w	r9,r7[0xc]
8000a4a8:	c1 08       	rjmp	8000a4c8 <_realloc_r+0x194>
8000a4aa:	00 00       	add	r0,r0
8000a4ac:	80 00       	ld.sh	r0,r0[0x0]
8000a4ae:	9c 70       	ld.sh	r0,lr[0xe]
8000a4b0:	80 00       	ld.sh	r0,r0[0x0]
8000a4b2:	a2 8c       	st.b	r1[0x0],r12
8000a4b4:	00 00       	add	r0,r0
8000a4b6:	02 08       	add	r8,r1
8000a4b8:	80 00       	ld.sh	r0,r0[0x0]
8000a4ba:	a2 40       	st.h	r1[0x8],r0
8000a4bc:	f8 00 00 03 	add	r3,r12,r0
8000a4c0:	0c 33       	cp.w	r3,r6
8000a4c2:	c3 35       	brlt	8000a528 <_realloc_r+0x1f4>
8000a4c4:	6e 39       	ld.w	r9,r7[0xc]
8000a4c6:	6e 28       	ld.w	r8,r7[0x8]
8000a4c8:	93 28       	st.w	r9[0x8],r8
8000a4ca:	91 39       	st.w	r8[0xc],r9
8000a4cc:	e0 ca 00 04 	sub	r10,r0,4
8000a4d0:	ee cc ff f8 	sub	r12,r7,-8
8000a4d4:	e0 4a 00 24 	cp.w	r10,36
8000a4d8:	e0 8b 00 24 	brhi	8000a520 <_realloc_r+0x1ec>
8000a4dc:	59 3a       	cp.w	r10,19
8000a4de:	e0 88 00 1a 	brls	8000a512 <_realloc_r+0x1de>
8000a4e2:	09 08       	ld.w	r8,r4++
8000a4e4:	99 08       	st.w	r12[0x0],r8
8000a4e6:	09 08       	ld.w	r8,r4++
8000a4e8:	8f 38       	st.w	r7[0xc],r8
8000a4ea:	ee cc ff f0 	sub	r12,r7,-16
8000a4ee:	59 ba       	cp.w	r10,27
8000a4f0:	e0 88 00 11 	brls	8000a512 <_realloc_r+0x1de>
8000a4f4:	09 08       	ld.w	r8,r4++
8000a4f6:	99 08       	st.w	r12[0x0],r8
8000a4f8:	09 08       	ld.w	r8,r4++
8000a4fa:	8f 58       	st.w	r7[0x14],r8
8000a4fc:	ee cc ff e8 	sub	r12,r7,-24
8000a500:	e0 4a 00 24 	cp.w	r10,36
8000a504:	c0 71       	brne	8000a512 <_realloc_r+0x1de>
8000a506:	09 08       	ld.w	r8,r4++
8000a508:	99 08       	st.w	r12[0x0],r8
8000a50a:	ee cc ff e0 	sub	r12,r7,-32
8000a50e:	09 08       	ld.w	r8,r4++
8000a510:	8f 78       	st.w	r7[0x1c],r8
8000a512:	09 08       	ld.w	r8,r4++
8000a514:	18 a8       	st.w	r12++,r8
8000a516:	68 08       	ld.w	r8,r4[0x0]
8000a518:	99 08       	st.w	r12[0x0],r8
8000a51a:	68 18       	ld.w	r8,r4[0x4]
8000a51c:	99 18       	st.w	r12[0x4],r8
8000a51e:	c4 78       	rjmp	8000a5ac <_realloc_r+0x278>
8000a520:	08 9b       	mov	r11,r4
8000a522:	f0 1f 00 39 	mcall	8000a604 <_realloc_r+0x2d0>
8000a526:	c4 38       	rjmp	8000a5ac <_realloc_r+0x278>
8000a528:	04 9c       	mov	r12,r2
8000a52a:	f0 1f 00 38 	mcall	8000a608 <_realloc_r+0x2d4>
8000a52e:	18 95       	mov	r5,r12
8000a530:	c3 a0       	breq	8000a5a4 <_realloc_r+0x270>
8000a532:	62 18       	ld.w	r8,r1[0x4]
8000a534:	f8 c9 00 08 	sub	r9,r12,8
8000a538:	a1 c8       	cbr	r8,0x0
8000a53a:	e2 08 00 08 	add	r8,r1,r8
8000a53e:	10 39       	cp.w	r9,r8
8000a540:	c0 71       	brne	8000a54e <_realloc_r+0x21a>
8000a542:	72 13       	ld.w	r3,r9[0x4]
8000a544:	02 97       	mov	r7,r1
8000a546:	e0 13 ff fc 	andl	r3,0xfffc
8000a54a:	00 03       	add	r3,r0
8000a54c:	c3 08       	rjmp	8000a5ac <_realloc_r+0x278>
8000a54e:	e0 ca 00 04 	sub	r10,r0,4
8000a552:	e0 4a 00 24 	cp.w	r10,36
8000a556:	e0 8b 00 20 	brhi	8000a596 <_realloc_r+0x262>
8000a55a:	08 99       	mov	r9,r4
8000a55c:	18 98       	mov	r8,r12
8000a55e:	59 3a       	cp.w	r10,19
8000a560:	e0 88 00 14 	brls	8000a588 <_realloc_r+0x254>
8000a564:	13 0b       	ld.w	r11,r9++
8000a566:	10 ab       	st.w	r8++,r11
8000a568:	13 0b       	ld.w	r11,r9++
8000a56a:	10 ab       	st.w	r8++,r11
8000a56c:	59 ba       	cp.w	r10,27
8000a56e:	e0 88 00 0d 	brls	8000a588 <_realloc_r+0x254>
8000a572:	13 0b       	ld.w	r11,r9++
8000a574:	10 ab       	st.w	r8++,r11
8000a576:	13 0b       	ld.w	r11,r9++
8000a578:	10 ab       	st.w	r8++,r11
8000a57a:	e0 4a 00 24 	cp.w	r10,36
8000a57e:	c0 51       	brne	8000a588 <_realloc_r+0x254>
8000a580:	13 0a       	ld.w	r10,r9++
8000a582:	10 aa       	st.w	r8++,r10
8000a584:	13 0a       	ld.w	r10,r9++
8000a586:	10 aa       	st.w	r8++,r10
8000a588:	13 0a       	ld.w	r10,r9++
8000a58a:	10 aa       	st.w	r8++,r10
8000a58c:	72 0a       	ld.w	r10,r9[0x0]
8000a58e:	91 0a       	st.w	r8[0x0],r10
8000a590:	72 19       	ld.w	r9,r9[0x4]
8000a592:	91 19       	st.w	r8[0x4],r9
8000a594:	c0 48       	rjmp	8000a59c <_realloc_r+0x268>
8000a596:	08 9b       	mov	r11,r4
8000a598:	f0 1f 00 1b 	mcall	8000a604 <_realloc_r+0x2d0>
8000a59c:	08 9b       	mov	r11,r4
8000a59e:	04 9c       	mov	r12,r2
8000a5a0:	f0 1f 00 1b 	mcall	8000a60c <_realloc_r+0x2d8>
8000a5a4:	04 9c       	mov	r12,r2
8000a5a6:	c2 a8       	rjmp	8000a5fa <_realloc_r+0x2c6>
8000a5a8:	00 93       	mov	r3,r0
8000a5aa:	02 97       	mov	r7,r1
8000a5ac:	e6 06 01 09 	sub	r9,r3,r6
8000a5b0:	6e 18       	ld.w	r8,r7[0x4]
8000a5b2:	58 f9       	cp.w	r9,15
8000a5b4:	e0 88 00 16 	brls	8000a5e0 <_realloc_r+0x2ac>
8000a5b8:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
8000a5bc:	ed e8 10 08 	or	r8,r6,r8
8000a5c0:	8f 18       	st.w	r7[0x4],r8
8000a5c2:	12 98       	mov	r8,r9
8000a5c4:	a1 a8       	sbr	r8,0x0
8000a5c6:	ee 06 00 0b 	add	r11,r7,r6
8000a5ca:	f6 09 00 09 	add	r9,r11,r9
8000a5ce:	97 18       	st.w	r11[0x4],r8
8000a5d0:	72 18       	ld.w	r8,r9[0x4]
8000a5d2:	a1 a8       	sbr	r8,0x0
8000a5d4:	2f 8b       	sub	r11,-8
8000a5d6:	93 18       	st.w	r9[0x4],r8
8000a5d8:	04 9c       	mov	r12,r2
8000a5da:	f0 1f 00 0d 	mcall	8000a60c <_realloc_r+0x2d8>
8000a5de:	c0 b8       	rjmp	8000a5f4 <_realloc_r+0x2c0>
8000a5e0:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
8000a5e4:	e7 e8 10 08 	or	r8,r3,r8
8000a5e8:	8f 18       	st.w	r7[0x4],r8
8000a5ea:	ee 03 00 03 	add	r3,r7,r3
8000a5ee:	66 18       	ld.w	r8,r3[0x4]
8000a5f0:	a1 a8       	sbr	r8,0x0
8000a5f2:	87 18       	st.w	r3[0x4],r8
8000a5f4:	04 9c       	mov	r12,r2
8000a5f6:	ee c5 ff f8 	sub	r5,r7,-8
8000a5fa:	f0 1f 00 06 	mcall	8000a610 <_realloc_r+0x2dc>
8000a5fe:	0a 9c       	mov	r12,r5
8000a600:	2f fd       	sub	sp,-4
8000a602:	d8 32       	popm	r0-r7,pc
8000a604:	80 00       	ld.sh	r0,r0[0x0]
8000a606:	a2 40       	st.h	r1[0x8],r0
8000a608:	80 00       	ld.sh	r0,r0[0x0]
8000a60a:	9c 70       	ld.sh	r0,lr[0xe]
8000a60c:	80 00       	ld.sh	r0,r0[0x0]
8000a60e:	df 04       	*unknown*
8000a610:	80 00       	ld.sh	r0,r0[0x0]
8000a612:	a2 8e       	st.b	r1[0x0],lr

8000a614 <_sbrk_r>:
8000a614:	d4 21       	pushm	r4-r7,lr
8000a616:	30 08       	mov	r8,0
8000a618:	18 97       	mov	r7,r12
8000a61a:	48 76       	lddpc	r6,8000a634 <_sbrk_r+0x20>
8000a61c:	16 9c       	mov	r12,r11
8000a61e:	8d 08       	st.w	r6[0x0],r8
8000a620:	f0 1f 00 06 	mcall	8000a638 <_sbrk_r+0x24>
8000a624:	5b fc       	cp.w	r12,-1
8000a626:	c0 51       	brne	8000a630 <_sbrk_r+0x1c>
8000a628:	6c 08       	ld.w	r8,r6[0x0]
8000a62a:	58 08       	cp.w	r8,0
8000a62c:	c0 20       	breq	8000a630 <_sbrk_r+0x1c>
8000a62e:	8f 38       	st.w	r7[0xc],r8
8000a630:	d8 22       	popm	r4-r7,pc
8000a632:	00 00       	add	r0,r0
8000a634:	00 00       	add	r0,r0
8000a636:	0f c4       	ld.ub	r4,r7[0x4]
8000a638:	80 00       	ld.sh	r0,r0[0x0]
8000a63a:	a9 2c       	st.d	r4++,r12

8000a63c <_raise_r>:
8000a63c:	d4 21       	pushm	r4-r7,lr
8000a63e:	18 97       	mov	r7,r12
8000a640:	16 96       	mov	r6,r11
8000a642:	59 fb       	cp.w	r11,31
8000a644:	e0 88 00 05 	brls	8000a64e <_raise_r+0x12>
8000a648:	31 68       	mov	r8,22
8000a64a:	99 38       	st.w	r12[0xc],r8
8000a64c:	dc 2a       	popm	r4-r7,pc,r12=-1
8000a64e:	79 19       	ld.w	r9,r12[0x44]
8000a650:	58 09       	cp.w	r9,0
8000a652:	c0 60       	breq	8000a65e <_raise_r+0x22>
8000a654:	f2 0b 00 29 	add	r9,r9,r11<<0x2
8000a658:	72 08       	ld.w	r8,r9[0x0]
8000a65a:	58 08       	cp.w	r8,0
8000a65c:	c0 a1       	brne	8000a670 <_raise_r+0x34>
8000a65e:	0e 9c       	mov	r12,r7
8000a660:	f0 1f 00 0b 	mcall	8000a68c <_raise_r+0x50>
8000a664:	0c 9a       	mov	r10,r6
8000a666:	18 9b       	mov	r11,r12
8000a668:	0e 9c       	mov	r12,r7
8000a66a:	f0 1f 00 0a 	mcall	8000a690 <_raise_r+0x54>
8000a66e:	d8 22       	popm	r4-r7,pc
8000a670:	58 18       	cp.w	r8,1
8000a672:	c0 21       	brne	8000a676 <_raise_r+0x3a>
8000a674:	d8 2a       	popm	r4-r7,pc,r12=0
8000a676:	5b f8       	cp.w	r8,-1
8000a678:	c0 41       	brne	8000a680 <_raise_r+0x44>
8000a67a:	31 68       	mov	r8,22
8000a67c:	99 38       	st.w	r12[0xc],r8
8000a67e:	da 2a       	popm	r4-r7,pc,r12=1
8000a680:	30 07       	mov	r7,0
8000a682:	16 9c       	mov	r12,r11
8000a684:	93 07       	st.w	r9[0x0],r7
8000a686:	5d 18       	icall	r8
8000a688:	0e 9c       	mov	r12,r7
8000a68a:	d8 22       	popm	r4-r7,pc
8000a68c:	80 00       	ld.sh	r0,r0[0x0]
8000a68e:	a6 ac       	st.b	r3[0x2],r12
8000a690:	80 00       	ld.sh	r0,r0[0x0]
8000a692:	a6 b8       	st.b	r3[0x3],r8

8000a694 <raise>:
8000a694:	d4 01       	pushm	lr
8000a696:	48 48       	lddpc	r8,8000a6a4 <raise+0x10>
8000a698:	18 9b       	mov	r11,r12
8000a69a:	70 0c       	ld.w	r12,r8[0x0]
8000a69c:	f0 1f 00 03 	mcall	8000a6a8 <raise+0x14>
8000a6a0:	d8 02       	popm	pc
8000a6a2:	00 00       	add	r0,r0
8000a6a4:	00 00       	add	r0,r0
8000a6a6:	02 04       	add	r4,r1
8000a6a8:	80 00       	ld.sh	r0,r0[0x0]
8000a6aa:	a6 3c       	st.h	r3[0x6],r12

8000a6ac <_getpid_r>:
8000a6ac:	d4 01       	pushm	lr
8000a6ae:	f0 1f 00 02 	mcall	8000a6b4 <_getpid_r+0x8>
8000a6b2:	d8 02       	popm	pc
8000a6b4:	80 00       	ld.sh	r0,r0[0x0]
8000a6b6:	a9 2a       	st.d	r4++,r10

8000a6b8 <_kill_r>:
8000a6b8:	d4 21       	pushm	r4-r7,lr
8000a6ba:	16 98       	mov	r8,r11
8000a6bc:	18 97       	mov	r7,r12
8000a6be:	10 9c       	mov	r12,r8
8000a6c0:	30 08       	mov	r8,0
8000a6c2:	48 76       	lddpc	r6,8000a6dc <_kill_r+0x24>
8000a6c4:	14 9b       	mov	r11,r10
8000a6c6:	8d 08       	st.w	r6[0x0],r8
8000a6c8:	f0 1f 00 06 	mcall	8000a6e0 <_kill_r+0x28>
8000a6cc:	5b fc       	cp.w	r12,-1
8000a6ce:	c0 51       	brne	8000a6d8 <_kill_r+0x20>
8000a6d0:	6c 08       	ld.w	r8,r6[0x0]
8000a6d2:	58 08       	cp.w	r8,0
8000a6d4:	c0 20       	breq	8000a6d8 <_kill_r+0x20>
8000a6d6:	8f 38       	st.w	r7[0xc],r8
8000a6d8:	d8 22       	popm	r4-r7,pc
8000a6da:	00 00       	add	r0,r0
8000a6dc:	00 00       	add	r0,r0
8000a6de:	0f c4       	ld.ub	r4,r7[0x4]
8000a6e0:	80 00       	ld.sh	r0,r0[0x0]
8000a6e2:	a9 28       	st.d	r4++,r8

8000a6e4 <sprintf>:
8000a6e4:	d4 01       	pushm	lr
8000a6e6:	21 7d       	sub	sp,92
8000a6e8:	e0 68 ff ff 	mov	r8,65535
8000a6ec:	ea 18 7f ff 	orh	r8,0x7fff
8000a6f0:	50 58       	stdsp	sp[0x14],r8
8000a6f2:	50 28       	stdsp	sp[0x8],r8
8000a6f4:	e0 68 02 08 	mov	r8,520
8000a6f8:	ba 68       	st.h	sp[0xc],r8
8000a6fa:	3f f8       	mov	r8,-1
8000a6fc:	ba 78       	st.h	sp[0xe],r8
8000a6fe:	48 88       	lddpc	r8,8000a71c <sprintf+0x38>
8000a700:	50 4c       	stdsp	sp[0x10],r12
8000a702:	16 9a       	mov	r10,r11
8000a704:	50 0c       	stdsp	sp[0x0],r12
8000a706:	fa c9 ff a0 	sub	r9,sp,-96
8000a70a:	70 0c       	ld.w	r12,r8[0x0]
8000a70c:	1a 9b       	mov	r11,sp
8000a70e:	f0 1f 00 05 	mcall	8000a720 <sprintf+0x3c>
8000a712:	30 09       	mov	r9,0
8000a714:	40 08       	lddsp	r8,sp[0x0]
8000a716:	b0 89       	st.b	r8[0x0],r9
8000a718:	2e 9d       	sub	sp,-92
8000a71a:	d8 02       	popm	pc
8000a71c:	00 00       	add	r0,r0
8000a71e:	02 04       	add	r4,r1
8000a720:	80 00       	ld.sh	r0,r0[0x0]
8000a722:	ac b0       	st.b	r6[0x3],r0

8000a724 <strcat>:
8000a724:	18 99       	mov	r9,r12
8000a726:	30 08       	mov	r8,0
8000a728:	c0 28       	rjmp	8000a72c <strcat+0x8>
8000a72a:	2f f9       	sub	r9,-1
8000a72c:	13 8a       	ld.ub	r10,r9[0x0]
8000a72e:	f0 0a 18 00 	cp.b	r10,r8
8000a732:	cf c1       	brne	8000a72a <strcat+0x6>
8000a734:	30 08       	mov	r8,0
8000a736:	f6 08 07 0a 	ld.ub	r10,r11[r8]
8000a73a:	f2 08 0b 0a 	st.b	r9[r8],r10
8000a73e:	2f f8       	sub	r8,-1
8000a740:	58 0a       	cp.w	r10,0
8000a742:	cf a1       	brne	8000a736 <strcat+0x12>
8000a744:	5e fc       	retal	r12
8000a746:	d7 03       	nop

8000a748 <strcmp>:
8000a748:	f9 eb 10 0a 	or	r10,r12,r11
8000a74c:	e2 1a 00 03 	andl	r10,0x3,COH
8000a750:	c3 41       	brne	8000a7b8 <strcmp+0x70>
8000a752:	78 0a       	ld.w	r10,r12[0x0]
8000a754:	76 09       	ld.w	r9,r11[0x0]
8000a756:	5c ea       	tnbz	r10
8000a758:	c1 70       	breq	8000a786 <strcmp+0x3e>
8000a75a:	12 3a       	cp.w	r10,r9
8000a75c:	c1 51       	brne	8000a786 <strcmp+0x3e>
8000a75e:	78 1a       	ld.w	r10,r12[0x4]
8000a760:	76 19       	ld.w	r9,r11[0x4]
8000a762:	5c ea       	tnbz	r10
8000a764:	c1 10       	breq	8000a786 <strcmp+0x3e>
8000a766:	12 3a       	cp.w	r10,r9
8000a768:	c0 f1       	brne	8000a786 <strcmp+0x3e>
8000a76a:	78 2a       	ld.w	r10,r12[0x8]
8000a76c:	76 29       	ld.w	r9,r11[0x8]
8000a76e:	5c ea       	tnbz	r10
8000a770:	c0 b0       	breq	8000a786 <strcmp+0x3e>
8000a772:	12 3a       	cp.w	r10,r9
8000a774:	c0 91       	brne	8000a786 <strcmp+0x3e>
8000a776:	78 3a       	ld.w	r10,r12[0xc]
8000a778:	76 39       	ld.w	r9,r11[0xc]
8000a77a:	5c ea       	tnbz	r10
8000a77c:	c0 50       	breq	8000a786 <strcmp+0x3e>
8000a77e:	2f 0c       	sub	r12,-16
8000a780:	2f 0b       	sub	r11,-16
8000a782:	12 3a       	cp.w	r10,r9
8000a784:	ce 70       	breq	8000a752 <strcmp+0xa>
8000a786:	f9 da c3 08 	bfextu	r12,r10,0x18,0x8
8000a78a:	f7 d9 c3 08 	bfextu	r11,r9,0x18,0x8
8000a78e:	5e 0c       	reteq	r12
8000a790:	16 1c       	sub	r12,r11
8000a792:	5e 1c       	retne	r12
8000a794:	f9 da c2 08 	bfextu	r12,r10,0x10,0x8
8000a798:	f7 d9 c2 08 	bfextu	r11,r9,0x10,0x8
8000a79c:	5e 0c       	reteq	r12
8000a79e:	16 1c       	sub	r12,r11
8000a7a0:	5e 1c       	retne	r12
8000a7a2:	f9 da c1 08 	bfextu	r12,r10,0x8,0x8
8000a7a6:	f7 d9 c1 08 	bfextu	r11,r9,0x8,0x8
8000a7aa:	5e 0c       	reteq	r12
8000a7ac:	16 1c       	sub	r12,r11
8000a7ae:	5e 1c       	retne	r12
8000a7b0:	5c 5a       	castu.b	r10
8000a7b2:	5c 59       	castu.b	r9
8000a7b4:	12 1a       	sub	r10,r9
8000a7b6:	5e fa       	retal	r10
8000a7b8:	17 8a       	ld.ub	r10,r11[0x0]
8000a7ba:	19 89       	ld.ub	r9,r12[0x0]
8000a7bc:	58 0a       	cp.w	r10,0
8000a7be:	5e 09       	reteq	r9
8000a7c0:	14 19       	sub	r9,r10
8000a7c2:	5e 19       	retne	r9
8000a7c4:	17 9a       	ld.ub	r10,r11[0x1]
8000a7c6:	19 99       	ld.ub	r9,r12[0x1]
8000a7c8:	58 0a       	cp.w	r10,0
8000a7ca:	5e 09       	reteq	r9
8000a7cc:	14 19       	sub	r9,r10
8000a7ce:	5e 19       	retne	r9
8000a7d0:	17 aa       	ld.ub	r10,r11[0x2]
8000a7d2:	19 a9       	ld.ub	r9,r12[0x2]
8000a7d4:	58 0a       	cp.w	r10,0
8000a7d6:	5e 09       	reteq	r9
8000a7d8:	14 19       	sub	r9,r10
8000a7da:	5e 19       	retne	r9
8000a7dc:	17 ba       	ld.ub	r10,r11[0x3]
8000a7de:	19 b9       	ld.ub	r9,r12[0x3]
8000a7e0:	58 0a       	cp.w	r10,0
8000a7e2:	5e 09       	reteq	r9
8000a7e4:	14 19       	sub	r9,r10
8000a7e6:	5e 19       	retne	r9
8000a7e8:	2f cb       	sub	r11,-4
8000a7ea:	2f cc       	sub	r12,-4
8000a7ec:	ce 6b       	rjmp	8000a7b8 <strcmp+0x70>
	...

8000a7f0 <strcpy>:
8000a7f0:	30 08       	mov	r8,0
8000a7f2:	f6 08 07 09 	ld.ub	r9,r11[r8]
8000a7f6:	f8 08 0b 09 	st.b	r12[r8],r9
8000a7fa:	2f f8       	sub	r8,-1
8000a7fc:	58 09       	cp.w	r9,0
8000a7fe:	cf a1       	brne	8000a7f2 <strcpy+0x2>
8000a800:	5e fc       	retal	r12

8000a802 <strlen>:
8000a802:	30 09       	mov	r9,0
8000a804:	18 98       	mov	r8,r12
8000a806:	c0 28       	rjmp	8000a80a <strlen+0x8>
8000a808:	2f f8       	sub	r8,-1
8000a80a:	11 8a       	ld.ub	r10,r8[0x0]
8000a80c:	f2 0a 18 00 	cp.b	r10,r9
8000a810:	cf c1       	brne	8000a808 <strlen+0x6>
8000a812:	f0 0c 01 0c 	sub	r12,r8,r12
8000a816:	5e fc       	retal	r12

8000a818 <strncmp>:
8000a818:	58 0a       	cp.w	r10,0
8000a81a:	c0 81       	brne	8000a82a <strncmp+0x12>
8000a81c:	5e fa       	retal	r10
8000a81e:	58 0a       	cp.w	r10,0
8000a820:	c0 b0       	breq	8000a836 <strncmp+0x1e>
8000a822:	58 08       	cp.w	r8,0
8000a824:	c0 90       	breq	8000a836 <strncmp+0x1e>
8000a826:	2f fc       	sub	r12,-1
8000a828:	2f fb       	sub	r11,-1
8000a82a:	20 1a       	sub	r10,1
8000a82c:	19 88       	ld.ub	r8,r12[0x0]
8000a82e:	17 89       	ld.ub	r9,r11[0x0]
8000a830:	f0 09 18 00 	cp.b	r9,r8
8000a834:	cf 50       	breq	8000a81e <strncmp+0x6>
8000a836:	19 8c       	ld.ub	r12,r12[0x0]
8000a838:	17 88       	ld.ub	r8,r11[0x0]
8000a83a:	10 1c       	sub	r12,r8
8000a83c:	5e fc       	retal	r12

8000a83e <_exit>:
8000a83e:	30 d8       	mov	r8,13
8000a840:	d6 73       	breakpoint
8000a842:	3f fc       	mov	r12,-1
8000a844:	35 8b       	mov	r11,88
8000a846:	c0 08       	rjmp	8000a846 <_exit+0x8>

8000a848 <_close>:
8000a848:	30 28       	mov	r8,2
8000a84a:	d6 73       	breakpoint
8000a84c:	3f fc       	mov	r12,-1
8000a84e:	35 8b       	mov	r11,88
8000a850:	58 0c       	cp.w	r12,0
8000a852:	5e 4c       	retge	r12
8000a854:	48 2a       	lddpc	r10,8000a85c <_close+0x14>
8000a856:	95 0b       	st.w	r10[0x0],r11
8000a858:	5e fc       	retal	r12
8000a85a:	00 00       	add	r0,r0
8000a85c:	00 00       	add	r0,r0
8000a85e:	0f c4       	ld.ub	r4,r7[0x4]

8000a860 <_lseek>:
8000a860:	30 58       	mov	r8,5
8000a862:	d6 73       	breakpoint
8000a864:	3f fc       	mov	r12,-1
8000a866:	35 8b       	mov	r11,88
8000a868:	58 0c       	cp.w	r12,0
8000a86a:	5e 4c       	retge	r12
8000a86c:	48 2a       	lddpc	r10,8000a874 <_lseek+0x14>
8000a86e:	95 0b       	st.w	r10[0x0],r11
8000a870:	5e fc       	retal	r12
8000a872:	00 00       	add	r0,r0
8000a874:	00 00       	add	r0,r0
8000a876:	0f c4       	ld.ub	r4,r7[0x4]

8000a878 <_read>:
8000a878:	30 38       	mov	r8,3
8000a87a:	d6 73       	breakpoint
8000a87c:	3f fc       	mov	r12,-1
8000a87e:	35 8b       	mov	r11,88
8000a880:	58 0c       	cp.w	r12,0
8000a882:	5e 4c       	retge	r12
8000a884:	48 2a       	lddpc	r10,8000a88c <_read+0x14>
8000a886:	95 0b       	st.w	r10[0x0],r11
8000a888:	5e fc       	retal	r12
8000a88a:	00 00       	add	r0,r0
8000a88c:	00 00       	add	r0,r0
8000a88e:	0f c4       	ld.ub	r4,r7[0x4]

8000a890 <_write>:
8000a890:	30 48       	mov	r8,4
8000a892:	d6 73       	breakpoint
8000a894:	3f fc       	mov	r12,-1
8000a896:	35 8b       	mov	r11,88
8000a898:	58 0c       	cp.w	r12,0
8000a89a:	5e 4c       	retge	r12
8000a89c:	48 2a       	lddpc	r10,8000a8a4 <_write+0x14>
8000a89e:	95 0b       	st.w	r10[0x0],r11
8000a8a0:	5e fc       	retal	r12
8000a8a2:	00 00       	add	r0,r0
8000a8a4:	00 00       	add	r0,r0
8000a8a6:	0f c4       	ld.ub	r4,r7[0x4]

8000a8a8 <isatty>:
8000a8a8:	30 b8       	mov	r8,11
8000a8aa:	d6 73       	breakpoint
8000a8ac:	3f fc       	mov	r12,-1
8000a8ae:	35 8b       	mov	r11,88
8000a8b0:	58 0c       	cp.w	r12,0
8000a8b2:	5e 4c       	retge	r12
8000a8b4:	48 2a       	lddpc	r10,8000a8bc <isatty+0x14>
8000a8b6:	95 0b       	st.w	r10[0x0],r11
8000a8b8:	5e fc       	retal	r12
8000a8ba:	00 00       	add	r0,r0
8000a8bc:	00 00       	add	r0,r0
8000a8be:	0f c4       	ld.ub	r4,r7[0x4]

8000a8c0 <_fstat_host>:
8000a8c0:	30 98       	mov	r8,9
8000a8c2:	d6 73       	breakpoint
8000a8c4:	3f fc       	mov	r12,-1
8000a8c6:	35 8b       	mov	r11,88
8000a8c8:	58 0c       	cp.w	r12,0
8000a8ca:	5e 4c       	retge	r12
8000a8cc:	48 2a       	lddpc	r10,8000a8d4 <_fstat_host+0x14>
8000a8ce:	95 0b       	st.w	r10[0x0],r11
8000a8d0:	5e fc       	retal	r12
8000a8d2:	00 00       	add	r0,r0
8000a8d4:	00 00       	add	r0,r0
8000a8d6:	0f c4       	ld.ub	r4,r7[0x4]

8000a8d8 <_fstat>:
8000a8d8:	d4 21       	pushm	r4-r7,lr
8000a8da:	21 0d       	sub	sp,64
8000a8dc:	16 97       	mov	r7,r11
8000a8de:	1a 9b       	mov	r11,sp
8000a8e0:	f0 1f 00 11 	mcall	8000a924 <_fstat+0x4c>
8000a8e4:	c0 34       	brge	8000a8ea <_fstat+0x12>
8000a8e6:	3f fc       	mov	r12,-1
8000a8e8:	c1 c8       	rjmp	8000a920 <_fstat+0x48>
8000a8ea:	40 08       	lddsp	r8,sp[0x0]
8000a8ec:	ae 08       	st.h	r7[0x0],r8
8000a8ee:	40 18       	lddsp	r8,sp[0x4]
8000a8f0:	ae 18       	st.h	r7[0x2],r8
8000a8f2:	40 28       	lddsp	r8,sp[0x8]
8000a8f4:	8f 18       	st.w	r7[0x4],r8
8000a8f6:	40 38       	lddsp	r8,sp[0xc]
8000a8f8:	ae 48       	st.h	r7[0x8],r8
8000a8fa:	40 48       	lddsp	r8,sp[0x10]
8000a8fc:	ae 58       	st.h	r7[0xa],r8
8000a8fe:	40 58       	lddsp	r8,sp[0x14]
8000a900:	ae 68       	st.h	r7[0xc],r8
8000a902:	40 68       	lddsp	r8,sp[0x18]
8000a904:	ae 78       	st.h	r7[0xe],r8
8000a906:	40 88       	lddsp	r8,sp[0x20]
8000a908:	8f 48       	st.w	r7[0x10],r8
8000a90a:	40 a8       	lddsp	r8,sp[0x28]
8000a90c:	8f b8       	st.w	r7[0x2c],r8
8000a90e:	40 c8       	lddsp	r8,sp[0x30]
8000a910:	8f c8       	st.w	r7[0x30],r8
8000a912:	40 d8       	lddsp	r8,sp[0x34]
8000a914:	8f 58       	st.w	r7[0x14],r8
8000a916:	40 e8       	lddsp	r8,sp[0x38]
8000a918:	30 0c       	mov	r12,0
8000a91a:	8f 78       	st.w	r7[0x1c],r8
8000a91c:	40 f8       	lddsp	r8,sp[0x3c]
8000a91e:	8f 98       	st.w	r7[0x24],r8
8000a920:	2f 0d       	sub	sp,-64
8000a922:	d8 22       	popm	r4-r7,pc
8000a924:	80 00       	ld.sh	r0,r0[0x0]
8000a926:	a8 c0       	st.b	r4[0x4],r0

8000a928 <_kill>:
8000a928:	5e fe       	retal	-1

8000a92a <_getpid>:
8000a92a:	5e fe       	retal	-1

8000a92c <_sbrk>:
8000a92c:	d4 01       	pushm	lr
8000a92e:	48 c8       	lddpc	r8,8000a95c <_sbrk+0x30>
8000a930:	70 09       	ld.w	r9,r8[0x0]
8000a932:	58 09       	cp.w	r9,0
8000a934:	c0 31       	brne	8000a93a <_sbrk+0xe>
8000a936:	48 b9       	lddpc	r9,8000a960 <_sbrk+0x34>
8000a938:	91 09       	st.w	r8[0x0],r9
8000a93a:	48 99       	lddpc	r9,8000a95c <_sbrk+0x30>
8000a93c:	48 aa       	lddpc	r10,8000a964 <_sbrk+0x38>
8000a93e:	72 08       	ld.w	r8,r9[0x0]
8000a940:	f0 0c 00 0c 	add	r12,r8,r12
8000a944:	14 3c       	cp.w	r12,r10
8000a946:	e0 8b 00 04 	brhi	8000a94e <_sbrk+0x22>
8000a94a:	93 0c       	st.w	r9[0x0],r12
8000a94c:	c0 68       	rjmp	8000a958 <_sbrk+0x2c>
8000a94e:	f0 1f 00 07 	mcall	8000a968 <_sbrk+0x3c>
8000a952:	30 c8       	mov	r8,12
8000a954:	99 08       	st.w	r12[0x0],r8
8000a956:	3f f8       	mov	r8,-1
8000a958:	10 9c       	mov	r12,r8
8000a95a:	d8 02       	popm	pc
8000a95c:	00 00       	add	r0,r0
8000a95e:	0f c0       	ld.ub	r0,r7[0x4]
8000a960:	00 00       	add	r0,r0
8000a962:	0f c8       	ld.ub	r8,r7[0x4]
8000a964:	00 00       	add	r0,r0
8000a966:	70 00       	ld.w	r0,r8[0x0]
8000a968:	80 00       	ld.sh	r0,r0[0x0]
8000a96a:	db c8       	*unknown*

8000a96c <get_arg>:
8000a96c:	d4 31       	pushm	r0-r7,lr
8000a96e:	20 8d       	sub	sp,32
8000a970:	fa c4 ff bc 	sub	r4,sp,-68
8000a974:	50 4b       	stdsp	sp[0x10],r11
8000a976:	68 2c       	ld.w	r12,r4[0x8]
8000a978:	50 58       	stdsp	sp[0x14],r8
8000a97a:	12 96       	mov	r6,r9
8000a97c:	78 0b       	ld.w	r11,r12[0x0]
8000a97e:	70 05       	ld.w	r5,r8[0x0]
8000a980:	50 6c       	stdsp	sp[0x18],r12
8000a982:	58 0b       	cp.w	r11,0
8000a984:	f4 0b 17 00 	moveq	r11,r10
8000a988:	68 03       	ld.w	r3,r4[0x0]
8000a98a:	68 11       	ld.w	r1,r4[0x4]
8000a98c:	40 49       	lddsp	r9,sp[0x10]
8000a98e:	30 08       	mov	r8,0
8000a990:	c2 e9       	rjmp	8000abec <get_arg+0x280>
8000a992:	2f fb       	sub	r11,-1
8000a994:	17 8a       	ld.ub	r10,r11[0x0]
8000a996:	32 52       	mov	r2,37
8000a998:	f0 0a 18 00 	cp.b	r10,r8
8000a99c:	5f 1c       	srne	r12
8000a99e:	e4 0a 18 00 	cp.b	r10,r2
8000a9a2:	5f 1e       	srne	lr
8000a9a4:	fd ec 00 0c 	and	r12,lr,r12
8000a9a8:	f0 0c 18 00 	cp.b	r12,r8
8000a9ac:	cf 31       	brne	8000a992 <get_arg+0x26>
8000a9ae:	58 0a       	cp.w	r10,0
8000a9b0:	e0 80 01 2b 	breq	8000ac06 <get_arg+0x29a>
8000a9b4:	30 0c       	mov	r12,0
8000a9b6:	3f fa       	mov	r10,-1
8000a9b8:	18 90       	mov	r0,r12
8000a9ba:	50 3a       	stdsp	sp[0xc],r10
8000a9bc:	18 94       	mov	r4,r12
8000a9be:	18 92       	mov	r2,r12
8000a9c0:	f8 0c 00 3c 	add	r12,r12,r12<<0x3
8000a9c4:	16 97       	mov	r7,r11
8000a9c6:	50 7c       	stdsp	sp[0x1c],r12
8000a9c8:	4c ec       	lddpc	r12,8000ab00 <get_arg+0x194>
8000a9ca:	0f 3e       	ld.ub	lr,r7++
8000a9cc:	f8 0e 07 0a 	ld.ub	r10,r12[lr]
8000a9d0:	40 7c       	lddsp	r12,sp[0x1c]
8000a9d2:	14 0c       	add	r12,r10
8000a9d4:	4c ca       	lddpc	r10,8000ab04 <get_arg+0x198>
8000a9d6:	f4 0c 07 0a 	ld.ub	r10,r10[r12]
8000a9da:	20 1a       	sub	r10,1
8000a9dc:	50 0a       	stdsp	sp[0x0],r10
8000a9de:	4c ba       	lddpc	r10,8000ab08 <get_arg+0x19c>
8000a9e0:	f4 0c 07 0c 	ld.ub	r12,r10[r12]
8000a9e4:	50 7c       	stdsp	sp[0x1c],r12
8000a9e6:	40 0c       	lddsp	r12,sp[0x0]
8000a9e8:	58 7c       	cp.w	r12,7
8000a9ea:	e0 8b 00 fa 	brhi	8000abde <get_arg+0x272>
8000a9ee:	4c 8a       	lddpc	r10,8000ab0c <get_arg+0x1a0>
8000a9f0:	f4 0c 03 2f 	ld.w	pc,r10[r12<<0x2]
8000a9f4:	36 8a       	mov	r10,104
8000a9f6:	f4 0e 18 00 	cp.b	lr,r10
8000a9fa:	e0 80 00 f2 	breq	8000abde <get_arg+0x272>
8000a9fe:	37 1a       	mov	r10,113
8000aa00:	f4 0e 18 00 	cp.b	lr,r10
8000aa04:	c0 70       	breq	8000aa12 <get_arg+0xa6>
8000aa06:	34 ca       	mov	r10,76
8000aa08:	f4 0e 18 00 	cp.b	lr,r10
8000aa0c:	c0 51       	brne	8000aa16 <get_arg+0xaa>
8000aa0e:	a3 b4       	sbr	r4,0x3
8000aa10:	ce 78       	rjmp	8000abde <get_arg+0x272>
8000aa12:	a5 b4       	sbr	r4,0x5
8000aa14:	ce 58       	rjmp	8000abde <get_arg+0x272>
8000aa16:	08 9c       	mov	r12,r4
8000aa18:	0e 9a       	mov	r10,r7
8000aa1a:	a5 ac       	sbr	r12,0x4
8000aa1c:	a5 b4       	sbr	r4,0x5
8000aa1e:	0f 3b       	ld.ub	r11,r7++
8000aa20:	36 ce       	mov	lr,108
8000aa22:	fc 0b 18 00 	cp.b	r11,lr
8000aa26:	e0 80 00 dc 	breq	8000abde <get_arg+0x272>
8000aa2a:	18 94       	mov	r4,r12
8000aa2c:	14 9b       	mov	r11,r10
8000aa2e:	cd 98       	rjmp	8000abe0 <get_arg+0x274>
8000aa30:	eb d5 c0 05 	bfextu	r5,r5,0x0,0x5
8000aa34:	36 7c       	mov	r12,103
8000aa36:	f8 0e 18 00 	cp.b	lr,r12
8000aa3a:	e0 8b 00 27 	brhi	8000aa88 <get_arg+0x11c>
8000aa3e:	36 5a       	mov	r10,101
8000aa40:	f4 0e 18 00 	cp.b	lr,r10
8000aa44:	c4 82       	brcc	8000aad4 <get_arg+0x168>
8000aa46:	34 fa       	mov	r10,79
8000aa48:	f4 0e 18 00 	cp.b	lr,r10
8000aa4c:	c4 80       	breq	8000aadc <get_arg+0x170>
8000aa4e:	e0 8b 00 0c 	brhi	8000aa66 <get_arg+0xfa>
8000aa52:	34 5a       	mov	r10,69
8000aa54:	f4 0e 18 00 	cp.b	lr,r10
8000aa58:	c3 e0       	breq	8000aad4 <get_arg+0x168>
8000aa5a:	34 7a       	mov	r10,71
8000aa5c:	f4 0e 18 00 	cp.b	lr,r10
8000aa60:	c3 a0       	breq	8000aad4 <get_arg+0x168>
8000aa62:	34 4a       	mov	r10,68
8000aa64:	c0 88       	rjmp	8000aa74 <get_arg+0x108>
8000aa66:	35 8a       	mov	r10,88
8000aa68:	f4 0e 18 00 	cp.b	lr,r10
8000aa6c:	c2 c0       	breq	8000aac4 <get_arg+0x158>
8000aa6e:	e0 8b 00 07 	brhi	8000aa7c <get_arg+0x110>
8000aa72:	35 5a       	mov	r10,85
8000aa74:	f4 0e 18 00 	cp.b	lr,r10
8000aa78:	c3 51       	brne	8000aae2 <get_arg+0x176>
8000aa7a:	c3 18       	rjmp	8000aadc <get_arg+0x170>
8000aa7c:	36 3a       	mov	r10,99
8000aa7e:	f4 0e 18 00 	cp.b	lr,r10
8000aa82:	c2 f0       	breq	8000aae0 <get_arg+0x174>
8000aa84:	36 4a       	mov	r10,100
8000aa86:	c0 e8       	rjmp	8000aaa2 <get_arg+0x136>
8000aa88:	37 0a       	mov	r10,112
8000aa8a:	f4 0e 18 00 	cp.b	lr,r10
8000aa8e:	c2 50       	breq	8000aad8 <get_arg+0x16c>
8000aa90:	e0 8b 00 0d 	brhi	8000aaaa <get_arg+0x13e>
8000aa94:	36 ea       	mov	r10,110
8000aa96:	f4 0e 18 00 	cp.b	lr,r10
8000aa9a:	c1 f0       	breq	8000aad8 <get_arg+0x16c>
8000aa9c:	e0 8b 00 14 	brhi	8000aac4 <get_arg+0x158>
8000aaa0:	36 9a       	mov	r10,105
8000aaa2:	f4 0e 18 00 	cp.b	lr,r10
8000aaa6:	c1 e1       	brne	8000aae2 <get_arg+0x176>
8000aaa8:	c0 e8       	rjmp	8000aac4 <get_arg+0x158>
8000aaaa:	37 5a       	mov	r10,117
8000aaac:	f4 0e 18 00 	cp.b	lr,r10
8000aab0:	c0 a0       	breq	8000aac4 <get_arg+0x158>
8000aab2:	37 8a       	mov	r10,120
8000aab4:	f4 0e 18 00 	cp.b	lr,r10
8000aab8:	c0 60       	breq	8000aac4 <get_arg+0x158>
8000aaba:	37 3a       	mov	r10,115
8000aabc:	f4 0e 18 00 	cp.b	lr,r10
8000aac0:	c1 11       	brne	8000aae2 <get_arg+0x176>
8000aac2:	c0 b8       	rjmp	8000aad8 <get_arg+0x16c>
8000aac4:	ed b4 00 04 	bld	r4,0x4
8000aac8:	c0 a0       	breq	8000aadc <get_arg+0x170>
8000aaca:	ed b4 00 05 	bld	r4,0x5
8000aace:	c0 91       	brne	8000aae0 <get_arg+0x174>
8000aad0:	30 20       	mov	r0,2
8000aad2:	c0 88       	rjmp	8000aae2 <get_arg+0x176>
8000aad4:	30 40       	mov	r0,4
8000aad6:	c0 68       	rjmp	8000aae2 <get_arg+0x176>
8000aad8:	30 30       	mov	r0,3
8000aada:	c0 48       	rjmp	8000aae2 <get_arg+0x176>
8000aadc:	30 10       	mov	r0,1
8000aade:	c0 28       	rjmp	8000aae2 <get_arg+0x176>
8000aae0:	30 00       	mov	r0,0
8000aae2:	40 3b       	lddsp	r11,sp[0xc]
8000aae4:	5b fb       	cp.w	r11,-1
8000aae6:	c0 40       	breq	8000aaee <get_arg+0x182>
8000aae8:	e2 0b 09 20 	st.w	r1[r11<<0x2],r0
8000aaec:	c7 98       	rjmp	8000abde <get_arg+0x272>
8000aaee:	58 60       	cp.w	r0,6
8000aaf0:	e0 8b 00 77 	brhi	8000abde <get_arg+0x272>
8000aaf4:	6c 0a       	ld.w	r10,r6[0x0]
8000aaf6:	ea cc ff ff 	sub	r12,r5,-1
8000aafa:	48 6b       	lddpc	r11,8000ab10 <get_arg+0x1a4>
8000aafc:	f6 00 03 2f 	ld.w	pc,r11[r0<<0x2]
8000ab00:	80 01       	ld.sh	r1,r0[0x0]
8000ab02:	00 54       	eor	r4,r0
8000ab04:	80 00       	ld.sh	r0,r0[0x0]
8000ab06:	ff 8c       	*unknown*
8000ab08:	80 00       	ld.sh	r0,r0[0x0]
8000ab0a:	ff 20 80 00 	ld.sb	r0,pc[-32768]
8000ab0e:	fd 80       	*unknown*
8000ab10:	80 00       	ld.sh	r0,r0[0x0]
8000ab12:	fd a0       	*unknown*
8000ab14:	f4 cb ff f8 	sub	r11,r10,-8
8000ab18:	8d 0b       	st.w	r6[0x0],r11
8000ab1a:	f4 ea 00 00 	ld.d	r10,r10[0]
8000ab1e:	e6 05 08 3a 	st.d	r3[r5<<0x3],r10
8000ab22:	c0 f8       	rjmp	8000ab40 <get_arg+0x1d4>
8000ab24:	f4 cb ff fc 	sub	r11,r10,-4
8000ab28:	8d 0b       	st.w	r6[0x0],r11
8000ab2a:	74 0a       	ld.w	r10,r10[0x0]
8000ab2c:	e6 05 09 3a 	st.w	r3[r5<<0x3],r10
8000ab30:	c0 88       	rjmp	8000ab40 <get_arg+0x1d4>
8000ab32:	f4 cb ff f8 	sub	r11,r10,-8
8000ab36:	8d 0b       	st.w	r6[0x0],r11
8000ab38:	f4 ea 00 00 	ld.d	r10,r10[0]
8000ab3c:	e6 05 08 3a 	st.d	r3[r5<<0x3],r10
8000ab40:	0e 9b       	mov	r11,r7
8000ab42:	18 95       	mov	r5,r12
8000ab44:	c4 e8       	rjmp	8000abe0 <get_arg+0x274>
8000ab46:	62 0a       	ld.w	r10,r1[0x0]
8000ab48:	5b fa       	cp.w	r10,-1
8000ab4a:	c0 b1       	brne	8000ab60 <get_arg+0x1f4>
8000ab4c:	50 19       	stdsp	sp[0x4],r9
8000ab4e:	50 28       	stdsp	sp[0x8],r8
8000ab50:	e0 6a 00 80 	mov	r10,128
8000ab54:	30 0b       	mov	r11,0
8000ab56:	02 9c       	mov	r12,r1
8000ab58:	f0 1f 00 4d 	mcall	8000ac8c <get_arg+0x320>
8000ab5c:	40 28       	lddsp	r8,sp[0x8]
8000ab5e:	40 19       	lddsp	r9,sp[0x4]
8000ab60:	e4 ca 00 01 	sub	r10,r2,1
8000ab64:	0e 9b       	mov	r11,r7
8000ab66:	50 3a       	stdsp	sp[0xc],r10
8000ab68:	f2 0a 0c 49 	max	r9,r9,r10
8000ab6c:	c3 a8       	rjmp	8000abe0 <get_arg+0x274>
8000ab6e:	62 0a       	ld.w	r10,r1[0x0]
8000ab70:	5b fa       	cp.w	r10,-1
8000ab72:	c0 b1       	brne	8000ab88 <get_arg+0x21c>
8000ab74:	50 19       	stdsp	sp[0x4],r9
8000ab76:	50 28       	stdsp	sp[0x8],r8
8000ab78:	e0 6a 00 80 	mov	r10,128
8000ab7c:	30 0b       	mov	r11,0
8000ab7e:	02 9c       	mov	r12,r1
8000ab80:	f0 1f 00 43 	mcall	8000ac8c <get_arg+0x320>
8000ab84:	40 28       	lddsp	r8,sp[0x8]
8000ab86:	40 19       	lddsp	r9,sp[0x4]
8000ab88:	20 12       	sub	r2,1
8000ab8a:	30 0c       	mov	r12,0
8000ab8c:	0e 9b       	mov	r11,r7
8000ab8e:	e2 02 09 2c 	st.w	r1[r2<<0x2],r12
8000ab92:	f2 02 0c 49 	max	r9,r9,r2
8000ab96:	c2 58       	rjmp	8000abe0 <get_arg+0x274>
8000ab98:	16 97       	mov	r7,r11
8000ab9a:	6c 0a       	ld.w	r10,r6[0x0]
8000ab9c:	f4 cb ff fc 	sub	r11,r10,-4
8000aba0:	8d 0b       	st.w	r6[0x0],r11
8000aba2:	74 0a       	ld.w	r10,r10[0x0]
8000aba4:	0e 9b       	mov	r11,r7
8000aba6:	e6 05 09 3a 	st.w	r3[r5<<0x3],r10
8000abaa:	2f f5       	sub	r5,-1
8000abac:	c1 a8       	rjmp	8000abe0 <get_arg+0x274>
8000abae:	fc c2 00 30 	sub	r2,lr,48
8000abb2:	c0 68       	rjmp	8000abbe <get_arg+0x252>
8000abb4:	e4 02 00 22 	add	r2,r2,r2<<0x2
8000abb8:	2f f7       	sub	r7,-1
8000abba:	f4 02 00 12 	add	r2,r10,r2<<0x1
8000abbe:	0f 8a       	ld.ub	r10,r7[0x0]
8000abc0:	58 0a       	cp.w	r10,0
8000abc2:	c0 e0       	breq	8000abde <get_arg+0x272>
8000abc4:	23 0a       	sub	r10,48
8000abc6:	58 9a       	cp.w	r10,9
8000abc8:	fe 98 ff f6 	brls	8000abb4 <get_arg+0x248>
8000abcc:	c0 98       	rjmp	8000abde <get_arg+0x272>
8000abce:	2f f7       	sub	r7,-1
8000abd0:	0f 8a       	ld.ub	r10,r7[0x0]
8000abd2:	58 0a       	cp.w	r10,0
8000abd4:	c0 50       	breq	8000abde <get_arg+0x272>
8000abd6:	23 0a       	sub	r10,48
8000abd8:	58 9a       	cp.w	r10,9
8000abda:	fe 98 ff fa 	brls	8000abce <get_arg+0x262>
8000abde:	0e 9b       	mov	r11,r7
8000abe0:	40 7c       	lddsp	r12,sp[0x1c]
8000abe2:	30 ba       	mov	r10,11
8000abe4:	f4 0c 18 00 	cp.b	r12,r10
8000abe8:	fe 91 fe ec 	brne	8000a9c0 <get_arg+0x54>
8000abec:	40 4a       	lddsp	r10,sp[0x10]
8000abee:	17 8c       	ld.ub	r12,r11[0x0]
8000abf0:	0a 3a       	cp.w	r10,r5
8000abf2:	5f 4a       	srge	r10
8000abf4:	f0 0c 18 00 	cp.b	r12,r8
8000abf8:	5f 1c       	srne	r12
8000abfa:	f9 ea 00 0a 	and	r10,r12,r10
8000abfe:	f0 0a 18 00 	cp.b	r10,r8
8000ac02:	fe 91 fe c9 	brne	8000a994 <get_arg+0x28>
8000ac06:	30 08       	mov	r8,0
8000ac08:	17 8a       	ld.ub	r10,r11[0x0]
8000ac0a:	40 42       	lddsp	r2,sp[0x10]
8000ac0c:	e2 05 00 21 	add	r1,r1,r5<<0x2
8000ac10:	f0 0a 18 00 	cp.b	r10,r8
8000ac14:	e4 09 17 10 	movne	r9,r2
8000ac18:	06 9e       	mov	lr,r3
8000ac1a:	e6 05 00 38 	add	r8,r3,r5<<0x3
8000ac1e:	c2 a8       	rjmp	8000ac72 <get_arg+0x306>
8000ac20:	62 0a       	ld.w	r10,r1[0x0]
8000ac22:	58 3a       	cp.w	r10,3
8000ac24:	c1 e0       	breq	8000ac60 <get_arg+0x2f4>
8000ac26:	e0 89 00 07 	brgt	8000ac34 <get_arg+0x2c8>
8000ac2a:	58 1a       	cp.w	r10,1
8000ac2c:	c1 a0       	breq	8000ac60 <get_arg+0x2f4>
8000ac2e:	58 2a       	cp.w	r10,2
8000ac30:	c1 81       	brne	8000ac60 <get_arg+0x2f4>
8000ac32:	c0 58       	rjmp	8000ac3c <get_arg+0x2d0>
8000ac34:	58 5a       	cp.w	r10,5
8000ac36:	c0 c0       	breq	8000ac4e <get_arg+0x2e2>
8000ac38:	c0 b5       	brlt	8000ac4e <get_arg+0x2e2>
8000ac3a:	c1 38       	rjmp	8000ac60 <get_arg+0x2f4>
8000ac3c:	6c 0a       	ld.w	r10,r6[0x0]
8000ac3e:	f4 cc ff f8 	sub	r12,r10,-8
8000ac42:	8d 0c       	st.w	r6[0x0],r12
8000ac44:	f4 e2 00 00 	ld.d	r2,r10[0]
8000ac48:	f0 e3 00 00 	st.d	r8[0],r2
8000ac4c:	c1 08       	rjmp	8000ac6c <get_arg+0x300>
8000ac4e:	6c 0a       	ld.w	r10,r6[0x0]
8000ac50:	f4 cc ff f8 	sub	r12,r10,-8
8000ac54:	8d 0c       	st.w	r6[0x0],r12
8000ac56:	f4 e2 00 00 	ld.d	r2,r10[0]
8000ac5a:	f0 e3 00 00 	st.d	r8[0],r2
8000ac5e:	c0 78       	rjmp	8000ac6c <get_arg+0x300>
8000ac60:	6c 0a       	ld.w	r10,r6[0x0]
8000ac62:	f4 cc ff fc 	sub	r12,r10,-4
8000ac66:	8d 0c       	st.w	r6[0x0],r12
8000ac68:	74 0a       	ld.w	r10,r10[0x0]
8000ac6a:	91 0a       	st.w	r8[0x0],r10
8000ac6c:	2f f5       	sub	r5,-1
8000ac6e:	2f 88       	sub	r8,-8
8000ac70:	2f c1       	sub	r1,-4
8000ac72:	12 35       	cp.w	r5,r9
8000ac74:	fe 9a ff d6 	brle	8000ac20 <get_arg+0x2b4>
8000ac78:	40 6c       	lddsp	r12,sp[0x18]
8000ac7a:	40 52       	lddsp	r2,sp[0x14]
8000ac7c:	99 0b       	st.w	r12[0x0],r11
8000ac7e:	1c 93       	mov	r3,lr
8000ac80:	40 4b       	lddsp	r11,sp[0x10]
8000ac82:	85 05       	st.w	r2[0x0],r5
8000ac84:	fc 0b 00 3c 	add	r12,lr,r11<<0x3
8000ac88:	2f 8d       	sub	sp,-32
8000ac8a:	d8 32       	popm	r0-r7,pc
8000ac8c:	80 00       	ld.sh	r0,r0[0x0]
8000ac8e:	a2 7e       	st.h	r1[0xe],lr

8000ac90 <__sprint_r>:
8000ac90:	d4 21       	pushm	r4-r7,lr
8000ac92:	14 97       	mov	r7,r10
8000ac94:	74 28       	ld.w	r8,r10[0x8]
8000ac96:	58 08       	cp.w	r8,0
8000ac98:	c0 41       	brne	8000aca0 <__sprint_r+0x10>
8000ac9a:	95 18       	st.w	r10[0x4],r8
8000ac9c:	10 9c       	mov	r12,r8
8000ac9e:	d8 22       	popm	r4-r7,pc
8000aca0:	f0 1f 00 03 	mcall	8000acac <__sprint_r+0x1c>
8000aca4:	30 08       	mov	r8,0
8000aca6:	8f 18       	st.w	r7[0x4],r8
8000aca8:	8f 28       	st.w	r7[0x8],r8
8000acaa:	d8 22       	popm	r4-r7,pc
8000acac:	80 00       	ld.sh	r0,r0[0x0]
8000acae:	98 f0       	ld.uh	r0,r12[0xe]

8000acb0 <_vfprintf_r>:
8000acb0:	d4 31       	pushm	r0-r7,lr
8000acb2:	fa cd 06 bc 	sub	sp,sp,1724
8000acb6:	51 09       	stdsp	sp[0x40],r9
8000acb8:	16 91       	mov	r1,r11
8000acba:	14 97       	mov	r7,r10
8000acbc:	18 95       	mov	r5,r12
8000acbe:	f0 1f 00 56 	mcall	8000ae14 <_vfprintf_r+0x164>
8000acc2:	78 0c       	ld.w	r12,r12[0x0]
8000acc4:	50 cc       	stdsp	sp[0x30],r12
8000acc6:	58 05       	cp.w	r5,0
8000acc8:	c0 70       	breq	8000acd6 <_vfprintf_r+0x26>
8000acca:	6a 68       	ld.w	r8,r5[0x18]
8000accc:	58 08       	cp.w	r8,0
8000acce:	c0 41       	brne	8000acd6 <_vfprintf_r+0x26>
8000acd0:	0a 9c       	mov	r12,r5
8000acd2:	f0 1f 00 52 	mcall	8000ae18 <_vfprintf_r+0x168>
8000acd6:	4d 28       	lddpc	r8,8000ae1c <_vfprintf_r+0x16c>
8000acd8:	10 31       	cp.w	r1,r8
8000acda:	c0 31       	brne	8000ace0 <_vfprintf_r+0x30>
8000acdc:	6a 01       	ld.w	r1,r5[0x0]
8000acde:	c0 a8       	rjmp	8000acf2 <_vfprintf_r+0x42>
8000ace0:	4d 08       	lddpc	r8,8000ae20 <_vfprintf_r+0x170>
8000ace2:	10 31       	cp.w	r1,r8
8000ace4:	c0 31       	brne	8000acea <_vfprintf_r+0x3a>
8000ace6:	6a 11       	ld.w	r1,r5[0x4]
8000ace8:	c0 58       	rjmp	8000acf2 <_vfprintf_r+0x42>
8000acea:	4c f8       	lddpc	r8,8000ae24 <_vfprintf_r+0x174>
8000acec:	10 31       	cp.w	r1,r8
8000acee:	c0 21       	brne	8000acf2 <_vfprintf_r+0x42>
8000acf0:	6a 21       	ld.w	r1,r5[0x8]
8000acf2:	82 68       	ld.sh	r8,r1[0xc]
8000acf4:	ed b8 00 03 	bld	r8,0x3
8000acf8:	c0 41       	brne	8000ad00 <_vfprintf_r+0x50>
8000acfa:	62 48       	ld.w	r8,r1[0x10]
8000acfc:	58 08       	cp.w	r8,0
8000acfe:	c0 71       	brne	8000ad0c <_vfprintf_r+0x5c>
8000ad00:	02 9b       	mov	r11,r1
8000ad02:	0a 9c       	mov	r12,r5
8000ad04:	f0 1f 00 49 	mcall	8000ae28 <_vfprintf_r+0x178>
8000ad08:	e0 81 0f 9d 	brne	8000cc42 <_vfprintf_r+0x1f92>
8000ad0c:	82 68       	ld.sh	r8,r1[0xc]
8000ad0e:	10 99       	mov	r9,r8
8000ad10:	e2 19 00 1a 	andl	r9,0x1a,COH
8000ad14:	58 a9       	cp.w	r9,10
8000ad16:	c3 d1       	brne	8000ad90 <_vfprintf_r+0xe0>
8000ad18:	82 79       	ld.sh	r9,r1[0xe]
8000ad1a:	30 0a       	mov	r10,0
8000ad1c:	f4 09 19 00 	cp.h	r9,r10
8000ad20:	c3 85       	brlt	8000ad90 <_vfprintf_r+0xe0>
8000ad22:	a1 d8       	cbr	r8,0x1
8000ad24:	fb 58 05 d0 	st.h	sp[1488],r8
8000ad28:	62 88       	ld.w	r8,r1[0x20]
8000ad2a:	fb 48 05 e4 	st.w	sp[1508],r8
8000ad2e:	62 a8       	ld.w	r8,r1[0x28]
8000ad30:	fb 48 05 ec 	st.w	sp[1516],r8
8000ad34:	fa c8 ff bc 	sub	r8,sp,-68
8000ad38:	fb 48 05 d4 	st.w	sp[1492],r8
8000ad3c:	fb 48 05 c4 	st.w	sp[1476],r8
8000ad40:	e0 68 04 00 	mov	r8,1024
8000ad44:	fb 48 05 d8 	st.w	sp[1496],r8
8000ad48:	fb 48 05 cc 	st.w	sp[1484],r8
8000ad4c:	30 08       	mov	r8,0
8000ad4e:	fb 59 05 d2 	st.h	sp[1490],r9
8000ad52:	0e 9a       	mov	r10,r7
8000ad54:	41 09       	lddsp	r9,sp[0x40]
8000ad56:	fa c7 fa 3c 	sub	r7,sp,-1476
8000ad5a:	fb 48 05 dc 	st.w	sp[1500],r8
8000ad5e:	0a 9c       	mov	r12,r5
8000ad60:	0e 9b       	mov	r11,r7
8000ad62:	f0 1f 00 33 	mcall	8000ae2c <_vfprintf_r+0x17c>
8000ad66:	50 bc       	stdsp	sp[0x2c],r12
8000ad68:	c0 95       	brlt	8000ad7a <_vfprintf_r+0xca>
8000ad6a:	0e 9b       	mov	r11,r7
8000ad6c:	0a 9c       	mov	r12,r5
8000ad6e:	f0 1f 00 31 	mcall	8000ae30 <_vfprintf_r+0x180>
8000ad72:	40 be       	lddsp	lr,sp[0x2c]
8000ad74:	f9 be 01 ff 	movne	lr,-1
8000ad78:	50 be       	stdsp	sp[0x2c],lr
8000ad7a:	fb 08 05 d0 	ld.sh	r8,sp[1488]
8000ad7e:	ed b8 00 06 	bld	r8,0x6
8000ad82:	e0 81 0f 62 	brne	8000cc46 <_vfprintf_r+0x1f96>
8000ad86:	82 68       	ld.sh	r8,r1[0xc]
8000ad88:	a7 a8       	sbr	r8,0x6
8000ad8a:	a2 68       	st.h	r1[0xc],r8
8000ad8c:	e0 8f 0f 5d 	bral	8000cc46 <_vfprintf_r+0x1f96>
8000ad90:	30 08       	mov	r8,0
8000ad92:	fb 48 06 b4 	st.w	sp[1716],r8
8000ad96:	fb 48 06 90 	st.w	sp[1680],r8
8000ad9a:	fb 48 06 8c 	st.w	sp[1676],r8
8000ad9e:	fb 48 06 b0 	st.w	sp[1712],r8
8000ada2:	30 08       	mov	r8,0
8000ada4:	30 09       	mov	r9,0
8000ada6:	50 a7       	stdsp	sp[0x28],r7
8000ada8:	50 78       	stdsp	sp[0x1c],r8
8000adaa:	fa c3 f9 e0 	sub	r3,sp,-1568
8000adae:	3f f8       	mov	r8,-1
8000adb0:	50 59       	stdsp	sp[0x14],r9
8000adb2:	fb 43 06 88 	st.w	sp[1672],r3
8000adb6:	fb 48 05 44 	st.w	sp[1348],r8
8000adba:	50 69       	stdsp	sp[0x18],r9
8000adbc:	50 d9       	stdsp	sp[0x34],r9
8000adbe:	50 e9       	stdsp	sp[0x38],r9
8000adc0:	50 b9       	stdsp	sp[0x2c],r9
8000adc2:	12 97       	mov	r7,r9
8000adc4:	0a 94       	mov	r4,r5
8000adc6:	40 a2       	lddsp	r2,sp[0x28]
8000adc8:	32 5a       	mov	r10,37
8000adca:	30 08       	mov	r8,0
8000adcc:	c0 28       	rjmp	8000add0 <_vfprintf_r+0x120>
8000adce:	2f f2       	sub	r2,-1
8000add0:	05 89       	ld.ub	r9,r2[0x0]
8000add2:	f0 09 18 00 	cp.b	r9,r8
8000add6:	5f 1b       	srne	r11
8000add8:	f4 09 18 00 	cp.b	r9,r10
8000addc:	5f 19       	srne	r9
8000adde:	f3 eb 00 0b 	and	r11,r9,r11
8000ade2:	f0 0b 18 00 	cp.b	r11,r8
8000ade6:	cf 41       	brne	8000adce <_vfprintf_r+0x11e>
8000ade8:	40 ab       	lddsp	r11,sp[0x28]
8000adea:	e4 0b 01 06 	sub	r6,r2,r11
8000adee:	c3 00       	breq	8000ae4e <_vfprintf_r+0x19e>
8000adf0:	fa f8 06 90 	ld.w	r8,sp[1680]
8000adf4:	0c 08       	add	r8,r6
8000adf6:	87 0b       	st.w	r3[0x0],r11
8000adf8:	fb 48 06 90 	st.w	sp[1680],r8
8000adfc:	87 16       	st.w	r3[0x4],r6
8000adfe:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000ae02:	2f f8       	sub	r8,-1
8000ae04:	fb 48 06 8c 	st.w	sp[1676],r8
8000ae08:	58 78       	cp.w	r8,7
8000ae0a:	e0 89 00 15 	brgt	8000ae34 <_vfprintf_r+0x184>
8000ae0e:	2f 83       	sub	r3,-8
8000ae10:	c1 c8       	rjmp	8000ae48 <_vfprintf_r+0x198>
8000ae12:	00 00       	add	r0,r0
8000ae14:	80 00       	ld.sh	r0,r0[0x0]
8000ae16:	e0 f4 80 00 	ld.w	r4,r0[-32768]
8000ae1a:	dd ac       	*unknown*
8000ae1c:	80 01       	ld.sh	r1,r0[0x0]
8000ae1e:	01 64       	ld.uh	r4,--r0
8000ae20:	80 01       	ld.sh	r1,r0[0x0]
8000ae22:	01 84       	ld.ub	r4,r0[0x0]
8000ae24:	80 01       	ld.sh	r1,r0[0x0]
8000ae26:	01 a4       	ld.ub	r4,r0[0x2]
8000ae28:	80 00       	ld.sh	r0,r0[0x0]
8000ae2a:	cd 10       	breq	8000adcc <_vfprintf_r+0x11c>
8000ae2c:	80 00       	ld.sh	r0,r0[0x0]
8000ae2e:	ac b0       	st.b	r6[0x3],r0
8000ae30:	80 00       	ld.sh	r0,r0[0x0]
8000ae32:	db d4       	*unknown*
8000ae34:	fa ca f9 78 	sub	r10,sp,-1672
8000ae38:	02 9b       	mov	r11,r1
8000ae3a:	08 9c       	mov	r12,r4
8000ae3c:	f0 1f 00 71 	mcall	8000b000 <_vfprintf_r+0x350>
8000ae40:	e0 81 0e fd 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000ae44:	fa c3 f9 e0 	sub	r3,sp,-1568
8000ae48:	40 ba       	lddsp	r10,sp[0x2c]
8000ae4a:	0c 0a       	add	r10,r6
8000ae4c:	50 ba       	stdsp	sp[0x2c],r10
8000ae4e:	05 89       	ld.ub	r9,r2[0x0]
8000ae50:	30 08       	mov	r8,0
8000ae52:	f0 09 18 00 	cp.b	r9,r8
8000ae56:	e0 80 0e e1 	breq	8000cc18 <_vfprintf_r+0x1f68>
8000ae5a:	e4 c6 ff ff 	sub	r6,r2,-1
8000ae5e:	30 09       	mov	r9,0
8000ae60:	50 a6       	stdsp	sp[0x28],r6
8000ae62:	fb 68 06 bb 	st.b	sp[1723],r8
8000ae66:	0e 96       	mov	r6,r7
8000ae68:	3f f8       	mov	r8,-1
8000ae6a:	50 93       	stdsp	sp[0x24],r3
8000ae6c:	50 41       	stdsp	sp[0x10],r1
8000ae6e:	0e 93       	mov	r3,r7
8000ae70:	04 91       	mov	r1,r2
8000ae72:	50 89       	stdsp	sp[0x20],r9
8000ae74:	50 28       	stdsp	sp[0x8],r8
8000ae76:	50 39       	stdsp	sp[0xc],r9
8000ae78:	12 95       	mov	r5,r9
8000ae7a:	12 90       	mov	r0,r9
8000ae7c:	40 a7       	lddsp	r7,sp[0x28]
8000ae7e:	08 92       	mov	r2,r4
8000ae80:	c0 78       	rjmp	8000ae8e <_vfprintf_r+0x1de>
8000ae82:	3f fe       	mov	lr,-1
8000ae84:	08 97       	mov	r7,r4
8000ae86:	50 2e       	stdsp	sp[0x8],lr
8000ae88:	c0 38       	rjmp	8000ae8e <_vfprintf_r+0x1de>
8000ae8a:	30 0c       	mov	r12,0
8000ae8c:	50 3c       	stdsp	sp[0xc],r12
8000ae8e:	0f 38       	ld.ub	r8,r7++
8000ae90:	c0 28       	rjmp	8000ae94 <_vfprintf_r+0x1e4>
8000ae92:	12 90       	mov	r0,r9
8000ae94:	f0 c9 00 20 	sub	r9,r8,32
8000ae98:	e0 49 00 58 	cp.w	r9,88
8000ae9c:	e0 8b 0a 58 	brhi	8000c34c <_vfprintf_r+0x169c>
8000aea0:	4d 9b       	lddpc	r11,8000b004 <_vfprintf_r+0x354>
8000aea2:	f6 09 03 2f 	ld.w	pc,r11[r9<<0x2]
8000aea6:	50 a7       	stdsp	sp[0x28],r7
8000aea8:	50 80       	stdsp	sp[0x20],r0
8000aeaa:	0c 97       	mov	r7,r6
8000aeac:	04 94       	mov	r4,r2
8000aeae:	06 96       	mov	r6,r3
8000aeb0:	02 92       	mov	r2,r1
8000aeb2:	4d 6a       	lddpc	r10,8000b008 <_vfprintf_r+0x358>
8000aeb4:	40 93       	lddsp	r3,sp[0x24]
8000aeb6:	10 90       	mov	r0,r8
8000aeb8:	40 41       	lddsp	r1,sp[0x10]
8000aeba:	50 da       	stdsp	sp[0x34],r10
8000aebc:	e0 8f 08 b8 	bral	8000c02c <_vfprintf_r+0x137c>
8000aec0:	30 08       	mov	r8,0
8000aec2:	fb 39 06 bb 	ld.ub	r9,sp[1723]
8000aec6:	f0 09 18 00 	cp.b	r9,r8
8000aeca:	ce 21       	brne	8000ae8e <_vfprintf_r+0x1de>
8000aecc:	32 08       	mov	r8,32
8000aece:	c6 e8       	rjmp	8000afaa <_vfprintf_r+0x2fa>
8000aed0:	a1 a5       	sbr	r5,0x0
8000aed2:	cd eb       	rjmp	8000ae8e <_vfprintf_r+0x1de>
8000aed4:	0f 89       	ld.ub	r9,r7[0x0]
8000aed6:	f2 c8 00 30 	sub	r8,r9,48
8000aeda:	58 98       	cp.w	r8,9
8000aedc:	e0 8b 00 1d 	brhi	8000af16 <_vfprintf_r+0x266>
8000aee0:	ee c8 ff ff 	sub	r8,r7,-1
8000aee4:	30 0b       	mov	r11,0
8000aee6:	23 09       	sub	r9,48
8000aee8:	f6 0b 00 2b 	add	r11,r11,r11<<0x2
8000aeec:	f2 0b 00 1b 	add	r11,r9,r11<<0x1
8000aef0:	11 39       	ld.ub	r9,r8++
8000aef2:	f2 ca 00 30 	sub	r10,r9,48
8000aef6:	58 9a       	cp.w	r10,9
8000aef8:	fe 98 ff f7 	brls	8000aee6 <_vfprintf_r+0x236>
8000aefc:	e0 49 00 24 	cp.w	r9,36
8000af00:	cc 51       	brne	8000ae8a <_vfprintf_r+0x1da>
8000af02:	e0 4b 00 20 	cp.w	r11,32
8000af06:	e0 89 0e 99 	brgt	8000cc38 <_vfprintf_r+0x1f88>
8000af0a:	20 1b       	sub	r11,1
8000af0c:	fa f9 06 b4 	ld.w	r9,sp[1716]
8000af10:	12 3b       	cp.w	r11,r9
8000af12:	c0 95       	brlt	8000af24 <_vfprintf_r+0x274>
8000af14:	c1 08       	rjmp	8000af34 <_vfprintf_r+0x284>
8000af16:	fa f9 06 b4 	ld.w	r9,sp[1716]
8000af1a:	ec ca ff ff 	sub	r10,r6,-1
8000af1e:	12 36       	cp.w	r6,r9
8000af20:	c1 f5       	brlt	8000af5e <_vfprintf_r+0x2ae>
8000af22:	c2 68       	rjmp	8000af6e <_vfprintf_r+0x2be>
8000af24:	fa c9 f9 44 	sub	r9,sp,-1724
8000af28:	10 97       	mov	r7,r8
8000af2a:	f2 0b 00 3b 	add	r11,r9,r11<<0x3
8000af2e:	f6 f0 fd 88 	ld.w	r0,r11[-632]
8000af32:	c3 58       	rjmp	8000af9c <_vfprintf_r+0x2ec>
8000af34:	10 97       	mov	r7,r8
8000af36:	fa c8 f9 50 	sub	r8,sp,-1712
8000af3a:	1a d8       	st.w	--sp,r8
8000af3c:	fa c8 fa b8 	sub	r8,sp,-1352
8000af40:	1a d8       	st.w	--sp,r8
8000af42:	fa c8 fb b4 	sub	r8,sp,-1100
8000af46:	02 9a       	mov	r10,r1
8000af48:	1a d8       	st.w	--sp,r8
8000af4a:	04 9c       	mov	r12,r2
8000af4c:	fa c8 f9 40 	sub	r8,sp,-1728
8000af50:	fa c9 ff b4 	sub	r9,sp,-76
8000af54:	f0 1f 00 2e 	mcall	8000b00c <_vfprintf_r+0x35c>
8000af58:	2f dd       	sub	sp,-12
8000af5a:	78 00       	ld.w	r0,r12[0x0]
8000af5c:	c2 08       	rjmp	8000af9c <_vfprintf_r+0x2ec>
8000af5e:	fa ce f9 44 	sub	lr,sp,-1724
8000af62:	14 96       	mov	r6,r10
8000af64:	fc 03 00 38 	add	r8,lr,r3<<0x3
8000af68:	f0 f0 fd 88 	ld.w	r0,r8[-632]
8000af6c:	c1 88       	rjmp	8000af9c <_vfprintf_r+0x2ec>
8000af6e:	41 08       	lddsp	r8,sp[0x40]
8000af70:	59 f9       	cp.w	r9,31
8000af72:	e0 89 00 11 	brgt	8000af94 <_vfprintf_r+0x2e4>
8000af76:	f0 cb ff fc 	sub	r11,r8,-4
8000af7a:	51 0b       	stdsp	sp[0x40],r11
8000af7c:	70 00       	ld.w	r0,r8[0x0]
8000af7e:	fa cc f9 44 	sub	r12,sp,-1724
8000af82:	f8 09 00 38 	add	r8,r12,r9<<0x3
8000af86:	f1 40 fd 88 	st.w	r8[-632],r0
8000af8a:	2f f9       	sub	r9,-1
8000af8c:	14 96       	mov	r6,r10
8000af8e:	fb 49 06 b4 	st.w	sp[1716],r9
8000af92:	c0 58       	rjmp	8000af9c <_vfprintf_r+0x2ec>
8000af94:	70 00       	ld.w	r0,r8[0x0]
8000af96:	14 96       	mov	r6,r10
8000af98:	2f c8       	sub	r8,-4
8000af9a:	51 08       	stdsp	sp[0x40],r8
8000af9c:	58 00       	cp.w	r0,0
8000af9e:	fe 94 ff 78 	brge	8000ae8e <_vfprintf_r+0x1de>
8000afa2:	5c 30       	neg	r0
8000afa4:	a3 a5       	sbr	r5,0x2
8000afa6:	c7 4b       	rjmp	8000ae8e <_vfprintf_r+0x1de>
8000afa8:	32 b8       	mov	r8,43
8000afaa:	fb 68 06 bb 	st.b	sp[1723],r8
8000afae:	c7 0b       	rjmp	8000ae8e <_vfprintf_r+0x1de>
8000afb0:	0f 38       	ld.ub	r8,r7++
8000afb2:	e0 48 00 2a 	cp.w	r8,42
8000afb6:	c0 30       	breq	8000afbc <_vfprintf_r+0x30c>
8000afb8:	30 09       	mov	r9,0
8000afba:	c8 08       	rjmp	8000b0ba <_vfprintf_r+0x40a>
8000afbc:	0f 88       	ld.ub	r8,r7[0x0]
8000afbe:	f0 c9 00 30 	sub	r9,r8,48
8000afc2:	58 99       	cp.w	r9,9
8000afc4:	e0 8b 00 26 	brhi	8000b010 <_vfprintf_r+0x360>
8000afc8:	ee c4 ff ff 	sub	r4,r7,-1
8000afcc:	30 0b       	mov	r11,0
8000afce:	23 08       	sub	r8,48
8000afd0:	f6 0b 00 2b 	add	r11,r11,r11<<0x2
8000afd4:	f0 0b 00 1b 	add	r11,r8,r11<<0x1
8000afd8:	09 38       	ld.ub	r8,r4++
8000afda:	f0 c9 00 30 	sub	r9,r8,48
8000afde:	58 99       	cp.w	r9,9
8000afe0:	fe 98 ff f7 	brls	8000afce <_vfprintf_r+0x31e>
8000afe4:	e0 48 00 24 	cp.w	r8,36
8000afe8:	fe 91 ff 51 	brne	8000ae8a <_vfprintf_r+0x1da>
8000afec:	e0 4b 00 20 	cp.w	r11,32
8000aff0:	e0 89 0e 24 	brgt	8000cc38 <_vfprintf_r+0x1f88>
8000aff4:	20 1b       	sub	r11,1
8000aff6:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000affa:	10 3b       	cp.w	r11,r8
8000affc:	c1 15       	brlt	8000b01e <_vfprintf_r+0x36e>
8000affe:	c1 88       	rjmp	8000b02e <_vfprintf_r+0x37e>
8000b000:	80 00       	ld.sh	r0,r0[0x0]
8000b002:	ac 90       	st.b	r6[0x1],r0
8000b004:	80 00       	ld.sh	r0,r0[0x0]
8000b006:	fd bc       	*unknown*
8000b008:	80 00       	ld.sh	r0,r0[0x0]
8000b00a:	ff f8 80 00 	ld.wls	r8,pc[0x0]
8000b00e:	a9 6c       	lsl	r12,0x8
8000b010:	fa fa 06 b4 	ld.w	r10,sp[1716]
8000b014:	ec c9 ff ff 	sub	r9,r6,-1
8000b018:	14 36       	cp.w	r6,r10
8000b01a:	c1 f5       	brlt	8000b058 <_vfprintf_r+0x3a8>
8000b01c:	c2 88       	rjmp	8000b06c <_vfprintf_r+0x3bc>
8000b01e:	fa ca f9 44 	sub	r10,sp,-1724
8000b022:	f4 0b 00 3b 	add	r11,r10,r11<<0x3
8000b026:	f6 fb fd 88 	ld.w	r11,r11[-632]
8000b02a:	50 2b       	stdsp	sp[0x8],r11
8000b02c:	c3 c8       	rjmp	8000b0a4 <_vfprintf_r+0x3f4>
8000b02e:	fa c8 f9 50 	sub	r8,sp,-1712
8000b032:	1a d8       	st.w	--sp,r8
8000b034:	fa c8 fa b8 	sub	r8,sp,-1352
8000b038:	1a d8       	st.w	--sp,r8
8000b03a:	fa c8 fb b4 	sub	r8,sp,-1100
8000b03e:	02 9a       	mov	r10,r1
8000b040:	1a d8       	st.w	--sp,r8
8000b042:	04 9c       	mov	r12,r2
8000b044:	fa c8 f9 40 	sub	r8,sp,-1728
8000b048:	fa c9 ff b4 	sub	r9,sp,-76
8000b04c:	f0 1f 01 7f 	mcall	8000b648 <_vfprintf_r+0x998>
8000b050:	2f dd       	sub	sp,-12
8000b052:	78 0c       	ld.w	r12,r12[0x0]
8000b054:	50 2c       	stdsp	sp[0x8],r12
8000b056:	c2 78       	rjmp	8000b0a4 <_vfprintf_r+0x3f4>
8000b058:	12 96       	mov	r6,r9
8000b05a:	0e 94       	mov	r4,r7
8000b05c:	fa c9 f9 44 	sub	r9,sp,-1724
8000b060:	f2 03 00 38 	add	r8,r9,r3<<0x3
8000b064:	f0 f8 fd 88 	ld.w	r8,r8[-632]
8000b068:	50 28       	stdsp	sp[0x8],r8
8000b06a:	c1 d8       	rjmp	8000b0a4 <_vfprintf_r+0x3f4>
8000b06c:	41 08       	lddsp	r8,sp[0x40]
8000b06e:	59 fa       	cp.w	r10,31
8000b070:	e0 89 00 14 	brgt	8000b098 <_vfprintf_r+0x3e8>
8000b074:	f0 cb ff fc 	sub	r11,r8,-4
8000b078:	70 08       	ld.w	r8,r8[0x0]
8000b07a:	51 0b       	stdsp	sp[0x40],r11
8000b07c:	50 28       	stdsp	sp[0x8],r8
8000b07e:	fa c6 f9 44 	sub	r6,sp,-1724
8000b082:	40 2e       	lddsp	lr,sp[0x8]
8000b084:	ec 0a 00 38 	add	r8,r6,r10<<0x3
8000b088:	f1 4e fd 88 	st.w	r8[-632],lr
8000b08c:	2f fa       	sub	r10,-1
8000b08e:	0e 94       	mov	r4,r7
8000b090:	fb 4a 06 b4 	st.w	sp[1716],r10
8000b094:	12 96       	mov	r6,r9
8000b096:	c0 78       	rjmp	8000b0a4 <_vfprintf_r+0x3f4>
8000b098:	70 0c       	ld.w	r12,r8[0x0]
8000b09a:	0e 94       	mov	r4,r7
8000b09c:	2f c8       	sub	r8,-4
8000b09e:	50 2c       	stdsp	sp[0x8],r12
8000b0a0:	12 96       	mov	r6,r9
8000b0a2:	51 08       	stdsp	sp[0x40],r8
8000b0a4:	40 2b       	lddsp	r11,sp[0x8]
8000b0a6:	58 0b       	cp.w	r11,0
8000b0a8:	fe 95 fe ed 	brlt	8000ae82 <_vfprintf_r+0x1d2>
8000b0ac:	08 97       	mov	r7,r4
8000b0ae:	cf 0a       	rjmp	8000ae8e <_vfprintf_r+0x1de>
8000b0b0:	f2 09 00 29 	add	r9,r9,r9<<0x2
8000b0b4:	0f 38       	ld.ub	r8,r7++
8000b0b6:	f4 09 00 19 	add	r9,r10,r9<<0x1
8000b0ba:	f0 ca 00 30 	sub	r10,r8,48
8000b0be:	58 9a       	cp.w	r10,9
8000b0c0:	fe 98 ff f8 	brls	8000b0b0 <_vfprintf_r+0x400>
8000b0c4:	3f fa       	mov	r10,-1
8000b0c6:	f2 0a 0c 49 	max	r9,r9,r10
8000b0ca:	50 29       	stdsp	sp[0x8],r9
8000b0cc:	ce 4a       	rjmp	8000ae94 <_vfprintf_r+0x1e4>
8000b0ce:	a7 b5       	sbr	r5,0x7
8000b0d0:	cd fa       	rjmp	8000ae8e <_vfprintf_r+0x1de>
8000b0d2:	30 09       	mov	r9,0
8000b0d4:	23 08       	sub	r8,48
8000b0d6:	f2 09 00 29 	add	r9,r9,r9<<0x2
8000b0da:	f0 09 00 19 	add	r9,r8,r9<<0x1
8000b0de:	0f 38       	ld.ub	r8,r7++
8000b0e0:	f0 ca 00 30 	sub	r10,r8,48
8000b0e4:	58 9a       	cp.w	r10,9
8000b0e6:	fe 98 ff f7 	brls	8000b0d4 <_vfprintf_r+0x424>
8000b0ea:	e0 48 00 24 	cp.w	r8,36
8000b0ee:	fe 91 fe d2 	brne	8000ae92 <_vfprintf_r+0x1e2>
8000b0f2:	e0 49 00 20 	cp.w	r9,32
8000b0f6:	e0 89 0d a1 	brgt	8000cc38 <_vfprintf_r+0x1f88>
8000b0fa:	f2 c3 00 01 	sub	r3,r9,1
8000b0fe:	30 19       	mov	r9,1
8000b100:	50 39       	stdsp	sp[0xc],r9
8000b102:	cc 6a       	rjmp	8000ae8e <_vfprintf_r+0x1de>
8000b104:	a3 b5       	sbr	r5,0x3
8000b106:	cc 4a       	rjmp	8000ae8e <_vfprintf_r+0x1de>
8000b108:	a7 a5       	sbr	r5,0x6
8000b10a:	cc 2a       	rjmp	8000ae8e <_vfprintf_r+0x1de>
8000b10c:	0a 99       	mov	r9,r5
8000b10e:	0e 98       	mov	r8,r7
8000b110:	a5 a9       	sbr	r9,0x4
8000b112:	a5 b5       	sbr	r5,0x5
8000b114:	11 3a       	ld.ub	r10,r8++
8000b116:	36 ce       	mov	lr,108
8000b118:	fc 0a 18 00 	cp.b	r10,lr
8000b11c:	c0 31       	brne	8000b122 <_vfprintf_r+0x472>
8000b11e:	10 97       	mov	r7,r8
8000b120:	cb 7a       	rjmp	8000ae8e <_vfprintf_r+0x1de>
8000b122:	12 95       	mov	r5,r9
8000b124:	cb 5a       	rjmp	8000ae8e <_vfprintf_r+0x1de>
8000b126:	a5 b5       	sbr	r5,0x5
8000b128:	cb 3a       	rjmp	8000ae8e <_vfprintf_r+0x1de>
8000b12a:	50 a7       	stdsp	sp[0x28],r7
8000b12c:	50 80       	stdsp	sp[0x20],r0
8000b12e:	0c 97       	mov	r7,r6
8000b130:	10 90       	mov	r0,r8
8000b132:	06 96       	mov	r6,r3
8000b134:	04 94       	mov	r4,r2
8000b136:	40 93       	lddsp	r3,sp[0x24]
8000b138:	02 92       	mov	r2,r1
8000b13a:	0e 99       	mov	r9,r7
8000b13c:	40 41       	lddsp	r1,sp[0x10]
8000b13e:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000b142:	40 3c       	lddsp	r12,sp[0xc]
8000b144:	58 0c       	cp.w	r12,0
8000b146:	c1 d0       	breq	8000b180 <_vfprintf_r+0x4d0>
8000b148:	10 36       	cp.w	r6,r8
8000b14a:	c0 64       	brge	8000b156 <_vfprintf_r+0x4a6>
8000b14c:	fa cb f9 44 	sub	r11,sp,-1724
8000b150:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000b154:	c1 d8       	rjmp	8000b18e <_vfprintf_r+0x4de>
8000b156:	fa c8 f9 50 	sub	r8,sp,-1712
8000b15a:	1a d8       	st.w	--sp,r8
8000b15c:	fa c8 fa b8 	sub	r8,sp,-1352
8000b160:	1a d8       	st.w	--sp,r8
8000b162:	fa c8 fb b4 	sub	r8,sp,-1100
8000b166:	1a d8       	st.w	--sp,r8
8000b168:	fa c8 f9 40 	sub	r8,sp,-1728
8000b16c:	fa c9 ff b4 	sub	r9,sp,-76
8000b170:	04 9a       	mov	r10,r2
8000b172:	0c 9b       	mov	r11,r6
8000b174:	08 9c       	mov	r12,r4
8000b176:	f0 1f 01 35 	mcall	8000b648 <_vfprintf_r+0x998>
8000b17a:	2f dd       	sub	sp,-12
8000b17c:	19 b8       	ld.ub	r8,r12[0x3]
8000b17e:	c2 28       	rjmp	8000b1c2 <_vfprintf_r+0x512>
8000b180:	2f f7       	sub	r7,-1
8000b182:	10 39       	cp.w	r9,r8
8000b184:	c0 84       	brge	8000b194 <_vfprintf_r+0x4e4>
8000b186:	fa ca f9 44 	sub	r10,sp,-1724
8000b18a:	f4 06 00 36 	add	r6,r10,r6<<0x3
8000b18e:	ed 38 fd 8b 	ld.ub	r8,r6[-629]
8000b192:	c1 88       	rjmp	8000b1c2 <_vfprintf_r+0x512>
8000b194:	41 09       	lddsp	r9,sp[0x40]
8000b196:	59 f8       	cp.w	r8,31
8000b198:	e0 89 00 12 	brgt	8000b1bc <_vfprintf_r+0x50c>
8000b19c:	f2 ca ff fc 	sub	r10,r9,-4
8000b1a0:	51 0a       	stdsp	sp[0x40],r10
8000b1a2:	72 09       	ld.w	r9,r9[0x0]
8000b1a4:	fa c6 f9 44 	sub	r6,sp,-1724
8000b1a8:	ec 08 00 3a 	add	r10,r6,r8<<0x3
8000b1ac:	2f f8       	sub	r8,-1
8000b1ae:	f5 49 fd 88 	st.w	r10[-632],r9
8000b1b2:	fb 48 06 b4 	st.w	sp[1716],r8
8000b1b6:	f1 d9 c0 08 	bfextu	r8,r9,0x0,0x8
8000b1ba:	c0 48       	rjmp	8000b1c2 <_vfprintf_r+0x512>
8000b1bc:	13 b8       	ld.ub	r8,r9[0x3]
8000b1be:	2f c9       	sub	r9,-4
8000b1c0:	51 09       	stdsp	sp[0x40],r9
8000b1c2:	fb 68 06 60 	st.b	sp[1632],r8
8000b1c6:	30 0e       	mov	lr,0
8000b1c8:	30 08       	mov	r8,0
8000b1ca:	30 12       	mov	r2,1
8000b1cc:	fb 68 06 bb 	st.b	sp[1723],r8
8000b1d0:	50 2e       	stdsp	sp[0x8],lr
8000b1d2:	e0 8f 08 cf 	bral	8000c370 <_vfprintf_r+0x16c0>
8000b1d6:	50 a7       	stdsp	sp[0x28],r7
8000b1d8:	50 80       	stdsp	sp[0x20],r0
8000b1da:	0c 97       	mov	r7,r6
8000b1dc:	04 94       	mov	r4,r2
8000b1de:	06 96       	mov	r6,r3
8000b1e0:	02 92       	mov	r2,r1
8000b1e2:	40 93       	lddsp	r3,sp[0x24]
8000b1e4:	10 90       	mov	r0,r8
8000b1e6:	40 41       	lddsp	r1,sp[0x10]
8000b1e8:	a5 a5       	sbr	r5,0x4
8000b1ea:	c0 a8       	rjmp	8000b1fe <_vfprintf_r+0x54e>
8000b1ec:	50 a7       	stdsp	sp[0x28],r7
8000b1ee:	50 80       	stdsp	sp[0x20],r0
8000b1f0:	0c 97       	mov	r7,r6
8000b1f2:	04 94       	mov	r4,r2
8000b1f4:	06 96       	mov	r6,r3
8000b1f6:	02 92       	mov	r2,r1
8000b1f8:	40 93       	lddsp	r3,sp[0x24]
8000b1fa:	10 90       	mov	r0,r8
8000b1fc:	40 41       	lddsp	r1,sp[0x10]
8000b1fe:	ed b5 00 05 	bld	r5,0x5
8000b202:	c5 11       	brne	8000b2a4 <_vfprintf_r+0x5f4>
8000b204:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000b208:	40 3c       	lddsp	r12,sp[0xc]
8000b20a:	58 0c       	cp.w	r12,0
8000b20c:	c1 e0       	breq	8000b248 <_vfprintf_r+0x598>
8000b20e:	10 36       	cp.w	r6,r8
8000b210:	c0 64       	brge	8000b21c <_vfprintf_r+0x56c>
8000b212:	fa cb f9 44 	sub	r11,sp,-1724
8000b216:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000b21a:	c2 08       	rjmp	8000b25a <_vfprintf_r+0x5aa>
8000b21c:	fa c8 f9 50 	sub	r8,sp,-1712
8000b220:	1a d8       	st.w	--sp,r8
8000b222:	fa c8 fa b8 	sub	r8,sp,-1352
8000b226:	0c 9b       	mov	r11,r6
8000b228:	1a d8       	st.w	--sp,r8
8000b22a:	fa c8 fb b4 	sub	r8,sp,-1100
8000b22e:	1a d8       	st.w	--sp,r8
8000b230:	fa c9 ff b4 	sub	r9,sp,-76
8000b234:	fa c8 f9 40 	sub	r8,sp,-1728
8000b238:	04 9a       	mov	r10,r2
8000b23a:	08 9c       	mov	r12,r4
8000b23c:	f0 1f 01 03 	mcall	8000b648 <_vfprintf_r+0x998>
8000b240:	2f dd       	sub	sp,-12
8000b242:	78 1b       	ld.w	r11,r12[0x4]
8000b244:	78 09       	ld.w	r9,r12[0x0]
8000b246:	c2 b8       	rjmp	8000b29c <_vfprintf_r+0x5ec>
8000b248:	ee ca ff ff 	sub	r10,r7,-1
8000b24c:	10 37       	cp.w	r7,r8
8000b24e:	c0 b4       	brge	8000b264 <_vfprintf_r+0x5b4>
8000b250:	fa c9 f9 44 	sub	r9,sp,-1724
8000b254:	14 97       	mov	r7,r10
8000b256:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000b25a:	ec fb fd 8c 	ld.w	r11,r6[-628]
8000b25e:	ec f9 fd 88 	ld.w	r9,r6[-632]
8000b262:	c1 d8       	rjmp	8000b29c <_vfprintf_r+0x5ec>
8000b264:	41 09       	lddsp	r9,sp[0x40]
8000b266:	59 f8       	cp.w	r8,31
8000b268:	e0 89 00 14 	brgt	8000b290 <_vfprintf_r+0x5e0>
8000b26c:	f2 cb ff f8 	sub	r11,r9,-8
8000b270:	51 0b       	stdsp	sp[0x40],r11
8000b272:	fa c6 f9 44 	sub	r6,sp,-1724
8000b276:	72 1b       	ld.w	r11,r9[0x4]
8000b278:	ec 08 00 3c 	add	r12,r6,r8<<0x3
8000b27c:	72 09       	ld.w	r9,r9[0x0]
8000b27e:	f9 4b fd 8c 	st.w	r12[-628],r11
8000b282:	f9 49 fd 88 	st.w	r12[-632],r9
8000b286:	2f f8       	sub	r8,-1
8000b288:	14 97       	mov	r7,r10
8000b28a:	fb 48 06 b4 	st.w	sp[1716],r8
8000b28e:	c0 78       	rjmp	8000b29c <_vfprintf_r+0x5ec>
8000b290:	f2 c8 ff f8 	sub	r8,r9,-8
8000b294:	72 1b       	ld.w	r11,r9[0x4]
8000b296:	14 97       	mov	r7,r10
8000b298:	51 08       	stdsp	sp[0x40],r8
8000b29a:	72 09       	ld.w	r9,r9[0x0]
8000b29c:	16 98       	mov	r8,r11
8000b29e:	fa e9 00 00 	st.d	sp[0],r8
8000b2a2:	ca e8       	rjmp	8000b3fe <_vfprintf_r+0x74e>
8000b2a4:	ed b5 00 04 	bld	r5,0x4
8000b2a8:	c1 71       	brne	8000b2d6 <_vfprintf_r+0x626>
8000b2aa:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000b2ae:	40 3e       	lddsp	lr,sp[0xc]
8000b2b0:	58 0e       	cp.w	lr,0
8000b2b2:	c0 80       	breq	8000b2c2 <_vfprintf_r+0x612>
8000b2b4:	10 36       	cp.w	r6,r8
8000b2b6:	c6 94       	brge	8000b388 <_vfprintf_r+0x6d8>
8000b2b8:	fa cc f9 44 	sub	r12,sp,-1724
8000b2bc:	f8 06 00 36 	add	r6,r12,r6<<0x3
8000b2c0:	c8 28       	rjmp	8000b3c4 <_vfprintf_r+0x714>
8000b2c2:	ee ca ff ff 	sub	r10,r7,-1
8000b2c6:	10 37       	cp.w	r7,r8
8000b2c8:	e0 84 00 81 	brge	8000b3ca <_vfprintf_r+0x71a>
8000b2cc:	fa cb f9 44 	sub	r11,sp,-1724
8000b2d0:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000b2d4:	c7 78       	rjmp	8000b3c2 <_vfprintf_r+0x712>
8000b2d6:	ed b5 00 06 	bld	r5,0x6
8000b2da:	c4 b1       	brne	8000b370 <_vfprintf_r+0x6c0>
8000b2dc:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000b2e0:	40 3c       	lddsp	r12,sp[0xc]
8000b2e2:	58 0c       	cp.w	r12,0
8000b2e4:	c1 d0       	breq	8000b31e <_vfprintf_r+0x66e>
8000b2e6:	10 36       	cp.w	r6,r8
8000b2e8:	c0 64       	brge	8000b2f4 <_vfprintf_r+0x644>
8000b2ea:	fa cb f9 44 	sub	r11,sp,-1724
8000b2ee:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000b2f2:	c1 f8       	rjmp	8000b330 <_vfprintf_r+0x680>
8000b2f4:	fa c8 f9 50 	sub	r8,sp,-1712
8000b2f8:	1a d8       	st.w	--sp,r8
8000b2fa:	fa c8 fa b8 	sub	r8,sp,-1352
8000b2fe:	1a d8       	st.w	--sp,r8
8000b300:	fa c8 fb b4 	sub	r8,sp,-1100
8000b304:	1a d8       	st.w	--sp,r8
8000b306:	fa c8 f9 40 	sub	r8,sp,-1728
8000b30a:	fa c9 ff b4 	sub	r9,sp,-76
8000b30e:	04 9a       	mov	r10,r2
8000b310:	0c 9b       	mov	r11,r6
8000b312:	08 9c       	mov	r12,r4
8000b314:	f0 1f 00 cd 	mcall	8000b648 <_vfprintf_r+0x998>
8000b318:	2f dd       	sub	sp,-12
8000b31a:	98 18       	ld.sh	r8,r12[0x2]
8000b31c:	c2 68       	rjmp	8000b368 <_vfprintf_r+0x6b8>
8000b31e:	ee ca ff ff 	sub	r10,r7,-1
8000b322:	10 37       	cp.w	r7,r8
8000b324:	c0 94       	brge	8000b336 <_vfprintf_r+0x686>
8000b326:	fa c9 f9 44 	sub	r9,sp,-1724
8000b32a:	14 97       	mov	r7,r10
8000b32c:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000b330:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
8000b334:	c1 a8       	rjmp	8000b368 <_vfprintf_r+0x6b8>
8000b336:	41 09       	lddsp	r9,sp[0x40]
8000b338:	59 f8       	cp.w	r8,31
8000b33a:	e0 89 00 13 	brgt	8000b360 <_vfprintf_r+0x6b0>
8000b33e:	f2 cb ff fc 	sub	r11,r9,-4
8000b342:	51 0b       	stdsp	sp[0x40],r11
8000b344:	72 09       	ld.w	r9,r9[0x0]
8000b346:	fa c6 f9 44 	sub	r6,sp,-1724
8000b34a:	ec 08 00 3b 	add	r11,r6,r8<<0x3
8000b34e:	2f f8       	sub	r8,-1
8000b350:	f7 49 fd 88 	st.w	r11[-632],r9
8000b354:	fb 48 06 b4 	st.w	sp[1716],r8
8000b358:	14 97       	mov	r7,r10
8000b35a:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
8000b35e:	c0 58       	rjmp	8000b368 <_vfprintf_r+0x6b8>
8000b360:	92 18       	ld.sh	r8,r9[0x2]
8000b362:	14 97       	mov	r7,r10
8000b364:	2f c9       	sub	r9,-4
8000b366:	51 09       	stdsp	sp[0x40],r9
8000b368:	50 18       	stdsp	sp[0x4],r8
8000b36a:	bf 58       	asr	r8,0x1f
8000b36c:	50 08       	stdsp	sp[0x0],r8
8000b36e:	c4 88       	rjmp	8000b3fe <_vfprintf_r+0x74e>
8000b370:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000b374:	40 3c       	lddsp	r12,sp[0xc]
8000b376:	58 0c       	cp.w	r12,0
8000b378:	c1 d0       	breq	8000b3b2 <_vfprintf_r+0x702>
8000b37a:	10 36       	cp.w	r6,r8
8000b37c:	c0 64       	brge	8000b388 <_vfprintf_r+0x6d8>
8000b37e:	fa cb f9 44 	sub	r11,sp,-1724
8000b382:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000b386:	c1 f8       	rjmp	8000b3c4 <_vfprintf_r+0x714>
8000b388:	fa c8 f9 50 	sub	r8,sp,-1712
8000b38c:	1a d8       	st.w	--sp,r8
8000b38e:	fa c8 fa b8 	sub	r8,sp,-1352
8000b392:	0c 9b       	mov	r11,r6
8000b394:	1a d8       	st.w	--sp,r8
8000b396:	fa c8 fb b4 	sub	r8,sp,-1100
8000b39a:	04 9a       	mov	r10,r2
8000b39c:	1a d8       	st.w	--sp,r8
8000b39e:	08 9c       	mov	r12,r4
8000b3a0:	fa c8 f9 40 	sub	r8,sp,-1728
8000b3a4:	fa c9 ff b4 	sub	r9,sp,-76
8000b3a8:	f0 1f 00 a8 	mcall	8000b648 <_vfprintf_r+0x998>
8000b3ac:	2f dd       	sub	sp,-12
8000b3ae:	78 0b       	ld.w	r11,r12[0x0]
8000b3b0:	c2 48       	rjmp	8000b3f8 <_vfprintf_r+0x748>
8000b3b2:	ee ca ff ff 	sub	r10,r7,-1
8000b3b6:	10 37       	cp.w	r7,r8
8000b3b8:	c0 94       	brge	8000b3ca <_vfprintf_r+0x71a>
8000b3ba:	fa c9 f9 44 	sub	r9,sp,-1724
8000b3be:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000b3c2:	14 97       	mov	r7,r10
8000b3c4:	ec fb fd 88 	ld.w	r11,r6[-632]
8000b3c8:	c1 88       	rjmp	8000b3f8 <_vfprintf_r+0x748>
8000b3ca:	41 09       	lddsp	r9,sp[0x40]
8000b3cc:	59 f8       	cp.w	r8,31
8000b3ce:	e0 89 00 11 	brgt	8000b3f0 <_vfprintf_r+0x740>
8000b3d2:	f2 cb ff fc 	sub	r11,r9,-4
8000b3d6:	51 0b       	stdsp	sp[0x40],r11
8000b3d8:	fa c6 f9 44 	sub	r6,sp,-1724
8000b3dc:	72 0b       	ld.w	r11,r9[0x0]
8000b3de:	ec 08 00 39 	add	r9,r6,r8<<0x3
8000b3e2:	f3 4b fd 88 	st.w	r9[-632],r11
8000b3e6:	2f f8       	sub	r8,-1
8000b3e8:	14 97       	mov	r7,r10
8000b3ea:	fb 48 06 b4 	st.w	sp[1716],r8
8000b3ee:	c0 58       	rjmp	8000b3f8 <_vfprintf_r+0x748>
8000b3f0:	72 0b       	ld.w	r11,r9[0x0]
8000b3f2:	14 97       	mov	r7,r10
8000b3f4:	2f c9       	sub	r9,-4
8000b3f6:	51 09       	stdsp	sp[0x40],r9
8000b3f8:	50 1b       	stdsp	sp[0x4],r11
8000b3fa:	bf 5b       	asr	r11,0x1f
8000b3fc:	50 0b       	stdsp	sp[0x0],r11
8000b3fe:	fa ea 00 00 	ld.d	r10,sp[0]
8000b402:	58 0a       	cp.w	r10,0
8000b404:	5c 2b       	cpc	r11
8000b406:	c0 e4       	brge	8000b422 <_vfprintf_r+0x772>
8000b408:	30 08       	mov	r8,0
8000b40a:	fa ea 00 00 	ld.d	r10,sp[0]
8000b40e:	30 09       	mov	r9,0
8000b410:	f0 0a 01 0a 	sub	r10,r8,r10
8000b414:	f2 0b 01 4b 	sbc	r11,r9,r11
8000b418:	32 d8       	mov	r8,45
8000b41a:	fa eb 00 00 	st.d	sp[0],r10
8000b41e:	fb 68 06 bb 	st.b	sp[1723],r8
8000b422:	30 18       	mov	r8,1
8000b424:	e0 8f 07 1c 	bral	8000c25c <_vfprintf_r+0x15ac>
8000b428:	50 a7       	stdsp	sp[0x28],r7
8000b42a:	50 80       	stdsp	sp[0x20],r0
8000b42c:	0c 97       	mov	r7,r6
8000b42e:	04 94       	mov	r4,r2
8000b430:	06 96       	mov	r6,r3
8000b432:	02 92       	mov	r2,r1
8000b434:	40 93       	lddsp	r3,sp[0x24]
8000b436:	10 90       	mov	r0,r8
8000b438:	40 41       	lddsp	r1,sp[0x10]
8000b43a:	0e 99       	mov	r9,r7
8000b43c:	ed b5 00 03 	bld	r5,0x3
8000b440:	c4 11       	brne	8000b4c2 <_vfprintf_r+0x812>
8000b442:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000b446:	40 3a       	lddsp	r10,sp[0xc]
8000b448:	58 0a       	cp.w	r10,0
8000b44a:	c1 90       	breq	8000b47c <_vfprintf_r+0x7cc>
8000b44c:	10 36       	cp.w	r6,r8
8000b44e:	c6 45       	brlt	8000b516 <_vfprintf_r+0x866>
8000b450:	fa c8 f9 50 	sub	r8,sp,-1712
8000b454:	1a d8       	st.w	--sp,r8
8000b456:	fa c8 fa b8 	sub	r8,sp,-1352
8000b45a:	1a d8       	st.w	--sp,r8
8000b45c:	fa c8 fb b4 	sub	r8,sp,-1100
8000b460:	0c 9b       	mov	r11,r6
8000b462:	1a d8       	st.w	--sp,r8
8000b464:	04 9a       	mov	r10,r2
8000b466:	fa c8 f9 40 	sub	r8,sp,-1728
8000b46a:	fa c9 ff b4 	sub	r9,sp,-76
8000b46e:	08 9c       	mov	r12,r4
8000b470:	f0 1f 00 76 	mcall	8000b648 <_vfprintf_r+0x998>
8000b474:	2f dd       	sub	sp,-12
8000b476:	78 16       	ld.w	r6,r12[0x4]
8000b478:	50 76       	stdsp	sp[0x1c],r6
8000b47a:	c4 88       	rjmp	8000b50a <_vfprintf_r+0x85a>
8000b47c:	2f f7       	sub	r7,-1
8000b47e:	10 39       	cp.w	r9,r8
8000b480:	c0 c4       	brge	8000b498 <_vfprintf_r+0x7e8>
8000b482:	fa ce f9 44 	sub	lr,sp,-1724
8000b486:	fc 06 00 36 	add	r6,lr,r6<<0x3
8000b48a:	ec fc fd 8c 	ld.w	r12,r6[-628]
8000b48e:	50 7c       	stdsp	sp[0x1c],r12
8000b490:	ec f6 fd 88 	ld.w	r6,r6[-632]
8000b494:	50 56       	stdsp	sp[0x14],r6
8000b496:	c6 68       	rjmp	8000b562 <_vfprintf_r+0x8b2>
8000b498:	41 09       	lddsp	r9,sp[0x40]
8000b49a:	59 f8       	cp.w	r8,31
8000b49c:	e0 89 00 10 	brgt	8000b4bc <_vfprintf_r+0x80c>
8000b4a0:	f2 ca ff f8 	sub	r10,r9,-8
8000b4a4:	72 1b       	ld.w	r11,r9[0x4]
8000b4a6:	51 0a       	stdsp	sp[0x40],r10
8000b4a8:	72 09       	ld.w	r9,r9[0x0]
8000b4aa:	fa ca f9 44 	sub	r10,sp,-1724
8000b4ae:	50 7b       	stdsp	sp[0x1c],r11
8000b4b0:	50 59       	stdsp	sp[0x14],r9
8000b4b2:	f4 08 00 39 	add	r9,r10,r8<<0x3
8000b4b6:	40 5b       	lddsp	r11,sp[0x14]
8000b4b8:	40 7a       	lddsp	r10,sp[0x1c]
8000b4ba:	c4 78       	rjmp	8000b548 <_vfprintf_r+0x898>
8000b4bc:	72 18       	ld.w	r8,r9[0x4]
8000b4be:	50 78       	stdsp	sp[0x1c],r8
8000b4c0:	c4 c8       	rjmp	8000b558 <_vfprintf_r+0x8a8>
8000b4c2:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000b4c6:	40 3e       	lddsp	lr,sp[0xc]
8000b4c8:	58 0e       	cp.w	lr,0
8000b4ca:	c2 30       	breq	8000b510 <_vfprintf_r+0x860>
8000b4cc:	10 36       	cp.w	r6,r8
8000b4ce:	c0 94       	brge	8000b4e0 <_vfprintf_r+0x830>
8000b4d0:	fa cc f9 44 	sub	r12,sp,-1724
8000b4d4:	f8 06 00 36 	add	r6,r12,r6<<0x3
8000b4d8:	ec fb fd 8c 	ld.w	r11,r6[-628]
8000b4dc:	50 7b       	stdsp	sp[0x1c],r11
8000b4de:	cd 9b       	rjmp	8000b490 <_vfprintf_r+0x7e0>
8000b4e0:	fa c8 f9 50 	sub	r8,sp,-1712
8000b4e4:	1a d8       	st.w	--sp,r8
8000b4e6:	fa c8 fa b8 	sub	r8,sp,-1352
8000b4ea:	04 9a       	mov	r10,r2
8000b4ec:	1a d8       	st.w	--sp,r8
8000b4ee:	fa c8 fb b4 	sub	r8,sp,-1100
8000b4f2:	0c 9b       	mov	r11,r6
8000b4f4:	1a d8       	st.w	--sp,r8
8000b4f6:	08 9c       	mov	r12,r4
8000b4f8:	fa c8 f9 40 	sub	r8,sp,-1728
8000b4fc:	fa c9 ff b4 	sub	r9,sp,-76
8000b500:	f0 1f 00 52 	mcall	8000b648 <_vfprintf_r+0x998>
8000b504:	2f dd       	sub	sp,-12
8000b506:	78 1a       	ld.w	r10,r12[0x4]
8000b508:	50 7a       	stdsp	sp[0x1c],r10
8000b50a:	78 0c       	ld.w	r12,r12[0x0]
8000b50c:	50 5c       	stdsp	sp[0x14],r12
8000b50e:	c2 a8       	rjmp	8000b562 <_vfprintf_r+0x8b2>
8000b510:	2f f7       	sub	r7,-1
8000b512:	10 39       	cp.w	r9,r8
8000b514:	c0 94       	brge	8000b526 <_vfprintf_r+0x876>
8000b516:	fa c9 f9 44 	sub	r9,sp,-1724
8000b51a:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000b51e:	ec f8 fd 8c 	ld.w	r8,r6[-628]
8000b522:	50 78       	stdsp	sp[0x1c],r8
8000b524:	cb 6b       	rjmp	8000b490 <_vfprintf_r+0x7e0>
8000b526:	41 09       	lddsp	r9,sp[0x40]
8000b528:	59 f8       	cp.w	r8,31
8000b52a:	e0 89 00 15 	brgt	8000b554 <_vfprintf_r+0x8a4>
8000b52e:	f2 ca ff f8 	sub	r10,r9,-8
8000b532:	72 16       	ld.w	r6,r9[0x4]
8000b534:	72 09       	ld.w	r9,r9[0x0]
8000b536:	51 0a       	stdsp	sp[0x40],r10
8000b538:	50 59       	stdsp	sp[0x14],r9
8000b53a:	fa ce f9 44 	sub	lr,sp,-1724
8000b53e:	50 76       	stdsp	sp[0x1c],r6
8000b540:	fc 08 00 39 	add	r9,lr,r8<<0x3
8000b544:	40 5b       	lddsp	r11,sp[0x14]
8000b546:	0c 9a       	mov	r10,r6
8000b548:	f2 eb fd 88 	st.d	r9[-632],r10
8000b54c:	2f f8       	sub	r8,-1
8000b54e:	fb 48 06 b4 	st.w	sp[1716],r8
8000b552:	c0 88       	rjmp	8000b562 <_vfprintf_r+0x8b2>
8000b554:	72 1c       	ld.w	r12,r9[0x4]
8000b556:	50 7c       	stdsp	sp[0x1c],r12
8000b558:	f2 c8 ff f8 	sub	r8,r9,-8
8000b55c:	51 08       	stdsp	sp[0x40],r8
8000b55e:	72 09       	ld.w	r9,r9[0x0]
8000b560:	50 59       	stdsp	sp[0x14],r9
8000b562:	40 5b       	lddsp	r11,sp[0x14]
8000b564:	40 7a       	lddsp	r10,sp[0x1c]
8000b566:	f0 1f 00 3a 	mcall	8000b64c <_vfprintf_r+0x99c>
8000b56a:	18 96       	mov	r6,r12
8000b56c:	c1 50       	breq	8000b596 <_vfprintf_r+0x8e6>
8000b56e:	30 08       	mov	r8,0
8000b570:	30 09       	mov	r9,0
8000b572:	40 5b       	lddsp	r11,sp[0x14]
8000b574:	40 7a       	lddsp	r10,sp[0x1c]
8000b576:	f0 1f 00 37 	mcall	8000b650 <_vfprintf_r+0x9a0>
8000b57a:	c0 40       	breq	8000b582 <_vfprintf_r+0x8d2>
8000b57c:	32 d8       	mov	r8,45
8000b57e:	fb 68 06 bb 	st.b	sp[1723],r8
8000b582:	4b 58       	lddpc	r8,8000b654 <_vfprintf_r+0x9a4>
8000b584:	4b 56       	lddpc	r6,8000b658 <_vfprintf_r+0x9a8>
8000b586:	a7 d5       	cbr	r5,0x7
8000b588:	e0 40 00 47 	cp.w	r0,71
8000b58c:	f0 06 17 a0 	movle	r6,r8
8000b590:	30 32       	mov	r2,3
8000b592:	e0 8f 06 f2 	bral	8000c376 <_vfprintf_r+0x16c6>
8000b596:	40 5b       	lddsp	r11,sp[0x14]
8000b598:	40 7a       	lddsp	r10,sp[0x1c]
8000b59a:	f0 1f 00 31 	mcall	8000b65c <_vfprintf_r+0x9ac>
8000b59e:	c0 c0       	breq	8000b5b6 <_vfprintf_r+0x906>
8000b5a0:	50 26       	stdsp	sp[0x8],r6
8000b5a2:	4b 08       	lddpc	r8,8000b660 <_vfprintf_r+0x9b0>
8000b5a4:	4b 06       	lddpc	r6,8000b664 <_vfprintf_r+0x9b4>
8000b5a6:	a7 d5       	cbr	r5,0x7
8000b5a8:	e0 40 00 47 	cp.w	r0,71
8000b5ac:	f0 06 17 a0 	movle	r6,r8
8000b5b0:	30 32       	mov	r2,3
8000b5b2:	e0 8f 06 e8 	bral	8000c382 <_vfprintf_r+0x16d2>
8000b5b6:	40 2a       	lddsp	r10,sp[0x8]
8000b5b8:	5b fa       	cp.w	r10,-1
8000b5ba:	c0 41       	brne	8000b5c2 <_vfprintf_r+0x912>
8000b5bc:	30 69       	mov	r9,6
8000b5be:	50 29       	stdsp	sp[0x8],r9
8000b5c0:	c1 18       	rjmp	8000b5e2 <_vfprintf_r+0x932>
8000b5c2:	e0 40 00 47 	cp.w	r0,71
8000b5c6:	5f 09       	sreq	r9
8000b5c8:	e0 40 00 67 	cp.w	r0,103
8000b5cc:	5f 08       	sreq	r8
8000b5ce:	f3 e8 10 08 	or	r8,r9,r8
8000b5d2:	f8 08 18 00 	cp.b	r8,r12
8000b5d6:	c0 60       	breq	8000b5e2 <_vfprintf_r+0x932>
8000b5d8:	40 28       	lddsp	r8,sp[0x8]
8000b5da:	58 08       	cp.w	r8,0
8000b5dc:	f9 b8 00 01 	moveq	r8,1
8000b5e0:	50 28       	stdsp	sp[0x8],r8
8000b5e2:	40 78       	lddsp	r8,sp[0x1c]
8000b5e4:	40 59       	lddsp	r9,sp[0x14]
8000b5e6:	fa e9 06 94 	st.d	sp[1684],r8
8000b5ea:	a9 a5       	sbr	r5,0x8
8000b5ec:	fa f8 06 94 	ld.w	r8,sp[1684]
8000b5f0:	58 08       	cp.w	r8,0
8000b5f2:	c0 65       	brlt	8000b5fe <_vfprintf_r+0x94e>
8000b5f4:	40 5e       	lddsp	lr,sp[0x14]
8000b5f6:	30 0c       	mov	r12,0
8000b5f8:	50 6e       	stdsp	sp[0x18],lr
8000b5fa:	50 9c       	stdsp	sp[0x24],r12
8000b5fc:	c0 78       	rjmp	8000b60a <_vfprintf_r+0x95a>
8000b5fe:	40 5b       	lddsp	r11,sp[0x14]
8000b600:	32 da       	mov	r10,45
8000b602:	ee 1b 80 00 	eorh	r11,0x8000
8000b606:	50 9a       	stdsp	sp[0x24],r10
8000b608:	50 6b       	stdsp	sp[0x18],r11
8000b60a:	e0 40 00 46 	cp.w	r0,70
8000b60e:	5f 09       	sreq	r9
8000b610:	e0 40 00 66 	cp.w	r0,102
8000b614:	5f 08       	sreq	r8
8000b616:	f3 e8 10 08 	or	r8,r9,r8
8000b61a:	50 48       	stdsp	sp[0x10],r8
8000b61c:	c0 40       	breq	8000b624 <_vfprintf_r+0x974>
8000b61e:	40 22       	lddsp	r2,sp[0x8]
8000b620:	30 39       	mov	r9,3
8000b622:	c2 58       	rjmp	8000b66c <_vfprintf_r+0x9bc>
8000b624:	e0 40 00 45 	cp.w	r0,69
8000b628:	5f 09       	sreq	r9
8000b62a:	e0 40 00 65 	cp.w	r0,101
8000b62e:	5f 08       	sreq	r8
8000b630:	40 2b       	lddsp	r11,sp[0x8]
8000b632:	10 49       	or	r9,r8
8000b634:	2f fb       	sub	r11,-1
8000b636:	40 22       	lddsp	r2,sp[0x8]
8000b638:	30 2a       	mov	r10,2
8000b63a:	40 46       	lddsp	r6,sp[0x10]
8000b63c:	ec 09 18 00 	cp.b	r9,r6
8000b640:	c1 41       	brne	8000b668 <_vfprintf_r+0x9b8>
8000b642:	14 99       	mov	r9,r10
8000b644:	c1 48       	rjmp	8000b66c <_vfprintf_r+0x9bc>
8000b646:	00 00       	add	r0,r0
8000b648:	80 00       	ld.sh	r0,r0[0x0]
8000b64a:	a9 6c       	lsl	r12,0x8
8000b64c:	80 00       	ld.sh	r0,r0[0x0]
8000b64e:	e8 20 80 00 	sub	r0,557056
8000b652:	ec 98 80 01 	brls	801bb654 <_data_lma+0x1ab354>
8000b656:	00 0c       	add	r12,r0
8000b658:	80 01       	ld.sh	r1,r0[0x0]
8000b65a:	00 10       	sub	r0,r0
8000b65c:	80 00       	ld.sh	r0,r0[0x0]
8000b65e:	e8 4c 80 01 	cp.w	r12,557057
8000b662:	00 14       	sub	r4,r0
8000b664:	80 01       	ld.sh	r1,r0[0x0]
8000b666:	00 18       	sub	r8,r0
8000b668:	16 92       	mov	r2,r11
8000b66a:	14 99       	mov	r9,r10
8000b66c:	fa c8 f9 5c 	sub	r8,sp,-1700
8000b670:	1a d8       	st.w	--sp,r8
8000b672:	fa c8 f9 54 	sub	r8,sp,-1708
8000b676:	1a d8       	st.w	--sp,r8
8000b678:	fa c8 f9 4c 	sub	r8,sp,-1716
8000b67c:	08 9c       	mov	r12,r4
8000b67e:	1a d8       	st.w	--sp,r8
8000b680:	04 98       	mov	r8,r2
8000b682:	40 9b       	lddsp	r11,sp[0x24]
8000b684:	40 aa       	lddsp	r10,sp[0x28]
8000b686:	f0 1f 01 e4 	mcall	8000be14 <_vfprintf_r+0x1164>
8000b68a:	e0 40 00 47 	cp.w	r0,71
8000b68e:	5f 19       	srne	r9
8000b690:	e0 40 00 67 	cp.w	r0,103
8000b694:	5f 18       	srne	r8
8000b696:	18 96       	mov	r6,r12
8000b698:	2f dd       	sub	sp,-12
8000b69a:	f3 e8 00 08 	and	r8,r9,r8
8000b69e:	c0 41       	brne	8000b6a6 <_vfprintf_r+0x9f6>
8000b6a0:	ed b5 00 00 	bld	r5,0x0
8000b6a4:	c3 11       	brne	8000b706 <_vfprintf_r+0xa56>
8000b6a6:	ec 02 00 0e 	add	lr,r6,r2
8000b6aa:	50 3e       	stdsp	sp[0xc],lr
8000b6ac:	40 4c       	lddsp	r12,sp[0x10]
8000b6ae:	58 0c       	cp.w	r12,0
8000b6b0:	c1 60       	breq	8000b6dc <_vfprintf_r+0xa2c>
8000b6b2:	0d 89       	ld.ub	r9,r6[0x0]
8000b6b4:	33 08       	mov	r8,48
8000b6b6:	f0 09 18 00 	cp.b	r9,r8
8000b6ba:	c0 c1       	brne	8000b6d2 <_vfprintf_r+0xa22>
8000b6bc:	30 08       	mov	r8,0
8000b6be:	30 09       	mov	r9,0
8000b6c0:	40 6b       	lddsp	r11,sp[0x18]
8000b6c2:	40 7a       	lddsp	r10,sp[0x1c]
8000b6c4:	f0 1f 01 d5 	mcall	8000be18 <_vfprintf_r+0x1168>
8000b6c8:	c0 51       	brne	8000b6d2 <_vfprintf_r+0xa22>
8000b6ca:	e4 02 11 01 	rsub	r2,r2,1
8000b6ce:	fb 42 06 ac 	st.w	sp[1708],r2
8000b6d2:	40 3b       	lddsp	r11,sp[0xc]
8000b6d4:	fa f8 06 ac 	ld.w	r8,sp[1708]
8000b6d8:	10 0b       	add	r11,r8
8000b6da:	50 3b       	stdsp	sp[0xc],r11
8000b6dc:	40 6b       	lddsp	r11,sp[0x18]
8000b6de:	30 08       	mov	r8,0
8000b6e0:	30 09       	mov	r9,0
8000b6e2:	40 7a       	lddsp	r10,sp[0x1c]
8000b6e4:	f0 1f 01 cd 	mcall	8000be18 <_vfprintf_r+0x1168>
8000b6e8:	c0 90       	breq	8000b6fa <_vfprintf_r+0xa4a>
8000b6ea:	40 3a       	lddsp	r10,sp[0xc]
8000b6ec:	fb 4a 06 a4 	st.w	sp[1700],r10
8000b6f0:	c0 58       	rjmp	8000b6fa <_vfprintf_r+0xa4a>
8000b6f2:	10 c9       	st.b	r8++,r9
8000b6f4:	fb 48 06 a4 	st.w	sp[1700],r8
8000b6f8:	c0 28       	rjmp	8000b6fc <_vfprintf_r+0xa4c>
8000b6fa:	33 09       	mov	r9,48
8000b6fc:	fa f8 06 a4 	ld.w	r8,sp[1700]
8000b700:	40 3e       	lddsp	lr,sp[0xc]
8000b702:	1c 38       	cp.w	r8,lr
8000b704:	cf 73       	brcs	8000b6f2 <_vfprintf_r+0xa42>
8000b706:	e0 40 00 47 	cp.w	r0,71
8000b70a:	5f 09       	sreq	r9
8000b70c:	e0 40 00 67 	cp.w	r0,103
8000b710:	5f 08       	sreq	r8
8000b712:	f3 e8 10 08 	or	r8,r9,r8
8000b716:	fa f9 06 a4 	ld.w	r9,sp[1700]
8000b71a:	0c 19       	sub	r9,r6
8000b71c:	50 69       	stdsp	sp[0x18],r9
8000b71e:	58 08       	cp.w	r8,0
8000b720:	c0 b0       	breq	8000b736 <_vfprintf_r+0xa86>
8000b722:	fa f8 06 ac 	ld.w	r8,sp[1708]
8000b726:	5b d8       	cp.w	r8,-3
8000b728:	c0 55       	brlt	8000b732 <_vfprintf_r+0xa82>
8000b72a:	40 2c       	lddsp	r12,sp[0x8]
8000b72c:	18 38       	cp.w	r8,r12
8000b72e:	e0 8a 00 6a 	brle	8000b802 <_vfprintf_r+0xb52>
8000b732:	20 20       	sub	r0,2
8000b734:	c0 58       	rjmp	8000b73e <_vfprintf_r+0xa8e>
8000b736:	e0 40 00 65 	cp.w	r0,101
8000b73a:	e0 89 00 46 	brgt	8000b7c6 <_vfprintf_r+0xb16>
8000b73e:	fa fb 06 ac 	ld.w	r11,sp[1708]
8000b742:	fb 60 06 9c 	st.b	sp[1692],r0
8000b746:	20 1b       	sub	r11,1
8000b748:	fb 4b 06 ac 	st.w	sp[1708],r11
8000b74c:	c0 47       	brpl	8000b754 <_vfprintf_r+0xaa4>
8000b74e:	5c 3b       	neg	r11
8000b750:	32 d8       	mov	r8,45
8000b752:	c0 28       	rjmp	8000b756 <_vfprintf_r+0xaa6>
8000b754:	32 b8       	mov	r8,43
8000b756:	fb 68 06 9d 	st.b	sp[1693],r8
8000b75a:	58 9b       	cp.w	r11,9
8000b75c:	e0 8a 00 1d 	brle	8000b796 <_vfprintf_r+0xae6>
8000b760:	fa c9 fa 35 	sub	r9,sp,-1483
8000b764:	30 aa       	mov	r10,10
8000b766:	12 98       	mov	r8,r9
8000b768:	0e 9c       	mov	r12,r7
8000b76a:	0c 92       	mov	r2,r6
8000b76c:	f6 0a 0c 06 	divs	r6,r11,r10
8000b770:	0e 9b       	mov	r11,r7
8000b772:	2d 0b       	sub	r11,-48
8000b774:	10 fb       	st.b	--r8,r11
8000b776:	0c 9b       	mov	r11,r6
8000b778:	58 96       	cp.w	r6,9
8000b77a:	fe 99 ff f9 	brgt	8000b76c <_vfprintf_r+0xabc>
8000b77e:	2d 0b       	sub	r11,-48
8000b780:	18 97       	mov	r7,r12
8000b782:	04 96       	mov	r6,r2
8000b784:	10 fb       	st.b	--r8,r11
8000b786:	fa ca f9 62 	sub	r10,sp,-1694
8000b78a:	c0 38       	rjmp	8000b790 <_vfprintf_r+0xae0>
8000b78c:	11 3b       	ld.ub	r11,r8++
8000b78e:	14 cb       	st.b	r10++,r11
8000b790:	12 38       	cp.w	r8,r9
8000b792:	cf d3       	brcs	8000b78c <_vfprintf_r+0xadc>
8000b794:	c0 98       	rjmp	8000b7a6 <_vfprintf_r+0xaf6>
8000b796:	2d 0b       	sub	r11,-48
8000b798:	33 08       	mov	r8,48
8000b79a:	fb 6b 06 9f 	st.b	sp[1695],r11
8000b79e:	fb 68 06 9e 	st.b	sp[1694],r8
8000b7a2:	fa ca f9 60 	sub	r10,sp,-1696
8000b7a6:	fa c8 f9 64 	sub	r8,sp,-1692
8000b7aa:	f4 08 01 08 	sub	r8,r10,r8
8000b7ae:	50 e8       	stdsp	sp[0x38],r8
8000b7b0:	10 92       	mov	r2,r8
8000b7b2:	40 6b       	lddsp	r11,sp[0x18]
8000b7b4:	16 02       	add	r2,r11
8000b7b6:	58 1b       	cp.w	r11,1
8000b7b8:	e0 89 00 05 	brgt	8000b7c2 <_vfprintf_r+0xb12>
8000b7bc:	ed b5 00 00 	bld	r5,0x0
8000b7c0:	c3 c1       	brne	8000b838 <_vfprintf_r+0xb88>
8000b7c2:	2f f2       	sub	r2,-1
8000b7c4:	c3 a8       	rjmp	8000b838 <_vfprintf_r+0xb88>
8000b7c6:	e0 40 00 66 	cp.w	r0,102
8000b7ca:	c1 c1       	brne	8000b802 <_vfprintf_r+0xb52>
8000b7cc:	fa f2 06 ac 	ld.w	r2,sp[1708]
8000b7d0:	58 02       	cp.w	r2,0
8000b7d2:	e0 8a 00 0c 	brle	8000b7ea <_vfprintf_r+0xb3a>
8000b7d6:	40 2a       	lddsp	r10,sp[0x8]
8000b7d8:	58 0a       	cp.w	r10,0
8000b7da:	c0 41       	brne	8000b7e2 <_vfprintf_r+0xb32>
8000b7dc:	ed b5 00 00 	bld	r5,0x0
8000b7e0:	c2 c1       	brne	8000b838 <_vfprintf_r+0xb88>
8000b7e2:	2f f2       	sub	r2,-1
8000b7e4:	40 29       	lddsp	r9,sp[0x8]
8000b7e6:	12 02       	add	r2,r9
8000b7e8:	c0 b8       	rjmp	8000b7fe <_vfprintf_r+0xb4e>
8000b7ea:	40 28       	lddsp	r8,sp[0x8]
8000b7ec:	58 08       	cp.w	r8,0
8000b7ee:	c0 61       	brne	8000b7fa <_vfprintf_r+0xb4a>
8000b7f0:	ed b5 00 00 	bld	r5,0x0
8000b7f4:	c0 30       	breq	8000b7fa <_vfprintf_r+0xb4a>
8000b7f6:	30 12       	mov	r2,1
8000b7f8:	c2 08       	rjmp	8000b838 <_vfprintf_r+0xb88>
8000b7fa:	40 22       	lddsp	r2,sp[0x8]
8000b7fc:	2f e2       	sub	r2,-2
8000b7fe:	36 60       	mov	r0,102
8000b800:	c1 c8       	rjmp	8000b838 <_vfprintf_r+0xb88>
8000b802:	fa f2 06 ac 	ld.w	r2,sp[1708]
8000b806:	40 6e       	lddsp	lr,sp[0x18]
8000b808:	1c 32       	cp.w	r2,lr
8000b80a:	c0 d5       	brlt	8000b824 <_vfprintf_r+0xb74>
8000b80c:	e1 d5 c0 01 	bfextu	r0,r5,0x0,0x1
8000b810:	e4 c8 ff ff 	sub	r8,r2,-1
8000b814:	58 00       	cp.w	r0,0
8000b816:	f0 02 17 10 	movne	r2,r8
8000b81a:	f9 b0 01 67 	movne	r0,103
8000b81e:	f9 b0 00 67 	moveq	r0,103
8000b822:	c0 b8       	rjmp	8000b838 <_vfprintf_r+0xb88>
8000b824:	e4 08 11 02 	rsub	r8,r2,2
8000b828:	40 6c       	lddsp	r12,sp[0x18]
8000b82a:	58 02       	cp.w	r2,0
8000b82c:	f0 02 17 a0 	movle	r2,r8
8000b830:	f9 b2 09 01 	movgt	r2,1
8000b834:	36 70       	mov	r0,103
8000b836:	18 02       	add	r2,r12
8000b838:	40 9b       	lddsp	r11,sp[0x24]
8000b83a:	58 0b       	cp.w	r11,0
8000b83c:	e0 80 05 9d 	breq	8000c376 <_vfprintf_r+0x16c6>
8000b840:	32 d8       	mov	r8,45
8000b842:	fb 68 06 bb 	st.b	sp[1723],r8
8000b846:	e0 8f 05 9c 	bral	8000c37e <_vfprintf_r+0x16ce>
8000b84a:	50 a7       	stdsp	sp[0x28],r7
8000b84c:	04 94       	mov	r4,r2
8000b84e:	0c 97       	mov	r7,r6
8000b850:	02 92       	mov	r2,r1
8000b852:	06 96       	mov	r6,r3
8000b854:	40 41       	lddsp	r1,sp[0x10]
8000b856:	40 93       	lddsp	r3,sp[0x24]
8000b858:	0e 99       	mov	r9,r7
8000b85a:	ed b5 00 05 	bld	r5,0x5
8000b85e:	c4 81       	brne	8000b8ee <_vfprintf_r+0xc3e>
8000b860:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000b864:	40 3e       	lddsp	lr,sp[0xc]
8000b866:	58 0e       	cp.w	lr,0
8000b868:	c1 d0       	breq	8000b8a2 <_vfprintf_r+0xbf2>
8000b86a:	10 36       	cp.w	r6,r8
8000b86c:	c0 64       	brge	8000b878 <_vfprintf_r+0xbc8>
8000b86e:	fa cc f9 44 	sub	r12,sp,-1724
8000b872:	f8 06 00 36 	add	r6,r12,r6<<0x3
8000b876:	c1 d8       	rjmp	8000b8b0 <_vfprintf_r+0xc00>
8000b878:	fa c8 f9 50 	sub	r8,sp,-1712
8000b87c:	1a d8       	st.w	--sp,r8
8000b87e:	fa c8 fa b8 	sub	r8,sp,-1352
8000b882:	04 9a       	mov	r10,r2
8000b884:	1a d8       	st.w	--sp,r8
8000b886:	fa c8 fb b4 	sub	r8,sp,-1100
8000b88a:	0c 9b       	mov	r11,r6
8000b88c:	1a d8       	st.w	--sp,r8
8000b88e:	08 9c       	mov	r12,r4
8000b890:	fa c8 f9 40 	sub	r8,sp,-1728
8000b894:	fa c9 ff b4 	sub	r9,sp,-76
8000b898:	f0 1f 01 61 	mcall	8000be1c <_vfprintf_r+0x116c>
8000b89c:	2f dd       	sub	sp,-12
8000b89e:	78 0a       	ld.w	r10,r12[0x0]
8000b8a0:	c2 08       	rjmp	8000b8e0 <_vfprintf_r+0xc30>
8000b8a2:	2f f7       	sub	r7,-1
8000b8a4:	10 39       	cp.w	r9,r8
8000b8a6:	c0 84       	brge	8000b8b6 <_vfprintf_r+0xc06>
8000b8a8:	fa cb f9 44 	sub	r11,sp,-1724
8000b8ac:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000b8b0:	ec fa fd 88 	ld.w	r10,r6[-632]
8000b8b4:	c1 68       	rjmp	8000b8e0 <_vfprintf_r+0xc30>
8000b8b6:	41 09       	lddsp	r9,sp[0x40]
8000b8b8:	59 f8       	cp.w	r8,31
8000b8ba:	e0 89 00 10 	brgt	8000b8da <_vfprintf_r+0xc2a>
8000b8be:	f2 ca ff fc 	sub	r10,r9,-4
8000b8c2:	51 0a       	stdsp	sp[0x40],r10
8000b8c4:	fa c6 f9 44 	sub	r6,sp,-1724
8000b8c8:	72 0a       	ld.w	r10,r9[0x0]
8000b8ca:	ec 08 00 39 	add	r9,r6,r8<<0x3
8000b8ce:	f3 4a fd 88 	st.w	r9[-632],r10
8000b8d2:	2f f8       	sub	r8,-1
8000b8d4:	fb 48 06 b4 	st.w	sp[1716],r8
8000b8d8:	c0 48       	rjmp	8000b8e0 <_vfprintf_r+0xc30>
8000b8da:	72 0a       	ld.w	r10,r9[0x0]
8000b8dc:	2f c9       	sub	r9,-4
8000b8de:	51 09       	stdsp	sp[0x40],r9
8000b8e0:	40 be       	lddsp	lr,sp[0x2c]
8000b8e2:	1c 98       	mov	r8,lr
8000b8e4:	95 1e       	st.w	r10[0x4],lr
8000b8e6:	bf 58       	asr	r8,0x1f
8000b8e8:	95 08       	st.w	r10[0x0],r8
8000b8ea:	fe 9f fa 6e 	bral	8000adc6 <_vfprintf_r+0x116>
8000b8ee:	ed b5 00 04 	bld	r5,0x4
8000b8f2:	c4 80       	breq	8000b982 <_vfprintf_r+0xcd2>
8000b8f4:	e2 15 00 40 	andl	r5,0x40,COH
8000b8f8:	c4 50       	breq	8000b982 <_vfprintf_r+0xcd2>
8000b8fa:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000b8fe:	40 3c       	lddsp	r12,sp[0xc]
8000b900:	58 0c       	cp.w	r12,0
8000b902:	c1 d0       	breq	8000b93c <_vfprintf_r+0xc8c>
8000b904:	10 36       	cp.w	r6,r8
8000b906:	c0 64       	brge	8000b912 <_vfprintf_r+0xc62>
8000b908:	fa cb f9 44 	sub	r11,sp,-1724
8000b90c:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000b910:	c1 d8       	rjmp	8000b94a <_vfprintf_r+0xc9a>
8000b912:	fa c8 f9 50 	sub	r8,sp,-1712
8000b916:	1a d8       	st.w	--sp,r8
8000b918:	fa c8 fa b8 	sub	r8,sp,-1352
8000b91c:	04 9a       	mov	r10,r2
8000b91e:	1a d8       	st.w	--sp,r8
8000b920:	fa c8 fb b4 	sub	r8,sp,-1100
8000b924:	0c 9b       	mov	r11,r6
8000b926:	1a d8       	st.w	--sp,r8
8000b928:	08 9c       	mov	r12,r4
8000b92a:	fa c8 f9 40 	sub	r8,sp,-1728
8000b92e:	fa c9 ff b4 	sub	r9,sp,-76
8000b932:	f0 1f 01 3b 	mcall	8000be1c <_vfprintf_r+0x116c>
8000b936:	2f dd       	sub	sp,-12
8000b938:	78 0a       	ld.w	r10,r12[0x0]
8000b93a:	c2 08       	rjmp	8000b97a <_vfprintf_r+0xcca>
8000b93c:	2f f7       	sub	r7,-1
8000b93e:	10 39       	cp.w	r9,r8
8000b940:	c0 84       	brge	8000b950 <_vfprintf_r+0xca0>
8000b942:	fa ca f9 44 	sub	r10,sp,-1724
8000b946:	f4 06 00 36 	add	r6,r10,r6<<0x3
8000b94a:	ec fa fd 88 	ld.w	r10,r6[-632]
8000b94e:	c1 68       	rjmp	8000b97a <_vfprintf_r+0xcca>
8000b950:	41 09       	lddsp	r9,sp[0x40]
8000b952:	59 f8       	cp.w	r8,31
8000b954:	e0 89 00 10 	brgt	8000b974 <_vfprintf_r+0xcc4>
8000b958:	f2 ca ff fc 	sub	r10,r9,-4
8000b95c:	51 0a       	stdsp	sp[0x40],r10
8000b95e:	fa c6 f9 44 	sub	r6,sp,-1724
8000b962:	72 0a       	ld.w	r10,r9[0x0]
8000b964:	ec 08 00 39 	add	r9,r6,r8<<0x3
8000b968:	f3 4a fd 88 	st.w	r9[-632],r10
8000b96c:	2f f8       	sub	r8,-1
8000b96e:	fb 48 06 b4 	st.w	sp[1716],r8
8000b972:	c0 48       	rjmp	8000b97a <_vfprintf_r+0xcca>
8000b974:	72 0a       	ld.w	r10,r9[0x0]
8000b976:	2f c9       	sub	r9,-4
8000b978:	51 09       	stdsp	sp[0x40],r9
8000b97a:	40 be       	lddsp	lr,sp[0x2c]
8000b97c:	b4 0e       	st.h	r10[0x0],lr
8000b97e:	fe 9f fa 24 	bral	8000adc6 <_vfprintf_r+0x116>
8000b982:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000b986:	40 3c       	lddsp	r12,sp[0xc]
8000b988:	58 0c       	cp.w	r12,0
8000b98a:	c1 d0       	breq	8000b9c4 <_vfprintf_r+0xd14>
8000b98c:	10 36       	cp.w	r6,r8
8000b98e:	c0 64       	brge	8000b99a <_vfprintf_r+0xcea>
8000b990:	fa cb f9 44 	sub	r11,sp,-1724
8000b994:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000b998:	c1 d8       	rjmp	8000b9d2 <_vfprintf_r+0xd22>
8000b99a:	fa c8 f9 50 	sub	r8,sp,-1712
8000b99e:	1a d8       	st.w	--sp,r8
8000b9a0:	fa c8 fa b8 	sub	r8,sp,-1352
8000b9a4:	04 9a       	mov	r10,r2
8000b9a6:	1a d8       	st.w	--sp,r8
8000b9a8:	fa c8 fb b4 	sub	r8,sp,-1100
8000b9ac:	0c 9b       	mov	r11,r6
8000b9ae:	1a d8       	st.w	--sp,r8
8000b9b0:	08 9c       	mov	r12,r4
8000b9b2:	fa c8 f9 40 	sub	r8,sp,-1728
8000b9b6:	fa c9 ff b4 	sub	r9,sp,-76
8000b9ba:	f0 1f 01 19 	mcall	8000be1c <_vfprintf_r+0x116c>
8000b9be:	2f dd       	sub	sp,-12
8000b9c0:	78 0a       	ld.w	r10,r12[0x0]
8000b9c2:	c2 08       	rjmp	8000ba02 <_vfprintf_r+0xd52>
8000b9c4:	2f f7       	sub	r7,-1
8000b9c6:	10 39       	cp.w	r9,r8
8000b9c8:	c0 84       	brge	8000b9d8 <_vfprintf_r+0xd28>
8000b9ca:	fa ca f9 44 	sub	r10,sp,-1724
8000b9ce:	f4 06 00 36 	add	r6,r10,r6<<0x3
8000b9d2:	ec fa fd 88 	ld.w	r10,r6[-632]
8000b9d6:	c1 68       	rjmp	8000ba02 <_vfprintf_r+0xd52>
8000b9d8:	41 09       	lddsp	r9,sp[0x40]
8000b9da:	59 f8       	cp.w	r8,31
8000b9dc:	e0 89 00 10 	brgt	8000b9fc <_vfprintf_r+0xd4c>
8000b9e0:	f2 ca ff fc 	sub	r10,r9,-4
8000b9e4:	51 0a       	stdsp	sp[0x40],r10
8000b9e6:	fa c6 f9 44 	sub	r6,sp,-1724
8000b9ea:	72 0a       	ld.w	r10,r9[0x0]
8000b9ec:	ec 08 00 39 	add	r9,r6,r8<<0x3
8000b9f0:	f3 4a fd 88 	st.w	r9[-632],r10
8000b9f4:	2f f8       	sub	r8,-1
8000b9f6:	fb 48 06 b4 	st.w	sp[1716],r8
8000b9fa:	c0 48       	rjmp	8000ba02 <_vfprintf_r+0xd52>
8000b9fc:	72 0a       	ld.w	r10,r9[0x0]
8000b9fe:	2f c9       	sub	r9,-4
8000ba00:	51 09       	stdsp	sp[0x40],r9
8000ba02:	40 be       	lddsp	lr,sp[0x2c]
8000ba04:	95 0e       	st.w	r10[0x0],lr
8000ba06:	fe 9f f9 e0 	bral	8000adc6 <_vfprintf_r+0x116>
8000ba0a:	50 a7       	stdsp	sp[0x28],r7
8000ba0c:	50 80       	stdsp	sp[0x20],r0
8000ba0e:	0c 97       	mov	r7,r6
8000ba10:	04 94       	mov	r4,r2
8000ba12:	06 96       	mov	r6,r3
8000ba14:	02 92       	mov	r2,r1
8000ba16:	40 93       	lddsp	r3,sp[0x24]
8000ba18:	10 90       	mov	r0,r8
8000ba1a:	40 41       	lddsp	r1,sp[0x10]
8000ba1c:	a5 a5       	sbr	r5,0x4
8000ba1e:	c0 a8       	rjmp	8000ba32 <_vfprintf_r+0xd82>
8000ba20:	50 a7       	stdsp	sp[0x28],r7
8000ba22:	50 80       	stdsp	sp[0x20],r0
8000ba24:	0c 97       	mov	r7,r6
8000ba26:	04 94       	mov	r4,r2
8000ba28:	06 96       	mov	r6,r3
8000ba2a:	02 92       	mov	r2,r1
8000ba2c:	40 93       	lddsp	r3,sp[0x24]
8000ba2e:	10 90       	mov	r0,r8
8000ba30:	40 41       	lddsp	r1,sp[0x10]
8000ba32:	ed b5 00 05 	bld	r5,0x5
8000ba36:	c5 d1       	brne	8000baf0 <_vfprintf_r+0xe40>
8000ba38:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000ba3c:	40 3c       	lddsp	r12,sp[0xc]
8000ba3e:	58 0c       	cp.w	r12,0
8000ba40:	c2 60       	breq	8000ba8c <_vfprintf_r+0xddc>
8000ba42:	10 36       	cp.w	r6,r8
8000ba44:	c0 a4       	brge	8000ba58 <_vfprintf_r+0xda8>
8000ba46:	fa cb f9 44 	sub	r11,sp,-1724
8000ba4a:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000ba4e:	ec e8 fd 88 	ld.d	r8,r6[-632]
8000ba52:	fa e9 00 00 	st.d	sp[0],r8
8000ba56:	c1 88       	rjmp	8000ba86 <_vfprintf_r+0xdd6>
8000ba58:	fa c8 f9 50 	sub	r8,sp,-1712
8000ba5c:	1a d8       	st.w	--sp,r8
8000ba5e:	fa c8 fa b8 	sub	r8,sp,-1352
8000ba62:	04 9a       	mov	r10,r2
8000ba64:	1a d8       	st.w	--sp,r8
8000ba66:	0c 9b       	mov	r11,r6
8000ba68:	fa c8 fb b4 	sub	r8,sp,-1100
8000ba6c:	08 9c       	mov	r12,r4
8000ba6e:	1a d8       	st.w	--sp,r8
8000ba70:	fa c8 f9 40 	sub	r8,sp,-1728
8000ba74:	fa c9 ff b4 	sub	r9,sp,-76
8000ba78:	f0 1f 00 e9 	mcall	8000be1c <_vfprintf_r+0x116c>
8000ba7c:	2f dd       	sub	sp,-12
8000ba7e:	f8 ea 00 00 	ld.d	r10,r12[0]
8000ba82:	fa eb 00 00 	st.d	sp[0],r10
8000ba86:	30 08       	mov	r8,0
8000ba88:	e0 8f 03 e7 	bral	8000c256 <_vfprintf_r+0x15a6>
8000ba8c:	ee ca ff ff 	sub	r10,r7,-1
8000ba90:	10 37       	cp.w	r7,r8
8000ba92:	c0 b4       	brge	8000baa8 <_vfprintf_r+0xdf8>
8000ba94:	fa c9 f9 44 	sub	r9,sp,-1724
8000ba98:	14 97       	mov	r7,r10
8000ba9a:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000ba9e:	ec ea fd 88 	ld.d	r10,r6[-632]
8000baa2:	fa eb 00 00 	st.d	sp[0],r10
8000baa6:	c1 88       	rjmp	8000bad6 <_vfprintf_r+0xe26>
8000baa8:	41 09       	lddsp	r9,sp[0x40]
8000baaa:	59 f8       	cp.w	r8,31
8000baac:	e0 89 00 18 	brgt	8000badc <_vfprintf_r+0xe2c>
8000bab0:	f2 e6 00 00 	ld.d	r6,r9[0]
8000bab4:	f2 cb ff f8 	sub	r11,r9,-8
8000bab8:	fa e7 00 00 	st.d	sp[0],r6
8000babc:	51 0b       	stdsp	sp[0x40],r11
8000babe:	fa c6 f9 44 	sub	r6,sp,-1724
8000bac2:	ec 08 00 39 	add	r9,r6,r8<<0x3
8000bac6:	fa e6 00 00 	ld.d	r6,sp[0]
8000baca:	f2 e7 fd 88 	st.d	r9[-632],r6
8000bace:	2f f8       	sub	r8,-1
8000bad0:	14 97       	mov	r7,r10
8000bad2:	fb 48 06 b4 	st.w	sp[1716],r8
8000bad6:	40 38       	lddsp	r8,sp[0xc]
8000bad8:	e0 8f 03 bf 	bral	8000c256 <_vfprintf_r+0x15a6>
8000badc:	f2 e6 00 00 	ld.d	r6,r9[0]
8000bae0:	40 38       	lddsp	r8,sp[0xc]
8000bae2:	fa e7 00 00 	st.d	sp[0],r6
8000bae6:	2f 89       	sub	r9,-8
8000bae8:	14 97       	mov	r7,r10
8000baea:	51 09       	stdsp	sp[0x40],r9
8000baec:	e0 8f 03 b5 	bral	8000c256 <_vfprintf_r+0x15a6>
8000baf0:	ed b5 00 04 	bld	r5,0x4
8000baf4:	c1 61       	brne	8000bb20 <_vfprintf_r+0xe70>
8000baf6:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000bafa:	40 3e       	lddsp	lr,sp[0xc]
8000bafc:	58 0e       	cp.w	lr,0
8000bafe:	c0 80       	breq	8000bb0e <_vfprintf_r+0xe5e>
8000bb00:	10 36       	cp.w	r6,r8
8000bb02:	c6 74       	brge	8000bbd0 <_vfprintf_r+0xf20>
8000bb04:	fa cc f9 44 	sub	r12,sp,-1724
8000bb08:	f8 06 00 36 	add	r6,r12,r6<<0x3
8000bb0c:	c8 08       	rjmp	8000bc0c <_vfprintf_r+0xf5c>
8000bb0e:	ee ca ff ff 	sub	r10,r7,-1
8000bb12:	10 37       	cp.w	r7,r8
8000bb14:	c7 f4       	brge	8000bc12 <_vfprintf_r+0xf62>
8000bb16:	fa cb f9 44 	sub	r11,sp,-1724
8000bb1a:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000bb1e:	c7 68       	rjmp	8000bc0a <_vfprintf_r+0xf5a>
8000bb20:	ed b5 00 06 	bld	r5,0x6
8000bb24:	c4 a1       	brne	8000bbb8 <_vfprintf_r+0xf08>
8000bb26:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000bb2a:	40 3c       	lddsp	r12,sp[0xc]
8000bb2c:	58 0c       	cp.w	r12,0
8000bb2e:	c1 d0       	breq	8000bb68 <_vfprintf_r+0xeb8>
8000bb30:	10 36       	cp.w	r6,r8
8000bb32:	c0 64       	brge	8000bb3e <_vfprintf_r+0xe8e>
8000bb34:	fa cb f9 44 	sub	r11,sp,-1724
8000bb38:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000bb3c:	c1 f8       	rjmp	8000bb7a <_vfprintf_r+0xeca>
8000bb3e:	fa c8 f9 50 	sub	r8,sp,-1712
8000bb42:	1a d8       	st.w	--sp,r8
8000bb44:	fa c8 fa b8 	sub	r8,sp,-1352
8000bb48:	1a d8       	st.w	--sp,r8
8000bb4a:	fa c8 fb b4 	sub	r8,sp,-1100
8000bb4e:	1a d8       	st.w	--sp,r8
8000bb50:	fa c8 f9 40 	sub	r8,sp,-1728
8000bb54:	fa c9 ff b4 	sub	r9,sp,-76
8000bb58:	04 9a       	mov	r10,r2
8000bb5a:	0c 9b       	mov	r11,r6
8000bb5c:	08 9c       	mov	r12,r4
8000bb5e:	f0 1f 00 b0 	mcall	8000be1c <_vfprintf_r+0x116c>
8000bb62:	2f dd       	sub	sp,-12
8000bb64:	98 18       	ld.sh	r8,r12[0x2]
8000bb66:	c2 68       	rjmp	8000bbb2 <_vfprintf_r+0xf02>
8000bb68:	ee ca ff ff 	sub	r10,r7,-1
8000bb6c:	10 37       	cp.w	r7,r8
8000bb6e:	c0 94       	brge	8000bb80 <_vfprintf_r+0xed0>
8000bb70:	fa c9 f9 44 	sub	r9,sp,-1724
8000bb74:	14 97       	mov	r7,r10
8000bb76:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000bb7a:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
8000bb7e:	c1 a8       	rjmp	8000bbb2 <_vfprintf_r+0xf02>
8000bb80:	41 09       	lddsp	r9,sp[0x40]
8000bb82:	59 f8       	cp.w	r8,31
8000bb84:	e0 89 00 13 	brgt	8000bbaa <_vfprintf_r+0xefa>
8000bb88:	f2 cb ff fc 	sub	r11,r9,-4
8000bb8c:	51 0b       	stdsp	sp[0x40],r11
8000bb8e:	72 09       	ld.w	r9,r9[0x0]
8000bb90:	fa c6 f9 44 	sub	r6,sp,-1724
8000bb94:	ec 08 00 3b 	add	r11,r6,r8<<0x3
8000bb98:	2f f8       	sub	r8,-1
8000bb9a:	f7 49 fd 88 	st.w	r11[-632],r9
8000bb9e:	fb 48 06 b4 	st.w	sp[1716],r8
8000bba2:	14 97       	mov	r7,r10
8000bba4:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
8000bba8:	c0 58       	rjmp	8000bbb2 <_vfprintf_r+0xf02>
8000bbaa:	92 18       	ld.sh	r8,r9[0x2]
8000bbac:	14 97       	mov	r7,r10
8000bbae:	2f c9       	sub	r9,-4
8000bbb0:	51 09       	stdsp	sp[0x40],r9
8000bbb2:	5c 78       	castu.h	r8
8000bbb4:	50 18       	stdsp	sp[0x4],r8
8000bbb6:	c4 68       	rjmp	8000bc42 <_vfprintf_r+0xf92>
8000bbb8:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000bbbc:	40 3c       	lddsp	r12,sp[0xc]
8000bbbe:	58 0c       	cp.w	r12,0
8000bbc0:	c1 d0       	breq	8000bbfa <_vfprintf_r+0xf4a>
8000bbc2:	10 36       	cp.w	r6,r8
8000bbc4:	c0 64       	brge	8000bbd0 <_vfprintf_r+0xf20>
8000bbc6:	fa cb f9 44 	sub	r11,sp,-1724
8000bbca:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000bbce:	c1 f8       	rjmp	8000bc0c <_vfprintf_r+0xf5c>
8000bbd0:	fa c8 f9 50 	sub	r8,sp,-1712
8000bbd4:	1a d8       	st.w	--sp,r8
8000bbd6:	fa c8 fa b8 	sub	r8,sp,-1352
8000bbda:	0c 9b       	mov	r11,r6
8000bbdc:	1a d8       	st.w	--sp,r8
8000bbde:	fa c8 fb b4 	sub	r8,sp,-1100
8000bbe2:	04 9a       	mov	r10,r2
8000bbe4:	1a d8       	st.w	--sp,r8
8000bbe6:	08 9c       	mov	r12,r4
8000bbe8:	fa c8 f9 40 	sub	r8,sp,-1728
8000bbec:	fa c9 ff b4 	sub	r9,sp,-76
8000bbf0:	f0 1f 00 8b 	mcall	8000be1c <_vfprintf_r+0x116c>
8000bbf4:	2f dd       	sub	sp,-12
8000bbf6:	78 0b       	ld.w	r11,r12[0x0]
8000bbf8:	c2 48       	rjmp	8000bc40 <_vfprintf_r+0xf90>
8000bbfa:	ee ca ff ff 	sub	r10,r7,-1
8000bbfe:	10 37       	cp.w	r7,r8
8000bc00:	c0 94       	brge	8000bc12 <_vfprintf_r+0xf62>
8000bc02:	fa c9 f9 44 	sub	r9,sp,-1724
8000bc06:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000bc0a:	14 97       	mov	r7,r10
8000bc0c:	ec fb fd 88 	ld.w	r11,r6[-632]
8000bc10:	c1 88       	rjmp	8000bc40 <_vfprintf_r+0xf90>
8000bc12:	41 09       	lddsp	r9,sp[0x40]
8000bc14:	59 f8       	cp.w	r8,31
8000bc16:	e0 89 00 11 	brgt	8000bc38 <_vfprintf_r+0xf88>
8000bc1a:	f2 cb ff fc 	sub	r11,r9,-4
8000bc1e:	51 0b       	stdsp	sp[0x40],r11
8000bc20:	fa c6 f9 44 	sub	r6,sp,-1724
8000bc24:	72 0b       	ld.w	r11,r9[0x0]
8000bc26:	ec 08 00 39 	add	r9,r6,r8<<0x3
8000bc2a:	f3 4b fd 88 	st.w	r9[-632],r11
8000bc2e:	2f f8       	sub	r8,-1
8000bc30:	14 97       	mov	r7,r10
8000bc32:	fb 48 06 b4 	st.w	sp[1716],r8
8000bc36:	c0 58       	rjmp	8000bc40 <_vfprintf_r+0xf90>
8000bc38:	72 0b       	ld.w	r11,r9[0x0]
8000bc3a:	14 97       	mov	r7,r10
8000bc3c:	2f c9       	sub	r9,-4
8000bc3e:	51 09       	stdsp	sp[0x40],r9
8000bc40:	50 1b       	stdsp	sp[0x4],r11
8000bc42:	30 0e       	mov	lr,0
8000bc44:	50 0e       	stdsp	sp[0x0],lr
8000bc46:	1c 98       	mov	r8,lr
8000bc48:	e0 8f 03 07 	bral	8000c256 <_vfprintf_r+0x15a6>
8000bc4c:	50 a7       	stdsp	sp[0x28],r7
8000bc4e:	50 80       	stdsp	sp[0x20],r0
8000bc50:	0c 97       	mov	r7,r6
8000bc52:	04 94       	mov	r4,r2
8000bc54:	06 96       	mov	r6,r3
8000bc56:	02 92       	mov	r2,r1
8000bc58:	40 93       	lddsp	r3,sp[0x24]
8000bc5a:	40 41       	lddsp	r1,sp[0x10]
8000bc5c:	0e 99       	mov	r9,r7
8000bc5e:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000bc62:	40 3c       	lddsp	r12,sp[0xc]
8000bc64:	58 0c       	cp.w	r12,0
8000bc66:	c1 d0       	breq	8000bca0 <_vfprintf_r+0xff0>
8000bc68:	10 36       	cp.w	r6,r8
8000bc6a:	c0 64       	brge	8000bc76 <_vfprintf_r+0xfc6>
8000bc6c:	fa cb f9 44 	sub	r11,sp,-1724
8000bc70:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000bc74:	c1 d8       	rjmp	8000bcae <_vfprintf_r+0xffe>
8000bc76:	fa c8 f9 50 	sub	r8,sp,-1712
8000bc7a:	1a d8       	st.w	--sp,r8
8000bc7c:	fa c8 fa b8 	sub	r8,sp,-1352
8000bc80:	1a d8       	st.w	--sp,r8
8000bc82:	fa c8 fb b4 	sub	r8,sp,-1100
8000bc86:	1a d8       	st.w	--sp,r8
8000bc88:	fa c9 ff b4 	sub	r9,sp,-76
8000bc8c:	fa c8 f9 40 	sub	r8,sp,-1728
8000bc90:	04 9a       	mov	r10,r2
8000bc92:	0c 9b       	mov	r11,r6
8000bc94:	08 9c       	mov	r12,r4
8000bc96:	f0 1f 00 62 	mcall	8000be1c <_vfprintf_r+0x116c>
8000bc9a:	2f dd       	sub	sp,-12
8000bc9c:	78 09       	ld.w	r9,r12[0x0]
8000bc9e:	c2 18       	rjmp	8000bce0 <_vfprintf_r+0x1030>
8000bca0:	2f f7       	sub	r7,-1
8000bca2:	10 39       	cp.w	r9,r8
8000bca4:	c0 84       	brge	8000bcb4 <_vfprintf_r+0x1004>
8000bca6:	fa ca f9 44 	sub	r10,sp,-1724
8000bcaa:	f4 06 00 36 	add	r6,r10,r6<<0x3
8000bcae:	ec f9 fd 88 	ld.w	r9,r6[-632]
8000bcb2:	c1 78       	rjmp	8000bce0 <_vfprintf_r+0x1030>
8000bcb4:	41 09       	lddsp	r9,sp[0x40]
8000bcb6:	59 f8       	cp.w	r8,31
8000bcb8:	e0 89 00 10 	brgt	8000bcd8 <_vfprintf_r+0x1028>
8000bcbc:	f2 ca ff fc 	sub	r10,r9,-4
8000bcc0:	51 0a       	stdsp	sp[0x40],r10
8000bcc2:	fa c6 f9 44 	sub	r6,sp,-1724
8000bcc6:	72 09       	ld.w	r9,r9[0x0]
8000bcc8:	ec 08 00 3a 	add	r10,r6,r8<<0x3
8000bccc:	f5 49 fd 88 	st.w	r10[-632],r9
8000bcd0:	2f f8       	sub	r8,-1
8000bcd2:	fb 48 06 b4 	st.w	sp[1716],r8
8000bcd6:	c0 58       	rjmp	8000bce0 <_vfprintf_r+0x1030>
8000bcd8:	f2 c8 ff fc 	sub	r8,r9,-4
8000bcdc:	51 08       	stdsp	sp[0x40],r8
8000bcde:	72 09       	ld.w	r9,r9[0x0]
8000bce0:	33 08       	mov	r8,48
8000bce2:	fb 68 06 b8 	st.b	sp[1720],r8
8000bce6:	37 88       	mov	r8,120
8000bce8:	30 0e       	mov	lr,0
8000bcea:	fb 68 06 b9 	st.b	sp[1721],r8
8000bcee:	4c dc       	lddpc	r12,8000be20 <_vfprintf_r+0x1170>
8000bcf0:	50 19       	stdsp	sp[0x4],r9
8000bcf2:	a1 b5       	sbr	r5,0x1
8000bcf4:	50 0e       	stdsp	sp[0x0],lr
8000bcf6:	50 dc       	stdsp	sp[0x34],r12
8000bcf8:	30 28       	mov	r8,2
8000bcfa:	37 80       	mov	r0,120
8000bcfc:	e0 8f 02 ad 	bral	8000c256 <_vfprintf_r+0x15a6>
8000bd00:	50 a7       	stdsp	sp[0x28],r7
8000bd02:	50 80       	stdsp	sp[0x20],r0
8000bd04:	10 90       	mov	r0,r8
8000bd06:	30 08       	mov	r8,0
8000bd08:	fb 68 06 bb 	st.b	sp[1723],r8
8000bd0c:	0c 97       	mov	r7,r6
8000bd0e:	04 94       	mov	r4,r2
8000bd10:	06 96       	mov	r6,r3
8000bd12:	02 92       	mov	r2,r1
8000bd14:	40 93       	lddsp	r3,sp[0x24]
8000bd16:	40 41       	lddsp	r1,sp[0x10]
8000bd18:	0e 99       	mov	r9,r7
8000bd1a:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000bd1e:	40 3b       	lddsp	r11,sp[0xc]
8000bd20:	58 0b       	cp.w	r11,0
8000bd22:	c1 d0       	breq	8000bd5c <_vfprintf_r+0x10ac>
8000bd24:	10 36       	cp.w	r6,r8
8000bd26:	c0 64       	brge	8000bd32 <_vfprintf_r+0x1082>
8000bd28:	fa ca f9 44 	sub	r10,sp,-1724
8000bd2c:	f4 06 00 36 	add	r6,r10,r6<<0x3
8000bd30:	c1 d8       	rjmp	8000bd6a <_vfprintf_r+0x10ba>
8000bd32:	fa c8 f9 50 	sub	r8,sp,-1712
8000bd36:	1a d8       	st.w	--sp,r8
8000bd38:	fa c8 fa b8 	sub	r8,sp,-1352
8000bd3c:	1a d8       	st.w	--sp,r8
8000bd3e:	fa c8 fb b4 	sub	r8,sp,-1100
8000bd42:	0c 9b       	mov	r11,r6
8000bd44:	1a d8       	st.w	--sp,r8
8000bd46:	04 9a       	mov	r10,r2
8000bd48:	fa c8 f9 40 	sub	r8,sp,-1728
8000bd4c:	fa c9 ff b4 	sub	r9,sp,-76
8000bd50:	08 9c       	mov	r12,r4
8000bd52:	f0 1f 00 33 	mcall	8000be1c <_vfprintf_r+0x116c>
8000bd56:	2f dd       	sub	sp,-12
8000bd58:	78 06       	ld.w	r6,r12[0x0]
8000bd5a:	c2 08       	rjmp	8000bd9a <_vfprintf_r+0x10ea>
8000bd5c:	2f f7       	sub	r7,-1
8000bd5e:	10 39       	cp.w	r9,r8
8000bd60:	c0 84       	brge	8000bd70 <_vfprintf_r+0x10c0>
8000bd62:	fa c9 f9 44 	sub	r9,sp,-1724
8000bd66:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000bd6a:	ec f6 fd 88 	ld.w	r6,r6[-632]
8000bd6e:	c1 68       	rjmp	8000bd9a <_vfprintf_r+0x10ea>
8000bd70:	41 09       	lddsp	r9,sp[0x40]
8000bd72:	59 f8       	cp.w	r8,31
8000bd74:	e0 89 00 10 	brgt	8000bd94 <_vfprintf_r+0x10e4>
8000bd78:	f2 ca ff fc 	sub	r10,r9,-4
8000bd7c:	51 0a       	stdsp	sp[0x40],r10
8000bd7e:	72 06       	ld.w	r6,r9[0x0]
8000bd80:	fa ce f9 44 	sub	lr,sp,-1724
8000bd84:	fc 08 00 39 	add	r9,lr,r8<<0x3
8000bd88:	f3 46 fd 88 	st.w	r9[-632],r6
8000bd8c:	2f f8       	sub	r8,-1
8000bd8e:	fb 48 06 b4 	st.w	sp[1716],r8
8000bd92:	c0 48       	rjmp	8000bd9a <_vfprintf_r+0x10ea>
8000bd94:	72 06       	ld.w	r6,r9[0x0]
8000bd96:	2f c9       	sub	r9,-4
8000bd98:	51 09       	stdsp	sp[0x40],r9
8000bd9a:	40 2c       	lddsp	r12,sp[0x8]
8000bd9c:	58 0c       	cp.w	r12,0
8000bd9e:	c1 05       	brlt	8000bdbe <_vfprintf_r+0x110e>
8000bda0:	18 9a       	mov	r10,r12
8000bda2:	30 0b       	mov	r11,0
8000bda4:	0c 9c       	mov	r12,r6
8000bda6:	f0 1f 00 20 	mcall	8000be24 <_vfprintf_r+0x1174>
8000bdaa:	e0 80 02 e9 	breq	8000c37c <_vfprintf_r+0x16cc>
8000bdae:	f8 06 01 02 	sub	r2,r12,r6
8000bdb2:	40 2b       	lddsp	r11,sp[0x8]
8000bdb4:	16 32       	cp.w	r2,r11
8000bdb6:	e0 89 02 e3 	brgt	8000c37c <_vfprintf_r+0x16cc>
8000bdba:	e0 8f 02 de 	bral	8000c376 <_vfprintf_r+0x16c6>
8000bdbe:	30 0a       	mov	r10,0
8000bdc0:	0c 9c       	mov	r12,r6
8000bdc2:	50 2a       	stdsp	sp[0x8],r10
8000bdc4:	f0 1f 00 19 	mcall	8000be28 <_vfprintf_r+0x1178>
8000bdc8:	18 92       	mov	r2,r12
8000bdca:	e0 8f 02 dc 	bral	8000c382 <_vfprintf_r+0x16d2>
8000bdce:	50 a7       	stdsp	sp[0x28],r7
8000bdd0:	50 80       	stdsp	sp[0x20],r0
8000bdd2:	0c 97       	mov	r7,r6
8000bdd4:	04 94       	mov	r4,r2
8000bdd6:	06 96       	mov	r6,r3
8000bdd8:	02 92       	mov	r2,r1
8000bdda:	40 93       	lddsp	r3,sp[0x24]
8000bddc:	10 90       	mov	r0,r8
8000bdde:	40 41       	lddsp	r1,sp[0x10]
8000bde0:	a5 a5       	sbr	r5,0x4
8000bde2:	c0 a8       	rjmp	8000bdf6 <_vfprintf_r+0x1146>
8000bde4:	50 a7       	stdsp	sp[0x28],r7
8000bde6:	50 80       	stdsp	sp[0x20],r0
8000bde8:	0c 97       	mov	r7,r6
8000bdea:	04 94       	mov	r4,r2
8000bdec:	06 96       	mov	r6,r3
8000bdee:	02 92       	mov	r2,r1
8000bdf0:	40 93       	lddsp	r3,sp[0x24]
8000bdf2:	10 90       	mov	r0,r8
8000bdf4:	40 41       	lddsp	r1,sp[0x10]
8000bdf6:	ed b5 00 05 	bld	r5,0x5
8000bdfa:	c6 11       	brne	8000bebc <_vfprintf_r+0x120c>
8000bdfc:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000be00:	40 39       	lddsp	r9,sp[0xc]
8000be02:	58 09       	cp.w	r9,0
8000be04:	c2 c0       	breq	8000be5c <_vfprintf_r+0x11ac>
8000be06:	10 36       	cp.w	r6,r8
8000be08:	c1 24       	brge	8000be2c <_vfprintf_r+0x117c>
8000be0a:	fa c8 f9 44 	sub	r8,sp,-1724
8000be0e:	f0 06 00 36 	add	r6,r8,r6<<0x3
8000be12:	c2 e8       	rjmp	8000be6e <_vfprintf_r+0x11be>
8000be14:	80 00       	ld.sh	r0,r0[0x0]
8000be16:	cf 1c       	rcall	8000bff8 <_vfprintf_r+0x1348>
8000be18:	80 00       	ld.sh	r0,r0[0x0]
8000be1a:	ec 06       	*unknown*
8000be1c:	80 00       	ld.sh	r0,r0[0x0]
8000be1e:	a9 6c       	lsl	r12,0x8
8000be20:	80 01       	ld.sh	r1,r0[0x0]
8000be22:	00 1c       	sub	r12,r0
8000be24:	80 00       	ld.sh	r0,r0[0x0]
8000be26:	a0 bc       	st.b	r0[0x3],r12
8000be28:	80 00       	ld.sh	r0,r0[0x0]
8000be2a:	a8 02       	st.h	r4[0x0],r2
8000be2c:	fa c8 f9 50 	sub	r8,sp,-1712
8000be30:	1a d8       	st.w	--sp,r8
8000be32:	fa c8 fa b8 	sub	r8,sp,-1352
8000be36:	1a d8       	st.w	--sp,r8
8000be38:	fa c8 fb b4 	sub	r8,sp,-1100
8000be3c:	1a d8       	st.w	--sp,r8
8000be3e:	fa c8 f9 40 	sub	r8,sp,-1728
8000be42:	fa c9 ff b4 	sub	r9,sp,-76
8000be46:	04 9a       	mov	r10,r2
8000be48:	0c 9b       	mov	r11,r6
8000be4a:	08 9c       	mov	r12,r4
8000be4c:	f0 1f 00 c8 	mcall	8000c16c <_vfprintf_r+0x14bc>
8000be50:	2f dd       	sub	sp,-12
8000be52:	f8 e8 00 00 	ld.d	r8,r12[0]
8000be56:	fa e9 00 00 	st.d	sp[0],r8
8000be5a:	c2 e8       	rjmp	8000beb6 <_vfprintf_r+0x1206>
8000be5c:	ee ca ff ff 	sub	r10,r7,-1
8000be60:	10 37       	cp.w	r7,r8
8000be62:	c0 b4       	brge	8000be78 <_vfprintf_r+0x11c8>
8000be64:	fa c8 f9 44 	sub	r8,sp,-1724
8000be68:	14 97       	mov	r7,r10
8000be6a:	f0 06 00 36 	add	r6,r8,r6<<0x3
8000be6e:	ec ea fd 88 	ld.d	r10,r6[-632]
8000be72:	fa eb 00 00 	st.d	sp[0],r10
8000be76:	c2 08       	rjmp	8000beb6 <_vfprintf_r+0x1206>
8000be78:	41 09       	lddsp	r9,sp[0x40]
8000be7a:	59 f8       	cp.w	r8,31
8000be7c:	e0 89 00 16 	brgt	8000bea8 <_vfprintf_r+0x11f8>
8000be80:	f2 e6 00 00 	ld.d	r6,r9[0]
8000be84:	f2 cb ff f8 	sub	r11,r9,-8
8000be88:	fa e7 00 00 	st.d	sp[0],r6
8000be8c:	51 0b       	stdsp	sp[0x40],r11
8000be8e:	fa c6 f9 44 	sub	r6,sp,-1724
8000be92:	ec 08 00 39 	add	r9,r6,r8<<0x3
8000be96:	fa e6 00 00 	ld.d	r6,sp[0]
8000be9a:	f2 e7 fd 88 	st.d	r9[-632],r6
8000be9e:	2f f8       	sub	r8,-1
8000bea0:	14 97       	mov	r7,r10
8000bea2:	fb 48 06 b4 	st.w	sp[1716],r8
8000bea6:	c0 88       	rjmp	8000beb6 <_vfprintf_r+0x1206>
8000bea8:	f2 e6 00 00 	ld.d	r6,r9[0]
8000beac:	2f 89       	sub	r9,-8
8000beae:	fa e7 00 00 	st.d	sp[0],r6
8000beb2:	51 09       	stdsp	sp[0x40],r9
8000beb4:	14 97       	mov	r7,r10
8000beb6:	30 18       	mov	r8,1
8000beb8:	e0 8f 01 cf 	bral	8000c256 <_vfprintf_r+0x15a6>
8000bebc:	ed b5 00 04 	bld	r5,0x4
8000bec0:	c1 61       	brne	8000beec <_vfprintf_r+0x123c>
8000bec2:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000bec6:	40 3e       	lddsp	lr,sp[0xc]
8000bec8:	58 0e       	cp.w	lr,0
8000beca:	c0 80       	breq	8000beda <_vfprintf_r+0x122a>
8000becc:	10 36       	cp.w	r6,r8
8000bece:	c6 74       	brge	8000bf9c <_vfprintf_r+0x12ec>
8000bed0:	fa cc f9 44 	sub	r12,sp,-1724
8000bed4:	f8 06 00 36 	add	r6,r12,r6<<0x3
8000bed8:	c8 08       	rjmp	8000bfd8 <_vfprintf_r+0x1328>
8000beda:	ee ca ff ff 	sub	r10,r7,-1
8000bede:	10 37       	cp.w	r7,r8
8000bee0:	c7 f4       	brge	8000bfde <_vfprintf_r+0x132e>
8000bee2:	fa cb f9 44 	sub	r11,sp,-1724
8000bee6:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000beea:	c7 68       	rjmp	8000bfd6 <_vfprintf_r+0x1326>
8000beec:	ed b5 00 06 	bld	r5,0x6
8000bef0:	c4 a1       	brne	8000bf84 <_vfprintf_r+0x12d4>
8000bef2:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000bef6:	40 3c       	lddsp	r12,sp[0xc]
8000bef8:	58 0c       	cp.w	r12,0
8000befa:	c1 d0       	breq	8000bf34 <_vfprintf_r+0x1284>
8000befc:	10 36       	cp.w	r6,r8
8000befe:	c0 64       	brge	8000bf0a <_vfprintf_r+0x125a>
8000bf00:	fa cb f9 44 	sub	r11,sp,-1724
8000bf04:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000bf08:	c1 f8       	rjmp	8000bf46 <_vfprintf_r+0x1296>
8000bf0a:	fa c8 f9 50 	sub	r8,sp,-1712
8000bf0e:	1a d8       	st.w	--sp,r8
8000bf10:	fa c8 fa b8 	sub	r8,sp,-1352
8000bf14:	1a d8       	st.w	--sp,r8
8000bf16:	fa c8 fb b4 	sub	r8,sp,-1100
8000bf1a:	1a d8       	st.w	--sp,r8
8000bf1c:	fa c8 f9 40 	sub	r8,sp,-1728
8000bf20:	fa c9 ff b4 	sub	r9,sp,-76
8000bf24:	04 9a       	mov	r10,r2
8000bf26:	0c 9b       	mov	r11,r6
8000bf28:	08 9c       	mov	r12,r4
8000bf2a:	f0 1f 00 91 	mcall	8000c16c <_vfprintf_r+0x14bc>
8000bf2e:	2f dd       	sub	sp,-12
8000bf30:	98 18       	ld.sh	r8,r12[0x2]
8000bf32:	c2 68       	rjmp	8000bf7e <_vfprintf_r+0x12ce>
8000bf34:	ee ca ff ff 	sub	r10,r7,-1
8000bf38:	10 37       	cp.w	r7,r8
8000bf3a:	c0 94       	brge	8000bf4c <_vfprintf_r+0x129c>
8000bf3c:	fa c9 f9 44 	sub	r9,sp,-1724
8000bf40:	14 97       	mov	r7,r10
8000bf42:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000bf46:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
8000bf4a:	c1 a8       	rjmp	8000bf7e <_vfprintf_r+0x12ce>
8000bf4c:	41 09       	lddsp	r9,sp[0x40]
8000bf4e:	59 f8       	cp.w	r8,31
8000bf50:	e0 89 00 13 	brgt	8000bf76 <_vfprintf_r+0x12c6>
8000bf54:	f2 cb ff fc 	sub	r11,r9,-4
8000bf58:	51 0b       	stdsp	sp[0x40],r11
8000bf5a:	72 09       	ld.w	r9,r9[0x0]
8000bf5c:	fa c6 f9 44 	sub	r6,sp,-1724
8000bf60:	ec 08 00 3b 	add	r11,r6,r8<<0x3
8000bf64:	2f f8       	sub	r8,-1
8000bf66:	f7 49 fd 88 	st.w	r11[-632],r9
8000bf6a:	fb 48 06 b4 	st.w	sp[1716],r8
8000bf6e:	14 97       	mov	r7,r10
8000bf70:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
8000bf74:	c0 58       	rjmp	8000bf7e <_vfprintf_r+0x12ce>
8000bf76:	92 18       	ld.sh	r8,r9[0x2]
8000bf78:	14 97       	mov	r7,r10
8000bf7a:	2f c9       	sub	r9,-4
8000bf7c:	51 09       	stdsp	sp[0x40],r9
8000bf7e:	5c 78       	castu.h	r8
8000bf80:	50 18       	stdsp	sp[0x4],r8
8000bf82:	c4 68       	rjmp	8000c00e <_vfprintf_r+0x135e>
8000bf84:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000bf88:	40 3c       	lddsp	r12,sp[0xc]
8000bf8a:	58 0c       	cp.w	r12,0
8000bf8c:	c1 d0       	breq	8000bfc6 <_vfprintf_r+0x1316>
8000bf8e:	10 36       	cp.w	r6,r8
8000bf90:	c0 64       	brge	8000bf9c <_vfprintf_r+0x12ec>
8000bf92:	fa cb f9 44 	sub	r11,sp,-1724
8000bf96:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000bf9a:	c1 f8       	rjmp	8000bfd8 <_vfprintf_r+0x1328>
8000bf9c:	fa c8 f9 50 	sub	r8,sp,-1712
8000bfa0:	1a d8       	st.w	--sp,r8
8000bfa2:	fa c8 fa b8 	sub	r8,sp,-1352
8000bfa6:	0c 9b       	mov	r11,r6
8000bfa8:	1a d8       	st.w	--sp,r8
8000bfaa:	fa c8 fb b4 	sub	r8,sp,-1100
8000bfae:	04 9a       	mov	r10,r2
8000bfb0:	1a d8       	st.w	--sp,r8
8000bfb2:	08 9c       	mov	r12,r4
8000bfb4:	fa c8 f9 40 	sub	r8,sp,-1728
8000bfb8:	fa c9 ff b4 	sub	r9,sp,-76
8000bfbc:	f0 1f 00 6c 	mcall	8000c16c <_vfprintf_r+0x14bc>
8000bfc0:	2f dd       	sub	sp,-12
8000bfc2:	78 0b       	ld.w	r11,r12[0x0]
8000bfc4:	c2 48       	rjmp	8000c00c <_vfprintf_r+0x135c>
8000bfc6:	ee ca ff ff 	sub	r10,r7,-1
8000bfca:	10 37       	cp.w	r7,r8
8000bfcc:	c0 94       	brge	8000bfde <_vfprintf_r+0x132e>
8000bfce:	fa c9 f9 44 	sub	r9,sp,-1724
8000bfd2:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000bfd6:	14 97       	mov	r7,r10
8000bfd8:	ec fb fd 88 	ld.w	r11,r6[-632]
8000bfdc:	c1 88       	rjmp	8000c00c <_vfprintf_r+0x135c>
8000bfde:	41 09       	lddsp	r9,sp[0x40]
8000bfe0:	59 f8       	cp.w	r8,31
8000bfe2:	e0 89 00 11 	brgt	8000c004 <_vfprintf_r+0x1354>
8000bfe6:	f2 cb ff fc 	sub	r11,r9,-4
8000bfea:	51 0b       	stdsp	sp[0x40],r11
8000bfec:	fa c6 f9 44 	sub	r6,sp,-1724
8000bff0:	72 0b       	ld.w	r11,r9[0x0]
8000bff2:	ec 08 00 39 	add	r9,r6,r8<<0x3
8000bff6:	f3 4b fd 88 	st.w	r9[-632],r11
8000bffa:	2f f8       	sub	r8,-1
8000bffc:	14 97       	mov	r7,r10
8000bffe:	fb 48 06 b4 	st.w	sp[1716],r8
8000c002:	c0 58       	rjmp	8000c00c <_vfprintf_r+0x135c>
8000c004:	72 0b       	ld.w	r11,r9[0x0]
8000c006:	14 97       	mov	r7,r10
8000c008:	2f c9       	sub	r9,-4
8000c00a:	51 09       	stdsp	sp[0x40],r9
8000c00c:	50 1b       	stdsp	sp[0x4],r11
8000c00e:	30 0e       	mov	lr,0
8000c010:	30 18       	mov	r8,1
8000c012:	50 0e       	stdsp	sp[0x0],lr
8000c014:	c2 19       	rjmp	8000c256 <_vfprintf_r+0x15a6>
8000c016:	50 a7       	stdsp	sp[0x28],r7
8000c018:	50 80       	stdsp	sp[0x20],r0
8000c01a:	0c 97       	mov	r7,r6
8000c01c:	04 94       	mov	r4,r2
8000c01e:	06 96       	mov	r6,r3
8000c020:	02 92       	mov	r2,r1
8000c022:	4d 4c       	lddpc	r12,8000c170 <_vfprintf_r+0x14c0>
8000c024:	40 93       	lddsp	r3,sp[0x24]
8000c026:	10 90       	mov	r0,r8
8000c028:	40 41       	lddsp	r1,sp[0x10]
8000c02a:	50 dc       	stdsp	sp[0x34],r12
8000c02c:	ed b5 00 05 	bld	r5,0x5
8000c030:	c5 51       	brne	8000c0da <_vfprintf_r+0x142a>
8000c032:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000c036:	40 3b       	lddsp	r11,sp[0xc]
8000c038:	58 0b       	cp.w	r11,0
8000c03a:	c2 20       	breq	8000c07e <_vfprintf_r+0x13ce>
8000c03c:	10 36       	cp.w	r6,r8
8000c03e:	c0 a4       	brge	8000c052 <_vfprintf_r+0x13a2>
8000c040:	fa ca f9 44 	sub	r10,sp,-1724
8000c044:	f4 06 00 36 	add	r6,r10,r6<<0x3
8000c048:	ec e8 fd 88 	ld.d	r8,r6[-632]
8000c04c:	fa e9 00 00 	st.d	sp[0],r8
8000c050:	cf 58       	rjmp	8000c23a <_vfprintf_r+0x158a>
8000c052:	fa c8 f9 50 	sub	r8,sp,-1712
8000c056:	1a d8       	st.w	--sp,r8
8000c058:	fa c8 fa b8 	sub	r8,sp,-1352
8000c05c:	04 9a       	mov	r10,r2
8000c05e:	1a d8       	st.w	--sp,r8
8000c060:	0c 9b       	mov	r11,r6
8000c062:	fa c8 fb b4 	sub	r8,sp,-1100
8000c066:	08 9c       	mov	r12,r4
8000c068:	1a d8       	st.w	--sp,r8
8000c06a:	fa c8 f9 40 	sub	r8,sp,-1728
8000c06e:	fa c9 ff b4 	sub	r9,sp,-76
8000c072:	f0 1f 00 3f 	mcall	8000c16c <_vfprintf_r+0x14bc>
8000c076:	2f dd       	sub	sp,-12
8000c078:	f8 ea 00 00 	ld.d	r10,r12[0]
8000c07c:	c0 c8       	rjmp	8000c094 <_vfprintf_r+0x13e4>
8000c07e:	ee ca ff ff 	sub	r10,r7,-1
8000c082:	10 37       	cp.w	r7,r8
8000c084:	c0 b4       	brge	8000c09a <_vfprintf_r+0x13ea>
8000c086:	fa c9 f9 44 	sub	r9,sp,-1724
8000c08a:	14 97       	mov	r7,r10
8000c08c:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000c090:	ec ea fd 88 	ld.d	r10,r6[-632]
8000c094:	fa eb 00 00 	st.d	sp[0],r10
8000c098:	cd 18       	rjmp	8000c23a <_vfprintf_r+0x158a>
8000c09a:	41 09       	lddsp	r9,sp[0x40]
8000c09c:	59 f8       	cp.w	r8,31
8000c09e:	e0 89 00 16 	brgt	8000c0ca <_vfprintf_r+0x141a>
8000c0a2:	f2 e6 00 00 	ld.d	r6,r9[0]
8000c0a6:	f2 cb ff f8 	sub	r11,r9,-8
8000c0aa:	fa e7 00 00 	st.d	sp[0],r6
8000c0ae:	51 0b       	stdsp	sp[0x40],r11
8000c0b0:	fa c6 f9 44 	sub	r6,sp,-1724
8000c0b4:	ec 08 00 39 	add	r9,r6,r8<<0x3
8000c0b8:	fa e6 00 00 	ld.d	r6,sp[0]
8000c0bc:	f2 e7 fd 88 	st.d	r9[-632],r6
8000c0c0:	2f f8       	sub	r8,-1
8000c0c2:	14 97       	mov	r7,r10
8000c0c4:	fb 48 06 b4 	st.w	sp[1716],r8
8000c0c8:	cb 98       	rjmp	8000c23a <_vfprintf_r+0x158a>
8000c0ca:	f2 e6 00 00 	ld.d	r6,r9[0]
8000c0ce:	2f 89       	sub	r9,-8
8000c0d0:	fa e7 00 00 	st.d	sp[0],r6
8000c0d4:	51 09       	stdsp	sp[0x40],r9
8000c0d6:	14 97       	mov	r7,r10
8000c0d8:	cb 18       	rjmp	8000c23a <_vfprintf_r+0x158a>
8000c0da:	ed b5 00 04 	bld	r5,0x4
8000c0de:	c1 71       	brne	8000c10c <_vfprintf_r+0x145c>
8000c0e0:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000c0e4:	40 3e       	lddsp	lr,sp[0xc]
8000c0e6:	58 0e       	cp.w	lr,0
8000c0e8:	c0 80       	breq	8000c0f8 <_vfprintf_r+0x1448>
8000c0ea:	10 36       	cp.w	r6,r8
8000c0ec:	c6 c4       	brge	8000c1c4 <_vfprintf_r+0x1514>
8000c0ee:	fa cc f9 44 	sub	r12,sp,-1724
8000c0f2:	f8 06 00 36 	add	r6,r12,r6<<0x3
8000c0f6:	c8 58       	rjmp	8000c200 <_vfprintf_r+0x1550>
8000c0f8:	ee ca ff ff 	sub	r10,r7,-1
8000c0fc:	10 37       	cp.w	r7,r8
8000c0fe:	e0 84 00 84 	brge	8000c206 <_vfprintf_r+0x1556>
8000c102:	fa cb f9 44 	sub	r11,sp,-1724
8000c106:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000c10a:	c7 a8       	rjmp	8000c1fe <_vfprintf_r+0x154e>
8000c10c:	ed b5 00 06 	bld	r5,0x6
8000c110:	c4 e1       	brne	8000c1ac <_vfprintf_r+0x14fc>
8000c112:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000c116:	40 3c       	lddsp	r12,sp[0xc]
8000c118:	58 0c       	cp.w	r12,0
8000c11a:	c1 d0       	breq	8000c154 <_vfprintf_r+0x14a4>
8000c11c:	10 36       	cp.w	r6,r8
8000c11e:	c0 64       	brge	8000c12a <_vfprintf_r+0x147a>
8000c120:	fa cb f9 44 	sub	r11,sp,-1724
8000c124:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000c128:	c1 f8       	rjmp	8000c166 <_vfprintf_r+0x14b6>
8000c12a:	fa c8 f9 50 	sub	r8,sp,-1712
8000c12e:	1a d8       	st.w	--sp,r8
8000c130:	fa c8 fa b8 	sub	r8,sp,-1352
8000c134:	1a d8       	st.w	--sp,r8
8000c136:	fa c8 fb b4 	sub	r8,sp,-1100
8000c13a:	1a d8       	st.w	--sp,r8
8000c13c:	fa c8 f9 40 	sub	r8,sp,-1728
8000c140:	fa c9 ff b4 	sub	r9,sp,-76
8000c144:	04 9a       	mov	r10,r2
8000c146:	0c 9b       	mov	r11,r6
8000c148:	08 9c       	mov	r12,r4
8000c14a:	f0 1f 00 09 	mcall	8000c16c <_vfprintf_r+0x14bc>
8000c14e:	2f dd       	sub	sp,-12
8000c150:	98 18       	ld.sh	r8,r12[0x2]
8000c152:	c2 a8       	rjmp	8000c1a6 <_vfprintf_r+0x14f6>
8000c154:	ee ca ff ff 	sub	r10,r7,-1
8000c158:	10 37       	cp.w	r7,r8
8000c15a:	c0 d4       	brge	8000c174 <_vfprintf_r+0x14c4>
8000c15c:	fa c9 f9 44 	sub	r9,sp,-1724
8000c160:	14 97       	mov	r7,r10
8000c162:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000c166:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
8000c16a:	c1 e8       	rjmp	8000c1a6 <_vfprintf_r+0x14f6>
8000c16c:	80 00       	ld.sh	r0,r0[0x0]
8000c16e:	a9 6c       	lsl	r12,0x8
8000c170:	80 01       	ld.sh	r1,r0[0x0]
8000c172:	00 1c       	sub	r12,r0
8000c174:	41 09       	lddsp	r9,sp[0x40]
8000c176:	59 f8       	cp.w	r8,31
8000c178:	e0 89 00 13 	brgt	8000c19e <_vfprintf_r+0x14ee>
8000c17c:	f2 cb ff fc 	sub	r11,r9,-4
8000c180:	51 0b       	stdsp	sp[0x40],r11
8000c182:	72 09       	ld.w	r9,r9[0x0]
8000c184:	fa c6 f9 44 	sub	r6,sp,-1724
8000c188:	ec 08 00 3b 	add	r11,r6,r8<<0x3
8000c18c:	2f f8       	sub	r8,-1
8000c18e:	f7 49 fd 88 	st.w	r11[-632],r9
8000c192:	fb 48 06 b4 	st.w	sp[1716],r8
8000c196:	14 97       	mov	r7,r10
8000c198:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
8000c19c:	c0 58       	rjmp	8000c1a6 <_vfprintf_r+0x14f6>
8000c19e:	92 18       	ld.sh	r8,r9[0x2]
8000c1a0:	14 97       	mov	r7,r10
8000c1a2:	2f c9       	sub	r9,-4
8000c1a4:	51 09       	stdsp	sp[0x40],r9
8000c1a6:	5c 78       	castu.h	r8
8000c1a8:	50 18       	stdsp	sp[0x4],r8
8000c1aa:	c4 68       	rjmp	8000c236 <_vfprintf_r+0x1586>
8000c1ac:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000c1b0:	40 3c       	lddsp	r12,sp[0xc]
8000c1b2:	58 0c       	cp.w	r12,0
8000c1b4:	c1 d0       	breq	8000c1ee <_vfprintf_r+0x153e>
8000c1b6:	10 36       	cp.w	r6,r8
8000c1b8:	c0 64       	brge	8000c1c4 <_vfprintf_r+0x1514>
8000c1ba:	fa cb f9 44 	sub	r11,sp,-1724
8000c1be:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000c1c2:	c1 f8       	rjmp	8000c200 <_vfprintf_r+0x1550>
8000c1c4:	fa c8 f9 50 	sub	r8,sp,-1712
8000c1c8:	1a d8       	st.w	--sp,r8
8000c1ca:	fa c8 fa b8 	sub	r8,sp,-1352
8000c1ce:	0c 9b       	mov	r11,r6
8000c1d0:	1a d8       	st.w	--sp,r8
8000c1d2:	fa c8 fb b4 	sub	r8,sp,-1100
8000c1d6:	04 9a       	mov	r10,r2
8000c1d8:	1a d8       	st.w	--sp,r8
8000c1da:	08 9c       	mov	r12,r4
8000c1dc:	fa c8 f9 40 	sub	r8,sp,-1728
8000c1e0:	fa c9 ff b4 	sub	r9,sp,-76
8000c1e4:	f0 1f 00 c6 	mcall	8000c4fc <_vfprintf_r+0x184c>
8000c1e8:	2f dd       	sub	sp,-12
8000c1ea:	78 0b       	ld.w	r11,r12[0x0]
8000c1ec:	c2 48       	rjmp	8000c234 <_vfprintf_r+0x1584>
8000c1ee:	ee ca ff ff 	sub	r10,r7,-1
8000c1f2:	10 37       	cp.w	r7,r8
8000c1f4:	c0 94       	brge	8000c206 <_vfprintf_r+0x1556>
8000c1f6:	fa c9 f9 44 	sub	r9,sp,-1724
8000c1fa:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000c1fe:	14 97       	mov	r7,r10
8000c200:	ec fb fd 88 	ld.w	r11,r6[-632]
8000c204:	c1 88       	rjmp	8000c234 <_vfprintf_r+0x1584>
8000c206:	41 09       	lddsp	r9,sp[0x40]
8000c208:	59 f8       	cp.w	r8,31
8000c20a:	e0 89 00 11 	brgt	8000c22c <_vfprintf_r+0x157c>
8000c20e:	f2 cb ff fc 	sub	r11,r9,-4
8000c212:	51 0b       	stdsp	sp[0x40],r11
8000c214:	fa c6 f9 44 	sub	r6,sp,-1724
8000c218:	72 0b       	ld.w	r11,r9[0x0]
8000c21a:	ec 08 00 39 	add	r9,r6,r8<<0x3
8000c21e:	f3 4b fd 88 	st.w	r9[-632],r11
8000c222:	2f f8       	sub	r8,-1
8000c224:	14 97       	mov	r7,r10
8000c226:	fb 48 06 b4 	st.w	sp[1716],r8
8000c22a:	c0 58       	rjmp	8000c234 <_vfprintf_r+0x1584>
8000c22c:	72 0b       	ld.w	r11,r9[0x0]
8000c22e:	14 97       	mov	r7,r10
8000c230:	2f c9       	sub	r9,-4
8000c232:	51 09       	stdsp	sp[0x40],r9
8000c234:	50 1b       	stdsp	sp[0x4],r11
8000c236:	30 0e       	mov	lr,0
8000c238:	50 0e       	stdsp	sp[0x0],lr
8000c23a:	40 08       	lddsp	r8,sp[0x0]
8000c23c:	40 1c       	lddsp	r12,sp[0x4]
8000c23e:	18 48       	or	r8,r12
8000c240:	5f 18       	srne	r8
8000c242:	eb e8 00 08 	and	r8,r5,r8
8000c246:	c0 70       	breq	8000c254 <_vfprintf_r+0x15a4>
8000c248:	33 08       	mov	r8,48
8000c24a:	fb 60 06 b9 	st.b	sp[1721],r0
8000c24e:	a1 b5       	sbr	r5,0x1
8000c250:	fb 68 06 b8 	st.b	sp[1720],r8
8000c254:	30 28       	mov	r8,2
8000c256:	30 09       	mov	r9,0
8000c258:	fb 69 06 bb 	st.b	sp[1723],r9
8000c25c:	0a 99       	mov	r9,r5
8000c25e:	a7 d9       	cbr	r9,0x7
8000c260:	40 2b       	lddsp	r11,sp[0x8]
8000c262:	40 16       	lddsp	r6,sp[0x4]
8000c264:	58 0b       	cp.w	r11,0
8000c266:	5f 1a       	srne	r10
8000c268:	f2 05 17 40 	movge	r5,r9
8000c26c:	fa c2 f9 78 	sub	r2,sp,-1672
8000c270:	40 09       	lddsp	r9,sp[0x0]
8000c272:	0c 49       	or	r9,r6
8000c274:	5f 19       	srne	r9
8000c276:	f5 e9 10 09 	or	r9,r10,r9
8000c27a:	c5 c0       	breq	8000c332 <_vfprintf_r+0x1682>
8000c27c:	30 19       	mov	r9,1
8000c27e:	f2 08 18 00 	cp.b	r8,r9
8000c282:	c0 60       	breq	8000c28e <_vfprintf_r+0x15de>
8000c284:	30 29       	mov	r9,2
8000c286:	f2 08 18 00 	cp.b	r8,r9
8000c28a:	c0 41       	brne	8000c292 <_vfprintf_r+0x15e2>
8000c28c:	c3 c8       	rjmp	8000c304 <_vfprintf_r+0x1654>
8000c28e:	04 96       	mov	r6,r2
8000c290:	c3 08       	rjmp	8000c2f0 <_vfprintf_r+0x1640>
8000c292:	04 96       	mov	r6,r2
8000c294:	fa e8 00 00 	ld.d	r8,sp[0]
8000c298:	f5 d8 c0 03 	bfextu	r10,r8,0x0,0x3
8000c29c:	2d 0a       	sub	r10,-48
8000c29e:	0c fa       	st.b	--r6,r10
8000c2a0:	f0 0b 16 03 	lsr	r11,r8,0x3
8000c2a4:	f2 0c 16 03 	lsr	r12,r9,0x3
8000c2a8:	f7 e9 11 db 	or	r11,r11,r9<<0x1d
8000c2ac:	18 99       	mov	r9,r12
8000c2ae:	16 98       	mov	r8,r11
8000c2b0:	58 08       	cp.w	r8,0
8000c2b2:	5c 29       	cpc	r9
8000c2b4:	cf 21       	brne	8000c298 <_vfprintf_r+0x15e8>
8000c2b6:	fa e9 00 00 	st.d	sp[0],r8
8000c2ba:	ed b5 00 00 	bld	r5,0x0
8000c2be:	c4 51       	brne	8000c348 <_vfprintf_r+0x1698>
8000c2c0:	33 09       	mov	r9,48
8000c2c2:	f2 0a 18 00 	cp.b	r10,r9
8000c2c6:	c4 10       	breq	8000c348 <_vfprintf_r+0x1698>
8000c2c8:	0c f9       	st.b	--r6,r9
8000c2ca:	c3 f8       	rjmp	8000c348 <_vfprintf_r+0x1698>
8000c2cc:	fa ea 00 00 	ld.d	r10,sp[0]
8000c2d0:	30 a8       	mov	r8,10
8000c2d2:	30 09       	mov	r9,0
8000c2d4:	f0 1f 00 8b 	mcall	8000c500 <_vfprintf_r+0x1850>
8000c2d8:	30 a8       	mov	r8,10
8000c2da:	2d 0a       	sub	r10,-48
8000c2dc:	30 09       	mov	r9,0
8000c2de:	ac 8a       	st.b	r6[0x0],r10
8000c2e0:	fa ea 00 00 	ld.d	r10,sp[0]
8000c2e4:	f0 1f 00 88 	mcall	8000c504 <_vfprintf_r+0x1854>
8000c2e8:	16 99       	mov	r9,r11
8000c2ea:	14 98       	mov	r8,r10
8000c2ec:	fa e9 00 00 	st.d	sp[0],r8
8000c2f0:	20 16       	sub	r6,1
8000c2f2:	fa ea 00 00 	ld.d	r10,sp[0]
8000c2f6:	58 9a       	cp.w	r10,9
8000c2f8:	5c 2b       	cpc	r11
8000c2fa:	fe 9b ff e9 	brhi	8000c2cc <_vfprintf_r+0x161c>
8000c2fe:	1b f8       	ld.ub	r8,sp[0x7]
8000c300:	2d 08       	sub	r8,-48
8000c302:	c2 08       	rjmp	8000c342 <_vfprintf_r+0x1692>
8000c304:	04 96       	mov	r6,r2
8000c306:	fa e8 00 00 	ld.d	r8,sp[0]
8000c30a:	f5 d8 c0 04 	bfextu	r10,r8,0x0,0x4
8000c30e:	40 de       	lddsp	lr,sp[0x34]
8000c310:	fc 0a 07 0a 	ld.ub	r10,lr[r10]
8000c314:	0c fa       	st.b	--r6,r10
8000c316:	f2 0b 16 04 	lsr	r11,r9,0x4
8000c31a:	f0 0a 16 04 	lsr	r10,r8,0x4
8000c31e:	f5 e9 11 ca 	or	r10,r10,r9<<0x1c
8000c322:	16 99       	mov	r9,r11
8000c324:	14 98       	mov	r8,r10
8000c326:	58 08       	cp.w	r8,0
8000c328:	5c 29       	cpc	r9
8000c32a:	cf 01       	brne	8000c30a <_vfprintf_r+0x165a>
8000c32c:	fa e9 00 00 	st.d	sp[0],r8
8000c330:	c0 c8       	rjmp	8000c348 <_vfprintf_r+0x1698>
8000c332:	58 08       	cp.w	r8,0
8000c334:	c0 91       	brne	8000c346 <_vfprintf_r+0x1696>
8000c336:	ed b5 00 00 	bld	r5,0x0
8000c33a:	c0 61       	brne	8000c346 <_vfprintf_r+0x1696>
8000c33c:	fa c6 f9 79 	sub	r6,sp,-1671
8000c340:	33 08       	mov	r8,48
8000c342:	ac 88       	st.b	r6[0x0],r8
8000c344:	c0 28       	rjmp	8000c348 <_vfprintf_r+0x1698>
8000c346:	04 96       	mov	r6,r2
8000c348:	0c 12       	sub	r2,r6
8000c34a:	c1 c8       	rjmp	8000c382 <_vfprintf_r+0x16d2>
8000c34c:	50 a7       	stdsp	sp[0x28],r7
8000c34e:	50 80       	stdsp	sp[0x20],r0
8000c350:	40 93       	lddsp	r3,sp[0x24]
8000c352:	0c 97       	mov	r7,r6
8000c354:	10 90       	mov	r0,r8
8000c356:	04 94       	mov	r4,r2
8000c358:	40 41       	lddsp	r1,sp[0x10]
8000c35a:	58 08       	cp.w	r8,0
8000c35c:	e0 80 04 5e 	breq	8000cc18 <_vfprintf_r+0x1f68>
8000c360:	fb 68 06 60 	st.b	sp[1632],r8
8000c364:	30 0c       	mov	r12,0
8000c366:	30 08       	mov	r8,0
8000c368:	30 12       	mov	r2,1
8000c36a:	fb 68 06 bb 	st.b	sp[1723],r8
8000c36e:	50 2c       	stdsp	sp[0x8],r12
8000c370:	fa c6 f9 a0 	sub	r6,sp,-1632
8000c374:	c0 78       	rjmp	8000c382 <_vfprintf_r+0x16d2>
8000c376:	30 0b       	mov	r11,0
8000c378:	50 2b       	stdsp	sp[0x8],r11
8000c37a:	c0 48       	rjmp	8000c382 <_vfprintf_r+0x16d2>
8000c37c:	40 22       	lddsp	r2,sp[0x8]
8000c37e:	30 0a       	mov	r10,0
8000c380:	50 2a       	stdsp	sp[0x8],r10
8000c382:	40 29       	lddsp	r9,sp[0x8]
8000c384:	e4 09 0c 49 	max	r9,r2,r9
8000c388:	50 39       	stdsp	sp[0xc],r9
8000c38a:	12 9a       	mov	r10,r9
8000c38c:	40 3e       	lddsp	lr,sp[0xc]
8000c38e:	2f fa       	sub	r10,-1
8000c390:	30 08       	mov	r8,0
8000c392:	fb 39 06 bb 	ld.ub	r9,sp[1723]
8000c396:	0a 9c       	mov	r12,r5
8000c398:	f0 09 18 00 	cp.b	r9,r8
8000c39c:	f4 0e 17 10 	movne	lr,r10
8000c3a0:	e2 1c 00 02 	andl	r12,0x2,COH
8000c3a4:	0a 9b       	mov	r11,r5
8000c3a6:	18 0e       	add	lr,r12
8000c3a8:	e2 1b 00 84 	andl	r11,0x84,COH
8000c3ac:	50 fc       	stdsp	sp[0x3c],r12
8000c3ae:	50 3e       	stdsp	sp[0xc],lr
8000c3b0:	50 9b       	stdsp	sp[0x24],r11
8000c3b2:	c4 41       	brne	8000c43a <_vfprintf_r+0x178a>
8000c3b4:	40 8a       	lddsp	r10,sp[0x20]
8000c3b6:	1c 1a       	sub	r10,lr
8000c3b8:	50 4a       	stdsp	sp[0x10],r10
8000c3ba:	58 0a       	cp.w	r10,0
8000c3bc:	e0 89 00 1f 	brgt	8000c3fa <_vfprintf_r+0x174a>
8000c3c0:	c3 d8       	rjmp	8000c43a <_vfprintf_r+0x178a>
8000c3c2:	2f 09       	sub	r9,-16
8000c3c4:	2f f8       	sub	r8,-1
8000c3c6:	fb 49 06 90 	st.w	sp[1680],r9
8000c3ca:	31 0e       	mov	lr,16
8000c3cc:	4c f9       	lddpc	r9,8000c508 <_vfprintf_r+0x1858>
8000c3ce:	87 1e       	st.w	r3[0x4],lr
8000c3d0:	87 09       	st.w	r3[0x0],r9
8000c3d2:	fb 48 06 8c 	st.w	sp[1676],r8
8000c3d6:	58 78       	cp.w	r8,7
8000c3d8:	e0 89 00 04 	brgt	8000c3e0 <_vfprintf_r+0x1730>
8000c3dc:	2f 83       	sub	r3,-8
8000c3de:	c0 b8       	rjmp	8000c3f4 <_vfprintf_r+0x1744>
8000c3e0:	fa ca f9 78 	sub	r10,sp,-1672
8000c3e4:	02 9b       	mov	r11,r1
8000c3e6:	08 9c       	mov	r12,r4
8000c3e8:	f0 1f 00 49 	mcall	8000c50c <_vfprintf_r+0x185c>
8000c3ec:	e0 81 04 27 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000c3f0:	fa c3 f9 e0 	sub	r3,sp,-1568
8000c3f4:	40 4c       	lddsp	r12,sp[0x10]
8000c3f6:	21 0c       	sub	r12,16
8000c3f8:	50 4c       	stdsp	sp[0x10],r12
8000c3fa:	fa f9 06 90 	ld.w	r9,sp[1680]
8000c3fe:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000c402:	4c 2a       	lddpc	r10,8000c508 <_vfprintf_r+0x1858>
8000c404:	40 4b       	lddsp	r11,sp[0x10]
8000c406:	59 0b       	cp.w	r11,16
8000c408:	fe 99 ff dd 	brgt	8000c3c2 <_vfprintf_r+0x1712>
8000c40c:	16 09       	add	r9,r11
8000c40e:	2f f8       	sub	r8,-1
8000c410:	87 0a       	st.w	r3[0x0],r10
8000c412:	fb 49 06 90 	st.w	sp[1680],r9
8000c416:	87 1b       	st.w	r3[0x4],r11
8000c418:	fb 48 06 8c 	st.w	sp[1676],r8
8000c41c:	58 78       	cp.w	r8,7
8000c41e:	e0 89 00 04 	brgt	8000c426 <_vfprintf_r+0x1776>
8000c422:	2f 83       	sub	r3,-8
8000c424:	c0 b8       	rjmp	8000c43a <_vfprintf_r+0x178a>
8000c426:	fa ca f9 78 	sub	r10,sp,-1672
8000c42a:	02 9b       	mov	r11,r1
8000c42c:	08 9c       	mov	r12,r4
8000c42e:	f0 1f 00 38 	mcall	8000c50c <_vfprintf_r+0x185c>
8000c432:	e0 81 04 04 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000c436:	fa c3 f9 e0 	sub	r3,sp,-1568
8000c43a:	30 08       	mov	r8,0
8000c43c:	fb 39 06 bb 	ld.ub	r9,sp[1723]
8000c440:	f0 09 18 00 	cp.b	r9,r8
8000c444:	c1 f0       	breq	8000c482 <_vfprintf_r+0x17d2>
8000c446:	fa f8 06 90 	ld.w	r8,sp[1680]
8000c44a:	fa c9 f9 45 	sub	r9,sp,-1723
8000c44e:	2f f8       	sub	r8,-1
8000c450:	87 09       	st.w	r3[0x0],r9
8000c452:	fb 48 06 90 	st.w	sp[1680],r8
8000c456:	30 19       	mov	r9,1
8000c458:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000c45c:	87 19       	st.w	r3[0x4],r9
8000c45e:	2f f8       	sub	r8,-1
8000c460:	fb 48 06 8c 	st.w	sp[1676],r8
8000c464:	58 78       	cp.w	r8,7
8000c466:	e0 89 00 04 	brgt	8000c46e <_vfprintf_r+0x17be>
8000c46a:	2f 83       	sub	r3,-8
8000c46c:	c0 b8       	rjmp	8000c482 <_vfprintf_r+0x17d2>
8000c46e:	fa ca f9 78 	sub	r10,sp,-1672
8000c472:	02 9b       	mov	r11,r1
8000c474:	08 9c       	mov	r12,r4
8000c476:	f0 1f 00 26 	mcall	8000c50c <_vfprintf_r+0x185c>
8000c47a:	e0 81 03 e0 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000c47e:	fa c3 f9 e0 	sub	r3,sp,-1568
8000c482:	40 fa       	lddsp	r10,sp[0x3c]
8000c484:	58 0a       	cp.w	r10,0
8000c486:	c1 f0       	breq	8000c4c4 <_vfprintf_r+0x1814>
8000c488:	30 29       	mov	r9,2
8000c48a:	fa f8 06 90 	ld.w	r8,sp[1680]
8000c48e:	12 08       	add	r8,r9
8000c490:	87 19       	st.w	r3[0x4],r9
8000c492:	fb 48 06 90 	st.w	sp[1680],r8
8000c496:	fa c9 f9 48 	sub	r9,sp,-1720
8000c49a:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000c49e:	87 09       	st.w	r3[0x0],r9
8000c4a0:	2f f8       	sub	r8,-1
8000c4a2:	fb 48 06 8c 	st.w	sp[1676],r8
8000c4a6:	58 78       	cp.w	r8,7
8000c4a8:	e0 89 00 04 	brgt	8000c4b0 <_vfprintf_r+0x1800>
8000c4ac:	2f 83       	sub	r3,-8
8000c4ae:	c0 b8       	rjmp	8000c4c4 <_vfprintf_r+0x1814>
8000c4b0:	fa ca f9 78 	sub	r10,sp,-1672
8000c4b4:	02 9b       	mov	r11,r1
8000c4b6:	08 9c       	mov	r12,r4
8000c4b8:	f0 1f 00 15 	mcall	8000c50c <_vfprintf_r+0x185c>
8000c4bc:	e0 81 03 bf 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000c4c0:	fa c3 f9 e0 	sub	r3,sp,-1568
8000c4c4:	40 98       	lddsp	r8,sp[0x24]
8000c4c6:	e0 48 00 80 	cp.w	r8,128
8000c4ca:	c5 21       	brne	8000c56e <_vfprintf_r+0x18be>
8000c4cc:	40 8e       	lddsp	lr,sp[0x20]
8000c4ce:	40 3c       	lddsp	r12,sp[0xc]
8000c4d0:	18 1e       	sub	lr,r12
8000c4d2:	50 4e       	stdsp	sp[0x10],lr
8000c4d4:	58 0e       	cp.w	lr,0
8000c4d6:	e0 89 00 2c 	brgt	8000c52e <_vfprintf_r+0x187e>
8000c4da:	c4 a8       	rjmp	8000c56e <_vfprintf_r+0x18be>
8000c4dc:	2f 09       	sub	r9,-16
8000c4de:	2f f8       	sub	r8,-1
8000c4e0:	48 cb       	lddpc	r11,8000c510 <_vfprintf_r+0x1860>
8000c4e2:	31 0a       	mov	r10,16
8000c4e4:	fb 49 06 90 	st.w	sp[1680],r9
8000c4e8:	87 0b       	st.w	r3[0x0],r11
8000c4ea:	87 1a       	st.w	r3[0x4],r10
8000c4ec:	fb 48 06 8c 	st.w	sp[1676],r8
8000c4f0:	58 78       	cp.w	r8,7
8000c4f2:	e0 89 00 11 	brgt	8000c514 <_vfprintf_r+0x1864>
8000c4f6:	2f 83       	sub	r3,-8
8000c4f8:	c1 88       	rjmp	8000c528 <_vfprintf_r+0x1878>
8000c4fa:	00 00       	add	r0,r0
8000c4fc:	80 00       	ld.sh	r0,r0[0x0]
8000c4fe:	a9 6c       	lsl	r12,0x8
8000c500:	80 00       	ld.sh	r0,r0[0x0]
8000c502:	ef 8a       	*unknown*
8000c504:	80 00       	ld.sh	r0,r0[0x0]
8000c506:	ed 02 80 01 	ld.sh	r2,r6[-32767]
8000c50a:	00 34       	cp.w	r4,r0
8000c50c:	80 00       	ld.sh	r0,r0[0x0]
8000c50e:	ac 90       	st.b	r6[0x1],r0
8000c510:	80 01       	ld.sh	r1,r0[0x0]
8000c512:	00 44       	or	r4,r0
8000c514:	fa ca f9 78 	sub	r10,sp,-1672
8000c518:	02 9b       	mov	r11,r1
8000c51a:	08 9c       	mov	r12,r4
8000c51c:	f0 1f 00 4c 	mcall	8000c64c <_vfprintf_r+0x199c>
8000c520:	e0 81 03 8d 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000c524:	fa c3 f9 e0 	sub	r3,sp,-1568
8000c528:	40 49       	lddsp	r9,sp[0x10]
8000c52a:	21 09       	sub	r9,16
8000c52c:	50 49       	stdsp	sp[0x10],r9
8000c52e:	fa f9 06 90 	ld.w	r9,sp[1680]
8000c532:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000c536:	4c 7a       	lddpc	r10,8000c650 <_vfprintf_r+0x19a0>
8000c538:	40 4e       	lddsp	lr,sp[0x10]
8000c53a:	59 0e       	cp.w	lr,16
8000c53c:	fe 99 ff d0 	brgt	8000c4dc <_vfprintf_r+0x182c>
8000c540:	1c 09       	add	r9,lr
8000c542:	2f f8       	sub	r8,-1
8000c544:	87 0a       	st.w	r3[0x0],r10
8000c546:	fb 49 06 90 	st.w	sp[1680],r9
8000c54a:	87 1e       	st.w	r3[0x4],lr
8000c54c:	fb 48 06 8c 	st.w	sp[1676],r8
8000c550:	58 78       	cp.w	r8,7
8000c552:	e0 89 00 04 	brgt	8000c55a <_vfprintf_r+0x18aa>
8000c556:	2f 83       	sub	r3,-8
8000c558:	c0 b8       	rjmp	8000c56e <_vfprintf_r+0x18be>
8000c55a:	fa ca f9 78 	sub	r10,sp,-1672
8000c55e:	02 9b       	mov	r11,r1
8000c560:	08 9c       	mov	r12,r4
8000c562:	f0 1f 00 3b 	mcall	8000c64c <_vfprintf_r+0x199c>
8000c566:	e0 81 03 6a 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000c56a:	fa c3 f9 e0 	sub	r3,sp,-1568
8000c56e:	40 2c       	lddsp	r12,sp[0x8]
8000c570:	04 1c       	sub	r12,r2
8000c572:	50 2c       	stdsp	sp[0x8],r12
8000c574:	58 0c       	cp.w	r12,0
8000c576:	e0 89 00 1f 	brgt	8000c5b4 <_vfprintf_r+0x1904>
8000c57a:	c3 d8       	rjmp	8000c5f4 <_vfprintf_r+0x1944>
8000c57c:	2f 09       	sub	r9,-16
8000c57e:	2f f8       	sub	r8,-1
8000c580:	4b 4b       	lddpc	r11,8000c650 <_vfprintf_r+0x19a0>
8000c582:	31 0a       	mov	r10,16
8000c584:	fb 49 06 90 	st.w	sp[1680],r9
8000c588:	87 0b       	st.w	r3[0x0],r11
8000c58a:	87 1a       	st.w	r3[0x4],r10
8000c58c:	fb 48 06 8c 	st.w	sp[1676],r8
8000c590:	58 78       	cp.w	r8,7
8000c592:	e0 89 00 04 	brgt	8000c59a <_vfprintf_r+0x18ea>
8000c596:	2f 83       	sub	r3,-8
8000c598:	c0 b8       	rjmp	8000c5ae <_vfprintf_r+0x18fe>
8000c59a:	fa ca f9 78 	sub	r10,sp,-1672
8000c59e:	02 9b       	mov	r11,r1
8000c5a0:	08 9c       	mov	r12,r4
8000c5a2:	f0 1f 00 2b 	mcall	8000c64c <_vfprintf_r+0x199c>
8000c5a6:	e0 81 03 4a 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000c5aa:	fa c3 f9 e0 	sub	r3,sp,-1568
8000c5ae:	40 29       	lddsp	r9,sp[0x8]
8000c5b0:	21 09       	sub	r9,16
8000c5b2:	50 29       	stdsp	sp[0x8],r9
8000c5b4:	fa f9 06 90 	ld.w	r9,sp[1680]
8000c5b8:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000c5bc:	4a 5a       	lddpc	r10,8000c650 <_vfprintf_r+0x19a0>
8000c5be:	40 2e       	lddsp	lr,sp[0x8]
8000c5c0:	59 0e       	cp.w	lr,16
8000c5c2:	fe 99 ff dd 	brgt	8000c57c <_vfprintf_r+0x18cc>
8000c5c6:	1c 09       	add	r9,lr
8000c5c8:	2f f8       	sub	r8,-1
8000c5ca:	87 0a       	st.w	r3[0x0],r10
8000c5cc:	fb 49 06 90 	st.w	sp[1680],r9
8000c5d0:	87 1e       	st.w	r3[0x4],lr
8000c5d2:	fb 48 06 8c 	st.w	sp[1676],r8
8000c5d6:	58 78       	cp.w	r8,7
8000c5d8:	e0 89 00 04 	brgt	8000c5e0 <_vfprintf_r+0x1930>
8000c5dc:	2f 83       	sub	r3,-8
8000c5de:	c0 b8       	rjmp	8000c5f4 <_vfprintf_r+0x1944>
8000c5e0:	fa ca f9 78 	sub	r10,sp,-1672
8000c5e4:	02 9b       	mov	r11,r1
8000c5e6:	08 9c       	mov	r12,r4
8000c5e8:	f0 1f 00 19 	mcall	8000c64c <_vfprintf_r+0x199c>
8000c5ec:	e0 81 03 27 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000c5f0:	fa c3 f9 e0 	sub	r3,sp,-1568
8000c5f4:	ed b5 00 08 	bld	r5,0x8
8000c5f8:	c0 b0       	breq	8000c60e <_vfprintf_r+0x195e>
8000c5fa:	fa f8 06 90 	ld.w	r8,sp[1680]
8000c5fe:	87 12       	st.w	r3[0x4],r2
8000c600:	87 06       	st.w	r3[0x0],r6
8000c602:	f0 02 00 02 	add	r2,r8,r2
8000c606:	fb 42 06 90 	st.w	sp[1680],r2
8000c60a:	e0 8f 01 db 	bral	8000c9c0 <_vfprintf_r+0x1d10>
8000c60e:	e0 40 00 65 	cp.w	r0,101
8000c612:	e0 8a 01 dd 	brle	8000c9cc <_vfprintf_r+0x1d1c>
8000c616:	30 08       	mov	r8,0
8000c618:	30 09       	mov	r9,0
8000c61a:	40 5b       	lddsp	r11,sp[0x14]
8000c61c:	40 7a       	lddsp	r10,sp[0x1c]
8000c61e:	f0 1f 00 0e 	mcall	8000c654 <_vfprintf_r+0x19a4>
8000c622:	c7 e0       	breq	8000c71e <_vfprintf_r+0x1a6e>
8000c624:	fa f8 06 90 	ld.w	r8,sp[1680]
8000c628:	48 c9       	lddpc	r9,8000c658 <_vfprintf_r+0x19a8>
8000c62a:	2f f8       	sub	r8,-1
8000c62c:	87 09       	st.w	r3[0x0],r9
8000c62e:	fb 48 06 90 	st.w	sp[1680],r8
8000c632:	30 19       	mov	r9,1
8000c634:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000c638:	87 19       	st.w	r3[0x4],r9
8000c63a:	2f f8       	sub	r8,-1
8000c63c:	fb 48 06 8c 	st.w	sp[1676],r8
8000c640:	58 78       	cp.w	r8,7
8000c642:	e0 89 00 0d 	brgt	8000c65c <_vfprintf_r+0x19ac>
8000c646:	2f 83       	sub	r3,-8
8000c648:	c1 48       	rjmp	8000c670 <_vfprintf_r+0x19c0>
8000c64a:	00 00       	add	r0,r0
8000c64c:	80 00       	ld.sh	r0,r0[0x0]
8000c64e:	ac 90       	st.b	r6[0x1],r0
8000c650:	80 01       	ld.sh	r1,r0[0x0]
8000c652:	00 44       	or	r4,r0
8000c654:	80 00       	ld.sh	r0,r0[0x0]
8000c656:	ec 06       	*unknown*
8000c658:	80 01       	ld.sh	r1,r0[0x0]
8000c65a:	00 30       	cp.w	r0,r0
8000c65c:	fa ca f9 78 	sub	r10,sp,-1672
8000c660:	02 9b       	mov	r11,r1
8000c662:	08 9c       	mov	r12,r4
8000c664:	f0 1f 00 78 	mcall	8000c844 <_vfprintf_r+0x1b94>
8000c668:	e0 81 02 e9 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000c66c:	fa c3 f9 e0 	sub	r3,sp,-1568
8000c670:	fa f8 06 ac 	ld.w	r8,sp[1708]
8000c674:	40 6c       	lddsp	r12,sp[0x18]
8000c676:	18 38       	cp.w	r8,r12
8000c678:	c0 55       	brlt	8000c682 <_vfprintf_r+0x19d2>
8000c67a:	ed b5 00 00 	bld	r5,0x0
8000c67e:	e0 81 02 6d 	brne	8000cb58 <_vfprintf_r+0x1ea8>
8000c682:	fa f8 06 90 	ld.w	r8,sp[1680]
8000c686:	2f f8       	sub	r8,-1
8000c688:	40 cb       	lddsp	r11,sp[0x30]
8000c68a:	fb 48 06 90 	st.w	sp[1680],r8
8000c68e:	30 19       	mov	r9,1
8000c690:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000c694:	87 0b       	st.w	r3[0x0],r11
8000c696:	2f f8       	sub	r8,-1
8000c698:	87 19       	st.w	r3[0x4],r9
8000c69a:	fb 48 06 8c 	st.w	sp[1676],r8
8000c69e:	58 78       	cp.w	r8,7
8000c6a0:	e0 89 00 04 	brgt	8000c6a8 <_vfprintf_r+0x19f8>
8000c6a4:	2f 83       	sub	r3,-8
8000c6a6:	c0 b8       	rjmp	8000c6bc <_vfprintf_r+0x1a0c>
8000c6a8:	fa ca f9 78 	sub	r10,sp,-1672
8000c6ac:	02 9b       	mov	r11,r1
8000c6ae:	08 9c       	mov	r12,r4
8000c6b0:	f0 1f 00 65 	mcall	8000c844 <_vfprintf_r+0x1b94>
8000c6b4:	e0 81 02 c3 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000c6b8:	fa c3 f9 e0 	sub	r3,sp,-1568
8000c6bc:	40 66       	lddsp	r6,sp[0x18]
8000c6be:	20 16       	sub	r6,1
8000c6c0:	58 06       	cp.w	r6,0
8000c6c2:	e0 89 00 1d 	brgt	8000c6fc <_vfprintf_r+0x1a4c>
8000c6c6:	e0 8f 02 49 	bral	8000cb58 <_vfprintf_r+0x1ea8>
8000c6ca:	2f 09       	sub	r9,-16
8000c6cc:	2f f8       	sub	r8,-1
8000c6ce:	fb 49 06 90 	st.w	sp[1680],r9
8000c6d2:	87 02       	st.w	r3[0x0],r2
8000c6d4:	87 10       	st.w	r3[0x4],r0
8000c6d6:	fb 48 06 8c 	st.w	sp[1676],r8
8000c6da:	58 78       	cp.w	r8,7
8000c6dc:	e0 89 00 04 	brgt	8000c6e4 <_vfprintf_r+0x1a34>
8000c6e0:	2f 83       	sub	r3,-8
8000c6e2:	c0 b8       	rjmp	8000c6f8 <_vfprintf_r+0x1a48>
8000c6e4:	fa ca f9 78 	sub	r10,sp,-1672
8000c6e8:	02 9b       	mov	r11,r1
8000c6ea:	08 9c       	mov	r12,r4
8000c6ec:	f0 1f 00 56 	mcall	8000c844 <_vfprintf_r+0x1b94>
8000c6f0:	e0 81 02 a5 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000c6f4:	fa c3 f9 e0 	sub	r3,sp,-1568
8000c6f8:	21 06       	sub	r6,16
8000c6fa:	c0 38       	rjmp	8000c700 <_vfprintf_r+0x1a50>
8000c6fc:	4d 32       	lddpc	r2,8000c848 <_vfprintf_r+0x1b98>
8000c6fe:	31 00       	mov	r0,16
8000c700:	fa f9 06 90 	ld.w	r9,sp[1680]
8000c704:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000c708:	4d 0a       	lddpc	r10,8000c848 <_vfprintf_r+0x1b98>
8000c70a:	59 06       	cp.w	r6,16
8000c70c:	fe 99 ff df 	brgt	8000c6ca <_vfprintf_r+0x1a1a>
8000c710:	0c 09       	add	r9,r6
8000c712:	87 0a       	st.w	r3[0x0],r10
8000c714:	fb 49 06 90 	st.w	sp[1680],r9
8000c718:	2f f8       	sub	r8,-1
8000c71a:	87 16       	st.w	r3[0x4],r6
8000c71c:	c5 59       	rjmp	8000c9c6 <_vfprintf_r+0x1d16>
8000c71e:	fa fa 06 ac 	ld.w	r10,sp[1708]
8000c722:	58 0a       	cp.w	r10,0
8000c724:	e0 89 00 96 	brgt	8000c850 <_vfprintf_r+0x1ba0>
8000c728:	fa f8 06 90 	ld.w	r8,sp[1680]
8000c72c:	4c 89       	lddpc	r9,8000c84c <_vfprintf_r+0x1b9c>
8000c72e:	2f f8       	sub	r8,-1
8000c730:	87 09       	st.w	r3[0x0],r9
8000c732:	fb 48 06 90 	st.w	sp[1680],r8
8000c736:	30 19       	mov	r9,1
8000c738:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000c73c:	87 19       	st.w	r3[0x4],r9
8000c73e:	2f f8       	sub	r8,-1
8000c740:	fb 48 06 8c 	st.w	sp[1676],r8
8000c744:	58 78       	cp.w	r8,7
8000c746:	e0 89 00 04 	brgt	8000c74e <_vfprintf_r+0x1a9e>
8000c74a:	2f 83       	sub	r3,-8
8000c74c:	c0 b8       	rjmp	8000c762 <_vfprintf_r+0x1ab2>
8000c74e:	fa ca f9 78 	sub	r10,sp,-1672
8000c752:	02 9b       	mov	r11,r1
8000c754:	08 9c       	mov	r12,r4
8000c756:	f0 1f 00 3c 	mcall	8000c844 <_vfprintf_r+0x1b94>
8000c75a:	e0 81 02 70 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000c75e:	fa c3 f9 e0 	sub	r3,sp,-1568
8000c762:	fa f8 06 ac 	ld.w	r8,sp[1708]
8000c766:	58 08       	cp.w	r8,0
8000c768:	c0 81       	brne	8000c778 <_vfprintf_r+0x1ac8>
8000c76a:	40 6a       	lddsp	r10,sp[0x18]
8000c76c:	58 0a       	cp.w	r10,0
8000c76e:	c0 51       	brne	8000c778 <_vfprintf_r+0x1ac8>
8000c770:	ed b5 00 00 	bld	r5,0x0
8000c774:	e0 81 01 f2 	brne	8000cb58 <_vfprintf_r+0x1ea8>
8000c778:	40 c9       	lddsp	r9,sp[0x30]
8000c77a:	fa f8 06 90 	ld.w	r8,sp[1680]
8000c77e:	2f f8       	sub	r8,-1
8000c780:	87 09       	st.w	r3[0x0],r9
8000c782:	fb 48 06 90 	st.w	sp[1680],r8
8000c786:	30 19       	mov	r9,1
8000c788:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000c78c:	87 19       	st.w	r3[0x4],r9
8000c78e:	2f f8       	sub	r8,-1
8000c790:	fb 48 06 8c 	st.w	sp[1676],r8
8000c794:	58 78       	cp.w	r8,7
8000c796:	e0 89 00 04 	brgt	8000c79e <_vfprintf_r+0x1aee>
8000c79a:	2f 83       	sub	r3,-8
8000c79c:	c0 b8       	rjmp	8000c7b2 <_vfprintf_r+0x1b02>
8000c79e:	fa ca f9 78 	sub	r10,sp,-1672
8000c7a2:	02 9b       	mov	r11,r1
8000c7a4:	08 9c       	mov	r12,r4
8000c7a6:	f0 1f 00 28 	mcall	8000c844 <_vfprintf_r+0x1b94>
8000c7aa:	e0 81 02 48 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000c7ae:	fa c3 f9 e0 	sub	r3,sp,-1568
8000c7b2:	fa f2 06 ac 	ld.w	r2,sp[1708]
8000c7b6:	5c 32       	neg	r2
8000c7b8:	58 02       	cp.w	r2,0
8000c7ba:	e0 89 00 1d 	brgt	8000c7f4 <_vfprintf_r+0x1b44>
8000c7be:	c3 b8       	rjmp	8000c834 <_vfprintf_r+0x1b84>
8000c7c0:	2f 09       	sub	r9,-16
8000c7c2:	2f f8       	sub	r8,-1
8000c7c4:	31 0e       	mov	lr,16
8000c7c6:	fb 49 06 90 	st.w	sp[1680],r9
8000c7ca:	87 00       	st.w	r3[0x0],r0
8000c7cc:	87 1e       	st.w	r3[0x4],lr
8000c7ce:	fb 48 06 8c 	st.w	sp[1676],r8
8000c7d2:	58 78       	cp.w	r8,7
8000c7d4:	e0 89 00 04 	brgt	8000c7dc <_vfprintf_r+0x1b2c>
8000c7d8:	2f 83       	sub	r3,-8
8000c7da:	c0 b8       	rjmp	8000c7f0 <_vfprintf_r+0x1b40>
8000c7dc:	fa ca f9 78 	sub	r10,sp,-1672
8000c7e0:	02 9b       	mov	r11,r1
8000c7e2:	08 9c       	mov	r12,r4
8000c7e4:	f0 1f 00 18 	mcall	8000c844 <_vfprintf_r+0x1b94>
8000c7e8:	e0 81 02 29 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000c7ec:	fa c3 f9 e0 	sub	r3,sp,-1568
8000c7f0:	21 02       	sub	r2,16
8000c7f2:	c0 28       	rjmp	8000c7f6 <_vfprintf_r+0x1b46>
8000c7f4:	49 50       	lddpc	r0,8000c848 <_vfprintf_r+0x1b98>
8000c7f6:	fa f9 06 90 	ld.w	r9,sp[1680]
8000c7fa:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000c7fe:	49 3a       	lddpc	r10,8000c848 <_vfprintf_r+0x1b98>
8000c800:	59 02       	cp.w	r2,16
8000c802:	fe 99 ff df 	brgt	8000c7c0 <_vfprintf_r+0x1b10>
8000c806:	04 09       	add	r9,r2
8000c808:	2f f8       	sub	r8,-1
8000c80a:	87 0a       	st.w	r3[0x0],r10
8000c80c:	fb 49 06 90 	st.w	sp[1680],r9
8000c810:	87 12       	st.w	r3[0x4],r2
8000c812:	fb 48 06 8c 	st.w	sp[1676],r8
8000c816:	58 78       	cp.w	r8,7
8000c818:	e0 89 00 04 	brgt	8000c820 <_vfprintf_r+0x1b70>
8000c81c:	2f 83       	sub	r3,-8
8000c81e:	c0 b8       	rjmp	8000c834 <_vfprintf_r+0x1b84>
8000c820:	fa ca f9 78 	sub	r10,sp,-1672
8000c824:	02 9b       	mov	r11,r1
8000c826:	08 9c       	mov	r12,r4
8000c828:	f0 1f 00 07 	mcall	8000c844 <_vfprintf_r+0x1b94>
8000c82c:	e0 81 02 07 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000c830:	fa c3 f9 e0 	sub	r3,sp,-1568
8000c834:	40 6c       	lddsp	r12,sp[0x18]
8000c836:	fa f8 06 90 	ld.w	r8,sp[1680]
8000c83a:	87 06       	st.w	r3[0x0],r6
8000c83c:	87 1c       	st.w	r3[0x4],r12
8000c83e:	18 08       	add	r8,r12
8000c840:	cb e8       	rjmp	8000c9bc <_vfprintf_r+0x1d0c>
8000c842:	00 00       	add	r0,r0
8000c844:	80 00       	ld.sh	r0,r0[0x0]
8000c846:	ac 90       	st.b	r6[0x1],r0
8000c848:	80 01       	ld.sh	r1,r0[0x0]
8000c84a:	00 44       	or	r4,r0
8000c84c:	80 01       	ld.sh	r1,r0[0x0]
8000c84e:	00 30       	cp.w	r0,r0
8000c850:	fa f9 06 90 	ld.w	r9,sp[1680]
8000c854:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000c858:	40 6b       	lddsp	r11,sp[0x18]
8000c85a:	16 3a       	cp.w	r10,r11
8000c85c:	c6 d5       	brlt	8000c936 <_vfprintf_r+0x1c86>
8000c85e:	16 09       	add	r9,r11
8000c860:	2f f8       	sub	r8,-1
8000c862:	87 06       	st.w	r3[0x0],r6
8000c864:	fb 49 06 90 	st.w	sp[1680],r9
8000c868:	87 1b       	st.w	r3[0x4],r11
8000c86a:	fb 48 06 8c 	st.w	sp[1676],r8
8000c86e:	58 78       	cp.w	r8,7
8000c870:	e0 89 00 04 	brgt	8000c878 <_vfprintf_r+0x1bc8>
8000c874:	2f 83       	sub	r3,-8
8000c876:	c0 b8       	rjmp	8000c88c <_vfprintf_r+0x1bdc>
8000c878:	fa ca f9 78 	sub	r10,sp,-1672
8000c87c:	02 9b       	mov	r11,r1
8000c87e:	08 9c       	mov	r12,r4
8000c880:	f0 1f 00 6f 	mcall	8000ca3c <_vfprintf_r+0x1d8c>
8000c884:	e0 81 01 db 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000c888:	fa c3 f9 e0 	sub	r3,sp,-1568
8000c88c:	fa f6 06 ac 	ld.w	r6,sp[1708]
8000c890:	40 6a       	lddsp	r10,sp[0x18]
8000c892:	14 16       	sub	r6,r10
8000c894:	58 06       	cp.w	r6,0
8000c896:	e0 89 00 1c 	brgt	8000c8ce <_vfprintf_r+0x1c1e>
8000c89a:	c3 b8       	rjmp	8000c910 <_vfprintf_r+0x1c60>
8000c89c:	2f 09       	sub	r9,-16
8000c89e:	2f f8       	sub	r8,-1
8000c8a0:	fb 49 06 90 	st.w	sp[1680],r9
8000c8a4:	87 02       	st.w	r3[0x0],r2
8000c8a6:	87 10       	st.w	r3[0x4],r0
8000c8a8:	fb 48 06 8c 	st.w	sp[1676],r8
8000c8ac:	58 78       	cp.w	r8,7
8000c8ae:	e0 89 00 04 	brgt	8000c8b6 <_vfprintf_r+0x1c06>
8000c8b2:	2f 83       	sub	r3,-8
8000c8b4:	c0 b8       	rjmp	8000c8ca <_vfprintf_r+0x1c1a>
8000c8b6:	fa ca f9 78 	sub	r10,sp,-1672
8000c8ba:	02 9b       	mov	r11,r1
8000c8bc:	08 9c       	mov	r12,r4
8000c8be:	f0 1f 00 60 	mcall	8000ca3c <_vfprintf_r+0x1d8c>
8000c8c2:	e0 81 01 bc 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000c8c6:	fa c3 f9 e0 	sub	r3,sp,-1568
8000c8ca:	21 06       	sub	r6,16
8000c8cc:	c0 38       	rjmp	8000c8d2 <_vfprintf_r+0x1c22>
8000c8ce:	4d d2       	lddpc	r2,8000ca40 <_vfprintf_r+0x1d90>
8000c8d0:	31 00       	mov	r0,16
8000c8d2:	fa f9 06 90 	ld.w	r9,sp[1680]
8000c8d6:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000c8da:	4d aa       	lddpc	r10,8000ca40 <_vfprintf_r+0x1d90>
8000c8dc:	59 06       	cp.w	r6,16
8000c8de:	fe 99 ff df 	brgt	8000c89c <_vfprintf_r+0x1bec>
8000c8e2:	0c 09       	add	r9,r6
8000c8e4:	2f f8       	sub	r8,-1
8000c8e6:	87 0a       	st.w	r3[0x0],r10
8000c8e8:	fb 49 06 90 	st.w	sp[1680],r9
8000c8ec:	87 16       	st.w	r3[0x4],r6
8000c8ee:	fb 48 06 8c 	st.w	sp[1676],r8
8000c8f2:	58 78       	cp.w	r8,7
8000c8f4:	e0 89 00 04 	brgt	8000c8fc <_vfprintf_r+0x1c4c>
8000c8f8:	2f 83       	sub	r3,-8
8000c8fa:	c0 b8       	rjmp	8000c910 <_vfprintf_r+0x1c60>
8000c8fc:	fa ca f9 78 	sub	r10,sp,-1672
8000c900:	02 9b       	mov	r11,r1
8000c902:	08 9c       	mov	r12,r4
8000c904:	f0 1f 00 4e 	mcall	8000ca3c <_vfprintf_r+0x1d8c>
8000c908:	e0 81 01 99 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000c90c:	fa c3 f9 e0 	sub	r3,sp,-1568
8000c910:	ed b5 00 00 	bld	r5,0x0
8000c914:	e0 81 01 22 	brne	8000cb58 <_vfprintf_r+0x1ea8>
8000c918:	40 c9       	lddsp	r9,sp[0x30]
8000c91a:	fa f8 06 90 	ld.w	r8,sp[1680]
8000c91e:	2f f8       	sub	r8,-1
8000c920:	87 09       	st.w	r3[0x0],r9
8000c922:	fb 48 06 90 	st.w	sp[1680],r8
8000c926:	30 19       	mov	r9,1
8000c928:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000c92c:	87 19       	st.w	r3[0x4],r9
8000c92e:	2f f8       	sub	r8,-1
8000c930:	fb 48 06 8c 	st.w	sp[1676],r8
8000c934:	c0 49       	rjmp	8000cb3c <_vfprintf_r+0x1e8c>
8000c936:	14 09       	add	r9,r10
8000c938:	2f f8       	sub	r8,-1
8000c93a:	fb 49 06 90 	st.w	sp[1680],r9
8000c93e:	87 06       	st.w	r3[0x0],r6
8000c940:	87 1a       	st.w	r3[0x4],r10
8000c942:	fb 48 06 8c 	st.w	sp[1676],r8
8000c946:	58 78       	cp.w	r8,7
8000c948:	e0 89 00 04 	brgt	8000c950 <_vfprintf_r+0x1ca0>
8000c94c:	2f 83       	sub	r3,-8
8000c94e:	c0 b8       	rjmp	8000c964 <_vfprintf_r+0x1cb4>
8000c950:	fa ca f9 78 	sub	r10,sp,-1672
8000c954:	02 9b       	mov	r11,r1
8000c956:	08 9c       	mov	r12,r4
8000c958:	f0 1f 00 39 	mcall	8000ca3c <_vfprintf_r+0x1d8c>
8000c95c:	e0 81 01 6f 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000c960:	fa c3 f9 e0 	sub	r3,sp,-1568
8000c964:	40 c8       	lddsp	r8,sp[0x30]
8000c966:	87 08       	st.w	r3[0x0],r8
8000c968:	fa f8 06 90 	ld.w	r8,sp[1680]
8000c96c:	2f f8       	sub	r8,-1
8000c96e:	30 19       	mov	r9,1
8000c970:	fb 48 06 90 	st.w	sp[1680],r8
8000c974:	87 19       	st.w	r3[0x4],r9
8000c976:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000c97a:	2f f8       	sub	r8,-1
8000c97c:	fb 48 06 8c 	st.w	sp[1676],r8
8000c980:	fa f2 06 ac 	ld.w	r2,sp[1708]
8000c984:	58 78       	cp.w	r8,7
8000c986:	e0 89 00 04 	brgt	8000c98e <_vfprintf_r+0x1cde>
8000c98a:	2f 83       	sub	r3,-8
8000c98c:	c0 b8       	rjmp	8000c9a2 <_vfprintf_r+0x1cf2>
8000c98e:	fa ca f9 78 	sub	r10,sp,-1672
8000c992:	02 9b       	mov	r11,r1
8000c994:	08 9c       	mov	r12,r4
8000c996:	f0 1f 00 2a 	mcall	8000ca3c <_vfprintf_r+0x1d8c>
8000c99a:	e0 81 01 50 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000c99e:	fa c3 f9 e0 	sub	r3,sp,-1568
8000c9a2:	04 06       	add	r6,r2
8000c9a4:	fa f8 06 ac 	ld.w	r8,sp[1708]
8000c9a8:	87 06       	st.w	r3[0x0],r6
8000c9aa:	fa f9 06 90 	ld.w	r9,sp[1680]
8000c9ae:	40 66       	lddsp	r6,sp[0x18]
8000c9b0:	40 6e       	lddsp	lr,sp[0x18]
8000c9b2:	10 16       	sub	r6,r8
8000c9b4:	f2 08 01 08 	sub	r8,r9,r8
8000c9b8:	87 16       	st.w	r3[0x4],r6
8000c9ba:	1c 08       	add	r8,lr
8000c9bc:	fb 48 06 90 	st.w	sp[1680],r8
8000c9c0:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000c9c4:	2f f8       	sub	r8,-1
8000c9c6:	fb 48 06 8c 	st.w	sp[1676],r8
8000c9ca:	cb 98       	rjmp	8000cb3c <_vfprintf_r+0x1e8c>
8000c9cc:	40 6c       	lddsp	r12,sp[0x18]
8000c9ce:	58 1c       	cp.w	r12,1
8000c9d0:	e0 89 00 06 	brgt	8000c9dc <_vfprintf_r+0x1d2c>
8000c9d4:	ed b5 00 00 	bld	r5,0x0
8000c9d8:	e0 81 00 87 	brne	8000cae6 <_vfprintf_r+0x1e36>
8000c9dc:	fa f8 06 90 	ld.w	r8,sp[1680]
8000c9e0:	2f f8       	sub	r8,-1
8000c9e2:	30 19       	mov	r9,1
8000c9e4:	fb 48 06 90 	st.w	sp[1680],r8
8000c9e8:	87 06       	st.w	r3[0x0],r6
8000c9ea:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000c9ee:	87 19       	st.w	r3[0x4],r9
8000c9f0:	2f f8       	sub	r8,-1
8000c9f2:	fb 48 06 8c 	st.w	sp[1676],r8
8000c9f6:	58 78       	cp.w	r8,7
8000c9f8:	e0 89 00 04 	brgt	8000ca00 <_vfprintf_r+0x1d50>
8000c9fc:	2f 83       	sub	r3,-8
8000c9fe:	c0 b8       	rjmp	8000ca14 <_vfprintf_r+0x1d64>
8000ca00:	fa ca f9 78 	sub	r10,sp,-1672
8000ca04:	02 9b       	mov	r11,r1
8000ca06:	08 9c       	mov	r12,r4
8000ca08:	f0 1f 00 0d 	mcall	8000ca3c <_vfprintf_r+0x1d8c>
8000ca0c:	e0 81 01 17 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000ca10:	fa c3 f9 e0 	sub	r3,sp,-1568
8000ca14:	fa f8 06 90 	ld.w	r8,sp[1680]
8000ca18:	2f f8       	sub	r8,-1
8000ca1a:	40 cb       	lddsp	r11,sp[0x30]
8000ca1c:	fb 48 06 90 	st.w	sp[1680],r8
8000ca20:	30 19       	mov	r9,1
8000ca22:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000ca26:	87 0b       	st.w	r3[0x0],r11
8000ca28:	2f f8       	sub	r8,-1
8000ca2a:	87 19       	st.w	r3[0x4],r9
8000ca2c:	fb 48 06 8c 	st.w	sp[1676],r8
8000ca30:	58 78       	cp.w	r8,7
8000ca32:	e0 89 00 09 	brgt	8000ca44 <_vfprintf_r+0x1d94>
8000ca36:	2f 83       	sub	r3,-8
8000ca38:	c1 08       	rjmp	8000ca58 <_vfprintf_r+0x1da8>
8000ca3a:	00 00       	add	r0,r0
8000ca3c:	80 00       	ld.sh	r0,r0[0x0]
8000ca3e:	ac 90       	st.b	r6[0x1],r0
8000ca40:	80 01       	ld.sh	r1,r0[0x0]
8000ca42:	00 44       	or	r4,r0
8000ca44:	fa ca f9 78 	sub	r10,sp,-1672
8000ca48:	02 9b       	mov	r11,r1
8000ca4a:	08 9c       	mov	r12,r4
8000ca4c:	f0 1f 00 6f 	mcall	8000cc08 <_vfprintf_r+0x1f58>
8000ca50:	e0 81 00 f5 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000ca54:	fa c3 f9 e0 	sub	r3,sp,-1568
8000ca58:	30 08       	mov	r8,0
8000ca5a:	30 09       	mov	r9,0
8000ca5c:	40 5b       	lddsp	r11,sp[0x14]
8000ca5e:	40 7a       	lddsp	r10,sp[0x1c]
8000ca60:	f0 1f 00 6b 	mcall	8000cc0c <_vfprintf_r+0x1f5c>
8000ca64:	40 68       	lddsp	r8,sp[0x18]
8000ca66:	20 18       	sub	r8,1
8000ca68:	58 0c       	cp.w	r12,0
8000ca6a:	c0 d1       	brne	8000ca84 <_vfprintf_r+0x1dd4>
8000ca6c:	2f f6       	sub	r6,-1
8000ca6e:	87 18       	st.w	r3[0x4],r8
8000ca70:	87 06       	st.w	r3[0x0],r6
8000ca72:	fa f6 06 90 	ld.w	r6,sp[1680]
8000ca76:	10 06       	add	r6,r8
8000ca78:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000ca7c:	fb 46 06 90 	st.w	sp[1680],r6
8000ca80:	2f f8       	sub	r8,-1
8000ca82:	c2 f8       	rjmp	8000cae0 <_vfprintf_r+0x1e30>
8000ca84:	10 96       	mov	r6,r8
8000ca86:	58 08       	cp.w	r8,0
8000ca88:	e0 89 00 1c 	brgt	8000cac0 <_vfprintf_r+0x1e10>
8000ca8c:	c4 98       	rjmp	8000cb1e <_vfprintf_r+0x1e6e>
8000ca8e:	2f 09       	sub	r9,-16
8000ca90:	2f f8       	sub	r8,-1
8000ca92:	fb 49 06 90 	st.w	sp[1680],r9
8000ca96:	87 02       	st.w	r3[0x0],r2
8000ca98:	87 10       	st.w	r3[0x4],r0
8000ca9a:	fb 48 06 8c 	st.w	sp[1676],r8
8000ca9e:	58 78       	cp.w	r8,7
8000caa0:	e0 89 00 04 	brgt	8000caa8 <_vfprintf_r+0x1df8>
8000caa4:	2f 83       	sub	r3,-8
8000caa6:	c0 b8       	rjmp	8000cabc <_vfprintf_r+0x1e0c>
8000caa8:	fa ca f9 78 	sub	r10,sp,-1672
8000caac:	02 9b       	mov	r11,r1
8000caae:	08 9c       	mov	r12,r4
8000cab0:	f0 1f 00 56 	mcall	8000cc08 <_vfprintf_r+0x1f58>
8000cab4:	e0 81 00 c3 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000cab8:	fa c3 f9 e0 	sub	r3,sp,-1568
8000cabc:	21 06       	sub	r6,16
8000cabe:	c0 38       	rjmp	8000cac4 <_vfprintf_r+0x1e14>
8000cac0:	4d 42       	lddpc	r2,8000cc10 <_vfprintf_r+0x1f60>
8000cac2:	31 00       	mov	r0,16
8000cac4:	fa f9 06 90 	ld.w	r9,sp[1680]
8000cac8:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000cacc:	4d 1a       	lddpc	r10,8000cc10 <_vfprintf_r+0x1f60>
8000cace:	59 06       	cp.w	r6,16
8000cad0:	fe 99 ff df 	brgt	8000ca8e <_vfprintf_r+0x1dde>
8000cad4:	0c 09       	add	r9,r6
8000cad6:	87 0a       	st.w	r3[0x0],r10
8000cad8:	fb 49 06 90 	st.w	sp[1680],r9
8000cadc:	2f f8       	sub	r8,-1
8000cade:	87 16       	st.w	r3[0x4],r6
8000cae0:	fb 48 06 8c 	st.w	sp[1676],r8
8000cae4:	c0 e8       	rjmp	8000cb00 <_vfprintf_r+0x1e50>
8000cae6:	fa f8 06 90 	ld.w	r8,sp[1680]
8000caea:	2f f8       	sub	r8,-1
8000caec:	30 19       	mov	r9,1
8000caee:	fb 48 06 90 	st.w	sp[1680],r8
8000caf2:	87 06       	st.w	r3[0x0],r6
8000caf4:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000caf8:	87 19       	st.w	r3[0x4],r9
8000cafa:	2f f8       	sub	r8,-1
8000cafc:	fb 48 06 8c 	st.w	sp[1676],r8
8000cb00:	58 78       	cp.w	r8,7
8000cb02:	e0 89 00 04 	brgt	8000cb0a <_vfprintf_r+0x1e5a>
8000cb06:	2f 83       	sub	r3,-8
8000cb08:	c0 b8       	rjmp	8000cb1e <_vfprintf_r+0x1e6e>
8000cb0a:	fa ca f9 78 	sub	r10,sp,-1672
8000cb0e:	02 9b       	mov	r11,r1
8000cb10:	08 9c       	mov	r12,r4
8000cb12:	f0 1f 00 3e 	mcall	8000cc08 <_vfprintf_r+0x1f58>
8000cb16:	e0 81 00 92 	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000cb1a:	fa c3 f9 e0 	sub	r3,sp,-1568
8000cb1e:	40 ea       	lddsp	r10,sp[0x38]
8000cb20:	fa f8 06 90 	ld.w	r8,sp[1680]
8000cb24:	14 08       	add	r8,r10
8000cb26:	fa c9 f9 64 	sub	r9,sp,-1692
8000cb2a:	fb 48 06 90 	st.w	sp[1680],r8
8000cb2e:	87 1a       	st.w	r3[0x4],r10
8000cb30:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000cb34:	87 09       	st.w	r3[0x0],r9
8000cb36:	2f f8       	sub	r8,-1
8000cb38:	fb 48 06 8c 	st.w	sp[1676],r8
8000cb3c:	58 78       	cp.w	r8,7
8000cb3e:	e0 89 00 04 	brgt	8000cb46 <_vfprintf_r+0x1e96>
8000cb42:	2f 83       	sub	r3,-8
8000cb44:	c0 a8       	rjmp	8000cb58 <_vfprintf_r+0x1ea8>
8000cb46:	fa ca f9 78 	sub	r10,sp,-1672
8000cb4a:	02 9b       	mov	r11,r1
8000cb4c:	08 9c       	mov	r12,r4
8000cb4e:	f0 1f 00 2f 	mcall	8000cc08 <_vfprintf_r+0x1f58>
8000cb52:	c7 41       	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000cb54:	fa c3 f9 e0 	sub	r3,sp,-1568
8000cb58:	e2 15 00 04 	andl	r5,0x4,COH
8000cb5c:	c3 d0       	breq	8000cbd6 <_vfprintf_r+0x1f26>
8000cb5e:	40 86       	lddsp	r6,sp[0x20]
8000cb60:	40 39       	lddsp	r9,sp[0xc]
8000cb62:	12 16       	sub	r6,r9
8000cb64:	58 06       	cp.w	r6,0
8000cb66:	e0 89 00 1a 	brgt	8000cb9a <_vfprintf_r+0x1eea>
8000cb6a:	c3 68       	rjmp	8000cbd6 <_vfprintf_r+0x1f26>
8000cb6c:	2f 09       	sub	r9,-16
8000cb6e:	2f f8       	sub	r8,-1
8000cb70:	fb 49 06 90 	st.w	sp[1680],r9
8000cb74:	87 05       	st.w	r3[0x0],r5
8000cb76:	87 12       	st.w	r3[0x4],r2
8000cb78:	fb 48 06 8c 	st.w	sp[1676],r8
8000cb7c:	58 78       	cp.w	r8,7
8000cb7e:	e0 89 00 04 	brgt	8000cb86 <_vfprintf_r+0x1ed6>
8000cb82:	2f 83       	sub	r3,-8
8000cb84:	c0 98       	rjmp	8000cb96 <_vfprintf_r+0x1ee6>
8000cb86:	00 9a       	mov	r10,r0
8000cb88:	02 9b       	mov	r11,r1
8000cb8a:	08 9c       	mov	r12,r4
8000cb8c:	f0 1f 00 1f 	mcall	8000cc08 <_vfprintf_r+0x1f58>
8000cb90:	c5 51       	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000cb92:	fa c3 f9 e0 	sub	r3,sp,-1568
8000cb96:	21 06       	sub	r6,16
8000cb98:	c0 58       	rjmp	8000cba2 <_vfprintf_r+0x1ef2>
8000cb9a:	49 f5       	lddpc	r5,8000cc14 <_vfprintf_r+0x1f64>
8000cb9c:	31 02       	mov	r2,16
8000cb9e:	fa c0 f9 78 	sub	r0,sp,-1672
8000cba2:	fa f9 06 90 	ld.w	r9,sp[1680]
8000cba6:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000cbaa:	49 ba       	lddpc	r10,8000cc14 <_vfprintf_r+0x1f64>
8000cbac:	59 06       	cp.w	r6,16
8000cbae:	fe 99 ff df 	brgt	8000cb6c <_vfprintf_r+0x1ebc>
8000cbb2:	0c 09       	add	r9,r6
8000cbb4:	2f f8       	sub	r8,-1
8000cbb6:	87 0a       	st.w	r3[0x0],r10
8000cbb8:	87 16       	st.w	r3[0x4],r6
8000cbba:	fb 49 06 90 	st.w	sp[1680],r9
8000cbbe:	fb 48 06 8c 	st.w	sp[1676],r8
8000cbc2:	58 78       	cp.w	r8,7
8000cbc4:	e0 8a 00 09 	brle	8000cbd6 <_vfprintf_r+0x1f26>
8000cbc8:	fa ca f9 78 	sub	r10,sp,-1672
8000cbcc:	02 9b       	mov	r11,r1
8000cbce:	08 9c       	mov	r12,r4
8000cbd0:	f0 1f 00 0e 	mcall	8000cc08 <_vfprintf_r+0x1f58>
8000cbd4:	c3 31       	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000cbd6:	40 bc       	lddsp	r12,sp[0x2c]
8000cbd8:	40 36       	lddsp	r6,sp[0xc]
8000cbda:	40 8e       	lddsp	lr,sp[0x20]
8000cbdc:	ec 0e 0c 48 	max	r8,r6,lr
8000cbe0:	10 0c       	add	r12,r8
8000cbe2:	50 bc       	stdsp	sp[0x2c],r12
8000cbe4:	fa f8 06 90 	ld.w	r8,sp[1680]
8000cbe8:	58 08       	cp.w	r8,0
8000cbea:	c0 80       	breq	8000cbfa <_vfprintf_r+0x1f4a>
8000cbec:	fa ca f9 78 	sub	r10,sp,-1672
8000cbf0:	02 9b       	mov	r11,r1
8000cbf2:	08 9c       	mov	r12,r4
8000cbf4:	f0 1f 00 05 	mcall	8000cc08 <_vfprintf_r+0x1f58>
8000cbf8:	c2 11       	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000cbfa:	30 08       	mov	r8,0
8000cbfc:	fa c3 f9 e0 	sub	r3,sp,-1568
8000cc00:	fb 48 06 8c 	st.w	sp[1676],r8
8000cc04:	fe 9f f0 e1 	bral	8000adc6 <_vfprintf_r+0x116>
8000cc08:	80 00       	ld.sh	r0,r0[0x0]
8000cc0a:	ac 90       	st.b	r6[0x1],r0
8000cc0c:	80 00       	ld.sh	r0,r0[0x0]
8000cc0e:	ec 06       	*unknown*
8000cc10:	80 01       	ld.sh	r1,r0[0x0]
8000cc12:	00 44       	or	r4,r0
8000cc14:	80 01       	ld.sh	r1,r0[0x0]
8000cc16:	00 34       	cp.w	r4,r0
8000cc18:	08 95       	mov	r5,r4
8000cc1a:	fa f8 06 90 	ld.w	r8,sp[1680]
8000cc1e:	58 08       	cp.w	r8,0
8000cc20:	c0 80       	breq	8000cc30 <_vfprintf_r+0x1f80>
8000cc22:	08 9c       	mov	r12,r4
8000cc24:	fa ca f9 78 	sub	r10,sp,-1672
8000cc28:	02 9b       	mov	r11,r1
8000cc2a:	f0 1f 00 0a 	mcall	8000cc50 <_vfprintf_r+0x1fa0>
8000cc2e:	c0 61       	brne	8000cc3a <_vfprintf_r+0x1f8a>
8000cc30:	30 08       	mov	r8,0
8000cc32:	fb 48 06 8c 	st.w	sp[1676],r8
8000cc36:	c0 28       	rjmp	8000cc3a <_vfprintf_r+0x1f8a>
8000cc38:	40 41       	lddsp	r1,sp[0x10]
8000cc3a:	82 68       	ld.sh	r8,r1[0xc]
8000cc3c:	ed b8 00 06 	bld	r8,0x6
8000cc40:	c0 31       	brne	8000cc46 <_vfprintf_r+0x1f96>
8000cc42:	3f fb       	mov	r11,-1
8000cc44:	50 bb       	stdsp	sp[0x2c],r11
8000cc46:	40 bc       	lddsp	r12,sp[0x2c]
8000cc48:	fe 3d f9 44 	sub	sp,-1724
8000cc4c:	d8 32       	popm	r0-r7,pc
8000cc4e:	00 00       	add	r0,r0
8000cc50:	80 00       	ld.sh	r0,r0[0x0]
8000cc52:	ac 90       	st.b	r6[0x1],r0

8000cc54 <__swbuf_r>:
8000cc54:	d4 21       	pushm	r4-r7,lr
8000cc56:	16 97       	mov	r7,r11
8000cc58:	14 96       	mov	r6,r10
8000cc5a:	18 95       	mov	r5,r12
8000cc5c:	58 0c       	cp.w	r12,0
8000cc5e:	c0 60       	breq	8000cc6a <__swbuf_r+0x16>
8000cc60:	78 68       	ld.w	r8,r12[0x18]
8000cc62:	58 08       	cp.w	r8,0
8000cc64:	c0 31       	brne	8000cc6a <__swbuf_r+0x16>
8000cc66:	f0 1f 00 25 	mcall	8000ccf8 <__swbuf_r+0xa4>
8000cc6a:	4a 58       	lddpc	r8,8000ccfc <__swbuf_r+0xa8>
8000cc6c:	10 36       	cp.w	r6,r8
8000cc6e:	c0 31       	brne	8000cc74 <__swbuf_r+0x20>
8000cc70:	6a 06       	ld.w	r6,r5[0x0]
8000cc72:	c0 a8       	rjmp	8000cc86 <__swbuf_r+0x32>
8000cc74:	4a 38       	lddpc	r8,8000cd00 <__swbuf_r+0xac>
8000cc76:	10 36       	cp.w	r6,r8
8000cc78:	c0 31       	brne	8000cc7e <__swbuf_r+0x2a>
8000cc7a:	6a 16       	ld.w	r6,r5[0x4]
8000cc7c:	c0 58       	rjmp	8000cc86 <__swbuf_r+0x32>
8000cc7e:	4a 28       	lddpc	r8,8000cd04 <__swbuf_r+0xb0>
8000cc80:	10 36       	cp.w	r6,r8
8000cc82:	c0 21       	brne	8000cc86 <__swbuf_r+0x32>
8000cc84:	6a 26       	ld.w	r6,r5[0x8]
8000cc86:	6c 68       	ld.w	r8,r6[0x18]
8000cc88:	8d 28       	st.w	r6[0x8],r8
8000cc8a:	8c 68       	ld.sh	r8,r6[0xc]
8000cc8c:	ed b8 00 03 	bld	r8,0x3
8000cc90:	c0 41       	brne	8000cc98 <__swbuf_r+0x44>
8000cc92:	6c 48       	ld.w	r8,r6[0x10]
8000cc94:	58 08       	cp.w	r8,0
8000cc96:	c0 c1       	brne	8000ccae <__swbuf_r+0x5a>
8000cc98:	0c 9b       	mov	r11,r6
8000cc9a:	0a 9c       	mov	r12,r5
8000cc9c:	f0 1f 00 1b 	mcall	8000cd08 <__swbuf_r+0xb4>
8000cca0:	c0 70       	breq	8000ccae <__swbuf_r+0x5a>
8000cca2:	8c 68       	ld.sh	r8,r6[0xc]
8000cca4:	a7 a8       	sbr	r8,0x6
8000cca6:	ac 68       	st.h	r6[0xc],r8
8000cca8:	30 98       	mov	r8,9
8000ccaa:	8b 38       	st.w	r5[0xc],r8
8000ccac:	c2 28       	rjmp	8000ccf0 <__swbuf_r+0x9c>
8000ccae:	6c 48       	ld.w	r8,r6[0x10]
8000ccb0:	6c 0c       	ld.w	r12,r6[0x0]
8000ccb2:	10 1c       	sub	r12,r8
8000ccb4:	6c 58       	ld.w	r8,r6[0x14]
8000ccb6:	10 3c       	cp.w	r12,r8
8000ccb8:	c0 65       	brlt	8000ccc4 <__swbuf_r+0x70>
8000ccba:	0c 9b       	mov	r11,r6
8000ccbc:	0a 9c       	mov	r12,r5
8000ccbe:	f0 1f 00 14 	mcall	8000cd0c <__swbuf_r+0xb8>
8000ccc2:	c1 71       	brne	8000ccf0 <__swbuf_r+0x9c>
8000ccc4:	6c 28       	ld.w	r8,r6[0x8]
8000ccc6:	20 18       	sub	r8,1
8000ccc8:	8d 28       	st.w	r6[0x8],r8
8000ccca:	5c 57       	castu.b	r7
8000cccc:	6c 08       	ld.w	r8,r6[0x0]
8000ccce:	10 c7       	st.b	r8++,r7
8000ccd0:	8d 08       	st.w	r6[0x0],r8
8000ccd2:	2f fc       	sub	r12,-1
8000ccd4:	6c 58       	ld.w	r8,r6[0x14]
8000ccd6:	10 3c       	cp.w	r12,r8
8000ccd8:	c0 70       	breq	8000cce6 <__swbuf_r+0x92>
8000ccda:	58 a7       	cp.w	r7,10
8000ccdc:	5f 08       	sreq	r8
8000ccde:	8c 69       	ld.sh	r9,r6[0xc]
8000cce0:	f3 e8 00 08 	and	r8,r9,r8
8000cce4:	c0 70       	breq	8000ccf2 <__swbuf_r+0x9e>
8000cce6:	0c 9b       	mov	r11,r6
8000cce8:	0a 9c       	mov	r12,r5
8000ccea:	f0 1f 00 09 	mcall	8000cd0c <__swbuf_r+0xb8>
8000ccee:	c0 20       	breq	8000ccf2 <__swbuf_r+0x9e>
8000ccf0:	3f f7       	mov	r7,-1
8000ccf2:	0e 9c       	mov	r12,r7
8000ccf4:	d8 22       	popm	r4-r7,pc
8000ccf6:	00 00       	add	r0,r0
8000ccf8:	80 00       	ld.sh	r0,r0[0x0]
8000ccfa:	dd ac       	*unknown*
8000ccfc:	80 01       	ld.sh	r1,r0[0x0]
8000ccfe:	01 64       	ld.uh	r4,--r0
8000cd00:	80 01       	ld.sh	r1,r0[0x0]
8000cd02:	01 84       	ld.ub	r4,r0[0x0]
8000cd04:	80 01       	ld.sh	r1,r0[0x0]
8000cd06:	01 a4       	ld.ub	r4,r0[0x2]
8000cd08:	80 00       	ld.sh	r0,r0[0x0]
8000cd0a:	cd 10       	breq	8000ccac <__swbuf_r+0x58>
8000cd0c:	80 00       	ld.sh	r0,r0[0x0]
8000cd0e:	db d4       	*unknown*

8000cd10 <__swsetup_r>:
8000cd10:	d4 21       	pushm	r4-r7,lr
8000cd12:	4b 38       	lddpc	r8,8000cddc <__swsetup_r+0xcc>
8000cd14:	18 96       	mov	r6,r12
8000cd16:	16 97       	mov	r7,r11
8000cd18:	70 0c       	ld.w	r12,r8[0x0]
8000cd1a:	58 0c       	cp.w	r12,0
8000cd1c:	c0 60       	breq	8000cd28 <__swsetup_r+0x18>
8000cd1e:	78 68       	ld.w	r8,r12[0x18]
8000cd20:	58 08       	cp.w	r8,0
8000cd22:	c0 31       	brne	8000cd28 <__swsetup_r+0x18>
8000cd24:	f0 1f 00 2f 	mcall	8000cde0 <__swsetup_r+0xd0>
8000cd28:	4a f8       	lddpc	r8,8000cde4 <__swsetup_r+0xd4>
8000cd2a:	10 37       	cp.w	r7,r8
8000cd2c:	c0 51       	brne	8000cd36 <__swsetup_r+0x26>
8000cd2e:	4a c8       	lddpc	r8,8000cddc <__swsetup_r+0xcc>
8000cd30:	70 08       	ld.w	r8,r8[0x0]
8000cd32:	70 07       	ld.w	r7,r8[0x0]
8000cd34:	c0 e8       	rjmp	8000cd50 <__swsetup_r+0x40>
8000cd36:	4a d8       	lddpc	r8,8000cde8 <__swsetup_r+0xd8>
8000cd38:	10 37       	cp.w	r7,r8
8000cd3a:	c0 51       	brne	8000cd44 <__swsetup_r+0x34>
8000cd3c:	4a 88       	lddpc	r8,8000cddc <__swsetup_r+0xcc>
8000cd3e:	70 08       	ld.w	r8,r8[0x0]
8000cd40:	70 17       	ld.w	r7,r8[0x4]
8000cd42:	c0 78       	rjmp	8000cd50 <__swsetup_r+0x40>
8000cd44:	4a a8       	lddpc	r8,8000cdec <__swsetup_r+0xdc>
8000cd46:	10 37       	cp.w	r7,r8
8000cd48:	c0 41       	brne	8000cd50 <__swsetup_r+0x40>
8000cd4a:	4a 58       	lddpc	r8,8000cddc <__swsetup_r+0xcc>
8000cd4c:	70 08       	ld.w	r8,r8[0x0]
8000cd4e:	70 27       	ld.w	r7,r8[0x8]
8000cd50:	8e 68       	ld.sh	r8,r7[0xc]
8000cd52:	ed b8 00 03 	bld	r8,0x3
8000cd56:	c1 e0       	breq	8000cd92 <__swsetup_r+0x82>
8000cd58:	ed b8 00 04 	bld	r8,0x4
8000cd5c:	c3 e1       	brne	8000cdd8 <__swsetup_r+0xc8>
8000cd5e:	ed b8 00 02 	bld	r8,0x2
8000cd62:	c1 51       	brne	8000cd8c <__swsetup_r+0x7c>
8000cd64:	6e db       	ld.w	r11,r7[0x34]
8000cd66:	58 0b       	cp.w	r11,0
8000cd68:	c0 a0       	breq	8000cd7c <__swsetup_r+0x6c>
8000cd6a:	ee c8 ff bc 	sub	r8,r7,-68
8000cd6e:	10 3b       	cp.w	r11,r8
8000cd70:	c0 40       	breq	8000cd78 <__swsetup_r+0x68>
8000cd72:	0c 9c       	mov	r12,r6
8000cd74:	f0 1f 00 1f 	mcall	8000cdf0 <__swsetup_r+0xe0>
8000cd78:	30 08       	mov	r8,0
8000cd7a:	8f d8       	st.w	r7[0x34],r8
8000cd7c:	8e 68       	ld.sh	r8,r7[0xc]
8000cd7e:	e0 18 ff db 	andl	r8,0xffdb
8000cd82:	ae 68       	st.h	r7[0xc],r8
8000cd84:	30 08       	mov	r8,0
8000cd86:	8f 18       	st.w	r7[0x4],r8
8000cd88:	6e 48       	ld.w	r8,r7[0x10]
8000cd8a:	8f 08       	st.w	r7[0x0],r8
8000cd8c:	8e 68       	ld.sh	r8,r7[0xc]
8000cd8e:	a3 b8       	sbr	r8,0x3
8000cd90:	ae 68       	st.h	r7[0xc],r8
8000cd92:	6e 48       	ld.w	r8,r7[0x10]
8000cd94:	58 08       	cp.w	r8,0
8000cd96:	c0 b1       	brne	8000cdac <__swsetup_r+0x9c>
8000cd98:	8e 68       	ld.sh	r8,r7[0xc]
8000cd9a:	e2 18 02 80 	andl	r8,0x280,COH
8000cd9e:	e0 48 02 00 	cp.w	r8,512
8000cda2:	c0 50       	breq	8000cdac <__swsetup_r+0x9c>
8000cda4:	0c 9c       	mov	r12,r6
8000cda6:	0e 9b       	mov	r11,r7
8000cda8:	f0 1f 00 13 	mcall	8000cdf4 <__swsetup_r+0xe4>
8000cdac:	8e 69       	ld.sh	r9,r7[0xc]
8000cdae:	f1 d9 c0 01 	bfextu	r8,r9,0x0,0x1
8000cdb2:	c0 70       	breq	8000cdc0 <__swsetup_r+0xb0>
8000cdb4:	30 08       	mov	r8,0
8000cdb6:	8f 28       	st.w	r7[0x8],r8
8000cdb8:	6e 58       	ld.w	r8,r7[0x14]
8000cdba:	5c 38       	neg	r8
8000cdbc:	8f 68       	st.w	r7[0x18],r8
8000cdbe:	c0 68       	rjmp	8000cdca <__swsetup_r+0xba>
8000cdc0:	ed b9 00 01 	bld	r9,0x1
8000cdc4:	c0 20       	breq	8000cdc8 <__swsetup_r+0xb8>
8000cdc6:	6e 58       	ld.w	r8,r7[0x14]
8000cdc8:	8f 28       	st.w	r7[0x8],r8
8000cdca:	6e 48       	ld.w	r8,r7[0x10]
8000cdcc:	58 08       	cp.w	r8,0
8000cdce:	c0 61       	brne	8000cdda <__swsetup_r+0xca>
8000cdd0:	8e 68       	ld.sh	r8,r7[0xc]
8000cdd2:	ed b8 00 07 	bld	r8,0x7
8000cdd6:	c0 21       	brne	8000cdda <__swsetup_r+0xca>
8000cdd8:	dc 2a       	popm	r4-r7,pc,r12=-1
8000cdda:	d8 2a       	popm	r4-r7,pc,r12=0
8000cddc:	00 00       	add	r0,r0
8000cdde:	02 04       	add	r4,r1
8000cde0:	80 00       	ld.sh	r0,r0[0x0]
8000cde2:	dd ac       	*unknown*
8000cde4:	80 01       	ld.sh	r1,r0[0x0]
8000cde6:	01 64       	ld.uh	r4,--r0
8000cde8:	80 01       	ld.sh	r1,r0[0x0]
8000cdea:	01 84       	ld.ub	r4,r0[0x0]
8000cdec:	80 01       	ld.sh	r1,r0[0x0]
8000cdee:	01 a4       	ld.ub	r4,r0[0x2]
8000cdf0:	80 00       	ld.sh	r0,r0[0x0]
8000cdf2:	df 04       	*unknown*
8000cdf4:	80 00       	ld.sh	r0,r0[0x0]
8000cdf6:	e0 fc d4 31 	ld.w	r12,r0[-11215]

8000cdf8 <quorem>:
8000cdf8:	d4 31       	pushm	r0-r7,lr
8000cdfa:	20 2d       	sub	sp,8
8000cdfc:	18 97       	mov	r7,r12
8000cdfe:	78 48       	ld.w	r8,r12[0x10]
8000ce00:	76 46       	ld.w	r6,r11[0x10]
8000ce02:	0c 38       	cp.w	r8,r6
8000ce04:	c0 34       	brge	8000ce0a <quorem+0x12>
8000ce06:	30 0c       	mov	r12,0
8000ce08:	c8 58       	rjmp	8000cf12 <quorem+0x11a>
8000ce0a:	ec c2 ff fc 	sub	r2,r6,-4
8000ce0e:	f6 c3 ff ec 	sub	r3,r11,-20
8000ce12:	f6 02 03 29 	ld.w	r9,r11[r2<<0x2]
8000ce16:	f8 02 03 2c 	ld.w	r12,r12[r2<<0x2]
8000ce1a:	2f f9       	sub	r9,-1
8000ce1c:	20 16       	sub	r6,1
8000ce1e:	f8 09 0d 08 	divu	r8,r12,r9
8000ce22:	f6 02 00 22 	add	r2,r11,r2<<0x2
8000ce26:	ee c4 ff ec 	sub	r4,r7,-20
8000ce2a:	10 95       	mov	r5,r8
8000ce2c:	58 08       	cp.w	r8,0
8000ce2e:	c4 10       	breq	8000ceb0 <quorem+0xb8>
8000ce30:	30 09       	mov	r9,0
8000ce32:	06 9a       	mov	r10,r3
8000ce34:	08 98       	mov	r8,r4
8000ce36:	12 91       	mov	r1,r9
8000ce38:	50 0b       	stdsp	sp[0x0],r11
8000ce3a:	70 0e       	ld.w	lr,r8[0x0]
8000ce3c:	b1 8e       	lsr	lr,0x10
8000ce3e:	50 1e       	stdsp	sp[0x4],lr
8000ce40:	15 0e       	ld.w	lr,r10++
8000ce42:	fc 00 16 10 	lsr	r0,lr,0x10
8000ce46:	fd de c0 10 	bfextu	lr,lr,0x0,0x10
8000ce4a:	ea 0e 03 41 	mac	r1,r5,lr
8000ce4e:	fd d1 c0 10 	bfextu	lr,r1,0x0,0x10
8000ce52:	b1 81       	lsr	r1,0x10
8000ce54:	40 1b       	lddsp	r11,sp[0x4]
8000ce56:	ea 00 02 40 	mul	r0,r5,r0
8000ce5a:	e2 00 00 00 	add	r0,r1,r0
8000ce5e:	e3 d0 c0 10 	bfextu	r1,r0,0x0,0x10
8000ce62:	02 1b       	sub	r11,r1
8000ce64:	50 1b       	stdsp	sp[0x4],r11
8000ce66:	70 0b       	ld.w	r11,r8[0x0]
8000ce68:	e3 db c0 10 	bfextu	r1,r11,0x0,0x10
8000ce6c:	02 09       	add	r9,r1
8000ce6e:	f2 0e 01 0e 	sub	lr,r9,lr
8000ce72:	b0 1e       	st.h	r8[0x2],lr
8000ce74:	fc 09 14 10 	asr	r9,lr,0x10
8000ce78:	40 1e       	lddsp	lr,sp[0x4]
8000ce7a:	fc 09 00 09 	add	r9,lr,r9
8000ce7e:	b0 09       	st.h	r8[0x0],r9
8000ce80:	e0 01 16 10 	lsr	r1,r0,0x10
8000ce84:	2f c8       	sub	r8,-4
8000ce86:	b1 49       	asr	r9,0x10
8000ce88:	04 3a       	cp.w	r10,r2
8000ce8a:	fe 98 ff d8 	brls	8000ce3a <quorem+0x42>
8000ce8e:	40 0b       	lddsp	r11,sp[0x0]
8000ce90:	58 0c       	cp.w	r12,0
8000ce92:	c0 f1       	brne	8000ceb0 <quorem+0xb8>
8000ce94:	ec c8 ff fb 	sub	r8,r6,-5
8000ce98:	ee 08 00 28 	add	r8,r7,r8<<0x2
8000ce9c:	c0 28       	rjmp	8000cea0 <quorem+0xa8>
8000ce9e:	20 16       	sub	r6,1
8000cea0:	20 48       	sub	r8,4
8000cea2:	08 38       	cp.w	r8,r4
8000cea4:	e0 88 00 05 	brls	8000ceae <quorem+0xb6>
8000cea8:	70 09       	ld.w	r9,r8[0x0]
8000ceaa:	58 09       	cp.w	r9,0
8000ceac:	cf 90       	breq	8000ce9e <quorem+0xa6>
8000ceae:	8f 46       	st.w	r7[0x10],r6
8000ceb0:	0e 9c       	mov	r12,r7
8000ceb2:	f0 1f 00 1a 	mcall	8000cf18 <quorem+0x120>
8000ceb6:	c2 d5       	brlt	8000cf10 <quorem+0x118>
8000ceb8:	2f f5       	sub	r5,-1
8000ceba:	08 98       	mov	r8,r4
8000cebc:	30 09       	mov	r9,0
8000cebe:	07 0b       	ld.w	r11,r3++
8000cec0:	f6 0a 16 10 	lsr	r10,r11,0x10
8000cec4:	70 0c       	ld.w	r12,r8[0x0]
8000cec6:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
8000ceca:	f8 0e 16 10 	lsr	lr,r12,0x10
8000cece:	14 1e       	sub	lr,r10
8000ced0:	f5 dc c0 10 	bfextu	r10,r12,0x0,0x10
8000ced4:	16 1a       	sub	r10,r11
8000ced6:	12 0a       	add	r10,r9
8000ced8:	b0 1a       	st.h	r8[0x2],r10
8000ceda:	b1 4a       	asr	r10,0x10
8000cedc:	fc 0a 00 09 	add	r9,lr,r10
8000cee0:	b0 09       	st.h	r8[0x0],r9
8000cee2:	2f c8       	sub	r8,-4
8000cee4:	b1 49       	asr	r9,0x10
8000cee6:	04 33       	cp.w	r3,r2
8000cee8:	fe 98 ff eb 	brls	8000cebe <quorem+0xc6>
8000ceec:	ec c8 ff fb 	sub	r8,r6,-5
8000cef0:	ee 08 03 29 	ld.w	r9,r7[r8<<0x2]
8000cef4:	58 09       	cp.w	r9,0
8000cef6:	c0 d1       	brne	8000cf10 <quorem+0x118>
8000cef8:	ee 08 00 28 	add	r8,r7,r8<<0x2
8000cefc:	c0 28       	rjmp	8000cf00 <quorem+0x108>
8000cefe:	20 16       	sub	r6,1
8000cf00:	20 48       	sub	r8,4
8000cf02:	08 38       	cp.w	r8,r4
8000cf04:	e0 88 00 05 	brls	8000cf0e <quorem+0x116>
8000cf08:	70 09       	ld.w	r9,r8[0x0]
8000cf0a:	58 09       	cp.w	r9,0
8000cf0c:	cf 90       	breq	8000cefe <quorem+0x106>
8000cf0e:	8f 46       	st.w	r7[0x10],r6
8000cf10:	0a 9c       	mov	r12,r5
8000cf12:	2f ed       	sub	sp,-8
8000cf14:	d8 32       	popm	r0-r7,pc
8000cf16:	00 00       	add	r0,r0
8000cf18:	80 00       	ld.sh	r0,r0[0x0]
8000cf1a:	e2 cc d4 31 	sub	r12,r1,-11215

8000cf1c <_dtoa_r>:
8000cf1c:	d4 31       	pushm	r0-r7,lr
8000cf1e:	21 ad       	sub	sp,104
8000cf20:	fa c4 ff 74 	sub	r4,sp,-140
8000cf24:	18 97       	mov	r7,r12
8000cf26:	16 95       	mov	r5,r11
8000cf28:	68 2c       	ld.w	r12,r4[0x8]
8000cf2a:	50 c9       	stdsp	sp[0x30],r9
8000cf2c:	68 16       	ld.w	r6,r4[0x4]
8000cf2e:	68 09       	ld.w	r9,r4[0x0]
8000cf30:	50 e8       	stdsp	sp[0x38],r8
8000cf32:	14 94       	mov	r4,r10
8000cf34:	51 2c       	stdsp	sp[0x48],r12
8000cf36:	fa e5 00 08 	st.d	sp[8],r4
8000cf3a:	51 59       	stdsp	sp[0x54],r9
8000cf3c:	6e 95       	ld.w	r5,r7[0x24]
8000cf3e:	58 05       	cp.w	r5,0
8000cf40:	c0 91       	brne	8000cf52 <_dtoa_r+0x36>
8000cf42:	31 0c       	mov	r12,16
8000cf44:	f0 1f 00 48 	mcall	8000d064 <_dtoa_r+0x148>
8000cf48:	99 35       	st.w	r12[0xc],r5
8000cf4a:	8f 9c       	st.w	r7[0x24],r12
8000cf4c:	99 15       	st.w	r12[0x4],r5
8000cf4e:	99 25       	st.w	r12[0x8],r5
8000cf50:	99 05       	st.w	r12[0x0],r5
8000cf52:	6e 99       	ld.w	r9,r7[0x24]
8000cf54:	72 08       	ld.w	r8,r9[0x0]
8000cf56:	58 08       	cp.w	r8,0
8000cf58:	c0 f0       	breq	8000cf76 <_dtoa_r+0x5a>
8000cf5a:	72 1a       	ld.w	r10,r9[0x4]
8000cf5c:	91 1a       	st.w	r8[0x4],r10
8000cf5e:	30 1a       	mov	r10,1
8000cf60:	72 19       	ld.w	r9,r9[0x4]
8000cf62:	f4 09 09 49 	lsl	r9,r10,r9
8000cf66:	10 9b       	mov	r11,r8
8000cf68:	91 29       	st.w	r8[0x8],r9
8000cf6a:	0e 9c       	mov	r12,r7
8000cf6c:	f0 1f 00 3f 	mcall	8000d068 <_dtoa_r+0x14c>
8000cf70:	6e 98       	ld.w	r8,r7[0x24]
8000cf72:	30 09       	mov	r9,0
8000cf74:	91 09       	st.w	r8[0x0],r9
8000cf76:	40 28       	lddsp	r8,sp[0x8]
8000cf78:	10 94       	mov	r4,r8
8000cf7a:	58 08       	cp.w	r8,0
8000cf7c:	c0 64       	brge	8000cf88 <_dtoa_r+0x6c>
8000cf7e:	f1 d8 c0 1f 	bfextu	r8,r8,0x0,0x1f
8000cf82:	50 28       	stdsp	sp[0x8],r8
8000cf84:	30 18       	mov	r8,1
8000cf86:	c0 28       	rjmp	8000cf8a <_dtoa_r+0x6e>
8000cf88:	30 08       	mov	r8,0
8000cf8a:	8d 08       	st.w	r6[0x0],r8
8000cf8c:	30 0c       	mov	r12,0
8000cf8e:	ea 1c 7f f0 	orh	r12,0x7ff0
8000cf92:	40 26       	lddsp	r6,sp[0x8]
8000cf94:	0c 98       	mov	r8,r6
8000cf96:	e6 18 7f f0 	andh	r8,0x7ff0,COH
8000cf9a:	18 38       	cp.w	r8,r12
8000cf9c:	c1 d1       	brne	8000cfd6 <_dtoa_r+0xba>
8000cf9e:	e0 68 27 0f 	mov	r8,9999
8000cfa2:	41 5b       	lddsp	r11,sp[0x54]
8000cfa4:	97 08       	st.w	r11[0x0],r8
8000cfa6:	40 3a       	lddsp	r10,sp[0xc]
8000cfa8:	58 0a       	cp.w	r10,0
8000cfaa:	c0 61       	brne	8000cfb6 <_dtoa_r+0x9a>
8000cfac:	ed d6 c0 14 	bfextu	r6,r6,0x0,0x14
8000cfb0:	c0 31       	brne	8000cfb6 <_dtoa_r+0x9a>
8000cfb2:	4a fc       	lddpc	r12,8000d06c <_dtoa_r+0x150>
8000cfb4:	c0 28       	rjmp	8000cfb8 <_dtoa_r+0x9c>
8000cfb6:	4a fc       	lddpc	r12,8000d070 <_dtoa_r+0x154>
8000cfb8:	41 29       	lddsp	r9,sp[0x48]
8000cfba:	58 09       	cp.w	r9,0
8000cfbc:	e0 80 05 ec 	breq	8000db94 <_dtoa_r+0xc78>
8000cfc0:	f8 c8 ff fd 	sub	r8,r12,-3
8000cfc4:	f8 c9 ff f8 	sub	r9,r12,-8
8000cfc8:	11 8b       	ld.ub	r11,r8[0x0]
8000cfca:	30 0a       	mov	r10,0
8000cfcc:	f4 0b 18 00 	cp.b	r11,r10
8000cfd0:	f2 08 17 10 	movne	r8,r9
8000cfd4:	c1 68       	rjmp	8000d000 <_dtoa_r+0xe4>
8000cfd6:	fa ea 00 08 	ld.d	r10,sp[8]
8000cfda:	30 08       	mov	r8,0
8000cfdc:	fa eb 00 3c 	st.d	sp[60],r10
8000cfe0:	30 09       	mov	r9,0
8000cfe2:	f0 1f 00 25 	mcall	8000d074 <_dtoa_r+0x158>
8000cfe6:	c1 10       	breq	8000d008 <_dtoa_r+0xec>
8000cfe8:	30 18       	mov	r8,1
8000cfea:	41 5a       	lddsp	r10,sp[0x54]
8000cfec:	95 08       	st.w	r10[0x0],r8
8000cfee:	41 29       	lddsp	r9,sp[0x48]
8000cff0:	4a 28       	lddpc	r8,8000d078 <_dtoa_r+0x15c>
8000cff2:	58 09       	cp.w	r9,0
8000cff4:	c0 41       	brne	8000cffc <_dtoa_r+0xe0>
8000cff6:	10 9c       	mov	r12,r8
8000cff8:	e0 8f 05 ce 	bral	8000db94 <_dtoa_r+0xc78>
8000cffc:	10 9c       	mov	r12,r8
8000cffe:	2f f8       	sub	r8,-1
8000d000:	41 25       	lddsp	r5,sp[0x48]
8000d002:	8b 08       	st.w	r5[0x0],r8
8000d004:	e0 8f 05 c8 	bral	8000db94 <_dtoa_r+0xc78>
8000d008:	fa c8 ff 9c 	sub	r8,sp,-100
8000d00c:	fa c9 ff a0 	sub	r9,sp,-96
8000d010:	fa ea 00 3c 	ld.d	r10,sp[60]
8000d014:	0e 9c       	mov	r12,r7
8000d016:	eb d6 c2 8b 	bfextu	r5,r6,0x14,0xb
8000d01a:	f0 1f 00 19 	mcall	8000d07c <_dtoa_r+0x160>
8000d01e:	18 93       	mov	r3,r12
8000d020:	58 05       	cp.w	r5,0
8000d022:	c0 d0       	breq	8000d03c <_dtoa_r+0x120>
8000d024:	fa ea 00 3c 	ld.d	r10,sp[60]
8000d028:	30 04       	mov	r4,0
8000d02a:	f1 db c0 14 	bfextu	r8,r11,0x0,0x14
8000d02e:	ea c5 03 ff 	sub	r5,r5,1023
8000d032:	10 9b       	mov	r11,r8
8000d034:	51 74       	stdsp	sp[0x5c],r4
8000d036:	ea 1b 3f f0 	orh	r11,0x3ff0
8000d03a:	c3 38       	rjmp	8000d0a0 <_dtoa_r+0x184>
8000d03c:	41 88       	lddsp	r8,sp[0x60]
8000d03e:	41 9c       	lddsp	r12,sp[0x64]
8000d040:	10 0c       	add	r12,r8
8000d042:	f8 c5 fb ce 	sub	r5,r12,-1074
8000d046:	e0 45 00 20 	cp.w	r5,32
8000d04a:	e0 8a 00 1b 	brle	8000d080 <_dtoa_r+0x164>
8000d04e:	f8 cc fb ee 	sub	r12,r12,-1042
8000d052:	40 3b       	lddsp	r11,sp[0xc]
8000d054:	ea 08 11 40 	rsub	r8,r5,64
8000d058:	f6 0c 0a 4c 	lsr	r12,r11,r12
8000d05c:	ec 08 09 46 	lsl	r6,r6,r8
8000d060:	0c 4c       	or	r12,r6
8000d062:	c1 48       	rjmp	8000d08a <_dtoa_r+0x16e>
8000d064:	80 00       	ld.sh	r0,r0[0x0]
8000d066:	9c 58       	ld.sh	r8,lr[0xa]
8000d068:	80 00       	ld.sh	r0,r0[0x0]
8000d06a:	e3 00 80 01 	ld.sh	r0,r1[-32767]
8000d06e:	01 54       	ld.sh	r4,--r0
8000d070:	80 01       	ld.sh	r1,r0[0x0]
8000d072:	01 60       	ld.uh	r0,--r0
8000d074:	80 00       	ld.sh	r0,r0[0x0]
8000d076:	ec 06       	*unknown*
8000d078:	80 01       	ld.sh	r1,r0[0x0]
8000d07a:	00 30       	cp.w	r0,r0
8000d07c:	80 00       	ld.sh	r0,r0[0x0]
8000d07e:	e3 b0       	*unknown*
8000d080:	ea 0c 11 20 	rsub	r12,r5,32
8000d084:	40 3a       	lddsp	r10,sp[0xc]
8000d086:	f4 0c 09 4c 	lsl	r12,r10,r12
8000d08a:	f0 1f 00 6a 	mcall	8000d230 <_dtoa_r+0x314>
8000d08e:	30 08       	mov	r8,0
8000d090:	ea 18 fe 10 	orh	r8,0xfe10
8000d094:	30 19       	mov	r9,1
8000d096:	ea c5 04 33 	sub	r5,r5,1075
8000d09a:	f0 0b 00 0b 	add	r11,r8,r11
8000d09e:	51 79       	stdsp	sp[0x5c],r9
8000d0a0:	30 08       	mov	r8,0
8000d0a2:	30 09       	mov	r9,0
8000d0a4:	ea 19 3f f8 	orh	r9,0x3ff8
8000d0a8:	f0 1f 00 63 	mcall	8000d234 <_dtoa_r+0x318>
8000d0ac:	e0 68 43 61 	mov	r8,17249
8000d0b0:	ea 18 63 6f 	orh	r8,0x636f
8000d0b4:	e0 69 87 a7 	mov	r9,34727
8000d0b8:	ea 19 3f d2 	orh	r9,0x3fd2
8000d0bc:	f0 1f 00 5f 	mcall	8000d238 <_dtoa_r+0x31c>
8000d0c0:	e0 68 c8 b3 	mov	r8,51379
8000d0c4:	ea 18 8b 60 	orh	r8,0x8b60
8000d0c8:	e0 69 8a 28 	mov	r9,35368
8000d0cc:	ea 19 3f c6 	orh	r9,0x3fc6
8000d0d0:	f0 1f 00 5b 	mcall	8000d23c <_dtoa_r+0x320>
8000d0d4:	0a 9c       	mov	r12,r5
8000d0d6:	14 90       	mov	r0,r10
8000d0d8:	16 91       	mov	r1,r11
8000d0da:	f0 1f 00 5a 	mcall	8000d240 <_dtoa_r+0x324>
8000d0de:	e0 68 79 fb 	mov	r8,31227
8000d0e2:	ea 18 50 9f 	orh	r8,0x509f
8000d0e6:	e0 69 44 13 	mov	r9,17427
8000d0ea:	ea 19 3f d3 	orh	r9,0x3fd3
8000d0ee:	f0 1f 00 53 	mcall	8000d238 <_dtoa_r+0x31c>
8000d0f2:	14 98       	mov	r8,r10
8000d0f4:	16 99       	mov	r9,r11
8000d0f6:	00 9a       	mov	r10,r0
8000d0f8:	02 9b       	mov	r11,r1
8000d0fa:	f0 1f 00 51 	mcall	8000d23c <_dtoa_r+0x320>
8000d0fe:	14 90       	mov	r0,r10
8000d100:	16 91       	mov	r1,r11
8000d102:	f0 1f 00 51 	mcall	8000d244 <_dtoa_r+0x328>
8000d106:	30 08       	mov	r8,0
8000d108:	18 96       	mov	r6,r12
8000d10a:	30 09       	mov	r9,0
8000d10c:	00 9a       	mov	r10,r0
8000d10e:	02 9b       	mov	r11,r1
8000d110:	f0 1f 00 4e 	mcall	8000d248 <_dtoa_r+0x32c>
8000d114:	c0 f0       	breq	8000d132 <_dtoa_r+0x216>
8000d116:	0c 9c       	mov	r12,r6
8000d118:	f0 1f 00 4a 	mcall	8000d240 <_dtoa_r+0x324>
8000d11c:	14 98       	mov	r8,r10
8000d11e:	16 99       	mov	r9,r11
8000d120:	00 9a       	mov	r10,r0
8000d122:	02 9b       	mov	r11,r1
8000d124:	f0 1f 00 4a 	mcall	8000d24c <_dtoa_r+0x330>
8000d128:	ec c8 00 01 	sub	r8,r6,1
8000d12c:	58 0c       	cp.w	r12,0
8000d12e:	f0 06 17 00 	moveq	r6,r8
8000d132:	59 66       	cp.w	r6,22
8000d134:	e0 88 00 05 	brls	8000d13e <_dtoa_r+0x222>
8000d138:	30 18       	mov	r8,1
8000d13a:	51 48       	stdsp	sp[0x50],r8
8000d13c:	c1 28       	rjmp	8000d160 <_dtoa_r+0x244>
8000d13e:	4c 58       	lddpc	r8,8000d250 <_dtoa_r+0x334>
8000d140:	fa ea 00 3c 	ld.d	r10,sp[60]
8000d144:	f0 06 02 38 	ld.d	r8,r8[r6<<0x3]
8000d148:	f0 1f 00 40 	mcall	8000d248 <_dtoa_r+0x32c>
8000d14c:	ec c8 00 01 	sub	r8,r6,1
8000d150:	58 0c       	cp.w	r12,0
8000d152:	f0 06 17 10 	movne	r6,r8
8000d156:	f9 bc 01 00 	movne	r12,0
8000d15a:	f9 bc 00 00 	moveq	r12,0
8000d15e:	51 4c       	stdsp	sp[0x50],r12
8000d160:	41 90       	lddsp	r0,sp[0x64]
8000d162:	20 10       	sub	r0,1
8000d164:	0a 10       	sub	r0,r5
8000d166:	c0 46       	brmi	8000d16e <_dtoa_r+0x252>
8000d168:	50 40       	stdsp	sp[0x10],r0
8000d16a:	30 00       	mov	r0,0
8000d16c:	c0 48       	rjmp	8000d174 <_dtoa_r+0x258>
8000d16e:	30 05       	mov	r5,0
8000d170:	5c 30       	neg	r0
8000d172:	50 45       	stdsp	sp[0x10],r5
8000d174:	58 06       	cp.w	r6,0
8000d176:	c0 75       	brlt	8000d184 <_dtoa_r+0x268>
8000d178:	40 44       	lddsp	r4,sp[0x10]
8000d17a:	51 16       	stdsp	sp[0x44],r6
8000d17c:	0c 04       	add	r4,r6
8000d17e:	30 02       	mov	r2,0
8000d180:	50 44       	stdsp	sp[0x10],r4
8000d182:	c0 68       	rjmp	8000d18e <_dtoa_r+0x272>
8000d184:	30 0c       	mov	r12,0
8000d186:	0c 10       	sub	r0,r6
8000d188:	ec 02 11 00 	rsub	r2,r6,0
8000d18c:	51 1c       	stdsp	sp[0x44],r12
8000d18e:	40 cb       	lddsp	r11,sp[0x30]
8000d190:	58 9b       	cp.w	r11,9
8000d192:	e0 8b 00 1e 	brhi	8000d1ce <_dtoa_r+0x2b2>
8000d196:	16 99       	mov	r9,r11
8000d198:	30 14       	mov	r4,1
8000d19a:	20 49       	sub	r9,4
8000d19c:	30 08       	mov	r8,0
8000d19e:	58 5b       	cp.w	r11,5
8000d1a0:	e0 8a 00 04 	brle	8000d1a8 <_dtoa_r+0x28c>
8000d1a4:	50 c9       	stdsp	sp[0x30],r9
8000d1a6:	10 94       	mov	r4,r8
8000d1a8:	40 ca       	lddsp	r10,sp[0x30]
8000d1aa:	58 3a       	cp.w	r10,3
8000d1ac:	c2 e0       	breq	8000d208 <_dtoa_r+0x2ec>
8000d1ae:	e0 89 00 05 	brgt	8000d1b8 <_dtoa_r+0x29c>
8000d1b2:	58 2a       	cp.w	r10,2
8000d1b4:	c1 01       	brne	8000d1d4 <_dtoa_r+0x2b8>
8000d1b6:	c1 88       	rjmp	8000d1e6 <_dtoa_r+0x2ca>
8000d1b8:	40 c9       	lddsp	r9,sp[0x30]
8000d1ba:	58 49       	cp.w	r9,4
8000d1bc:	c0 60       	breq	8000d1c8 <_dtoa_r+0x2ac>
8000d1be:	58 59       	cp.w	r9,5
8000d1c0:	c0 a1       	brne	8000d1d4 <_dtoa_r+0x2b8>
8000d1c2:	30 18       	mov	r8,1
8000d1c4:	50 d8       	stdsp	sp[0x34],r8
8000d1c6:	c2 38       	rjmp	8000d20c <_dtoa_r+0x2f0>
8000d1c8:	30 15       	mov	r5,1
8000d1ca:	50 d5       	stdsp	sp[0x34],r5
8000d1cc:	c0 f8       	rjmp	8000d1ea <_dtoa_r+0x2ce>
8000d1ce:	30 0c       	mov	r12,0
8000d1d0:	30 14       	mov	r4,1
8000d1d2:	50 cc       	stdsp	sp[0x30],r12
8000d1d4:	3f fb       	mov	r11,-1
8000d1d6:	30 1a       	mov	r10,1
8000d1d8:	30 09       	mov	r9,0
8000d1da:	50 9b       	stdsp	sp[0x24],r11
8000d1dc:	50 da       	stdsp	sp[0x34],r10
8000d1de:	16 91       	mov	r1,r11
8000d1e0:	31 28       	mov	r8,18
8000d1e2:	50 e9       	stdsp	sp[0x38],r9
8000d1e4:	c2 18       	rjmp	8000d226 <_dtoa_r+0x30a>
8000d1e6:	30 08       	mov	r8,0
8000d1e8:	50 d8       	stdsp	sp[0x34],r8
8000d1ea:	40 e5       	lddsp	r5,sp[0x38]
8000d1ec:	58 05       	cp.w	r5,0
8000d1ee:	e0 89 00 08 	brgt	8000d1fe <_dtoa_r+0x2e2>
8000d1f2:	30 1c       	mov	r12,1
8000d1f4:	50 9c       	stdsp	sp[0x24],r12
8000d1f6:	18 91       	mov	r1,r12
8000d1f8:	18 98       	mov	r8,r12
8000d1fa:	50 ec       	stdsp	sp[0x38],r12
8000d1fc:	c1 58       	rjmp	8000d226 <_dtoa_r+0x30a>
8000d1fe:	40 eb       	lddsp	r11,sp[0x38]
8000d200:	50 9b       	stdsp	sp[0x24],r11
8000d202:	16 91       	mov	r1,r11
8000d204:	16 98       	mov	r8,r11
8000d206:	c1 08       	rjmp	8000d226 <_dtoa_r+0x30a>
8000d208:	30 0a       	mov	r10,0
8000d20a:	50 da       	stdsp	sp[0x34],r10
8000d20c:	40 e9       	lddsp	r9,sp[0x38]
8000d20e:	ec 09 00 09 	add	r9,r6,r9
8000d212:	50 99       	stdsp	sp[0x24],r9
8000d214:	12 98       	mov	r8,r9
8000d216:	2f f8       	sub	r8,-1
8000d218:	58 08       	cp.w	r8,0
8000d21a:	e0 89 00 05 	brgt	8000d224 <_dtoa_r+0x308>
8000d21e:	10 91       	mov	r1,r8
8000d220:	30 18       	mov	r8,1
8000d222:	c0 28       	rjmp	8000d226 <_dtoa_r+0x30a>
8000d224:	10 91       	mov	r1,r8
8000d226:	30 09       	mov	r9,0
8000d228:	6e 9a       	ld.w	r10,r7[0x24]
8000d22a:	95 19       	st.w	r10[0x4],r9
8000d22c:	30 49       	mov	r9,4
8000d22e:	c1 78       	rjmp	8000d25c <_dtoa_r+0x340>
8000d230:	80 00       	ld.sh	r0,r0[0x0]
8000d232:	eb 1c 80 00 	ld.uh	r12,r5[-32768]
8000d236:	89 28       	st.w	r4[0x8],r8
8000d238:	80 00       	ld.sh	r0,r0[0x0]
8000d23a:	87 50       	st.w	r3[0x14],r0
8000d23c:	80 00       	ld.sh	r0,r0[0x0]
8000d23e:	8a c4       	ld.uh	r4,r5[0x8]
8000d240:	80 00       	ld.sh	r0,r0[0x0]
8000d242:	eb 24 80 00 	ld.sb	r4,r5[-32768]
8000d246:	8b d8       	st.w	r5[0x34],r8
8000d248:	80 00       	ld.sh	r0,r0[0x0]
8000d24a:	ec 98 80 00 	brls	801bd24a <_data_lma+0x1acf4a>
8000d24e:	ec 06       	*unknown*
8000d250:	80 01       	ld.sh	r1,r0[0x0]
8000d252:	02 0c       	add	r12,r1
8000d254:	6a 1a       	ld.w	r10,r5[0x4]
8000d256:	a1 79       	lsl	r9,0x1
8000d258:	2f fa       	sub	r10,-1
8000d25a:	8b 1a       	st.w	r5[0x4],r10
8000d25c:	6e 95       	ld.w	r5,r7[0x24]
8000d25e:	f2 ca ff ec 	sub	r10,r9,-20
8000d262:	10 3a       	cp.w	r10,r8
8000d264:	fe 98 ff f8 	brls	8000d254 <_dtoa_r+0x338>
8000d268:	6a 1b       	ld.w	r11,r5[0x4]
8000d26a:	0e 9c       	mov	r12,r7
8000d26c:	f0 1f 00 54 	mcall	8000d3bc <_dtoa_r+0x4a0>
8000d270:	58 e1       	cp.w	r1,14
8000d272:	5f 88       	srls	r8
8000d274:	8b 0c       	st.w	r5[0x0],r12
8000d276:	f1 e4 00 04 	and	r4,r8,r4
8000d27a:	6e 98       	ld.w	r8,r7[0x24]
8000d27c:	70 08       	ld.w	r8,r8[0x0]
8000d27e:	50 88       	stdsp	sp[0x20],r8
8000d280:	e0 80 01 a5 	breq	8000d5ca <_dtoa_r+0x6ae>
8000d284:	58 06       	cp.w	r6,0
8000d286:	e0 8a 00 40 	brle	8000d306 <_dtoa_r+0x3ea>
8000d28a:	f3 d6 c0 04 	bfextu	r9,r6,0x0,0x4
8000d28e:	4c d8       	lddpc	r8,8000d3c0 <_dtoa_r+0x4a4>
8000d290:	f0 09 02 34 	ld.d	r4,r8[r9<<0x3]
8000d294:	fa e5 00 18 	st.d	sp[24],r4
8000d298:	ec 04 14 04 	asr	r4,r6,0x4
8000d29c:	ed b4 00 04 	bld	r4,0x4
8000d2a0:	c0 30       	breq	8000d2a6 <_dtoa_r+0x38a>
8000d2a2:	30 25       	mov	r5,2
8000d2a4:	c0 f8       	rjmp	8000d2c2 <_dtoa_r+0x3a6>
8000d2a6:	4c 88       	lddpc	r8,8000d3c4 <_dtoa_r+0x4a8>
8000d2a8:	f0 e8 00 20 	ld.d	r8,r8[32]
8000d2ac:	fa ea 00 3c 	ld.d	r10,sp[60]
8000d2b0:	e9 d4 c0 04 	bfextu	r4,r4,0x0,0x4
8000d2b4:	f0 1f 00 45 	mcall	8000d3c8 <_dtoa_r+0x4ac>
8000d2b8:	30 35       	mov	r5,3
8000d2ba:	14 98       	mov	r8,r10
8000d2bc:	16 99       	mov	r9,r11
8000d2be:	fa e9 00 08 	st.d	sp[8],r8
8000d2c2:	4c 1c       	lddpc	r12,8000d3c4 <_dtoa_r+0x4a8>
8000d2c4:	50 a3       	stdsp	sp[0x28],r3
8000d2c6:	0c 93       	mov	r3,r6
8000d2c8:	18 96       	mov	r6,r12
8000d2ca:	c0 f8       	rjmp	8000d2e8 <_dtoa_r+0x3cc>
8000d2cc:	fa ea 00 18 	ld.d	r10,sp[24]
8000d2d0:	ed b4 00 00 	bld	r4,0x0
8000d2d4:	c0 81       	brne	8000d2e4 <_dtoa_r+0x3c8>
8000d2d6:	ec e8 00 00 	ld.d	r8,r6[0]
8000d2da:	2f f5       	sub	r5,-1
8000d2dc:	f0 1f 00 3c 	mcall	8000d3cc <_dtoa_r+0x4b0>
8000d2e0:	fa eb 00 18 	st.d	sp[24],r10
8000d2e4:	a1 54       	asr	r4,0x1
8000d2e6:	2f 86       	sub	r6,-8
8000d2e8:	58 04       	cp.w	r4,0
8000d2ea:	cf 11       	brne	8000d2cc <_dtoa_r+0x3b0>
8000d2ec:	fa e8 00 18 	ld.d	r8,sp[24]
8000d2f0:	fa ea 00 08 	ld.d	r10,sp[8]
8000d2f4:	06 96       	mov	r6,r3
8000d2f6:	f0 1f 00 35 	mcall	8000d3c8 <_dtoa_r+0x4ac>
8000d2fa:	40 a3       	lddsp	r3,sp[0x28]
8000d2fc:	14 98       	mov	r8,r10
8000d2fe:	16 99       	mov	r9,r11
8000d300:	fa e9 00 08 	st.d	sp[8],r8
8000d304:	c2 d8       	rjmp	8000d35e <_dtoa_r+0x442>
8000d306:	ec 08 11 00 	rsub	r8,r6,0
8000d30a:	c0 31       	brne	8000d310 <_dtoa_r+0x3f4>
8000d30c:	30 25       	mov	r5,2
8000d30e:	c2 88       	rjmp	8000d35e <_dtoa_r+0x442>
8000d310:	4a dc       	lddpc	r12,8000d3c4 <_dtoa_r+0x4a8>
8000d312:	f0 04 14 04 	asr	r4,r8,0x4
8000d316:	50 1c       	stdsp	sp[0x4],r12
8000d318:	f1 d8 c0 04 	bfextu	r8,r8,0x0,0x4
8000d31c:	4a 99       	lddpc	r9,8000d3c0 <_dtoa_r+0x4a4>
8000d31e:	fa ea 00 3c 	ld.d	r10,sp[60]
8000d322:	f2 08 02 38 	ld.d	r8,r9[r8<<0x3]
8000d326:	f0 1f 00 2a 	mcall	8000d3cc <_dtoa_r+0x4b0>
8000d32a:	40 1c       	lddsp	r12,sp[0x4]
8000d32c:	50 63       	stdsp	sp[0x18],r3
8000d32e:	30 25       	mov	r5,2
8000d330:	0c 93       	mov	r3,r6
8000d332:	fa eb 00 08 	st.d	sp[8],r10
8000d336:	18 96       	mov	r6,r12
8000d338:	c0 f8       	rjmp	8000d356 <_dtoa_r+0x43a>
8000d33a:	fa ea 00 08 	ld.d	r10,sp[8]
8000d33e:	ed b4 00 00 	bld	r4,0x0
8000d342:	c0 81       	brne	8000d352 <_dtoa_r+0x436>
8000d344:	ec e8 00 00 	ld.d	r8,r6[0]
8000d348:	2f f5       	sub	r5,-1
8000d34a:	f0 1f 00 21 	mcall	8000d3cc <_dtoa_r+0x4b0>
8000d34e:	fa eb 00 08 	st.d	sp[8],r10
8000d352:	a1 54       	asr	r4,0x1
8000d354:	2f 86       	sub	r6,-8
8000d356:	58 04       	cp.w	r4,0
8000d358:	cf 11       	brne	8000d33a <_dtoa_r+0x41e>
8000d35a:	06 96       	mov	r6,r3
8000d35c:	40 63       	lddsp	r3,sp[0x18]
8000d35e:	41 4a       	lddsp	r10,sp[0x50]
8000d360:	58 0a       	cp.w	r10,0
8000d362:	c3 90       	breq	8000d3d4 <_dtoa_r+0x4b8>
8000d364:	fa e8 00 08 	ld.d	r8,sp[8]
8000d368:	58 01       	cp.w	r1,0
8000d36a:	5f 94       	srgt	r4
8000d36c:	fa e9 00 18 	st.d	sp[24],r8
8000d370:	30 08       	mov	r8,0
8000d372:	30 09       	mov	r9,0
8000d374:	ea 19 3f f0 	orh	r9,0x3ff0
8000d378:	fa ea 00 18 	ld.d	r10,sp[24]
8000d37c:	f0 1f 00 15 	mcall	8000d3d0 <_dtoa_r+0x4b4>
8000d380:	f9 bc 00 00 	moveq	r12,0
8000d384:	f9 bc 01 01 	movne	r12,1
8000d388:	e9 ec 00 0c 	and	r12,r4,r12
8000d38c:	c2 40       	breq	8000d3d4 <_dtoa_r+0x4b8>
8000d38e:	40 98       	lddsp	r8,sp[0x24]
8000d390:	58 08       	cp.w	r8,0
8000d392:	e0 8a 01 18 	brle	8000d5c2 <_dtoa_r+0x6a6>
8000d396:	30 08       	mov	r8,0
8000d398:	30 09       	mov	r9,0
8000d39a:	ea 19 40 24 	orh	r9,0x4024
8000d39e:	ec c4 00 01 	sub	r4,r6,1
8000d3a2:	fa ea 00 18 	ld.d	r10,sp[24]
8000d3a6:	2f f5       	sub	r5,-1
8000d3a8:	50 64       	stdsp	sp[0x18],r4
8000d3aa:	f0 1f 00 09 	mcall	8000d3cc <_dtoa_r+0x4b0>
8000d3ae:	40 94       	lddsp	r4,sp[0x24]
8000d3b0:	14 98       	mov	r8,r10
8000d3b2:	16 99       	mov	r9,r11
8000d3b4:	fa e9 00 08 	st.d	sp[8],r8
8000d3b8:	c1 08       	rjmp	8000d3d8 <_dtoa_r+0x4bc>
8000d3ba:	00 00       	add	r0,r0
8000d3bc:	80 00       	ld.sh	r0,r0[0x0]
8000d3be:	e3 38 80 01 	ld.ub	r8,r1[-32767]
8000d3c2:	02 0c       	add	r12,r1
8000d3c4:	80 01       	ld.sh	r1,r0[0x0]
8000d3c6:	02 d4       	st.w	--r1,r4
8000d3c8:	80 00       	ld.sh	r0,r0[0x0]
8000d3ca:	8c 34       	ld.sh	r4,r6[0x6]
8000d3cc:	80 00       	ld.sh	r0,r0[0x0]
8000d3ce:	87 50       	st.w	r3[0x14],r0
8000d3d0:	80 00       	ld.sh	r0,r0[0x0]
8000d3d2:	ec 98 50 66 	brls	801b749e <_data_lma+0x1a719e>
8000d3d6:	02 94       	mov	r4,r1
8000d3d8:	0a 9c       	mov	r12,r5
8000d3da:	f0 1f 00 6e 	mcall	8000d590 <_dtoa_r+0x674>
8000d3de:	fa e8 00 08 	ld.d	r8,sp[8]
8000d3e2:	f0 1f 00 6d 	mcall	8000d594 <_dtoa_r+0x678>
8000d3e6:	30 08       	mov	r8,0
8000d3e8:	30 09       	mov	r9,0
8000d3ea:	ea 19 40 1c 	orh	r9,0x401c
8000d3ee:	f0 1f 00 6b 	mcall	8000d598 <_dtoa_r+0x67c>
8000d3f2:	14 98       	mov	r8,r10
8000d3f4:	16 99       	mov	r9,r11
8000d3f6:	fa e9 00 28 	st.d	sp[40],r8
8000d3fa:	30 08       	mov	r8,0
8000d3fc:	ea 18 fc c0 	orh	r8,0xfcc0
8000d400:	40 a5       	lddsp	r5,sp[0x28]
8000d402:	10 05       	add	r5,r8
8000d404:	50 a5       	stdsp	sp[0x28],r5
8000d406:	58 04       	cp.w	r4,0
8000d408:	c2 21       	brne	8000d44c <_dtoa_r+0x530>
8000d40a:	fa ea 00 08 	ld.d	r10,sp[8]
8000d40e:	30 08       	mov	r8,0
8000d410:	30 09       	mov	r9,0
8000d412:	ea 19 40 14 	orh	r9,0x4014
8000d416:	f0 1f 00 62 	mcall	8000d59c <_dtoa_r+0x680>
8000d41a:	40 bc       	lddsp	r12,sp[0x2c]
8000d41c:	fa eb 00 08 	st.d	sp[8],r10
8000d420:	14 98       	mov	r8,r10
8000d422:	16 99       	mov	r9,r11
8000d424:	18 9a       	mov	r10,r12
8000d426:	0a 9b       	mov	r11,r5
8000d428:	f0 1f 00 5e 	mcall	8000d5a0 <_dtoa_r+0x684>
8000d42c:	e0 81 02 7b 	brne	8000d922 <_dtoa_r+0xa06>
8000d430:	0a 98       	mov	r8,r5
8000d432:	40 b9       	lddsp	r9,sp[0x2c]
8000d434:	ee 18 80 00 	eorh	r8,0x8000
8000d438:	fa ea 00 08 	ld.d	r10,sp[8]
8000d43c:	10 95       	mov	r5,r8
8000d43e:	12 98       	mov	r8,r9
8000d440:	0a 99       	mov	r9,r5
8000d442:	f0 1f 00 58 	mcall	8000d5a0 <_dtoa_r+0x684>
8000d446:	e0 81 02 65 	brne	8000d910 <_dtoa_r+0x9f4>
8000d44a:	cb c8       	rjmp	8000d5c2 <_dtoa_r+0x6a6>
8000d44c:	4d 69       	lddpc	r9,8000d5a4 <_dtoa_r+0x688>
8000d44e:	e8 c8 00 01 	sub	r8,r4,1
8000d452:	40 d5       	lddsp	r5,sp[0x34]
8000d454:	58 05       	cp.w	r5,0
8000d456:	c5 40       	breq	8000d4fe <_dtoa_r+0x5e2>
8000d458:	30 0c       	mov	r12,0
8000d45a:	f2 08 02 38 	ld.d	r8,r9[r8<<0x3]
8000d45e:	51 3c       	stdsp	sp[0x4c],r12
8000d460:	30 0a       	mov	r10,0
8000d462:	30 0b       	mov	r11,0
8000d464:	ea 1b 3f e0 	orh	r11,0x3fe0
8000d468:	f0 1f 00 50 	mcall	8000d5a8 <_dtoa_r+0x68c>
8000d46c:	fa e8 00 28 	ld.d	r8,sp[40]
8000d470:	40 85       	lddsp	r5,sp[0x20]
8000d472:	f0 1f 00 4b 	mcall	8000d59c <_dtoa_r+0x680>
8000d476:	fa eb 00 28 	st.d	sp[40],r10
8000d47a:	fa ea 00 08 	ld.d	r10,sp[8]
8000d47e:	f0 1f 00 4c 	mcall	8000d5ac <_dtoa_r+0x690>
8000d482:	51 6c       	stdsp	sp[0x58],r12
8000d484:	f0 1f 00 43 	mcall	8000d590 <_dtoa_r+0x674>
8000d488:	14 98       	mov	r8,r10
8000d48a:	16 99       	mov	r9,r11
8000d48c:	fa ea 00 08 	ld.d	r10,sp[8]
8000d490:	f0 1f 00 43 	mcall	8000d59c <_dtoa_r+0x680>
8000d494:	fa eb 00 08 	st.d	sp[8],r10
8000d498:	41 68       	lddsp	r8,sp[0x58]
8000d49a:	2d 08       	sub	r8,-48
8000d49c:	0a c8       	st.b	r5++,r8
8000d49e:	41 39       	lddsp	r9,sp[0x4c]
8000d4a0:	2f f9       	sub	r9,-1
8000d4a2:	51 39       	stdsp	sp[0x4c],r9
8000d4a4:	fa e8 00 28 	ld.d	r8,sp[40]
8000d4a8:	f0 1f 00 3e 	mcall	8000d5a0 <_dtoa_r+0x684>
8000d4ac:	e0 81 03 64 	brne	8000db74 <_dtoa_r+0xc58>
8000d4b0:	fa e8 00 08 	ld.d	r8,sp[8]
8000d4b4:	30 0a       	mov	r10,0
8000d4b6:	30 0b       	mov	r11,0
8000d4b8:	ea 1b 3f f0 	orh	r11,0x3ff0
8000d4bc:	f0 1f 00 38 	mcall	8000d59c <_dtoa_r+0x680>
8000d4c0:	fa e8 00 28 	ld.d	r8,sp[40]
8000d4c4:	f0 1f 00 37 	mcall	8000d5a0 <_dtoa_r+0x684>
8000d4c8:	fa ea 00 28 	ld.d	r10,sp[40]
8000d4cc:	30 08       	mov	r8,0
8000d4ce:	30 09       	mov	r9,0
8000d4d0:	ea 19 40 24 	orh	r9,0x4024
8000d4d4:	58 0c       	cp.w	r12,0
8000d4d6:	e0 81 00 ee 	brne	8000d6b2 <_dtoa_r+0x796>
8000d4da:	41 3c       	lddsp	r12,sp[0x4c]
8000d4dc:	08 3c       	cp.w	r12,r4
8000d4de:	c7 24       	brge	8000d5c2 <_dtoa_r+0x6a6>
8000d4e0:	f0 1f 00 2d 	mcall	8000d594 <_dtoa_r+0x678>
8000d4e4:	30 08       	mov	r8,0
8000d4e6:	fa eb 00 28 	st.d	sp[40],r10
8000d4ea:	30 09       	mov	r9,0
8000d4ec:	ea 19 40 24 	orh	r9,0x4024
8000d4f0:	fa ea 00 08 	ld.d	r10,sp[8]
8000d4f4:	f0 1f 00 28 	mcall	8000d594 <_dtoa_r+0x678>
8000d4f8:	fa eb 00 08 	st.d	sp[8],r10
8000d4fc:	cb fb       	rjmp	8000d47a <_dtoa_r+0x55e>
8000d4fe:	40 85       	lddsp	r5,sp[0x20]
8000d500:	08 05       	add	r5,r4
8000d502:	f2 08 02 3a 	ld.d	r10,r9[r8<<0x3]
8000d506:	51 35       	stdsp	sp[0x4c],r5
8000d508:	fa e8 00 28 	ld.d	r8,sp[40]
8000d50c:	40 85       	lddsp	r5,sp[0x20]
8000d50e:	f0 1f 00 22 	mcall	8000d594 <_dtoa_r+0x678>
8000d512:	fa eb 00 28 	st.d	sp[40],r10
8000d516:	fa ea 00 08 	ld.d	r10,sp[8]
8000d51a:	f0 1f 00 25 	mcall	8000d5ac <_dtoa_r+0x690>
8000d51e:	51 6c       	stdsp	sp[0x58],r12
8000d520:	f0 1f 00 1c 	mcall	8000d590 <_dtoa_r+0x674>
8000d524:	14 98       	mov	r8,r10
8000d526:	16 99       	mov	r9,r11
8000d528:	fa ea 00 08 	ld.d	r10,sp[8]
8000d52c:	f0 1f 00 1c 	mcall	8000d59c <_dtoa_r+0x680>
8000d530:	fa eb 00 08 	st.d	sp[8],r10
8000d534:	41 68       	lddsp	r8,sp[0x58]
8000d536:	2d 08       	sub	r8,-48
8000d538:	0a c8       	st.b	r5++,r8
8000d53a:	41 3c       	lddsp	r12,sp[0x4c]
8000d53c:	18 35       	cp.w	r5,r12
8000d53e:	c3 91       	brne	8000d5b0 <_dtoa_r+0x694>
8000d540:	30 08       	mov	r8,0
8000d542:	30 09       	mov	r9,0
8000d544:	ea 19 3f e0 	orh	r9,0x3fe0
8000d548:	fa ea 00 28 	ld.d	r10,sp[40]
8000d54c:	f0 1f 00 13 	mcall	8000d598 <_dtoa_r+0x67c>
8000d550:	40 85       	lddsp	r5,sp[0x20]
8000d552:	fa e8 00 08 	ld.d	r8,sp[8]
8000d556:	08 05       	add	r5,r4
8000d558:	f0 1f 00 12 	mcall	8000d5a0 <_dtoa_r+0x684>
8000d55c:	e0 81 00 ab 	brne	8000d6b2 <_dtoa_r+0x796>
8000d560:	fa e8 00 28 	ld.d	r8,sp[40]
8000d564:	30 0a       	mov	r10,0
8000d566:	30 0b       	mov	r11,0
8000d568:	ea 1b 3f e0 	orh	r11,0x3fe0
8000d56c:	f0 1f 00 0c 	mcall	8000d59c <_dtoa_r+0x680>
8000d570:	14 98       	mov	r8,r10
8000d572:	16 99       	mov	r9,r11
8000d574:	fa ea 00 08 	ld.d	r10,sp[8]
8000d578:	f0 1f 00 0a 	mcall	8000d5a0 <_dtoa_r+0x684>
8000d57c:	c2 30       	breq	8000d5c2 <_dtoa_r+0x6a6>
8000d57e:	33 09       	mov	r9,48
8000d580:	0a 98       	mov	r8,r5
8000d582:	11 7a       	ld.ub	r10,--r8
8000d584:	f2 0a 18 00 	cp.b	r10,r9
8000d588:	e0 81 02 f6 	brne	8000db74 <_dtoa_r+0xc58>
8000d58c:	10 95       	mov	r5,r8
8000d58e:	cf 9b       	rjmp	8000d580 <_dtoa_r+0x664>
8000d590:	80 00       	ld.sh	r0,r0[0x0]
8000d592:	eb 24 80 00 	ld.sb	r4,r5[-32768]
8000d596:	87 50       	st.w	r3[0x14],r0
8000d598:	80 00       	ld.sh	r0,r0[0x0]
8000d59a:	8a c4       	ld.uh	r4,r5[0x8]
8000d59c:	80 00       	ld.sh	r0,r0[0x0]
8000d59e:	89 28       	st.w	r4[0x8],r8
8000d5a0:	80 00       	ld.sh	r0,r0[0x0]
8000d5a2:	ec 98 80 01 	brls	801bd5a4 <_data_lma+0x1ad2a4>
8000d5a6:	02 0c       	add	r12,r1
8000d5a8:	80 00       	ld.sh	r0,r0[0x0]
8000d5aa:	8c 34       	ld.sh	r4,r6[0x6]
8000d5ac:	80 00       	ld.sh	r0,r0[0x0]
8000d5ae:	8b d8       	st.w	r5[0x34],r8
8000d5b0:	30 08       	mov	r8,0
8000d5b2:	30 09       	mov	r9,0
8000d5b4:	ea 19 40 24 	orh	r9,0x4024
8000d5b8:	f0 1f 00 5a 	mcall	8000d720 <_dtoa_r+0x804>
8000d5bc:	fa eb 00 08 	st.d	sp[8],r10
8000d5c0:	ca bb       	rjmp	8000d516 <_dtoa_r+0x5fa>
8000d5c2:	fa ea 00 3c 	ld.d	r10,sp[60]
8000d5c6:	fa eb 00 08 	st.d	sp[8],r10
8000d5ca:	58 e6       	cp.w	r6,14
8000d5cc:	5f ab       	srle	r11
8000d5ce:	41 8a       	lddsp	r10,sp[0x60]
8000d5d0:	30 08       	mov	r8,0
8000d5d2:	f4 09 11 ff 	rsub	r9,r10,-1
8000d5d6:	f7 e9 03 f9 	and	r9,r11,r9>>0x1f
8000d5da:	f0 09 18 00 	cp.b	r9,r8
8000d5de:	e0 80 00 83 	breq	8000d6e4 <_dtoa_r+0x7c8>
8000d5e2:	40 ea       	lddsp	r10,sp[0x38]
8000d5e4:	58 01       	cp.w	r1,0
8000d5e6:	5f a9       	srle	r9
8000d5e8:	f3 ea 03 f9 	and	r9,r9,r10>>0x1f
8000d5ec:	4c ea       	lddpc	r10,8000d724 <_dtoa_r+0x808>
8000d5ee:	f4 06 02 34 	ld.d	r4,r10[r6<<0x3]
8000d5f2:	fa e5 00 10 	st.d	sp[16],r4
8000d5f6:	f0 09 18 00 	cp.b	r9,r8
8000d5fa:	c1 50       	breq	8000d624 <_dtoa_r+0x708>
8000d5fc:	58 01       	cp.w	r1,0
8000d5fe:	e0 81 01 89 	brne	8000d910 <_dtoa_r+0x9f4>
8000d602:	30 08       	mov	r8,0
8000d604:	30 09       	mov	r9,0
8000d606:	ea 19 40 14 	orh	r9,0x4014
8000d60a:	08 9a       	mov	r10,r4
8000d60c:	0a 9b       	mov	r11,r5
8000d60e:	f0 1f 00 45 	mcall	8000d720 <_dtoa_r+0x804>
8000d612:	fa e8 00 08 	ld.d	r8,sp[8]
8000d616:	f0 1f 00 45 	mcall	8000d728 <_dtoa_r+0x80c>
8000d61a:	e0 81 01 7b 	brne	8000d910 <_dtoa_r+0x9f4>
8000d61e:	02 92       	mov	r2,r1
8000d620:	e0 8f 01 83 	bral	8000d926 <_dtoa_r+0xa0a>
8000d624:	40 85       	lddsp	r5,sp[0x20]
8000d626:	30 14       	mov	r4,1
8000d628:	fa e8 00 10 	ld.d	r8,sp[16]
8000d62c:	fa ea 00 08 	ld.d	r10,sp[8]
8000d630:	f0 1f 00 3f 	mcall	8000d72c <_dtoa_r+0x810>
8000d634:	f0 1f 00 3f 	mcall	8000d730 <_dtoa_r+0x814>
8000d638:	18 92       	mov	r2,r12
8000d63a:	f0 1f 00 3f 	mcall	8000d734 <_dtoa_r+0x818>
8000d63e:	fa e8 00 10 	ld.d	r8,sp[16]
8000d642:	f0 1f 00 38 	mcall	8000d720 <_dtoa_r+0x804>
8000d646:	14 98       	mov	r8,r10
8000d648:	16 99       	mov	r9,r11
8000d64a:	fa ea 00 08 	ld.d	r10,sp[8]
8000d64e:	f0 1f 00 3b 	mcall	8000d738 <_dtoa_r+0x81c>
8000d652:	fa eb 00 08 	st.d	sp[8],r10
8000d656:	e4 c8 ff d0 	sub	r8,r2,-48
8000d65a:	0a c8       	st.b	r5++,r8
8000d65c:	30 09       	mov	r9,0
8000d65e:	ea 19 40 24 	orh	r9,0x4024
8000d662:	30 08       	mov	r8,0
8000d664:	02 34       	cp.w	r4,r1
8000d666:	c3 31       	brne	8000d6cc <_dtoa_r+0x7b0>
8000d668:	fa e8 00 08 	ld.d	r8,sp[8]
8000d66c:	f0 1f 00 34 	mcall	8000d73c <_dtoa_r+0x820>
8000d670:	16 91       	mov	r1,r11
8000d672:	14 90       	mov	r0,r10
8000d674:	14 98       	mov	r8,r10
8000d676:	02 99       	mov	r9,r1
8000d678:	fa ea 00 10 	ld.d	r10,sp[16]
8000d67c:	f0 1f 00 31 	mcall	8000d740 <_dtoa_r+0x824>
8000d680:	c1 a1       	brne	8000d6b4 <_dtoa_r+0x798>
8000d682:	fa e8 00 10 	ld.d	r8,sp[16]
8000d686:	00 9a       	mov	r10,r0
8000d688:	02 9b       	mov	r11,r1
8000d68a:	f0 1f 00 2f 	mcall	8000d744 <_dtoa_r+0x828>
8000d68e:	e0 80 02 72 	breq	8000db72 <_dtoa_r+0xc56>
8000d692:	e5 d2 c0 01 	bfextu	r2,r2,0x0,0x1
8000d696:	c0 f1       	brne	8000d6b4 <_dtoa_r+0x798>
8000d698:	e0 8f 02 6d 	bral	8000db72 <_dtoa_r+0xc56>
8000d69c:	40 8a       	lddsp	r10,sp[0x20]
8000d69e:	14 38       	cp.w	r8,r10
8000d6a0:	c0 30       	breq	8000d6a6 <_dtoa_r+0x78a>
8000d6a2:	10 95       	mov	r5,r8
8000d6a4:	c0 98       	rjmp	8000d6b6 <_dtoa_r+0x79a>
8000d6a6:	33 08       	mov	r8,48
8000d6a8:	40 89       	lddsp	r9,sp[0x20]
8000d6aa:	2f f6       	sub	r6,-1
8000d6ac:	b2 88       	st.b	r9[0x0],r8
8000d6ae:	40 88       	lddsp	r8,sp[0x20]
8000d6b0:	c0 88       	rjmp	8000d6c0 <_dtoa_r+0x7a4>
8000d6b2:	40 66       	lddsp	r6,sp[0x18]
8000d6b4:	33 99       	mov	r9,57
8000d6b6:	0a 98       	mov	r8,r5
8000d6b8:	11 7a       	ld.ub	r10,--r8
8000d6ba:	f2 0a 18 00 	cp.b	r10,r9
8000d6be:	ce f0       	breq	8000d69c <_dtoa_r+0x780>
8000d6c0:	50 66       	stdsp	sp[0x18],r6
8000d6c2:	11 89       	ld.ub	r9,r8[0x0]
8000d6c4:	2f f9       	sub	r9,-1
8000d6c6:	b0 89       	st.b	r8[0x0],r9
8000d6c8:	e0 8f 02 56 	bral	8000db74 <_dtoa_r+0xc58>
8000d6cc:	f0 1f 00 15 	mcall	8000d720 <_dtoa_r+0x804>
8000d6d0:	2f f4       	sub	r4,-1
8000d6d2:	fa eb 00 08 	st.d	sp[8],r10
8000d6d6:	30 08       	mov	r8,0
8000d6d8:	30 09       	mov	r9,0
8000d6da:	f0 1f 00 1b 	mcall	8000d744 <_dtoa_r+0x828>
8000d6de:	ca 50       	breq	8000d628 <_dtoa_r+0x70c>
8000d6e0:	e0 8f 02 49 	bral	8000db72 <_dtoa_r+0xc56>
8000d6e4:	40 d8       	lddsp	r8,sp[0x34]
8000d6e6:	58 08       	cp.w	r8,0
8000d6e8:	c0 51       	brne	8000d6f2 <_dtoa_r+0x7d6>
8000d6ea:	04 98       	mov	r8,r2
8000d6ec:	00 95       	mov	r5,r0
8000d6ee:	40 d4       	lddsp	r4,sp[0x34]
8000d6f0:	c4 78       	rjmp	8000d77e <_dtoa_r+0x862>
8000d6f2:	40 c5       	lddsp	r5,sp[0x30]
8000d6f4:	58 15       	cp.w	r5,1
8000d6f6:	e0 89 00 0e 	brgt	8000d712 <_dtoa_r+0x7f6>
8000d6fa:	41 74       	lddsp	r4,sp[0x5c]
8000d6fc:	58 04       	cp.w	r4,0
8000d6fe:	c0 40       	breq	8000d706 <_dtoa_r+0x7ea>
8000d700:	f4 c9 fb cd 	sub	r9,r10,-1075
8000d704:	c0 48       	rjmp	8000d70c <_dtoa_r+0x7f0>
8000d706:	41 99       	lddsp	r9,sp[0x64]
8000d708:	f2 09 11 36 	rsub	r9,r9,54
8000d70c:	04 98       	mov	r8,r2
8000d70e:	00 95       	mov	r5,r0
8000d710:	c2 c8       	rjmp	8000d768 <_dtoa_r+0x84c>
8000d712:	e2 c8 00 01 	sub	r8,r1,1
8000d716:	10 32       	cp.w	r2,r8
8000d718:	c1 85       	brlt	8000d748 <_dtoa_r+0x82c>
8000d71a:	e4 08 01 08 	sub	r8,r2,r8
8000d71e:	c1 b8       	rjmp	8000d754 <_dtoa_r+0x838>
8000d720:	80 00       	ld.sh	r0,r0[0x0]
8000d722:	87 50       	st.w	r3[0x14],r0
8000d724:	80 01       	ld.sh	r1,r0[0x0]
8000d726:	02 0c       	add	r12,r1
8000d728:	80 00       	ld.sh	r0,r0[0x0]
8000d72a:	ec 2e 80 00 	sub	lr,819200
8000d72e:	8c 34       	ld.sh	r4,r6[0x6]
8000d730:	80 00       	ld.sh	r0,r0[0x0]
8000d732:	8b d8       	st.w	r5[0x34],r8
8000d734:	80 00       	ld.sh	r0,r0[0x0]
8000d736:	eb 24 80 00 	ld.sb	r4,r5[-32768]
8000d73a:	89 28       	st.w	r4[0x8],r8
8000d73c:	80 00       	ld.sh	r0,r0[0x0]
8000d73e:	8a c4       	ld.uh	r4,r5[0x8]
8000d740:	80 00       	ld.sh	r0,r0[0x0]
8000d742:	ec 98 80 00 	brls	801bd742 <_data_lma+0x1ad442>
8000d746:	ec 06 04 18 	ld.sh	r8,r6[r6<<0x1]
8000d74a:	41 1c       	lddsp	r12,sp[0x44]
8000d74c:	10 02       	add	r2,r8
8000d74e:	10 0c       	add	r12,r8
8000d750:	30 08       	mov	r8,0
8000d752:	51 1c       	stdsp	sp[0x44],r12
8000d754:	e0 01 01 05 	sub	r5,r0,r1
8000d758:	30 09       	mov	r9,0
8000d75a:	0a 9b       	mov	r11,r5
8000d75c:	00 95       	mov	r5,r0
8000d75e:	58 01       	cp.w	r1,0
8000d760:	c0 35       	brlt	8000d766 <_dtoa_r+0x84a>
8000d762:	02 99       	mov	r9,r1
8000d764:	c0 28       	rjmp	8000d768 <_dtoa_r+0x84c>
8000d766:	16 95       	mov	r5,r11
8000d768:	40 4b       	lddsp	r11,sp[0x10]
8000d76a:	12 0b       	add	r11,r9
8000d76c:	50 08       	stdsp	sp[0x0],r8
8000d76e:	50 4b       	stdsp	sp[0x10],r11
8000d770:	12 00       	add	r0,r9
8000d772:	30 1b       	mov	r11,1
8000d774:	0e 9c       	mov	r12,r7
8000d776:	f0 1f 01 09 	mcall	8000db98 <_dtoa_r+0xc7c>
8000d77a:	40 08       	lddsp	r8,sp[0x0]
8000d77c:	18 94       	mov	r4,r12
8000d77e:	40 4a       	lddsp	r10,sp[0x10]
8000d780:	58 05       	cp.w	r5,0
8000d782:	5f 99       	srgt	r9
8000d784:	58 0a       	cp.w	r10,0
8000d786:	5f 9a       	srgt	r10
8000d788:	f5 e9 00 09 	and	r9,r10,r9
8000d78c:	c0 80       	breq	8000d79c <_dtoa_r+0x880>
8000d78e:	40 4c       	lddsp	r12,sp[0x10]
8000d790:	f8 05 0d 49 	min	r9,r12,r5
8000d794:	12 1c       	sub	r12,r9
8000d796:	12 10       	sub	r0,r9
8000d798:	50 4c       	stdsp	sp[0x10],r12
8000d79a:	12 15       	sub	r5,r9
8000d79c:	58 02       	cp.w	r2,0
8000d79e:	e0 8a 00 27 	brle	8000d7ec <_dtoa_r+0x8d0>
8000d7a2:	40 db       	lddsp	r11,sp[0x34]
8000d7a4:	58 0b       	cp.w	r11,0
8000d7a6:	c1 d0       	breq	8000d7e0 <_dtoa_r+0x8c4>
8000d7a8:	58 08       	cp.w	r8,0
8000d7aa:	e0 8a 00 17 	brle	8000d7d8 <_dtoa_r+0x8bc>
8000d7ae:	10 9a       	mov	r10,r8
8000d7b0:	50 08       	stdsp	sp[0x0],r8
8000d7b2:	08 9b       	mov	r11,r4
8000d7b4:	0e 9c       	mov	r12,r7
8000d7b6:	f0 1f 00 fa 	mcall	8000db9c <_dtoa_r+0xc80>
8000d7ba:	06 9a       	mov	r10,r3
8000d7bc:	18 9b       	mov	r11,r12
8000d7be:	18 94       	mov	r4,r12
8000d7c0:	0e 9c       	mov	r12,r7
8000d7c2:	f0 1f 00 f8 	mcall	8000dba0 <_dtoa_r+0xc84>
8000d7c6:	18 99       	mov	r9,r12
8000d7c8:	06 9b       	mov	r11,r3
8000d7ca:	50 19       	stdsp	sp[0x4],r9
8000d7cc:	0e 9c       	mov	r12,r7
8000d7ce:	f0 1f 00 f6 	mcall	8000dba4 <_dtoa_r+0xc88>
8000d7d2:	40 19       	lddsp	r9,sp[0x4]
8000d7d4:	40 08       	lddsp	r8,sp[0x0]
8000d7d6:	12 93       	mov	r3,r9
8000d7d8:	e4 08 01 0a 	sub	r10,r2,r8
8000d7dc:	c0 80       	breq	8000d7ec <_dtoa_r+0x8d0>
8000d7de:	c0 28       	rjmp	8000d7e2 <_dtoa_r+0x8c6>
8000d7e0:	04 9a       	mov	r10,r2
8000d7e2:	06 9b       	mov	r11,r3
8000d7e4:	0e 9c       	mov	r12,r7
8000d7e6:	f0 1f 00 ee 	mcall	8000db9c <_dtoa_r+0xc80>
8000d7ea:	18 93       	mov	r3,r12
8000d7ec:	30 1b       	mov	r11,1
8000d7ee:	0e 9c       	mov	r12,r7
8000d7f0:	f0 1f 00 ea 	mcall	8000db98 <_dtoa_r+0xc7c>
8000d7f4:	41 1a       	lddsp	r10,sp[0x44]
8000d7f6:	18 92       	mov	r2,r12
8000d7f8:	58 0a       	cp.w	r10,0
8000d7fa:	e0 8a 00 07 	brle	8000d808 <_dtoa_r+0x8ec>
8000d7fe:	18 9b       	mov	r11,r12
8000d800:	0e 9c       	mov	r12,r7
8000d802:	f0 1f 00 e7 	mcall	8000db9c <_dtoa_r+0xc80>
8000d806:	18 92       	mov	r2,r12
8000d808:	40 c9       	lddsp	r9,sp[0x30]
8000d80a:	58 19       	cp.w	r9,1
8000d80c:	e0 89 00 14 	brgt	8000d834 <_dtoa_r+0x918>
8000d810:	40 38       	lddsp	r8,sp[0xc]
8000d812:	58 08       	cp.w	r8,0
8000d814:	c1 01       	brne	8000d834 <_dtoa_r+0x918>
8000d816:	40 29       	lddsp	r9,sp[0x8]
8000d818:	f1 d9 c0 14 	bfextu	r8,r9,0x0,0x14
8000d81c:	c0 c1       	brne	8000d834 <_dtoa_r+0x918>
8000d81e:	12 98       	mov	r8,r9
8000d820:	e6 18 7f f0 	andh	r8,0x7ff0,COH
8000d824:	c0 80       	breq	8000d834 <_dtoa_r+0x918>
8000d826:	40 4c       	lddsp	r12,sp[0x10]
8000d828:	30 1b       	mov	r11,1
8000d82a:	2f fc       	sub	r12,-1
8000d82c:	2f f0       	sub	r0,-1
8000d82e:	50 4c       	stdsp	sp[0x10],r12
8000d830:	50 6b       	stdsp	sp[0x18],r11
8000d832:	c0 38       	rjmp	8000d838 <_dtoa_r+0x91c>
8000d834:	30 0a       	mov	r10,0
8000d836:	50 6a       	stdsp	sp[0x18],r10
8000d838:	41 19       	lddsp	r9,sp[0x44]
8000d83a:	58 09       	cp.w	r9,0
8000d83c:	c0 31       	brne	8000d842 <_dtoa_r+0x926>
8000d83e:	30 1c       	mov	r12,1
8000d840:	c0 98       	rjmp	8000d852 <_dtoa_r+0x936>
8000d842:	64 48       	ld.w	r8,r2[0x10]
8000d844:	2f c8       	sub	r8,-4
8000d846:	e4 08 03 2c 	ld.w	r12,r2[r8<<0x2]
8000d84a:	f0 1f 00 d8 	mcall	8000dba8 <_dtoa_r+0xc8c>
8000d84e:	f8 0c 11 20 	rsub	r12,r12,32
8000d852:	40 4b       	lddsp	r11,sp[0x10]
8000d854:	f8 0b 00 08 	add	r8,r12,r11
8000d858:	f1 d8 c0 05 	bfextu	r8,r8,0x0,0x5
8000d85c:	c0 c0       	breq	8000d874 <_dtoa_r+0x958>
8000d85e:	f0 08 11 20 	rsub	r8,r8,32
8000d862:	58 48       	cp.w	r8,4
8000d864:	e0 8a 00 06 	brle	8000d870 <_dtoa_r+0x954>
8000d868:	20 48       	sub	r8,4
8000d86a:	10 0b       	add	r11,r8
8000d86c:	50 4b       	stdsp	sp[0x10],r11
8000d86e:	c0 78       	rjmp	8000d87c <_dtoa_r+0x960>
8000d870:	58 48       	cp.w	r8,4
8000d872:	c0 70       	breq	8000d880 <_dtoa_r+0x964>
8000d874:	40 4a       	lddsp	r10,sp[0x10]
8000d876:	2e 48       	sub	r8,-28
8000d878:	10 0a       	add	r10,r8
8000d87a:	50 4a       	stdsp	sp[0x10],r10
8000d87c:	10 00       	add	r0,r8
8000d87e:	10 05       	add	r5,r8
8000d880:	58 00       	cp.w	r0,0
8000d882:	e0 8a 00 08 	brle	8000d892 <_dtoa_r+0x976>
8000d886:	06 9b       	mov	r11,r3
8000d888:	00 9a       	mov	r10,r0
8000d88a:	0e 9c       	mov	r12,r7
8000d88c:	f0 1f 00 c8 	mcall	8000dbac <_dtoa_r+0xc90>
8000d890:	18 93       	mov	r3,r12
8000d892:	40 49       	lddsp	r9,sp[0x10]
8000d894:	58 09       	cp.w	r9,0
8000d896:	e0 8a 00 08 	brle	8000d8a6 <_dtoa_r+0x98a>
8000d89a:	04 9b       	mov	r11,r2
8000d89c:	12 9a       	mov	r10,r9
8000d89e:	0e 9c       	mov	r12,r7
8000d8a0:	f0 1f 00 c3 	mcall	8000dbac <_dtoa_r+0xc90>
8000d8a4:	18 92       	mov	r2,r12
8000d8a6:	41 48       	lddsp	r8,sp[0x50]
8000d8a8:	58 08       	cp.w	r8,0
8000d8aa:	c1 b0       	breq	8000d8e0 <_dtoa_r+0x9c4>
8000d8ac:	04 9b       	mov	r11,r2
8000d8ae:	06 9c       	mov	r12,r3
8000d8b0:	f0 1f 00 c0 	mcall	8000dbb0 <_dtoa_r+0xc94>
8000d8b4:	c1 64       	brge	8000d8e0 <_dtoa_r+0x9c4>
8000d8b6:	06 9b       	mov	r11,r3
8000d8b8:	30 09       	mov	r9,0
8000d8ba:	30 aa       	mov	r10,10
8000d8bc:	0e 9c       	mov	r12,r7
8000d8be:	f0 1f 00 be 	mcall	8000dbb4 <_dtoa_r+0xc98>
8000d8c2:	20 16       	sub	r6,1
8000d8c4:	18 93       	mov	r3,r12
8000d8c6:	40 dc       	lddsp	r12,sp[0x34]
8000d8c8:	58 0c       	cp.w	r12,0
8000d8ca:	c0 31       	brne	8000d8d0 <_dtoa_r+0x9b4>
8000d8cc:	40 91       	lddsp	r1,sp[0x24]
8000d8ce:	c0 98       	rjmp	8000d8e0 <_dtoa_r+0x9c4>
8000d8d0:	08 9b       	mov	r11,r4
8000d8d2:	40 91       	lddsp	r1,sp[0x24]
8000d8d4:	30 09       	mov	r9,0
8000d8d6:	30 aa       	mov	r10,10
8000d8d8:	0e 9c       	mov	r12,r7
8000d8da:	f0 1f 00 b7 	mcall	8000dbb4 <_dtoa_r+0xc98>
8000d8de:	18 94       	mov	r4,r12
8000d8e0:	58 01       	cp.w	r1,0
8000d8e2:	5f a9       	srle	r9
8000d8e4:	40 cb       	lddsp	r11,sp[0x30]
8000d8e6:	58 2b       	cp.w	r11,2
8000d8e8:	5f 98       	srgt	r8
8000d8ea:	f3 e8 00 08 	and	r8,r9,r8
8000d8ee:	c2 50       	breq	8000d938 <_dtoa_r+0xa1c>
8000d8f0:	58 01       	cp.w	r1,0
8000d8f2:	c1 11       	brne	8000d914 <_dtoa_r+0x9f8>
8000d8f4:	04 9b       	mov	r11,r2
8000d8f6:	02 99       	mov	r9,r1
8000d8f8:	30 5a       	mov	r10,5
8000d8fa:	0e 9c       	mov	r12,r7
8000d8fc:	f0 1f 00 ae 	mcall	8000dbb4 <_dtoa_r+0xc98>
8000d900:	18 92       	mov	r2,r12
8000d902:	18 9b       	mov	r11,r12
8000d904:	06 9c       	mov	r12,r3
8000d906:	f0 1f 00 ab 	mcall	8000dbb0 <_dtoa_r+0xc94>
8000d90a:	e0 89 00 0f 	brgt	8000d928 <_dtoa_r+0xa0c>
8000d90e:	c0 38       	rjmp	8000d914 <_dtoa_r+0x9f8>
8000d910:	30 02       	mov	r2,0
8000d912:	04 94       	mov	r4,r2
8000d914:	40 ea       	lddsp	r10,sp[0x38]
8000d916:	30 09       	mov	r9,0
8000d918:	5c da       	com	r10
8000d91a:	40 85       	lddsp	r5,sp[0x20]
8000d91c:	50 6a       	stdsp	sp[0x18],r10
8000d91e:	50 49       	stdsp	sp[0x10],r9
8000d920:	c1 39       	rjmp	8000db46 <_dtoa_r+0xc2a>
8000d922:	08 92       	mov	r2,r4
8000d924:	40 66       	lddsp	r6,sp[0x18]
8000d926:	04 94       	mov	r4,r2
8000d928:	2f f6       	sub	r6,-1
8000d92a:	50 66       	stdsp	sp[0x18],r6
8000d92c:	33 18       	mov	r8,49
8000d92e:	40 85       	lddsp	r5,sp[0x20]
8000d930:	0a c8       	st.b	r5++,r8
8000d932:	30 08       	mov	r8,0
8000d934:	50 48       	stdsp	sp[0x10],r8
8000d936:	c0 89       	rjmp	8000db46 <_dtoa_r+0xc2a>
8000d938:	40 dc       	lddsp	r12,sp[0x34]
8000d93a:	58 0c       	cp.w	r12,0
8000d93c:	e0 80 00 b9 	breq	8000daae <_dtoa_r+0xb92>
8000d940:	58 05       	cp.w	r5,0
8000d942:	e0 8a 00 08 	brle	8000d952 <_dtoa_r+0xa36>
8000d946:	08 9b       	mov	r11,r4
8000d948:	0a 9a       	mov	r10,r5
8000d94a:	0e 9c       	mov	r12,r7
8000d94c:	f0 1f 00 98 	mcall	8000dbac <_dtoa_r+0xc90>
8000d950:	18 94       	mov	r4,r12
8000d952:	40 6b       	lddsp	r11,sp[0x18]
8000d954:	58 0b       	cp.w	r11,0
8000d956:	c0 31       	brne	8000d95c <_dtoa_r+0xa40>
8000d958:	08 9c       	mov	r12,r4
8000d95a:	c1 38       	rjmp	8000d980 <_dtoa_r+0xa64>
8000d95c:	68 1b       	ld.w	r11,r4[0x4]
8000d95e:	0e 9c       	mov	r12,r7
8000d960:	f0 1f 00 96 	mcall	8000dbb8 <_dtoa_r+0xc9c>
8000d964:	68 4a       	ld.w	r10,r4[0x10]
8000d966:	18 95       	mov	r5,r12
8000d968:	e8 cb ff f4 	sub	r11,r4,-12
8000d96c:	2f ea       	sub	r10,-2
8000d96e:	2f 4c       	sub	r12,-12
8000d970:	a3 6a       	lsl	r10,0x2
8000d972:	f0 1f 00 93 	mcall	8000dbbc <_dtoa_r+0xca0>
8000d976:	0a 9b       	mov	r11,r5
8000d978:	30 1a       	mov	r10,1
8000d97a:	0e 9c       	mov	r12,r7
8000d97c:	f0 1f 00 8c 	mcall	8000dbac <_dtoa_r+0xc90>
8000d980:	50 44       	stdsp	sp[0x10],r4
8000d982:	40 3a       	lddsp	r10,sp[0xc]
8000d984:	30 19       	mov	r9,1
8000d986:	f5 da c0 01 	bfextu	r10,r10,0x0,0x1
8000d98a:	18 94       	mov	r4,r12
8000d98c:	50 da       	stdsp	sp[0x34],r10
8000d98e:	40 85       	lddsp	r5,sp[0x20]
8000d990:	50 69       	stdsp	sp[0x18],r9
8000d992:	50 26       	stdsp	sp[0x8],r6
8000d994:	50 e1       	stdsp	sp[0x38],r1
8000d996:	04 9b       	mov	r11,r2
8000d998:	06 9c       	mov	r12,r3
8000d99a:	f0 1f 00 8a 	mcall	8000dbc0 <_dtoa_r+0xca4>
8000d99e:	40 4b       	lddsp	r11,sp[0x10]
8000d9a0:	f8 c0 ff d0 	sub	r0,r12,-48
8000d9a4:	06 9c       	mov	r12,r3
8000d9a6:	f0 1f 00 83 	mcall	8000dbb0 <_dtoa_r+0xc94>
8000d9aa:	08 9a       	mov	r10,r4
8000d9ac:	50 9c       	stdsp	sp[0x24],r12
8000d9ae:	04 9b       	mov	r11,r2
8000d9b0:	0e 9c       	mov	r12,r7
8000d9b2:	f0 1f 00 85 	mcall	8000dbc4 <_dtoa_r+0xca8>
8000d9b6:	18 91       	mov	r1,r12
8000d9b8:	78 38       	ld.w	r8,r12[0xc]
8000d9ba:	58 08       	cp.w	r8,0
8000d9bc:	c0 30       	breq	8000d9c2 <_dtoa_r+0xaa6>
8000d9be:	30 16       	mov	r6,1
8000d9c0:	c0 68       	rjmp	8000d9cc <_dtoa_r+0xab0>
8000d9c2:	18 9b       	mov	r11,r12
8000d9c4:	06 9c       	mov	r12,r3
8000d9c6:	f0 1f 00 7b 	mcall	8000dbb0 <_dtoa_r+0xc94>
8000d9ca:	18 96       	mov	r6,r12
8000d9cc:	0e 9c       	mov	r12,r7
8000d9ce:	02 9b       	mov	r11,r1
8000d9d0:	f0 1f 00 75 	mcall	8000dba4 <_dtoa_r+0xc88>
8000d9d4:	40 cc       	lddsp	r12,sp[0x30]
8000d9d6:	ed ec 10 08 	or	r8,r6,r12
8000d9da:	c1 11       	brne	8000d9fc <_dtoa_r+0xae0>
8000d9dc:	40 db       	lddsp	r11,sp[0x34]
8000d9de:	58 0b       	cp.w	r11,0
8000d9e0:	c0 e1       	brne	8000d9fc <_dtoa_r+0xae0>
8000d9e2:	40 26       	lddsp	r6,sp[0x8]
8000d9e4:	e0 40 00 39 	cp.w	r0,57
8000d9e8:	c3 40       	breq	8000da50 <_dtoa_r+0xb34>
8000d9ea:	50 66       	stdsp	sp[0x18],r6
8000d9ec:	40 9a       	lddsp	r10,sp[0x24]
8000d9ee:	e0 c8 ff ff 	sub	r8,r0,-1
8000d9f2:	58 0a       	cp.w	r10,0
8000d9f4:	f0 00 17 90 	movgt	r0,r8
8000d9f8:	0a c0       	st.b	r5++,r0
8000d9fa:	ca 68       	rjmp	8000db46 <_dtoa_r+0xc2a>
8000d9fc:	40 99       	lddsp	r9,sp[0x24]
8000d9fe:	58 09       	cp.w	r9,0
8000da00:	c0 85       	brlt	8000da10 <_dtoa_r+0xaf4>
8000da02:	12 98       	mov	r8,r9
8000da04:	40 cc       	lddsp	r12,sp[0x30]
8000da06:	18 48       	or	r8,r12
8000da08:	c1 d1       	brne	8000da42 <_dtoa_r+0xb26>
8000da0a:	40 db       	lddsp	r11,sp[0x34]
8000da0c:	58 0b       	cp.w	r11,0
8000da0e:	c1 a1       	brne	8000da42 <_dtoa_r+0xb26>
8000da10:	0c 99       	mov	r9,r6
8000da12:	40 26       	lddsp	r6,sp[0x8]
8000da14:	58 09       	cp.w	r9,0
8000da16:	e0 8a 00 21 	brle	8000da58 <_dtoa_r+0xb3c>
8000da1a:	06 9b       	mov	r11,r3
8000da1c:	30 1a       	mov	r10,1
8000da1e:	0e 9c       	mov	r12,r7
8000da20:	f0 1f 00 63 	mcall	8000dbac <_dtoa_r+0xc90>
8000da24:	04 9b       	mov	r11,r2
8000da26:	18 93       	mov	r3,r12
8000da28:	f0 1f 00 62 	mcall	8000dbb0 <_dtoa_r+0xc94>
8000da2c:	e0 89 00 06 	brgt	8000da38 <_dtoa_r+0xb1c>
8000da30:	c1 41       	brne	8000da58 <_dtoa_r+0xb3c>
8000da32:	ed b0 00 00 	bld	r0,0x0
8000da36:	c1 11       	brne	8000da58 <_dtoa_r+0xb3c>
8000da38:	e0 40 00 39 	cp.w	r0,57
8000da3c:	c0 a0       	breq	8000da50 <_dtoa_r+0xb34>
8000da3e:	2f f0       	sub	r0,-1
8000da40:	c0 c8       	rjmp	8000da58 <_dtoa_r+0xb3c>
8000da42:	58 06       	cp.w	r6,0
8000da44:	e0 8a 00 0c 	brle	8000da5c <_dtoa_r+0xb40>
8000da48:	40 26       	lddsp	r6,sp[0x8]
8000da4a:	e0 40 00 39 	cp.w	r0,57
8000da4e:	c0 41       	brne	8000da56 <_dtoa_r+0xb3a>
8000da50:	33 98       	mov	r8,57
8000da52:	0a c8       	st.b	r5++,r8
8000da54:	c6 78       	rjmp	8000db22 <_dtoa_r+0xc06>
8000da56:	2f f0       	sub	r0,-1
8000da58:	0a c0       	st.b	r5++,r0
8000da5a:	c7 58       	rjmp	8000db44 <_dtoa_r+0xc28>
8000da5c:	0a c0       	st.b	r5++,r0
8000da5e:	40 6a       	lddsp	r10,sp[0x18]
8000da60:	40 e9       	lddsp	r9,sp[0x38]
8000da62:	12 3a       	cp.w	r10,r9
8000da64:	c4 30       	breq	8000daea <_dtoa_r+0xbce>
8000da66:	06 9b       	mov	r11,r3
8000da68:	30 09       	mov	r9,0
8000da6a:	30 aa       	mov	r10,10
8000da6c:	0e 9c       	mov	r12,r7
8000da6e:	f0 1f 00 52 	mcall	8000dbb4 <_dtoa_r+0xc98>
8000da72:	40 48       	lddsp	r8,sp[0x10]
8000da74:	18 93       	mov	r3,r12
8000da76:	08 38       	cp.w	r8,r4
8000da78:	c0 91       	brne	8000da8a <_dtoa_r+0xb6e>
8000da7a:	10 9b       	mov	r11,r8
8000da7c:	30 09       	mov	r9,0
8000da7e:	30 aa       	mov	r10,10
8000da80:	0e 9c       	mov	r12,r7
8000da82:	f0 1f 00 4d 	mcall	8000dbb4 <_dtoa_r+0xc98>
8000da86:	50 4c       	stdsp	sp[0x10],r12
8000da88:	c0 e8       	rjmp	8000daa4 <_dtoa_r+0xb88>
8000da8a:	40 4b       	lddsp	r11,sp[0x10]
8000da8c:	30 09       	mov	r9,0
8000da8e:	30 aa       	mov	r10,10
8000da90:	0e 9c       	mov	r12,r7
8000da92:	f0 1f 00 49 	mcall	8000dbb4 <_dtoa_r+0xc98>
8000da96:	08 9b       	mov	r11,r4
8000da98:	50 4c       	stdsp	sp[0x10],r12
8000da9a:	30 09       	mov	r9,0
8000da9c:	30 aa       	mov	r10,10
8000da9e:	0e 9c       	mov	r12,r7
8000daa0:	f0 1f 00 45 	mcall	8000dbb4 <_dtoa_r+0xc98>
8000daa4:	18 94       	mov	r4,r12
8000daa6:	40 6c       	lddsp	r12,sp[0x18]
8000daa8:	2f fc       	sub	r12,-1
8000daaa:	50 6c       	stdsp	sp[0x18],r12
8000daac:	c7 5b       	rjmp	8000d996 <_dtoa_r+0xa7a>
8000daae:	30 18       	mov	r8,1
8000dab0:	06 90       	mov	r0,r3
8000dab2:	40 85       	lddsp	r5,sp[0x20]
8000dab4:	08 93       	mov	r3,r4
8000dab6:	0c 94       	mov	r4,r6
8000dab8:	10 96       	mov	r6,r8
8000daba:	04 9b       	mov	r11,r2
8000dabc:	00 9c       	mov	r12,r0
8000dabe:	f0 1f 00 41 	mcall	8000dbc0 <_dtoa_r+0xca4>
8000dac2:	2d 0c       	sub	r12,-48
8000dac4:	0a cc       	st.b	r5++,r12
8000dac6:	02 36       	cp.w	r6,r1
8000dac8:	c0 a4       	brge	8000dadc <_dtoa_r+0xbc0>
8000daca:	00 9b       	mov	r11,r0
8000dacc:	30 09       	mov	r9,0
8000dace:	30 aa       	mov	r10,10
8000dad0:	0e 9c       	mov	r12,r7
8000dad2:	2f f6       	sub	r6,-1
8000dad4:	f0 1f 00 38 	mcall	8000dbb4 <_dtoa_r+0xc98>
8000dad8:	18 90       	mov	r0,r12
8000dada:	cf 0b       	rjmp	8000daba <_dtoa_r+0xb9e>
8000dadc:	08 96       	mov	r6,r4
8000dade:	30 0b       	mov	r11,0
8000dae0:	06 94       	mov	r4,r3
8000dae2:	50 4b       	stdsp	sp[0x10],r11
8000dae4:	00 93       	mov	r3,r0
8000dae6:	18 90       	mov	r0,r12
8000dae8:	c0 28       	rjmp	8000daec <_dtoa_r+0xbd0>
8000daea:	40 26       	lddsp	r6,sp[0x8]
8000daec:	06 9b       	mov	r11,r3
8000daee:	30 1a       	mov	r10,1
8000daf0:	0e 9c       	mov	r12,r7
8000daf2:	f0 1f 00 2f 	mcall	8000dbac <_dtoa_r+0xc90>
8000daf6:	04 9b       	mov	r11,r2
8000daf8:	18 93       	mov	r3,r12
8000dafa:	f0 1f 00 2e 	mcall	8000dbb0 <_dtoa_r+0xc94>
8000dafe:	e0 89 00 12 	brgt	8000db22 <_dtoa_r+0xc06>
8000db02:	c1 b1       	brne	8000db38 <_dtoa_r+0xc1c>
8000db04:	e1 d0 c0 01 	bfextu	r0,r0,0x0,0x1
8000db08:	c0 d1       	brne	8000db22 <_dtoa_r+0xc06>
8000db0a:	c1 78       	rjmp	8000db38 <_dtoa_r+0xc1c>
8000db0c:	40 89       	lddsp	r9,sp[0x20]
8000db0e:	12 38       	cp.w	r8,r9
8000db10:	c0 30       	breq	8000db16 <_dtoa_r+0xbfa>
8000db12:	10 95       	mov	r5,r8
8000db14:	c0 88       	rjmp	8000db24 <_dtoa_r+0xc08>
8000db16:	2f f6       	sub	r6,-1
8000db18:	50 66       	stdsp	sp[0x18],r6
8000db1a:	33 18       	mov	r8,49
8000db1c:	40 8c       	lddsp	r12,sp[0x20]
8000db1e:	b8 88       	st.b	r12[0x0],r8
8000db20:	c1 38       	rjmp	8000db46 <_dtoa_r+0xc2a>
8000db22:	33 9a       	mov	r10,57
8000db24:	0a 98       	mov	r8,r5
8000db26:	11 79       	ld.ub	r9,--r8
8000db28:	f4 09 18 00 	cp.b	r9,r10
8000db2c:	cf 00       	breq	8000db0c <_dtoa_r+0xbf0>
8000db2e:	2f f9       	sub	r9,-1
8000db30:	b0 89       	st.b	r8[0x0],r9
8000db32:	c0 98       	rjmp	8000db44 <_dtoa_r+0xc28>
8000db34:	10 95       	mov	r5,r8
8000db36:	c0 28       	rjmp	8000db3a <_dtoa_r+0xc1e>
8000db38:	33 09       	mov	r9,48
8000db3a:	0a 98       	mov	r8,r5
8000db3c:	11 7a       	ld.ub	r10,--r8
8000db3e:	f2 0a 18 00 	cp.b	r10,r9
8000db42:	cf 90       	breq	8000db34 <_dtoa_r+0xc18>
8000db44:	50 66       	stdsp	sp[0x18],r6
8000db46:	04 9b       	mov	r11,r2
8000db48:	0e 9c       	mov	r12,r7
8000db4a:	f0 1f 00 17 	mcall	8000dba4 <_dtoa_r+0xc88>
8000db4e:	58 04       	cp.w	r4,0
8000db50:	c1 20       	breq	8000db74 <_dtoa_r+0xc58>
8000db52:	40 4b       	lddsp	r11,sp[0x10]
8000db54:	08 3b       	cp.w	r11,r4
8000db56:	5f 19       	srne	r9
8000db58:	58 0b       	cp.w	r11,0
8000db5a:	5f 18       	srne	r8
8000db5c:	f3 e8 00 08 	and	r8,r9,r8
8000db60:	c0 40       	breq	8000db68 <_dtoa_r+0xc4c>
8000db62:	0e 9c       	mov	r12,r7
8000db64:	f0 1f 00 10 	mcall	8000dba4 <_dtoa_r+0xc88>
8000db68:	08 9b       	mov	r11,r4
8000db6a:	0e 9c       	mov	r12,r7
8000db6c:	f0 1f 00 0e 	mcall	8000dba4 <_dtoa_r+0xc88>
8000db70:	c0 28       	rjmp	8000db74 <_dtoa_r+0xc58>
8000db72:	50 66       	stdsp	sp[0x18],r6
8000db74:	06 9b       	mov	r11,r3
8000db76:	0e 9c       	mov	r12,r7
8000db78:	f0 1f 00 0b 	mcall	8000dba4 <_dtoa_r+0xc88>
8000db7c:	30 08       	mov	r8,0
8000db7e:	aa 88       	st.b	r5[0x0],r8
8000db80:	40 68       	lddsp	r8,sp[0x18]
8000db82:	41 5a       	lddsp	r10,sp[0x54]
8000db84:	2f f8       	sub	r8,-1
8000db86:	95 08       	st.w	r10[0x0],r8
8000db88:	41 29       	lddsp	r9,sp[0x48]
8000db8a:	58 09       	cp.w	r9,0
8000db8c:	c0 30       	breq	8000db92 <_dtoa_r+0xc76>
8000db8e:	41 28       	lddsp	r8,sp[0x48]
8000db90:	91 05       	st.w	r8[0x0],r5
8000db92:	40 8c       	lddsp	r12,sp[0x20]
8000db94:	2e 6d       	sub	sp,-104
8000db96:	d8 32       	popm	r0-r7,pc
8000db98:	80 00       	ld.sh	r0,r0[0x0]
8000db9a:	e6 d4 80 00 	satsub.w	r4,r3,-32768
8000db9e:	e7 74 80 00 	stcond	r3[-32768],r4
8000dba2:	e5 d0 80 00 	ldswp.w	r0,r2[0]
8000dba6:	e3 00 80 00 	ld.sh	r0,r1[-32768]
8000dbaa:	e1 c8 80 00 	ldm	r8,pc
8000dbae:	e5 3c 80 00 	ld.ub	r12,r2[-32768]
8000dbb2:	e2 cc 80 00 	sub	r12,r1,-32768
8000dbb6:	e6 ec 80 00 	ld.d	r12,r3[-32768]
8000dbba:	e3 38 80 00 	ld.ub	r8,r1[-32768]
8000dbbe:	a0 f8       	st.b	r0[0x7],r8
8000dbc0:	80 00       	ld.sh	r0,r0[0x0]
8000dbc2:	cd f8       	rjmp	8000dd80 <__sfp+0x50>
8000dbc4:	80 00       	ld.sh	r0,r0[0x0]
8000dbc6:	e4 64 48 28 	mov	r4,280616

8000dbc8 <__errno>:
8000dbc8:	48 28       	lddpc	r8,8000dbd0 <__errno+0x8>
8000dbca:	70 0c       	ld.w	r12,r8[0x0]
8000dbcc:	2f 4c       	sub	r12,-12
8000dbce:	5e fc       	retal	r12
8000dbd0:	00 00       	add	r0,r0
8000dbd2:	02 04       	add	r4,r1

8000dbd4 <_fflush_r>:
8000dbd4:	d4 21       	pushm	r4-r7,lr
8000dbd6:	16 97       	mov	r7,r11
8000dbd8:	18 96       	mov	r6,r12
8000dbda:	76 48       	ld.w	r8,r11[0x10]
8000dbdc:	58 08       	cp.w	r8,0
8000dbde:	c7 b0       	breq	8000dcd4 <_fflush_r+0x100>
8000dbe0:	58 0c       	cp.w	r12,0
8000dbe2:	c0 60       	breq	8000dbee <_fflush_r+0x1a>
8000dbe4:	78 68       	ld.w	r8,r12[0x18]
8000dbe6:	58 08       	cp.w	r8,0
8000dbe8:	c0 31       	brne	8000dbee <_fflush_r+0x1a>
8000dbea:	f0 1f 00 3c 	mcall	8000dcd8 <_fflush_r+0x104>
8000dbee:	4b c8       	lddpc	r8,8000dcdc <_fflush_r+0x108>
8000dbf0:	10 37       	cp.w	r7,r8
8000dbf2:	c0 31       	brne	8000dbf8 <_fflush_r+0x24>
8000dbf4:	6c 07       	ld.w	r7,r6[0x0]
8000dbf6:	c0 a8       	rjmp	8000dc0a <_fflush_r+0x36>
8000dbf8:	4b a8       	lddpc	r8,8000dce0 <_fflush_r+0x10c>
8000dbfa:	10 37       	cp.w	r7,r8
8000dbfc:	c0 31       	brne	8000dc02 <_fflush_r+0x2e>
8000dbfe:	6c 17       	ld.w	r7,r6[0x4]
8000dc00:	c0 58       	rjmp	8000dc0a <_fflush_r+0x36>
8000dc02:	4b 98       	lddpc	r8,8000dce4 <_fflush_r+0x110>
8000dc04:	10 37       	cp.w	r7,r8
8000dc06:	c0 21       	brne	8000dc0a <_fflush_r+0x36>
8000dc08:	6c 27       	ld.w	r7,r6[0x8]
8000dc0a:	8e 6a       	ld.sh	r10,r7[0xc]
8000dc0c:	ed ba 00 03 	bld	r10,0x3
8000dc10:	c4 10       	breq	8000dc92 <_fflush_r+0xbe>
8000dc12:	ab ba       	sbr	r10,0xb
8000dc14:	ae 6a       	st.h	r7[0xc],r10
8000dc16:	6e 18       	ld.w	r8,r7[0x4]
8000dc18:	58 08       	cp.w	r8,0
8000dc1a:	e0 89 00 06 	brgt	8000dc26 <_fflush_r+0x52>
8000dc1e:	6f 08       	ld.w	r8,r7[0x40]
8000dc20:	58 08       	cp.w	r8,0
8000dc22:	e0 8a 00 59 	brle	8000dcd4 <_fflush_r+0x100>
8000dc26:	6e b8       	ld.w	r8,r7[0x2c]
8000dc28:	58 08       	cp.w	r8,0
8000dc2a:	c5 50       	breq	8000dcd4 <_fflush_r+0x100>
8000dc2c:	e2 1a 10 00 	andl	r10,0x1000,COH
8000dc30:	c0 30       	breq	8000dc36 <_fflush_r+0x62>
8000dc32:	6f 55       	ld.w	r5,r7[0x54]
8000dc34:	c0 f8       	rjmp	8000dc52 <_fflush_r+0x7e>
8000dc36:	30 19       	mov	r9,1
8000dc38:	6e 8b       	ld.w	r11,r7[0x20]
8000dc3a:	0c 9c       	mov	r12,r6
8000dc3c:	5d 18       	icall	r8
8000dc3e:	18 95       	mov	r5,r12
8000dc40:	5b fc       	cp.w	r12,-1
8000dc42:	c0 81       	brne	8000dc52 <_fflush_r+0x7e>
8000dc44:	6c 38       	ld.w	r8,r6[0xc]
8000dc46:	59 d8       	cp.w	r8,29
8000dc48:	c4 60       	breq	8000dcd4 <_fflush_r+0x100>
8000dc4a:	8e 68       	ld.sh	r8,r7[0xc]
8000dc4c:	a7 a8       	sbr	r8,0x6
8000dc4e:	ae 68       	st.h	r7[0xc],r8
8000dc50:	d8 22       	popm	r4-r7,pc
8000dc52:	8e 68       	ld.sh	r8,r7[0xc]
8000dc54:	ed b8 00 02 	bld	r8,0x2
8000dc58:	c0 81       	brne	8000dc68 <_fflush_r+0x94>
8000dc5a:	6e 18       	ld.w	r8,r7[0x4]
8000dc5c:	10 15       	sub	r5,r8
8000dc5e:	6e d8       	ld.w	r8,r7[0x34]
8000dc60:	58 08       	cp.w	r8,0
8000dc62:	c0 30       	breq	8000dc68 <_fflush_r+0x94>
8000dc64:	6f 08       	ld.w	r8,r7[0x40]
8000dc66:	10 15       	sub	r5,r8
8000dc68:	6e b8       	ld.w	r8,r7[0x2c]
8000dc6a:	0c 9c       	mov	r12,r6
8000dc6c:	30 09       	mov	r9,0
8000dc6e:	0a 9a       	mov	r10,r5
8000dc70:	6e 8b       	ld.w	r11,r7[0x20]
8000dc72:	5d 18       	icall	r8
8000dc74:	8e 68       	ld.sh	r8,r7[0xc]
8000dc76:	0a 3c       	cp.w	r12,r5
8000dc78:	c2 61       	brne	8000dcc4 <_fflush_r+0xf0>
8000dc7a:	ab d8       	cbr	r8,0xb
8000dc7c:	30 0c       	mov	r12,0
8000dc7e:	6e 49       	ld.w	r9,r7[0x10]
8000dc80:	ae 68       	st.h	r7[0xc],r8
8000dc82:	8f 1c       	st.w	r7[0x4],r12
8000dc84:	8f 09       	st.w	r7[0x0],r9
8000dc86:	ed b8 00 0c 	bld	r8,0xc
8000dc8a:	c2 51       	brne	8000dcd4 <_fflush_r+0x100>
8000dc8c:	ef 45 00 54 	st.w	r7[84],r5
8000dc90:	d8 22       	popm	r4-r7,pc
8000dc92:	6e 45       	ld.w	r5,r7[0x10]
8000dc94:	58 05       	cp.w	r5,0
8000dc96:	c1 f0       	breq	8000dcd4 <_fflush_r+0x100>
8000dc98:	6e 04       	ld.w	r4,r7[0x0]
8000dc9a:	8f 05       	st.w	r7[0x0],r5
8000dc9c:	f5 da c0 02 	bfextu	r10,r10,0x0,0x2
8000dca0:	c0 30       	breq	8000dca6 <_fflush_r+0xd2>
8000dca2:	30 08       	mov	r8,0
8000dca4:	c0 28       	rjmp	8000dca8 <_fflush_r+0xd4>
8000dca6:	6e 58       	ld.w	r8,r7[0x14]
8000dca8:	8f 28       	st.w	r7[0x8],r8
8000dcaa:	0a 14       	sub	r4,r5
8000dcac:	c1 18       	rjmp	8000dcce <_fflush_r+0xfa>
8000dcae:	08 99       	mov	r9,r4
8000dcb0:	0a 9a       	mov	r10,r5
8000dcb2:	6e a8       	ld.w	r8,r7[0x28]
8000dcb4:	6e 8b       	ld.w	r11,r7[0x20]
8000dcb6:	0c 9c       	mov	r12,r6
8000dcb8:	5d 18       	icall	r8
8000dcba:	18 14       	sub	r4,r12
8000dcbc:	58 0c       	cp.w	r12,0
8000dcbe:	e0 89 00 07 	brgt	8000dccc <_fflush_r+0xf8>
8000dcc2:	8e 68       	ld.sh	r8,r7[0xc]
8000dcc4:	a7 a8       	sbr	r8,0x6
8000dcc6:	3f fc       	mov	r12,-1
8000dcc8:	ae 68       	st.h	r7[0xc],r8
8000dcca:	d8 22       	popm	r4-r7,pc
8000dccc:	18 05       	add	r5,r12
8000dcce:	58 04       	cp.w	r4,0
8000dcd0:	fe 99 ff ef 	brgt	8000dcae <_fflush_r+0xda>
8000dcd4:	d8 2a       	popm	r4-r7,pc,r12=0
8000dcd6:	00 00       	add	r0,r0
8000dcd8:	80 00       	ld.sh	r0,r0[0x0]
8000dcda:	dd ac       	*unknown*
8000dcdc:	80 01       	ld.sh	r1,r0[0x0]
8000dcde:	01 64       	ld.uh	r4,--r0
8000dce0:	80 01       	ld.sh	r1,r0[0x0]
8000dce2:	01 84       	ld.ub	r4,r0[0x0]
8000dce4:	80 01       	ld.sh	r1,r0[0x0]
8000dce6:	01 a4       	ld.ub	r4,r0[0x2]

8000dce8 <__sfp_lock_acquire>:
8000dce8:	5e fc       	retal	r12

8000dcea <__sfp_lock_release>:
8000dcea:	5e fc       	retal	r12

8000dcec <_cleanup_r>:
8000dcec:	d4 01       	pushm	lr
8000dcee:	48 3b       	lddpc	r11,8000dcf8 <_cleanup_r+0xc>
8000dcf0:	f0 1f 00 03 	mcall	8000dcfc <_cleanup_r+0x10>
8000dcf4:	d8 02       	popm	pc
8000dcf6:	00 00       	add	r0,r0
8000dcf8:	80 00       	ld.sh	r0,r0[0x0]
8000dcfa:	ea 80 80 00 	breq	8015dcfa <_data_lma+0x14d9fa>
8000dcfe:	e0 a0 d4 21 	rcall	80028540 <_data_lma+0x18240>

8000dd00 <__sfmoreglue>:
8000dd00:	d4 21       	pushm	r4-r7,lr
8000dd02:	16 95       	mov	r5,r11
8000dd04:	f6 06 10 5c 	mul	r6,r11,92
8000dd08:	ec cb ff f4 	sub	r11,r6,-12
8000dd0c:	f0 1f 00 07 	mcall	8000dd28 <__sfmoreglue+0x28>
8000dd10:	18 97       	mov	r7,r12
8000dd12:	c0 90       	breq	8000dd24 <__sfmoreglue+0x24>
8000dd14:	99 15       	st.w	r12[0x4],r5
8000dd16:	30 0b       	mov	r11,0
8000dd18:	2f 4c       	sub	r12,-12
8000dd1a:	0c 9a       	mov	r10,r6
8000dd1c:	8f 2c       	st.w	r7[0x8],r12
8000dd1e:	8f 0b       	st.w	r7[0x0],r11
8000dd20:	f0 1f 00 03 	mcall	8000dd2c <__sfmoreglue+0x2c>
8000dd24:	0e 9c       	mov	r12,r7
8000dd26:	d8 22       	popm	r4-r7,pc
8000dd28:	80 00       	ld.sh	r0,r0[0x0]
8000dd2a:	9c 70       	ld.sh	r0,lr[0xe]
8000dd2c:	80 00       	ld.sh	r0,r0[0x0]
8000dd2e:	a2 7e       	st.h	r1[0xe],lr

8000dd30 <__sfp>:
8000dd30:	d4 21       	pushm	r4-r7,lr
8000dd32:	49 c8       	lddpc	r8,8000dda0 <__sfp+0x70>
8000dd34:	18 96       	mov	r6,r12
8000dd36:	70 07       	ld.w	r7,r8[0x0]
8000dd38:	6e 68       	ld.w	r8,r7[0x18]
8000dd3a:	58 08       	cp.w	r8,0
8000dd3c:	c0 41       	brne	8000dd44 <__sfp+0x14>
8000dd3e:	0e 9c       	mov	r12,r7
8000dd40:	f0 1f 00 19 	mcall	8000dda4 <__sfp+0x74>
8000dd44:	ee c7 ff 28 	sub	r7,r7,-216
8000dd48:	30 05       	mov	r5,0
8000dd4a:	6e 2c       	ld.w	r12,r7[0x8]
8000dd4c:	6e 18       	ld.w	r8,r7[0x4]
8000dd4e:	c0 68       	rjmp	8000dd5a <__sfp+0x2a>
8000dd50:	98 69       	ld.sh	r9,r12[0xc]
8000dd52:	ea 09 19 00 	cp.h	r9,r5
8000dd56:	c1 20       	breq	8000dd7a <__sfp+0x4a>
8000dd58:	2a 4c       	sub	r12,-92
8000dd5a:	20 18       	sub	r8,1
8000dd5c:	cf a7       	brpl	8000dd50 <__sfp+0x20>
8000dd5e:	6e 08       	ld.w	r8,r7[0x0]
8000dd60:	58 08       	cp.w	r8,0
8000dd62:	c0 71       	brne	8000dd70 <__sfp+0x40>
8000dd64:	30 4b       	mov	r11,4
8000dd66:	0c 9c       	mov	r12,r6
8000dd68:	f0 1f 00 10 	mcall	8000dda8 <__sfp+0x78>
8000dd6c:	8f 0c       	st.w	r7[0x0],r12
8000dd6e:	c0 30       	breq	8000dd74 <__sfp+0x44>
8000dd70:	6e 07       	ld.w	r7,r7[0x0]
8000dd72:	ce cb       	rjmp	8000dd4a <__sfp+0x1a>
8000dd74:	30 c8       	mov	r8,12
8000dd76:	8d 38       	st.w	r6[0xc],r8
8000dd78:	d8 22       	popm	r4-r7,pc
8000dd7a:	30 08       	mov	r8,0
8000dd7c:	f9 48 00 4c 	st.w	r12[76],r8
8000dd80:	99 08       	st.w	r12[0x0],r8
8000dd82:	99 28       	st.w	r12[0x8],r8
8000dd84:	99 18       	st.w	r12[0x4],r8
8000dd86:	99 48       	st.w	r12[0x10],r8
8000dd88:	99 58       	st.w	r12[0x14],r8
8000dd8a:	99 68       	st.w	r12[0x18],r8
8000dd8c:	99 d8       	st.w	r12[0x34],r8
8000dd8e:	99 e8       	st.w	r12[0x38],r8
8000dd90:	f9 48 00 48 	st.w	r12[72],r8
8000dd94:	3f f8       	mov	r8,-1
8000dd96:	b8 78       	st.h	r12[0xe],r8
8000dd98:	30 18       	mov	r8,1
8000dd9a:	b8 68       	st.h	r12[0xc],r8
8000dd9c:	d8 22       	popm	r4-r7,pc
8000dd9e:	00 00       	add	r0,r0
8000dda0:	80 00       	ld.sh	r0,r0[0x0]
8000dda2:	fd 7c 80 00 	stcond	lr[-32768],r12
8000dda6:	dd ac       	*unknown*
8000dda8:	80 00       	ld.sh	r0,r0[0x0]
8000ddaa:	dd 00       	acall	0xd0

8000ddac <__sinit>:
8000ddac:	d4 21       	pushm	r4-r7,lr
8000ddae:	18 96       	mov	r6,r12
8000ddb0:	78 67       	ld.w	r7,r12[0x18]
8000ddb2:	58 07       	cp.w	r7,0
8000ddb4:	c4 71       	brne	8000de42 <__sinit+0x96>
8000ddb6:	4a 48       	lddpc	r8,8000de44 <__sinit+0x98>
8000ddb8:	30 15       	mov	r5,1
8000ddba:	99 a8       	st.w	r12[0x28],r8
8000ddbc:	f9 47 00 d8 	st.w	r12[216],r7
8000ddc0:	f9 47 00 dc 	st.w	r12[220],r7
8000ddc4:	f9 47 00 e0 	st.w	r12[224],r7
8000ddc8:	99 65       	st.w	r12[0x18],r5
8000ddca:	f0 1f 00 20 	mcall	8000de48 <__sinit+0x9c>
8000ddce:	8d 0c       	st.w	r6[0x0],r12
8000ddd0:	0c 9c       	mov	r12,r6
8000ddd2:	f0 1f 00 1e 	mcall	8000de48 <__sinit+0x9c>
8000ddd6:	8d 1c       	st.w	r6[0x4],r12
8000ddd8:	0c 9c       	mov	r12,r6
8000ddda:	f0 1f 00 1c 	mcall	8000de48 <__sinit+0x9c>
8000ddde:	6c 09       	ld.w	r9,r6[0x0]
8000dde0:	30 48       	mov	r8,4
8000dde2:	93 07       	st.w	r9[0x0],r7
8000dde4:	b2 68       	st.h	r9[0xc],r8
8000dde6:	93 17       	st.w	r9[0x4],r7
8000dde8:	93 27       	st.w	r9[0x8],r7
8000ddea:	6c 18       	ld.w	r8,r6[0x4]
8000ddec:	b2 77       	st.h	r9[0xe],r7
8000ddee:	93 47       	st.w	r9[0x10],r7
8000ddf0:	93 57       	st.w	r9[0x14],r7
8000ddf2:	93 67       	st.w	r9[0x18],r7
8000ddf4:	93 89       	st.w	r9[0x20],r9
8000ddf6:	91 07       	st.w	r8[0x0],r7
8000ddf8:	91 17       	st.w	r8[0x4],r7
8000ddfa:	91 27       	st.w	r8[0x8],r7
8000ddfc:	49 4e       	lddpc	lr,8000de4c <__sinit+0xa0>
8000ddfe:	49 5b       	lddpc	r11,8000de50 <__sinit+0xa4>
8000de00:	93 9e       	st.w	r9[0x24],lr
8000de02:	93 ab       	st.w	r9[0x28],r11
8000de04:	49 4a       	lddpc	r10,8000de54 <__sinit+0xa8>
8000de06:	49 54       	lddpc	r4,8000de58 <__sinit+0xac>
8000de08:	93 ba       	st.w	r9[0x2c],r10
8000de0a:	93 c4       	st.w	r9[0x30],r4
8000de0c:	30 99       	mov	r9,9
8000de0e:	b0 69       	st.h	r8[0xc],r9
8000de10:	b0 75       	st.h	r8[0xe],r5
8000de12:	91 c4       	st.w	r8[0x30],r4
8000de14:	91 47       	st.w	r8[0x10],r7
8000de16:	91 57       	st.w	r8[0x14],r7
8000de18:	91 67       	st.w	r8[0x18],r7
8000de1a:	91 88       	st.w	r8[0x20],r8
8000de1c:	91 9e       	st.w	r8[0x24],lr
8000de1e:	91 ab       	st.w	r8[0x28],r11
8000de20:	91 ba       	st.w	r8[0x2c],r10
8000de22:	8d 2c       	st.w	r6[0x8],r12
8000de24:	31 28       	mov	r8,18
8000de26:	99 07       	st.w	r12[0x0],r7
8000de28:	b8 68       	st.h	r12[0xc],r8
8000de2a:	99 17       	st.w	r12[0x4],r7
8000de2c:	99 27       	st.w	r12[0x8],r7
8000de2e:	30 28       	mov	r8,2
8000de30:	b8 78       	st.h	r12[0xe],r8
8000de32:	99 c4       	st.w	r12[0x30],r4
8000de34:	99 67       	st.w	r12[0x18],r7
8000de36:	99 9e       	st.w	r12[0x24],lr
8000de38:	99 ab       	st.w	r12[0x28],r11
8000de3a:	99 ba       	st.w	r12[0x2c],r10
8000de3c:	99 47       	st.w	r12[0x10],r7
8000de3e:	99 57       	st.w	r12[0x14],r7
8000de40:	99 8c       	st.w	r12[0x20],r12
8000de42:	d8 22       	popm	r4-r7,pc
8000de44:	80 00       	ld.sh	r0,r0[0x0]
8000de46:	dc ec       	*unknown*
8000de48:	80 00       	ld.sh	r0,r0[0x0]
8000de4a:	dd 30       	acall	0xd3
8000de4c:	80 00       	ld.sh	r0,r0[0x0]
8000de4e:	e8 d8 80 00 	satsub.w	r8,r4,-32768
8000de52:	e8 a0 80 00 	rcall	8011de52 <_data_lma+0x10db52>
8000de56:	e8 7c 80 00 	mov	r12,622592
8000de5a:	e8 6c d4 21 	mov	r12,578593

8000de5c <_malloc_trim_r>:
8000de5c:	d4 21       	pushm	r4-r7,lr
8000de5e:	16 95       	mov	r5,r11
8000de60:	18 97       	mov	r7,r12
8000de62:	f0 1f 00 23 	mcall	8000deec <_malloc_trim_r+0x90>
8000de66:	4a 34       	lddpc	r4,8000def0 <_malloc_trim_r+0x94>
8000de68:	68 28       	ld.w	r8,r4[0x8]
8000de6a:	70 16       	ld.w	r6,r8[0x4]
8000de6c:	e0 16 ff fc 	andl	r6,0xfffc
8000de70:	ec c8 ff 91 	sub	r8,r6,-111
8000de74:	f0 05 01 05 	sub	r5,r8,r5
8000de78:	e0 15 ff 80 	andl	r5,0xff80
8000de7c:	ea c5 00 80 	sub	r5,r5,128
8000de80:	e0 45 00 7f 	cp.w	r5,127
8000de84:	e0 8a 00 23 	brle	8000deca <_malloc_trim_r+0x6e>
8000de88:	30 0b       	mov	r11,0
8000de8a:	0e 9c       	mov	r12,r7
8000de8c:	f0 1f 00 1a 	mcall	8000def4 <_malloc_trim_r+0x98>
8000de90:	68 28       	ld.w	r8,r4[0x8]
8000de92:	0c 08       	add	r8,r6
8000de94:	10 3c       	cp.w	r12,r8
8000de96:	c1 a1       	brne	8000deca <_malloc_trim_r+0x6e>
8000de98:	ea 0b 11 00 	rsub	r11,r5,0
8000de9c:	0e 9c       	mov	r12,r7
8000de9e:	f0 1f 00 16 	mcall	8000def4 <_malloc_trim_r+0x98>
8000dea2:	5b fc       	cp.w	r12,-1
8000dea4:	c1 71       	brne	8000ded2 <_malloc_trim_r+0x76>
8000dea6:	30 0b       	mov	r11,0
8000dea8:	0e 9c       	mov	r12,r7
8000deaa:	f0 1f 00 13 	mcall	8000def4 <_malloc_trim_r+0x98>
8000deae:	68 28       	ld.w	r8,r4[0x8]
8000deb0:	f8 08 01 09 	sub	r9,r12,r8
8000deb4:	58 f9       	cp.w	r9,15
8000deb6:	e0 8a 00 0a 	brle	8000deca <_malloc_trim_r+0x6e>
8000deba:	a1 a9       	sbr	r9,0x0
8000debc:	91 19       	st.w	r8[0x4],r9
8000debe:	48 f8       	lddpc	r8,8000def8 <_malloc_trim_r+0x9c>
8000dec0:	70 09       	ld.w	r9,r8[0x0]
8000dec2:	48 f8       	lddpc	r8,8000defc <_malloc_trim_r+0xa0>
8000dec4:	f8 09 01 09 	sub	r9,r12,r9
8000dec8:	91 09       	st.w	r8[0x0],r9
8000deca:	0e 9c       	mov	r12,r7
8000decc:	f0 1f 00 0d 	mcall	8000df00 <_malloc_trim_r+0xa4>
8000ded0:	d8 2a       	popm	r4-r7,pc,r12=0
8000ded2:	68 28       	ld.w	r8,r4[0x8]
8000ded4:	0a 16       	sub	r6,r5
8000ded6:	a1 a6       	sbr	r6,0x0
8000ded8:	91 16       	st.w	r8[0x4],r6
8000deda:	48 98       	lddpc	r8,8000defc <_malloc_trim_r+0xa0>
8000dedc:	70 09       	ld.w	r9,r8[0x0]
8000dede:	0a 19       	sub	r9,r5
8000dee0:	0e 9c       	mov	r12,r7
8000dee2:	91 09       	st.w	r8[0x0],r9
8000dee4:	f0 1f 00 07 	mcall	8000df00 <_malloc_trim_r+0xa4>
8000dee8:	da 2a       	popm	r4-r7,pc,r12=1
8000deea:	00 00       	add	r0,r0
8000deec:	80 00       	ld.sh	r0,r0[0x0]
8000deee:	a2 8c       	st.b	r1[0x0],r12
8000def0:	00 00       	add	r0,r0
8000def2:	02 08       	add	r8,r1
8000def4:	80 00       	ld.sh	r0,r0[0x0]
8000def6:	a6 14       	st.h	r3[0x2],r4
8000def8:	00 00       	add	r0,r0
8000defa:	06 14       	sub	r4,r3
8000defc:	00 00       	add	r0,r0
8000defe:	0f 98       	ld.ub	r8,r7[0x1]
8000df00:	80 00       	ld.sh	r0,r0[0x0]
8000df02:	a2 8e       	st.b	r1[0x0],lr

8000df04 <_free_r>:
8000df04:	d4 21       	pushm	r4-r7,lr
8000df06:	16 96       	mov	r6,r11
8000df08:	18 97       	mov	r7,r12
8000df0a:	58 0b       	cp.w	r11,0
8000df0c:	e0 80 00 c6 	breq	8000e098 <_free_r+0x194>
8000df10:	f0 1f 00 4b 	mcall	8000e03c <_free_r+0x138>
8000df14:	20 86       	sub	r6,8
8000df16:	4c ba       	lddpc	r10,8000e040 <_free_r+0x13c>
8000df18:	6c 18       	ld.w	r8,r6[0x4]
8000df1a:	74 2e       	ld.w	lr,r10[0x8]
8000df1c:	f9 d8 c0 01 	bfextu	r12,r8,0x0,0x1
8000df20:	a1 c8       	cbr	r8,0x0
8000df22:	ec 08 00 09 	add	r9,r6,r8
8000df26:	72 1b       	ld.w	r11,r9[0x4]
8000df28:	e0 1b ff fc 	andl	r11,0xfffc
8000df2c:	1c 39       	cp.w	r9,lr
8000df2e:	c1 d1       	brne	8000df68 <_free_r+0x64>
8000df30:	f6 08 00 08 	add	r8,r11,r8
8000df34:	58 0c       	cp.w	r12,0
8000df36:	c0 81       	brne	8000df46 <_free_r+0x42>
8000df38:	6c 09       	ld.w	r9,r6[0x0]
8000df3a:	12 16       	sub	r6,r9
8000df3c:	12 08       	add	r8,r9
8000df3e:	6c 3b       	ld.w	r11,r6[0xc]
8000df40:	6c 29       	ld.w	r9,r6[0x8]
8000df42:	97 29       	st.w	r11[0x8],r9
8000df44:	93 3b       	st.w	r9[0xc],r11
8000df46:	10 99       	mov	r9,r8
8000df48:	95 26       	st.w	r10[0x8],r6
8000df4a:	a1 a9       	sbr	r9,0x0
8000df4c:	8d 19       	st.w	r6[0x4],r9
8000df4e:	4b e9       	lddpc	r9,8000e044 <_free_r+0x140>
8000df50:	72 09       	ld.w	r9,r9[0x0]
8000df52:	12 38       	cp.w	r8,r9
8000df54:	c0 63       	brcs	8000df60 <_free_r+0x5c>
8000df56:	4b d8       	lddpc	r8,8000e048 <_free_r+0x144>
8000df58:	0e 9c       	mov	r12,r7
8000df5a:	70 0b       	ld.w	r11,r8[0x0]
8000df5c:	f0 1f 00 3c 	mcall	8000e04c <_free_r+0x148>
8000df60:	0e 9c       	mov	r12,r7
8000df62:	f0 1f 00 3c 	mcall	8000e050 <_free_r+0x14c>
8000df66:	d8 22       	popm	r4-r7,pc
8000df68:	93 1b       	st.w	r9[0x4],r11
8000df6a:	58 0c       	cp.w	r12,0
8000df6c:	c0 30       	breq	8000df72 <_free_r+0x6e>
8000df6e:	30 0c       	mov	r12,0
8000df70:	c0 e8       	rjmp	8000df8c <_free_r+0x88>
8000df72:	6c 0e       	ld.w	lr,r6[0x0]
8000df74:	f4 c5 ff f8 	sub	r5,r10,-8
8000df78:	1c 08       	add	r8,lr
8000df7a:	1c 16       	sub	r6,lr
8000df7c:	6c 2e       	ld.w	lr,r6[0x8]
8000df7e:	0a 3e       	cp.w	lr,r5
8000df80:	c0 31       	brne	8000df86 <_free_r+0x82>
8000df82:	30 1c       	mov	r12,1
8000df84:	c0 48       	rjmp	8000df8c <_free_r+0x88>
8000df86:	6c 35       	ld.w	r5,r6[0xc]
8000df88:	8b 2e       	st.w	r5[0x8],lr
8000df8a:	9d 35       	st.w	lr[0xc],r5
8000df8c:	f2 0b 00 0e 	add	lr,r9,r11
8000df90:	7c 1e       	ld.w	lr,lr[0x4]
8000df92:	ed be 00 00 	bld	lr,0x0
8000df96:	c1 30       	breq	8000dfbc <_free_r+0xb8>
8000df98:	16 08       	add	r8,r11
8000df9a:	58 0c       	cp.w	r12,0
8000df9c:	c0 c1       	brne	8000dfb4 <_free_r+0xb0>
8000df9e:	4a 9e       	lddpc	lr,8000e040 <_free_r+0x13c>
8000dfa0:	72 2b       	ld.w	r11,r9[0x8]
8000dfa2:	2f 8e       	sub	lr,-8
8000dfa4:	1c 3b       	cp.w	r11,lr
8000dfa6:	c0 71       	brne	8000dfb4 <_free_r+0xb0>
8000dfa8:	97 36       	st.w	r11[0xc],r6
8000dfaa:	97 26       	st.w	r11[0x8],r6
8000dfac:	8d 2b       	st.w	r6[0x8],r11
8000dfae:	8d 3b       	st.w	r6[0xc],r11
8000dfb0:	30 1c       	mov	r12,1
8000dfb2:	c0 58       	rjmp	8000dfbc <_free_r+0xb8>
8000dfb4:	72 2b       	ld.w	r11,r9[0x8]
8000dfb6:	72 39       	ld.w	r9,r9[0xc]
8000dfb8:	93 2b       	st.w	r9[0x8],r11
8000dfba:	97 39       	st.w	r11[0xc],r9
8000dfbc:	10 99       	mov	r9,r8
8000dfbe:	ec 08 09 08 	st.w	r6[r8],r8
8000dfc2:	a1 a9       	sbr	r9,0x0
8000dfc4:	8d 19       	st.w	r6[0x4],r9
8000dfc6:	58 0c       	cp.w	r12,0
8000dfc8:	c6 51       	brne	8000e092 <_free_r+0x18e>
8000dfca:	e0 48 01 ff 	cp.w	r8,511
8000dfce:	e0 8b 00 13 	brhi	8000dff4 <_free_r+0xf0>
8000dfd2:	a3 98       	lsr	r8,0x3
8000dfd4:	f4 08 00 39 	add	r9,r10,r8<<0x3
8000dfd8:	72 2b       	ld.w	r11,r9[0x8]
8000dfda:	8d 39       	st.w	r6[0xc],r9
8000dfdc:	8d 2b       	st.w	r6[0x8],r11
8000dfde:	97 36       	st.w	r11[0xc],r6
8000dfe0:	93 26       	st.w	r9[0x8],r6
8000dfe2:	a3 48       	asr	r8,0x2
8000dfe4:	74 19       	ld.w	r9,r10[0x4]
8000dfe6:	30 1b       	mov	r11,1
8000dfe8:	f6 08 09 48 	lsl	r8,r11,r8
8000dfec:	f3 e8 10 08 	or	r8,r9,r8
8000dff0:	95 18       	st.w	r10[0x4],r8
8000dff2:	c5 08       	rjmp	8000e092 <_free_r+0x18e>
8000dff4:	f0 0b 16 09 	lsr	r11,r8,0x9
8000dff8:	58 4b       	cp.w	r11,4
8000dffa:	e0 8b 00 06 	brhi	8000e006 <_free_r+0x102>
8000dffe:	f0 0b 16 06 	lsr	r11,r8,0x6
8000e002:	2c 8b       	sub	r11,-56
8000e004:	c2 b8       	rjmp	8000e05a <_free_r+0x156>
8000e006:	59 4b       	cp.w	r11,20
8000e008:	e0 8b 00 04 	brhi	8000e010 <_free_r+0x10c>
8000e00c:	2a 5b       	sub	r11,-91
8000e00e:	c2 68       	rjmp	8000e05a <_free_r+0x156>
8000e010:	e0 4b 00 54 	cp.w	r11,84
8000e014:	e0 8b 00 06 	brhi	8000e020 <_free_r+0x11c>
8000e018:	f0 0b 16 0c 	lsr	r11,r8,0xc
8000e01c:	29 2b       	sub	r11,-110
8000e01e:	c1 e8       	rjmp	8000e05a <_free_r+0x156>
8000e020:	e0 4b 01 54 	cp.w	r11,340
8000e024:	e0 8b 00 06 	brhi	8000e030 <_free_r+0x12c>
8000e028:	f0 0b 16 0f 	lsr	r11,r8,0xf
8000e02c:	28 9b       	sub	r11,-119
8000e02e:	c1 68       	rjmp	8000e05a <_free_r+0x156>
8000e030:	e0 4b 05 54 	cp.w	r11,1364
8000e034:	e0 88 00 10 	brls	8000e054 <_free_r+0x150>
8000e038:	37 eb       	mov	r11,126
8000e03a:	c1 08       	rjmp	8000e05a <_free_r+0x156>
8000e03c:	80 00       	ld.sh	r0,r0[0x0]
8000e03e:	a2 8c       	st.b	r1[0x0],r12
8000e040:	00 00       	add	r0,r0
8000e042:	02 08       	add	r8,r1
8000e044:	00 00       	add	r0,r0
8000e046:	06 10       	sub	r0,r3
8000e048:	00 00       	add	r0,r0
8000e04a:	0f 94       	ld.ub	r4,r7[0x1]
8000e04c:	80 00       	ld.sh	r0,r0[0x0]
8000e04e:	de 5c       	*unknown*
8000e050:	80 00       	ld.sh	r0,r0[0x0]
8000e052:	a2 8e       	st.b	r1[0x0],lr
8000e054:	f0 0b 16 12 	lsr	r11,r8,0x12
8000e058:	28 4b       	sub	r11,-124
8000e05a:	f4 0b 00 3c 	add	r12,r10,r11<<0x3
8000e05e:	78 29       	ld.w	r9,r12[0x8]
8000e060:	18 39       	cp.w	r9,r12
8000e062:	c0 e1       	brne	8000e07e <_free_r+0x17a>
8000e064:	74 18       	ld.w	r8,r10[0x4]
8000e066:	a3 4b       	asr	r11,0x2
8000e068:	30 1c       	mov	r12,1
8000e06a:	f8 0b 09 4b 	lsl	r11,r12,r11
8000e06e:	f1 eb 10 0b 	or	r11,r8,r11
8000e072:	12 98       	mov	r8,r9
8000e074:	95 1b       	st.w	r10[0x4],r11
8000e076:	c0 a8       	rjmp	8000e08a <_free_r+0x186>
8000e078:	72 29       	ld.w	r9,r9[0x8]
8000e07a:	18 39       	cp.w	r9,r12
8000e07c:	c0 60       	breq	8000e088 <_free_r+0x184>
8000e07e:	72 1a       	ld.w	r10,r9[0x4]
8000e080:	e0 1a ff fc 	andl	r10,0xfffc
8000e084:	14 38       	cp.w	r8,r10
8000e086:	cf 93       	brcs	8000e078 <_free_r+0x174>
8000e088:	72 38       	ld.w	r8,r9[0xc]
8000e08a:	8d 38       	st.w	r6[0xc],r8
8000e08c:	8d 29       	st.w	r6[0x8],r9
8000e08e:	93 36       	st.w	r9[0xc],r6
8000e090:	91 26       	st.w	r8[0x8],r6
8000e092:	0e 9c       	mov	r12,r7
8000e094:	f0 1f 00 02 	mcall	8000e09c <_free_r+0x198>
8000e098:	d8 22       	popm	r4-r7,pc
8000e09a:	00 00       	add	r0,r0
8000e09c:	80 00       	ld.sh	r0,r0[0x0]
8000e09e:	a2 8e       	st.b	r1[0x0],lr

8000e0a0 <_fwalk>:
8000e0a0:	d4 31       	pushm	r0-r7,lr
8000e0a2:	30 05       	mov	r5,0
8000e0a4:	16 91       	mov	r1,r11
8000e0a6:	f8 c7 ff 28 	sub	r7,r12,-216
8000e0aa:	0a 92       	mov	r2,r5
8000e0ac:	f0 1f 00 10 	mcall	8000e0ec <_fwalk+0x4c>
8000e0b0:	3f f3       	mov	r3,-1
8000e0b2:	c1 68       	rjmp	8000e0de <_fwalk+0x3e>
8000e0b4:	6e 26       	ld.w	r6,r7[0x8]
8000e0b6:	6e 14       	ld.w	r4,r7[0x4]
8000e0b8:	2f 46       	sub	r6,-12
8000e0ba:	c0 c8       	rjmp	8000e0d2 <_fwalk+0x32>
8000e0bc:	8c 08       	ld.sh	r8,r6[0x0]
8000e0be:	e4 08 19 00 	cp.h	r8,r2
8000e0c2:	c0 70       	breq	8000e0d0 <_fwalk+0x30>
8000e0c4:	8c 18       	ld.sh	r8,r6[0x2]
8000e0c6:	e6 08 19 00 	cp.h	r8,r3
8000e0ca:	c0 30       	breq	8000e0d0 <_fwalk+0x30>
8000e0cc:	5d 11       	icall	r1
8000e0ce:	18 45       	or	r5,r12
8000e0d0:	2a 46       	sub	r6,-92
8000e0d2:	20 14       	sub	r4,1
8000e0d4:	ec cc 00 0c 	sub	r12,r6,12
8000e0d8:	58 04       	cp.w	r4,0
8000e0da:	cf 14       	brge	8000e0bc <_fwalk+0x1c>
8000e0dc:	6e 07       	ld.w	r7,r7[0x0]
8000e0de:	58 07       	cp.w	r7,0
8000e0e0:	ce a1       	brne	8000e0b4 <_fwalk+0x14>
8000e0e2:	f0 1f 00 04 	mcall	8000e0f0 <_fwalk+0x50>
8000e0e6:	0a 9c       	mov	r12,r5
8000e0e8:	d8 32       	popm	r0-r7,pc
8000e0ea:	00 00       	add	r0,r0
8000e0ec:	80 00       	ld.sh	r0,r0[0x0]
8000e0ee:	dc e8       	*unknown*
8000e0f0:	80 00       	ld.sh	r0,r0[0x0]
8000e0f2:	dc ea       	popm	r4-r10,pc,r12=-1

8000e0f4 <_localeconv_r>:
8000e0f4:	48 1c       	lddpc	r12,8000e0f8 <_localeconv_r+0x4>
8000e0f6:	5e fc       	retal	r12
8000e0f8:	80 01       	ld.sh	r1,r0[0x0]
8000e0fa:	01 c4       	ld.ub	r4,r0[0x4]

8000e0fc <__smakebuf_r>:
8000e0fc:	d4 21       	pushm	r4-r7,lr
8000e0fe:	20 fd       	sub	sp,60
8000e100:	96 68       	ld.sh	r8,r11[0xc]
8000e102:	16 97       	mov	r7,r11
8000e104:	18 96       	mov	r6,r12
8000e106:	e2 18 00 02 	andl	r8,0x2,COH
8000e10a:	c3 c1       	brne	8000e182 <__smakebuf_r+0x86>
8000e10c:	96 7b       	ld.sh	r11,r11[0xe]
8000e10e:	f0 0b 19 00 	cp.h	r11,r8
8000e112:	c0 55       	brlt	8000e11c <__smakebuf_r+0x20>
8000e114:	1a 9a       	mov	r10,sp
8000e116:	f0 1f 00 28 	mcall	8000e1b4 <__smakebuf_r+0xb8>
8000e11a:	c0 f4       	brge	8000e138 <__smakebuf_r+0x3c>
8000e11c:	8e 65       	ld.sh	r5,r7[0xc]
8000e11e:	0a 98       	mov	r8,r5
8000e120:	ab b8       	sbr	r8,0xb
8000e122:	e2 15 00 80 	andl	r5,0x80,COH
8000e126:	ae 68       	st.h	r7[0xc],r8
8000e128:	30 04       	mov	r4,0
8000e12a:	e0 68 04 00 	mov	r8,1024
8000e12e:	f9 b5 01 40 	movne	r5,64
8000e132:	f0 05 17 00 	moveq	r5,r8
8000e136:	c1 b8       	rjmp	8000e16c <__smakebuf_r+0x70>
8000e138:	40 18       	lddsp	r8,sp[0x4]
8000e13a:	e2 18 f0 00 	andl	r8,0xf000,COH
8000e13e:	e0 48 20 00 	cp.w	r8,8192
8000e142:	5f 04       	sreq	r4
8000e144:	e0 48 80 00 	cp.w	r8,32768
8000e148:	c0 d1       	brne	8000e162 <__smakebuf_r+0x66>
8000e14a:	6e b9       	ld.w	r9,r7[0x2c]
8000e14c:	49 b8       	lddpc	r8,8000e1b8 <__smakebuf_r+0xbc>
8000e14e:	10 39       	cp.w	r9,r8
8000e150:	c0 91       	brne	8000e162 <__smakebuf_r+0x66>
8000e152:	8e 68       	ld.sh	r8,r7[0xc]
8000e154:	e0 65 04 00 	mov	r5,1024
8000e158:	ab a8       	sbr	r8,0xa
8000e15a:	ef 45 00 50 	st.w	r7[80],r5
8000e15e:	ae 68       	st.h	r7[0xc],r8
8000e160:	c0 68       	rjmp	8000e16c <__smakebuf_r+0x70>
8000e162:	8e 68       	ld.sh	r8,r7[0xc]
8000e164:	e0 65 04 00 	mov	r5,1024
8000e168:	ab b8       	sbr	r8,0xb
8000e16a:	ae 68       	st.h	r7[0xc],r8
8000e16c:	0a 9b       	mov	r11,r5
8000e16e:	0c 9c       	mov	r12,r6
8000e170:	f0 1f 00 13 	mcall	8000e1bc <__smakebuf_r+0xc0>
8000e174:	8e 68       	ld.sh	r8,r7[0xc]
8000e176:	c0 d1       	brne	8000e190 <__smakebuf_r+0x94>
8000e178:	ed b8 00 09 	bld	r8,0x9
8000e17c:	c1 a0       	breq	8000e1b0 <__smakebuf_r+0xb4>
8000e17e:	a1 b8       	sbr	r8,0x1
8000e180:	ae 68       	st.h	r7[0xc],r8
8000e182:	ee c8 ff b9 	sub	r8,r7,-71
8000e186:	8f 48       	st.w	r7[0x10],r8
8000e188:	8f 08       	st.w	r7[0x0],r8
8000e18a:	30 18       	mov	r8,1
8000e18c:	8f 58       	st.w	r7[0x14],r8
8000e18e:	c1 18       	rjmp	8000e1b0 <__smakebuf_r+0xb4>
8000e190:	a7 b8       	sbr	r8,0x7
8000e192:	8f 4c       	st.w	r7[0x10],r12
8000e194:	ae 68       	st.h	r7[0xc],r8
8000e196:	8f 55       	st.w	r7[0x14],r5
8000e198:	48 a8       	lddpc	r8,8000e1c0 <__smakebuf_r+0xc4>
8000e19a:	8f 0c       	st.w	r7[0x0],r12
8000e19c:	8d a8       	st.w	r6[0x28],r8
8000e19e:	58 04       	cp.w	r4,0
8000e1a0:	c0 80       	breq	8000e1b0 <__smakebuf_r+0xb4>
8000e1a2:	8e 7c       	ld.sh	r12,r7[0xe]
8000e1a4:	f0 1f 00 08 	mcall	8000e1c4 <__smakebuf_r+0xc8>
8000e1a8:	c0 40       	breq	8000e1b0 <__smakebuf_r+0xb4>
8000e1aa:	8e 68       	ld.sh	r8,r7[0xc]
8000e1ac:	a1 a8       	sbr	r8,0x0
8000e1ae:	ae 68       	st.h	r7[0xc],r8
8000e1b0:	2f 1d       	sub	sp,-60
8000e1b2:	d8 22       	popm	r4-r7,pc
8000e1b4:	80 00       	ld.sh	r0,r0[0x0]
8000e1b6:	ea 98 80 00 	brls	8017e1b6 <_data_lma+0x16deb6>
8000e1ba:	e8 7c 80 00 	mov	r12,622592
8000e1be:	9c 70       	ld.sh	r0,lr[0xe]
8000e1c0:	80 00       	ld.sh	r0,r0[0x0]
8000e1c2:	dc ec       	*unknown*
8000e1c4:	80 00       	ld.sh	r0,r0[0x0]
8000e1c6:	a8 a8       	st.b	r4[0x2],r8

8000e1c8 <__hi0bits>:
8000e1c8:	18 98       	mov	r8,r12
8000e1ca:	f0 0a 15 10 	lsl	r10,r8,0x10
8000e1ce:	18 99       	mov	r9,r12
8000e1d0:	e0 19 00 00 	andl	r9,0x0
8000e1d4:	f4 08 17 00 	moveq	r8,r10
8000e1d8:	f9 bc 00 10 	moveq	r12,16
8000e1dc:	f9 bc 01 00 	movne	r12,0
8000e1e0:	f8 ca ff f8 	sub	r10,r12,-8
8000e1e4:	10 99       	mov	r9,r8
8000e1e6:	e6 19 ff 00 	andh	r9,0xff00,COH
8000e1ea:	f4 0c 17 00 	moveq	r12,r10
8000e1ee:	f0 0a 15 08 	lsl	r10,r8,0x8
8000e1f2:	58 09       	cp.w	r9,0
8000e1f4:	f4 08 17 00 	moveq	r8,r10
8000e1f8:	f8 ca ff fc 	sub	r10,r12,-4
8000e1fc:	10 99       	mov	r9,r8
8000e1fe:	e6 19 f0 00 	andh	r9,0xf000,COH
8000e202:	f4 0c 17 00 	moveq	r12,r10
8000e206:	f0 0a 15 04 	lsl	r10,r8,0x4
8000e20a:	58 09       	cp.w	r9,0
8000e20c:	f4 08 17 00 	moveq	r8,r10
8000e210:	f8 ca ff fe 	sub	r10,r12,-2
8000e214:	10 99       	mov	r9,r8
8000e216:	e6 19 c0 00 	andh	r9,0xc000,COH
8000e21a:	f4 0c 17 00 	moveq	r12,r10
8000e21e:	f0 0a 15 02 	lsl	r10,r8,0x2
8000e222:	58 09       	cp.w	r9,0
8000e224:	f4 08 17 00 	moveq	r8,r10
8000e228:	58 08       	cp.w	r8,0
8000e22a:	5e 5c       	retlt	r12
8000e22c:	e6 18 40 00 	andh	r8,0x4000,COH
8000e230:	2f fc       	sub	r12,-1
8000e232:	58 08       	cp.w	r8,0
8000e234:	f8 0c 17 10 	movne	r12,r12
8000e238:	f9 bc 00 20 	moveq	r12,32
8000e23c:	5e fc       	retal	r12

8000e23e <__lo0bits>:
8000e23e:	18 99       	mov	r9,r12
8000e240:	78 08       	ld.w	r8,r12[0x0]
8000e242:	f9 d8 c0 03 	bfextu	r12,r8,0x0,0x3
8000e246:	c1 00       	breq	8000e266 <__lo0bits+0x28>
8000e248:	ed b8 00 00 	bld	r8,0x0
8000e24c:	c0 21       	brne	8000e250 <__lo0bits+0x12>
8000e24e:	5e fd       	retal	0
8000e250:	ed b8 00 01 	bld	r8,0x1
8000e254:	c0 51       	brne	8000e25e <__lo0bits+0x20>
8000e256:	a1 98       	lsr	r8,0x1
8000e258:	30 1c       	mov	r12,1
8000e25a:	93 08       	st.w	r9[0x0],r8
8000e25c:	5e fc       	retal	r12
8000e25e:	a3 88       	lsr	r8,0x2
8000e260:	30 2c       	mov	r12,2
8000e262:	93 08       	st.w	r9[0x0],r8
8000e264:	5e fc       	retal	r12
8000e266:	f0 0b 16 10 	lsr	r11,r8,0x10
8000e26a:	f5 d8 c0 10 	bfextu	r10,r8,0x0,0x10
8000e26e:	f6 08 17 00 	moveq	r8,r11
8000e272:	f9 bc 00 10 	moveq	r12,16
8000e276:	f8 cb ff f8 	sub	r11,r12,-8
8000e27a:	f5 d8 c0 08 	bfextu	r10,r8,0x0,0x8
8000e27e:	f6 0c 17 00 	moveq	r12,r11
8000e282:	f0 0b 16 08 	lsr	r11,r8,0x8
8000e286:	58 0a       	cp.w	r10,0
8000e288:	f6 08 17 00 	moveq	r8,r11
8000e28c:	f8 cb ff fc 	sub	r11,r12,-4
8000e290:	f5 d8 c0 04 	bfextu	r10,r8,0x0,0x4
8000e294:	f6 0c 17 00 	moveq	r12,r11
8000e298:	f0 0b 16 04 	lsr	r11,r8,0x4
8000e29c:	58 0a       	cp.w	r10,0
8000e29e:	f6 08 17 00 	moveq	r8,r11
8000e2a2:	f8 cb ff fe 	sub	r11,r12,-2
8000e2a6:	f5 d8 c0 02 	bfextu	r10,r8,0x0,0x2
8000e2aa:	f6 0c 17 00 	moveq	r12,r11
8000e2ae:	f0 0b 16 02 	lsr	r11,r8,0x2
8000e2b2:	58 0a       	cp.w	r10,0
8000e2b4:	f6 08 17 00 	moveq	r8,r11
8000e2b8:	ed b8 00 00 	bld	r8,0x0
8000e2bc:	c0 60       	breq	8000e2c8 <__lo0bits+0x8a>
8000e2be:	a1 98       	lsr	r8,0x1
8000e2c0:	c0 31       	brne	8000e2c6 <__lo0bits+0x88>
8000e2c2:	32 0c       	mov	r12,32
8000e2c4:	5e fc       	retal	r12
8000e2c6:	2f fc       	sub	r12,-1
8000e2c8:	93 08       	st.w	r9[0x0],r8
8000e2ca:	5e fc       	retal	r12

8000e2cc <__mcmp>:
8000e2cc:	d4 01       	pushm	lr
8000e2ce:	18 98       	mov	r8,r12
8000e2d0:	76 49       	ld.w	r9,r11[0x10]
8000e2d2:	78 4c       	ld.w	r12,r12[0x10]
8000e2d4:	12 1c       	sub	r12,r9
8000e2d6:	c1 31       	brne	8000e2fc <__mcmp+0x30>
8000e2d8:	2f b9       	sub	r9,-5
8000e2da:	a3 69       	lsl	r9,0x2
8000e2dc:	12 0b       	add	r11,r9
8000e2de:	f0 09 00 09 	add	r9,r8,r9
8000e2e2:	2e c8       	sub	r8,-20
8000e2e4:	13 4e       	ld.w	lr,--r9
8000e2e6:	17 4a       	ld.w	r10,--r11
8000e2e8:	14 3e       	cp.w	lr,r10
8000e2ea:	c0 60       	breq	8000e2f6 <__mcmp+0x2a>
8000e2ec:	f9 bc 03 ff 	movlo	r12,-1
8000e2f0:	f9 bc 02 01 	movhs	r12,1
8000e2f4:	d8 02       	popm	pc
8000e2f6:	10 39       	cp.w	r9,r8
8000e2f8:	fe 9b ff f6 	brhi	8000e2e4 <__mcmp+0x18>
8000e2fc:	d8 02       	popm	pc
8000e2fe:	d7 03       	nop

8000e300 <_Bfree>:
8000e300:	d4 21       	pushm	r4-r7,lr
8000e302:	18 97       	mov	r7,r12
8000e304:	16 95       	mov	r5,r11
8000e306:	78 96       	ld.w	r6,r12[0x24]
8000e308:	58 06       	cp.w	r6,0
8000e30a:	c0 91       	brne	8000e31c <_Bfree+0x1c>
8000e30c:	31 0c       	mov	r12,16
8000e30e:	f0 1f 00 0a 	mcall	8000e334 <_Bfree+0x34>
8000e312:	99 36       	st.w	r12[0xc],r6
8000e314:	8f 9c       	st.w	r7[0x24],r12
8000e316:	99 16       	st.w	r12[0x4],r6
8000e318:	99 26       	st.w	r12[0x8],r6
8000e31a:	99 06       	st.w	r12[0x0],r6
8000e31c:	58 05       	cp.w	r5,0
8000e31e:	c0 90       	breq	8000e330 <_Bfree+0x30>
8000e320:	6a 19       	ld.w	r9,r5[0x4]
8000e322:	6e 98       	ld.w	r8,r7[0x24]
8000e324:	70 38       	ld.w	r8,r8[0xc]
8000e326:	f0 09 03 2a 	ld.w	r10,r8[r9<<0x2]
8000e32a:	8b 0a       	st.w	r5[0x0],r10
8000e32c:	f0 09 09 25 	st.w	r8[r9<<0x2],r5
8000e330:	d8 22       	popm	r4-r7,pc
8000e332:	00 00       	add	r0,r0
8000e334:	80 00       	ld.sh	r0,r0[0x0]
8000e336:	9c 58       	ld.sh	r8,lr[0xa]

8000e338 <_Balloc>:
8000e338:	d4 21       	pushm	r4-r7,lr
8000e33a:	18 97       	mov	r7,r12
8000e33c:	16 96       	mov	r6,r11
8000e33e:	78 95       	ld.w	r5,r12[0x24]
8000e340:	58 05       	cp.w	r5,0
8000e342:	c0 91       	brne	8000e354 <_Balloc+0x1c>
8000e344:	31 0c       	mov	r12,16
8000e346:	f0 1f 00 19 	mcall	8000e3a8 <_Balloc+0x70>
8000e34a:	99 35       	st.w	r12[0xc],r5
8000e34c:	8f 9c       	st.w	r7[0x24],r12
8000e34e:	99 15       	st.w	r12[0x4],r5
8000e350:	99 25       	st.w	r12[0x8],r5
8000e352:	99 05       	st.w	r12[0x0],r5
8000e354:	6e 95       	ld.w	r5,r7[0x24]
8000e356:	6a 38       	ld.w	r8,r5[0xc]
8000e358:	58 08       	cp.w	r8,0
8000e35a:	c0 b1       	brne	8000e370 <_Balloc+0x38>
8000e35c:	31 0a       	mov	r10,16
8000e35e:	30 4b       	mov	r11,4
8000e360:	0e 9c       	mov	r12,r7
8000e362:	f0 1f 00 13 	mcall	8000e3ac <_Balloc+0x74>
8000e366:	8b 3c       	st.w	r5[0xc],r12
8000e368:	6e 98       	ld.w	r8,r7[0x24]
8000e36a:	70 3c       	ld.w	r12,r8[0xc]
8000e36c:	58 0c       	cp.w	r12,0
8000e36e:	c1 b0       	breq	8000e3a4 <_Balloc+0x6c>
8000e370:	6e 98       	ld.w	r8,r7[0x24]
8000e372:	70 38       	ld.w	r8,r8[0xc]
8000e374:	f0 06 00 28 	add	r8,r8,r6<<0x2
8000e378:	70 0c       	ld.w	r12,r8[0x0]
8000e37a:	58 0c       	cp.w	r12,0
8000e37c:	c0 40       	breq	8000e384 <_Balloc+0x4c>
8000e37e:	78 09       	ld.w	r9,r12[0x0]
8000e380:	91 09       	st.w	r8[0x0],r9
8000e382:	c0 e8       	rjmp	8000e39e <_Balloc+0x66>
8000e384:	0e 9c       	mov	r12,r7
8000e386:	30 17       	mov	r7,1
8000e388:	0e 9b       	mov	r11,r7
8000e38a:	ee 06 09 47 	lsl	r7,r7,r6
8000e38e:	ee ca ff fb 	sub	r10,r7,-5
8000e392:	a3 6a       	lsl	r10,0x2
8000e394:	f0 1f 00 06 	mcall	8000e3ac <_Balloc+0x74>
8000e398:	c0 60       	breq	8000e3a4 <_Balloc+0x6c>
8000e39a:	99 16       	st.w	r12[0x4],r6
8000e39c:	99 27       	st.w	r12[0x8],r7
8000e39e:	30 08       	mov	r8,0
8000e3a0:	99 38       	st.w	r12[0xc],r8
8000e3a2:	99 48       	st.w	r12[0x10],r8
8000e3a4:	d8 22       	popm	r4-r7,pc
8000e3a6:	00 00       	add	r0,r0
8000e3a8:	80 00       	ld.sh	r0,r0[0x0]
8000e3aa:	9c 58       	ld.sh	r8,lr[0xa]
8000e3ac:	80 00       	ld.sh	r0,r0[0x0]
8000e3ae:	e9 28 d4 31 	ld.sb	r8,r4[-11215]

8000e3b0 <__d2b>:
8000e3b0:	d4 31       	pushm	r0-r7,lr
8000e3b2:	20 2d       	sub	sp,8
8000e3b4:	16 93       	mov	r3,r11
8000e3b6:	12 96       	mov	r6,r9
8000e3b8:	10 95       	mov	r5,r8
8000e3ba:	14 92       	mov	r2,r10
8000e3bc:	30 1b       	mov	r11,1
8000e3be:	f0 1f 00 27 	mcall	8000e458 <__d2b+0xa8>
8000e3c2:	f3 d3 c0 14 	bfextu	r9,r3,0x0,0x14
8000e3c6:	50 09       	stdsp	sp[0x0],r9
8000e3c8:	f1 d3 c0 1f 	bfextu	r8,r3,0x0,0x1f
8000e3cc:	18 94       	mov	r4,r12
8000e3ce:	f0 01 16 14 	lsr	r1,r8,0x14
8000e3d2:	c0 30       	breq	8000e3d8 <__d2b+0x28>
8000e3d4:	b5 a9       	sbr	r9,0x14
8000e3d6:	50 09       	stdsp	sp[0x0],r9
8000e3d8:	58 02       	cp.w	r2,0
8000e3da:	c1 e0       	breq	8000e416 <__d2b+0x66>
8000e3dc:	fa cc ff f8 	sub	r12,sp,-8
8000e3e0:	18 d2       	st.w	--r12,r2
8000e3e2:	f0 1f 00 1f 	mcall	8000e45c <__d2b+0xac>
8000e3e6:	40 18       	lddsp	r8,sp[0x4]
8000e3e8:	c0 d0       	breq	8000e402 <__d2b+0x52>
8000e3ea:	40 09       	lddsp	r9,sp[0x0]
8000e3ec:	f8 0a 11 20 	rsub	r10,r12,32
8000e3f0:	f2 0a 09 4a 	lsl	r10,r9,r10
8000e3f4:	f5 e8 10 08 	or	r8,r10,r8
8000e3f8:	89 58       	st.w	r4[0x14],r8
8000e3fa:	f2 0c 0a 49 	lsr	r9,r9,r12
8000e3fe:	50 09       	stdsp	sp[0x0],r9
8000e400:	c0 28       	rjmp	8000e404 <__d2b+0x54>
8000e402:	89 58       	st.w	r4[0x14],r8
8000e404:	40 08       	lddsp	r8,sp[0x0]
8000e406:	58 08       	cp.w	r8,0
8000e408:	f9 b3 01 02 	movne	r3,2
8000e40c:	f9 b3 00 01 	moveq	r3,1
8000e410:	89 68       	st.w	r4[0x18],r8
8000e412:	89 43       	st.w	r4[0x10],r3
8000e414:	c0 98       	rjmp	8000e426 <__d2b+0x76>
8000e416:	1a 9c       	mov	r12,sp
8000e418:	f0 1f 00 11 	mcall	8000e45c <__d2b+0xac>
8000e41c:	30 13       	mov	r3,1
8000e41e:	40 08       	lddsp	r8,sp[0x0]
8000e420:	2e 0c       	sub	r12,-32
8000e422:	89 43       	st.w	r4[0x10],r3
8000e424:	89 58       	st.w	r4[0x14],r8
8000e426:	58 01       	cp.w	r1,0
8000e428:	c0 90       	breq	8000e43a <__d2b+0x8a>
8000e42a:	e2 c1 04 33 	sub	r1,r1,1075
8000e42e:	18 01       	add	r1,r12
8000e430:	8d 01       	st.w	r6[0x0],r1
8000e432:	f8 0c 11 35 	rsub	r12,r12,53
8000e436:	8b 0c       	st.w	r5[0x0],r12
8000e438:	c0 d8       	rjmp	8000e452 <__d2b+0xa2>
8000e43a:	e6 c8 ff fc 	sub	r8,r3,-4
8000e43e:	f8 cc 04 32 	sub	r12,r12,1074
8000e442:	a5 73       	lsl	r3,0x5
8000e444:	8d 0c       	st.w	r6[0x0],r12
8000e446:	e8 08 03 2c 	ld.w	r12,r4[r8<<0x2]
8000e44a:	f0 1f 00 06 	mcall	8000e460 <__d2b+0xb0>
8000e44e:	18 13       	sub	r3,r12
8000e450:	8b 03       	st.w	r5[0x0],r3
8000e452:	08 9c       	mov	r12,r4
8000e454:	2f ed       	sub	sp,-8
8000e456:	d8 32       	popm	r0-r7,pc
8000e458:	80 00       	ld.sh	r0,r0[0x0]
8000e45a:	e3 38 80 00 	ld.ub	r8,r1[-32768]
8000e45e:	e2 3e 80 00 	sub	lr,229376
8000e462:	e1 c8 d4 31 	ldm	r8,r0,r4-r5,r10,r12,lr-pc

8000e464 <__mdiff>:
8000e464:	d4 31       	pushm	r0-r7,lr
8000e466:	74 48       	ld.w	r8,r10[0x10]
8000e468:	76 45       	ld.w	r5,r11[0x10]
8000e46a:	16 97       	mov	r7,r11
8000e46c:	14 96       	mov	r6,r10
8000e46e:	10 15       	sub	r5,r8
8000e470:	c1 31       	brne	8000e496 <__mdiff+0x32>
8000e472:	2f b8       	sub	r8,-5
8000e474:	ee ce ff ec 	sub	lr,r7,-20
8000e478:	a3 68       	lsl	r8,0x2
8000e47a:	f4 08 00 0b 	add	r11,r10,r8
8000e47e:	ee 08 00 08 	add	r8,r7,r8
8000e482:	11 4a       	ld.w	r10,--r8
8000e484:	17 49       	ld.w	r9,--r11
8000e486:	12 3a       	cp.w	r10,r9
8000e488:	c0 30       	breq	8000e48e <__mdiff+0x2a>
8000e48a:	c0 e2       	brcc	8000e4a6 <__mdiff+0x42>
8000e48c:	c0 78       	rjmp	8000e49a <__mdiff+0x36>
8000e48e:	1c 38       	cp.w	r8,lr
8000e490:	fe 9b ff f9 	brhi	8000e482 <__mdiff+0x1e>
8000e494:	c4 a8       	rjmp	8000e528 <__mdiff+0xc4>
8000e496:	58 05       	cp.w	r5,0
8000e498:	c0 64       	brge	8000e4a4 <__mdiff+0x40>
8000e49a:	0e 98       	mov	r8,r7
8000e49c:	30 15       	mov	r5,1
8000e49e:	0c 97       	mov	r7,r6
8000e4a0:	10 96       	mov	r6,r8
8000e4a2:	c0 28       	rjmp	8000e4a6 <__mdiff+0x42>
8000e4a4:	30 05       	mov	r5,0
8000e4a6:	6e 1b       	ld.w	r11,r7[0x4]
8000e4a8:	f0 1f 00 24 	mcall	8000e538 <__mdiff+0xd4>
8000e4ac:	6e 49       	ld.w	r9,r7[0x10]
8000e4ae:	6c 44       	ld.w	r4,r6[0x10]
8000e4b0:	99 35       	st.w	r12[0xc],r5
8000e4b2:	2f b4       	sub	r4,-5
8000e4b4:	f2 c5 ff fb 	sub	r5,r9,-5
8000e4b8:	ec 04 00 24 	add	r4,r6,r4<<0x2
8000e4bc:	ee 05 00 25 	add	r5,r7,r5<<0x2
8000e4c0:	2e c6       	sub	r6,-20
8000e4c2:	2e c7       	sub	r7,-20
8000e4c4:	f8 c8 ff ec 	sub	r8,r12,-20
8000e4c8:	30 0a       	mov	r10,0
8000e4ca:	0f 0e       	ld.w	lr,r7++
8000e4cc:	0d 0b       	ld.w	r11,r6++
8000e4ce:	fc 02 16 10 	lsr	r2,lr,0x10
8000e4d2:	f6 03 16 10 	lsr	r3,r11,0x10
8000e4d6:	fd de c0 10 	bfextu	lr,lr,0x0,0x10
8000e4da:	e4 03 01 03 	sub	r3,r2,r3
8000e4de:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
8000e4e2:	fc 0b 01 0b 	sub	r11,lr,r11
8000e4e6:	f6 0a 00 0a 	add	r10,r11,r10
8000e4ea:	b0 1a       	st.h	r8[0x2],r10
8000e4ec:	b1 4a       	asr	r10,0x10
8000e4ee:	e6 0a 00 0a 	add	r10,r3,r10
8000e4f2:	b0 0a       	st.h	r8[0x0],r10
8000e4f4:	2f c8       	sub	r8,-4
8000e4f6:	b1 4a       	asr	r10,0x10
8000e4f8:	08 36       	cp.w	r6,r4
8000e4fa:	ce 83       	brcs	8000e4ca <__mdiff+0x66>
8000e4fc:	c0 d8       	rjmp	8000e516 <__mdiff+0xb2>
8000e4fe:	0f 0b       	ld.w	r11,r7++
8000e500:	f6 0e 16 10 	lsr	lr,r11,0x10
8000e504:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
8000e508:	16 0a       	add	r10,r11
8000e50a:	b0 1a       	st.h	r8[0x2],r10
8000e50c:	b1 4a       	asr	r10,0x10
8000e50e:	1c 0a       	add	r10,lr
8000e510:	b0 0a       	st.h	r8[0x0],r10
8000e512:	2f c8       	sub	r8,-4
8000e514:	b1 4a       	asr	r10,0x10
8000e516:	0a 37       	cp.w	r7,r5
8000e518:	cf 33       	brcs	8000e4fe <__mdiff+0x9a>
8000e51a:	c0 28       	rjmp	8000e51e <__mdiff+0xba>
8000e51c:	20 19       	sub	r9,1
8000e51e:	11 4a       	ld.w	r10,--r8
8000e520:	58 0a       	cp.w	r10,0
8000e522:	cf d0       	breq	8000e51c <__mdiff+0xb8>
8000e524:	99 49       	st.w	r12[0x10],r9
8000e526:	d8 32       	popm	r0-r7,pc
8000e528:	30 0b       	mov	r11,0
8000e52a:	f0 1f 00 04 	mcall	8000e538 <__mdiff+0xd4>
8000e52e:	30 18       	mov	r8,1
8000e530:	99 48       	st.w	r12[0x10],r8
8000e532:	30 08       	mov	r8,0
8000e534:	99 58       	st.w	r12[0x14],r8
8000e536:	d8 32       	popm	r0-r7,pc
8000e538:	80 00       	ld.sh	r0,r0[0x0]
8000e53a:	e3 38 d4 31 	ld.ub	r8,r1[-11215]

8000e53c <__lshift>:
8000e53c:	d4 31       	pushm	r0-r7,lr
8000e53e:	16 97       	mov	r7,r11
8000e540:	76 46       	ld.w	r6,r11[0x10]
8000e542:	f4 02 14 05 	asr	r2,r10,0x5
8000e546:	2f f6       	sub	r6,-1
8000e548:	14 93       	mov	r3,r10
8000e54a:	18 94       	mov	r4,r12
8000e54c:	04 06       	add	r6,r2
8000e54e:	76 1b       	ld.w	r11,r11[0x4]
8000e550:	6e 28       	ld.w	r8,r7[0x8]
8000e552:	c0 38       	rjmp	8000e558 <__lshift+0x1c>
8000e554:	2f fb       	sub	r11,-1
8000e556:	a1 78       	lsl	r8,0x1
8000e558:	10 36       	cp.w	r6,r8
8000e55a:	fe 99 ff fd 	brgt	8000e554 <__lshift+0x18>
8000e55e:	08 9c       	mov	r12,r4
8000e560:	f0 1f 00 1a 	mcall	8000e5c8 <__lshift+0x8c>
8000e564:	30 09       	mov	r9,0
8000e566:	18 95       	mov	r5,r12
8000e568:	f8 c8 ff ec 	sub	r8,r12,-20
8000e56c:	12 9a       	mov	r10,r9
8000e56e:	c0 38       	rjmp	8000e574 <__lshift+0x38>
8000e570:	10 aa       	st.w	r8++,r10
8000e572:	2f f9       	sub	r9,-1
8000e574:	04 39       	cp.w	r9,r2
8000e576:	cf d5       	brlt	8000e570 <__lshift+0x34>
8000e578:	6e 4b       	ld.w	r11,r7[0x10]
8000e57a:	e7 d3 c0 05 	bfextu	r3,r3,0x0,0x5
8000e57e:	2f bb       	sub	r11,-5
8000e580:	ee c9 ff ec 	sub	r9,r7,-20
8000e584:	ee 0b 00 2b 	add	r11,r7,r11<<0x2
8000e588:	58 03       	cp.w	r3,0
8000e58a:	c1 30       	breq	8000e5b0 <__lshift+0x74>
8000e58c:	e6 0c 11 20 	rsub	r12,r3,32
8000e590:	30 0a       	mov	r10,0
8000e592:	72 02       	ld.w	r2,r9[0x0]
8000e594:	e4 03 09 42 	lsl	r2,r2,r3
8000e598:	04 4a       	or	r10,r2
8000e59a:	10 aa       	st.w	r8++,r10
8000e59c:	13 0a       	ld.w	r10,r9++
8000e59e:	f4 0c 0a 4a 	lsr	r10,r10,r12
8000e5a2:	16 39       	cp.w	r9,r11
8000e5a4:	cf 73       	brcs	8000e592 <__lshift+0x56>
8000e5a6:	91 0a       	st.w	r8[0x0],r10
8000e5a8:	58 0a       	cp.w	r10,0
8000e5aa:	c0 70       	breq	8000e5b8 <__lshift+0x7c>
8000e5ac:	2f f6       	sub	r6,-1
8000e5ae:	c0 58       	rjmp	8000e5b8 <__lshift+0x7c>
8000e5b0:	13 0a       	ld.w	r10,r9++
8000e5b2:	10 aa       	st.w	r8++,r10
8000e5b4:	16 39       	cp.w	r9,r11
8000e5b6:	cf d3       	brcs	8000e5b0 <__lshift+0x74>
8000e5b8:	08 9c       	mov	r12,r4
8000e5ba:	20 16       	sub	r6,1
8000e5bc:	0e 9b       	mov	r11,r7
8000e5be:	8b 46       	st.w	r5[0x10],r6
8000e5c0:	f0 1f 00 03 	mcall	8000e5cc <__lshift+0x90>
8000e5c4:	0a 9c       	mov	r12,r5
8000e5c6:	d8 32       	popm	r0-r7,pc
8000e5c8:	80 00       	ld.sh	r0,r0[0x0]
8000e5ca:	e3 38 80 00 	ld.ub	r8,r1[-32768]
8000e5ce:	e3 00 d4 31 	ld.sh	r0,r1[-11215]

8000e5d0 <__multiply>:
8000e5d0:	d4 31       	pushm	r0-r7,lr
8000e5d2:	20 2d       	sub	sp,8
8000e5d4:	16 96       	mov	r6,r11
8000e5d6:	14 95       	mov	r5,r10
8000e5d8:	76 49       	ld.w	r9,r11[0x10]
8000e5da:	74 48       	ld.w	r8,r10[0x10]
8000e5dc:	10 39       	cp.w	r9,r8
8000e5de:	c0 34       	brge	8000e5e4 <__multiply+0x14>
8000e5e0:	14 96       	mov	r6,r10
8000e5e2:	16 95       	mov	r5,r11
8000e5e4:	6c 1b       	ld.w	r11,r6[0x4]
8000e5e6:	6c 28       	ld.w	r8,r6[0x8]
8000e5e8:	f6 c9 ff ff 	sub	r9,r11,-1
8000e5ec:	6c 43       	ld.w	r3,r6[0x10]
8000e5ee:	6a 42       	ld.w	r2,r5[0x10]
8000e5f0:	e4 03 00 07 	add	r7,r2,r3
8000e5f4:	10 37       	cp.w	r7,r8
8000e5f6:	f2 0b 17 90 	movgt	r11,r9
8000e5fa:	f0 1f 00 36 	mcall	8000e6d0 <__multiply+0x100>
8000e5fe:	ee c4 ff fb 	sub	r4,r7,-5
8000e602:	f8 c9 ff ec 	sub	r9,r12,-20
8000e606:	f8 04 00 24 	add	r4,r12,r4<<0x2
8000e60a:	30 0a       	mov	r10,0
8000e60c:	12 98       	mov	r8,r9
8000e60e:	c0 28       	rjmp	8000e612 <__multiply+0x42>
8000e610:	10 aa       	st.w	r8++,r10
8000e612:	08 38       	cp.w	r8,r4
8000e614:	cf e3       	brcs	8000e610 <__multiply+0x40>
8000e616:	2f b3       	sub	r3,-5
8000e618:	2f b2       	sub	r2,-5
8000e61a:	ec 03 00 23 	add	r3,r6,r3<<0x2
8000e61e:	ea 02 00 22 	add	r2,r5,r2<<0x2
8000e622:	ec cb ff ec 	sub	r11,r6,-20
8000e626:	50 12       	stdsp	sp[0x4],r2
8000e628:	ea ca ff ec 	sub	r10,r5,-20
8000e62c:	c4 48       	rjmp	8000e6b4 <__multiply+0xe4>
8000e62e:	94 95       	ld.uh	r5,r10[0x2]
8000e630:	58 05       	cp.w	r5,0
8000e632:	c2 00       	breq	8000e672 <__multiply+0xa2>
8000e634:	12 98       	mov	r8,r9
8000e636:	16 96       	mov	r6,r11
8000e638:	30 0e       	mov	lr,0
8000e63a:	50 09       	stdsp	sp[0x0],r9
8000e63c:	0d 02       	ld.w	r2,r6++
8000e63e:	e4 00 16 10 	lsr	r0,r2,0x10
8000e642:	70 01       	ld.w	r1,r8[0x0]
8000e644:	70 09       	ld.w	r9,r8[0x0]
8000e646:	b1 81       	lsr	r1,0x10
8000e648:	e5 d2 c0 10 	bfextu	r2,r2,0x0,0x10
8000e64c:	e0 05 03 41 	mac	r1,r0,r5
8000e650:	ab 32       	mul	r2,r5
8000e652:	e1 d9 c0 10 	bfextu	r0,r9,0x0,0x10
8000e656:	00 02       	add	r2,r0
8000e658:	e4 0e 00 0e 	add	lr,r2,lr
8000e65c:	b0 1e       	st.h	r8[0x2],lr
8000e65e:	b1 8e       	lsr	lr,0x10
8000e660:	1c 01       	add	r1,lr
8000e662:	b0 01       	st.h	r8[0x0],r1
8000e664:	e2 0e 16 10 	lsr	lr,r1,0x10
8000e668:	2f c8       	sub	r8,-4
8000e66a:	06 36       	cp.w	r6,r3
8000e66c:	ce 83       	brcs	8000e63c <__multiply+0x6c>
8000e66e:	40 09       	lddsp	r9,sp[0x0]
8000e670:	91 0e       	st.w	r8[0x0],lr
8000e672:	94 86       	ld.uh	r6,r10[0x0]
8000e674:	58 06       	cp.w	r6,0
8000e676:	c1 d0       	breq	8000e6b0 <__multiply+0xe0>
8000e678:	72 02       	ld.w	r2,r9[0x0]
8000e67a:	12 98       	mov	r8,r9
8000e67c:	16 9e       	mov	lr,r11
8000e67e:	30 05       	mov	r5,0
8000e680:	b0 12       	st.h	r8[0x2],r2
8000e682:	1d 01       	ld.w	r1,lr++
8000e684:	90 82       	ld.uh	r2,r8[0x0]
8000e686:	e1 d1 c0 10 	bfextu	r0,r1,0x0,0x10
8000e68a:	ad 30       	mul	r0,r6
8000e68c:	e0 02 00 02 	add	r2,r0,r2
8000e690:	e4 05 00 05 	add	r5,r2,r5
8000e694:	b0 05       	st.h	r8[0x0],r5
8000e696:	b1 85       	lsr	r5,0x10
8000e698:	b1 81       	lsr	r1,0x10
8000e69a:	2f c8       	sub	r8,-4
8000e69c:	ad 31       	mul	r1,r6
8000e69e:	90 92       	ld.uh	r2,r8[0x2]
8000e6a0:	e2 02 00 02 	add	r2,r1,r2
8000e6a4:	0a 02       	add	r2,r5
8000e6a6:	e4 05 16 10 	lsr	r5,r2,0x10
8000e6aa:	06 3e       	cp.w	lr,r3
8000e6ac:	ce a3       	brcs	8000e680 <__multiply+0xb0>
8000e6ae:	91 02       	st.w	r8[0x0],r2
8000e6b0:	2f ca       	sub	r10,-4
8000e6b2:	2f c9       	sub	r9,-4
8000e6b4:	40 18       	lddsp	r8,sp[0x4]
8000e6b6:	10 3a       	cp.w	r10,r8
8000e6b8:	cb b3       	brcs	8000e62e <__multiply+0x5e>
8000e6ba:	c0 28       	rjmp	8000e6be <__multiply+0xee>
8000e6bc:	20 17       	sub	r7,1
8000e6be:	58 07       	cp.w	r7,0
8000e6c0:	e0 8a 00 05 	brle	8000e6ca <__multiply+0xfa>
8000e6c4:	09 48       	ld.w	r8,--r4
8000e6c6:	58 08       	cp.w	r8,0
8000e6c8:	cf a0       	breq	8000e6bc <__multiply+0xec>
8000e6ca:	99 47       	st.w	r12[0x10],r7
8000e6cc:	2f ed       	sub	sp,-8
8000e6ce:	d8 32       	popm	r0-r7,pc
8000e6d0:	80 00       	ld.sh	r0,r0[0x0]
8000e6d2:	e3 38 d4 21 	ld.ub	r8,r1[-11231]

8000e6d4 <__i2b>:
8000e6d4:	d4 21       	pushm	r4-r7,lr
8000e6d6:	16 97       	mov	r7,r11
8000e6d8:	30 1b       	mov	r11,1
8000e6da:	f0 1f 00 04 	mcall	8000e6e8 <__i2b+0x14>
8000e6de:	30 19       	mov	r9,1
8000e6e0:	99 57       	st.w	r12[0x14],r7
8000e6e2:	99 49       	st.w	r12[0x10],r9
8000e6e4:	d8 22       	popm	r4-r7,pc
8000e6e6:	00 00       	add	r0,r0
8000e6e8:	80 00       	ld.sh	r0,r0[0x0]
8000e6ea:	e3 38 d4 31 	ld.ub	r8,r1[-11215]

8000e6ec <__multadd>:
8000e6ec:	d4 31       	pushm	r0-r7,lr
8000e6ee:	30 08       	mov	r8,0
8000e6f0:	12 95       	mov	r5,r9
8000e6f2:	16 97       	mov	r7,r11
8000e6f4:	18 96       	mov	r6,r12
8000e6f6:	76 44       	ld.w	r4,r11[0x10]
8000e6f8:	f6 c9 ff ec 	sub	r9,r11,-20
8000e6fc:	72 0b       	ld.w	r11,r9[0x0]
8000e6fe:	f6 0c 16 10 	lsr	r12,r11,0x10
8000e702:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
8000e706:	f4 0c 02 4c 	mul	r12,r10,r12
8000e70a:	f4 0b 03 45 	mac	r5,r10,r11
8000e70e:	f7 d5 c0 10 	bfextu	r11,r5,0x0,0x10
8000e712:	b1 85       	lsr	r5,0x10
8000e714:	18 05       	add	r5,r12
8000e716:	ea 0c 15 10 	lsl	r12,r5,0x10
8000e71a:	f8 0b 00 0b 	add	r11,r12,r11
8000e71e:	12 ab       	st.w	r9++,r11
8000e720:	2f f8       	sub	r8,-1
8000e722:	b1 85       	lsr	r5,0x10
8000e724:	08 38       	cp.w	r8,r4
8000e726:	ce b5       	brlt	8000e6fc <__multadd+0x10>
8000e728:	58 05       	cp.w	r5,0
8000e72a:	c1 d0       	breq	8000e764 <__multadd+0x78>
8000e72c:	6e 28       	ld.w	r8,r7[0x8]
8000e72e:	10 34       	cp.w	r4,r8
8000e730:	c1 45       	brlt	8000e758 <__multadd+0x6c>
8000e732:	6e 1b       	ld.w	r11,r7[0x4]
8000e734:	0c 9c       	mov	r12,r6
8000e736:	2f fb       	sub	r11,-1
8000e738:	f0 1f 00 0c 	mcall	8000e768 <__multadd+0x7c>
8000e73c:	6e 4a       	ld.w	r10,r7[0x10]
8000e73e:	ee cb ff f4 	sub	r11,r7,-12
8000e742:	18 93       	mov	r3,r12
8000e744:	2f ea       	sub	r10,-2
8000e746:	2f 4c       	sub	r12,-12
8000e748:	a3 6a       	lsl	r10,0x2
8000e74a:	f0 1f 00 09 	mcall	8000e76c <__multadd+0x80>
8000e74e:	0e 9b       	mov	r11,r7
8000e750:	0c 9c       	mov	r12,r6
8000e752:	f0 1f 00 08 	mcall	8000e770 <__multadd+0x84>
8000e756:	06 97       	mov	r7,r3
8000e758:	e8 c8 ff ff 	sub	r8,r4,-1
8000e75c:	2f b4       	sub	r4,-5
8000e75e:	8f 48       	st.w	r7[0x10],r8
8000e760:	ee 04 09 25 	st.w	r7[r4<<0x2],r5
8000e764:	0e 9c       	mov	r12,r7
8000e766:	d8 32       	popm	r0-r7,pc
8000e768:	80 00       	ld.sh	r0,r0[0x0]
8000e76a:	e3 38 80 00 	ld.ub	r8,r1[-32768]
8000e76e:	a0 f8       	st.b	r0[0x7],r8
8000e770:	80 00       	ld.sh	r0,r0[0x0]
8000e772:	e3 00 d4 31 	ld.sh	r0,r1[-11215]

8000e774 <__pow5mult>:
8000e774:	d4 31       	pushm	r0-r7,lr
8000e776:	14 96       	mov	r6,r10
8000e778:	18 97       	mov	r7,r12
8000e77a:	16 94       	mov	r4,r11
8000e77c:	f1 da c0 02 	bfextu	r8,r10,0x0,0x2
8000e780:	c0 90       	breq	8000e792 <__pow5mult+0x1e>
8000e782:	20 18       	sub	r8,1
8000e784:	4a 19       	lddpc	r9,8000e808 <__pow5mult+0x94>
8000e786:	f2 08 03 2a 	ld.w	r10,r9[r8<<0x2]
8000e78a:	30 09       	mov	r9,0
8000e78c:	f0 1f 00 20 	mcall	8000e80c <__pow5mult+0x98>
8000e790:	18 94       	mov	r4,r12
8000e792:	a3 46       	asr	r6,0x2
8000e794:	c3 70       	breq	8000e802 <__pow5mult+0x8e>
8000e796:	6e 95       	ld.w	r5,r7[0x24]
8000e798:	58 05       	cp.w	r5,0
8000e79a:	c0 91       	brne	8000e7ac <__pow5mult+0x38>
8000e79c:	31 0c       	mov	r12,16
8000e79e:	f0 1f 00 1d 	mcall	8000e810 <__pow5mult+0x9c>
8000e7a2:	99 35       	st.w	r12[0xc],r5
8000e7a4:	8f 9c       	st.w	r7[0x24],r12
8000e7a6:	99 15       	st.w	r12[0x4],r5
8000e7a8:	99 25       	st.w	r12[0x8],r5
8000e7aa:	99 05       	st.w	r12[0x0],r5
8000e7ac:	6e 93       	ld.w	r3,r7[0x24]
8000e7ae:	66 25       	ld.w	r5,r3[0x8]
8000e7b0:	58 05       	cp.w	r5,0
8000e7b2:	c0 d1       	brne	8000e7cc <__pow5mult+0x58>
8000e7b4:	e0 6b 02 71 	mov	r11,625
8000e7b8:	0e 9c       	mov	r12,r7
8000e7ba:	f0 1f 00 17 	mcall	8000e814 <__pow5mult+0xa0>
8000e7be:	87 2c       	st.w	r3[0x8],r12
8000e7c0:	30 08       	mov	r8,0
8000e7c2:	18 95       	mov	r5,r12
8000e7c4:	99 08       	st.w	r12[0x0],r8
8000e7c6:	c0 38       	rjmp	8000e7cc <__pow5mult+0x58>
8000e7c8:	06 9c       	mov	r12,r3
8000e7ca:	18 95       	mov	r5,r12
8000e7cc:	ed b6 00 00 	bld	r6,0x0
8000e7d0:	c0 c1       	brne	8000e7e8 <__pow5mult+0x74>
8000e7d2:	08 9b       	mov	r11,r4
8000e7d4:	0a 9a       	mov	r10,r5
8000e7d6:	0e 9c       	mov	r12,r7
8000e7d8:	f0 1f 00 10 	mcall	8000e818 <__pow5mult+0xa4>
8000e7dc:	08 9b       	mov	r11,r4
8000e7de:	18 93       	mov	r3,r12
8000e7e0:	0e 9c       	mov	r12,r7
8000e7e2:	06 94       	mov	r4,r3
8000e7e4:	f0 1f 00 0e 	mcall	8000e81c <__pow5mult+0xa8>
8000e7e8:	a1 56       	asr	r6,0x1
8000e7ea:	c0 c0       	breq	8000e802 <__pow5mult+0x8e>
8000e7ec:	6a 03       	ld.w	r3,r5[0x0]
8000e7ee:	58 03       	cp.w	r3,0
8000e7f0:	ce c1       	brne	8000e7c8 <__pow5mult+0x54>
8000e7f2:	0a 9a       	mov	r10,r5
8000e7f4:	0a 9b       	mov	r11,r5
8000e7f6:	0e 9c       	mov	r12,r7
8000e7f8:	f0 1f 00 08 	mcall	8000e818 <__pow5mult+0xa4>
8000e7fc:	8b 0c       	st.w	r5[0x0],r12
8000e7fe:	99 03       	st.w	r12[0x0],r3
8000e800:	ce 5b       	rjmp	8000e7ca <__pow5mult+0x56>
8000e802:	08 9c       	mov	r12,r4
8000e804:	d8 32       	popm	r0-r7,pc
8000e806:	00 00       	add	r0,r0
8000e808:	80 01       	ld.sh	r1,r0[0x0]
8000e80a:	02 00       	add	r0,r1
8000e80c:	80 00       	ld.sh	r0,r0[0x0]
8000e80e:	e6 ec 80 00 	ld.d	r12,r3[-32768]
8000e812:	9c 58       	ld.sh	r8,lr[0xa]
8000e814:	80 00       	ld.sh	r0,r0[0x0]
8000e816:	e6 d4 80 00 	satsub.w	r4,r3,-32768
8000e81a:	e5 d0 80 00 	ldswp.w	r0,r2[0]
8000e81e:	e3 00 14 98 	ld.sh	r0,r1[5272]

8000e820 <__isinfd>:
8000e820:	14 98       	mov	r8,r10
8000e822:	30 09       	mov	r9,0
8000e824:	ea 19 7f f0 	orh	r9,0x7ff0
8000e828:	f5 db c0 1f 	bfextu	r10,r11,0x0,0x1f
8000e82c:	f0 0b 11 00 	rsub	r11,r8,0
8000e830:	f7 e8 10 08 	or	r8,r11,r8
8000e834:	f5 e8 13 f8 	or	r8,r10,r8>>0x1f
8000e838:	f2 08 01 08 	sub	r8,r9,r8
8000e83c:	f0 0c 11 00 	rsub	r12,r8,0
8000e840:	f9 e8 10 08 	or	r8,r12,r8
8000e844:	f0 0c 14 1f 	asr	r12,r8,0x1f
8000e848:	2f fc       	sub	r12,-1
8000e84a:	5e fc       	retal	r12

8000e84c <__isnand>:
8000e84c:	14 98       	mov	r8,r10
8000e84e:	f5 db c0 1f 	bfextu	r10,r11,0x0,0x1f
8000e852:	f0 0c 11 00 	rsub	r12,r8,0
8000e856:	10 4c       	or	r12,r8
8000e858:	30 08       	mov	r8,0
8000e85a:	ea 18 7f f0 	orh	r8,0x7ff0
8000e85e:	f5 ec 13 fc 	or	r12,r10,r12>>0x1f
8000e862:	f0 0c 01 0c 	sub	r12,r8,r12
8000e866:	bf 9c       	lsr	r12,0x1f
8000e868:	5e fc       	retal	r12
8000e86a:	d7 03       	nop

8000e86c <__sclose>:
8000e86c:	d4 01       	pushm	lr
8000e86e:	96 7b       	ld.sh	r11,r11[0xe]
8000e870:	f0 1f 00 02 	mcall	8000e878 <__sclose+0xc>
8000e874:	d8 02       	popm	pc
8000e876:	00 00       	add	r0,r0
8000e878:	80 00       	ld.sh	r0,r0[0x0]
8000e87a:	e9 88       	*unknown*

8000e87c <__sseek>:
8000e87c:	d4 21       	pushm	r4-r7,lr
8000e87e:	16 97       	mov	r7,r11
8000e880:	96 7b       	ld.sh	r11,r11[0xe]
8000e882:	f0 1f 00 07 	mcall	8000e89c <__sseek+0x20>
8000e886:	8e 68       	ld.sh	r8,r7[0xc]
8000e888:	5b fc       	cp.w	r12,-1
8000e88a:	c0 41       	brne	8000e892 <__sseek+0x16>
8000e88c:	ad c8       	cbr	r8,0xc
8000e88e:	ae 68       	st.h	r7[0xc],r8
8000e890:	d8 22       	popm	r4-r7,pc
8000e892:	ad a8       	sbr	r8,0xc
8000e894:	ef 4c 00 54 	st.w	r7[84],r12
8000e898:	ae 68       	st.h	r7[0xc],r8
8000e89a:	d8 22       	popm	r4-r7,pc
8000e89c:	80 00       	ld.sh	r0,r0[0x0]
8000e89e:	ea c4 d4 21 	sub	r4,r5,-11231

8000e8a0 <__swrite>:
8000e8a0:	d4 21       	pushm	r4-r7,lr
8000e8a2:	96 68       	ld.sh	r8,r11[0xc]
8000e8a4:	16 97       	mov	r7,r11
8000e8a6:	14 95       	mov	r5,r10
8000e8a8:	12 94       	mov	r4,r9
8000e8aa:	e2 18 01 00 	andl	r8,0x100,COH
8000e8ae:	18 96       	mov	r6,r12
8000e8b0:	c0 60       	breq	8000e8bc <__swrite+0x1c>
8000e8b2:	30 29       	mov	r9,2
8000e8b4:	30 0a       	mov	r10,0
8000e8b6:	96 7b       	ld.sh	r11,r11[0xe]
8000e8b8:	f0 1f 00 06 	mcall	8000e8d0 <__swrite+0x30>
8000e8bc:	8e 68       	ld.sh	r8,r7[0xc]
8000e8be:	ad c8       	cbr	r8,0xc
8000e8c0:	08 99       	mov	r9,r4
8000e8c2:	0a 9a       	mov	r10,r5
8000e8c4:	8e 7b       	ld.sh	r11,r7[0xe]
8000e8c6:	0c 9c       	mov	r12,r6
8000e8c8:	ae 68       	st.h	r7[0xc],r8
8000e8ca:	f0 1f 00 03 	mcall	8000e8d4 <__swrite+0x34>
8000e8ce:	d8 22       	popm	r4-r7,pc
8000e8d0:	80 00       	ld.sh	r0,r0[0x0]
8000e8d2:	ea c4 80 00 	sub	r4,r5,-32768
8000e8d6:	e8 fc d4 21 	ld.w	r12,r4[-11231]

8000e8d8 <__sread>:
8000e8d8:	d4 21       	pushm	r4-r7,lr
8000e8da:	16 97       	mov	r7,r11
8000e8dc:	96 7b       	ld.sh	r11,r11[0xe]
8000e8de:	f0 1f 00 07 	mcall	8000e8f8 <__sread+0x20>
8000e8e2:	c0 65       	brlt	8000e8ee <__sread+0x16>
8000e8e4:	6f 58       	ld.w	r8,r7[0x54]
8000e8e6:	18 08       	add	r8,r12
8000e8e8:	ef 48 00 54 	st.w	r7[84],r8
8000e8ec:	d8 22       	popm	r4-r7,pc
8000e8ee:	8e 68       	ld.sh	r8,r7[0xc]
8000e8f0:	ad c8       	cbr	r8,0xc
8000e8f2:	ae 68       	st.h	r7[0xc],r8
8000e8f4:	d8 22       	popm	r4-r7,pc
8000e8f6:	00 00       	add	r0,r0
8000e8f8:	80 00       	ld.sh	r0,r0[0x0]
8000e8fa:	ea f0 d4 21 	ld.w	r0,r5[-11231]

8000e8fc <_write_r>:
8000e8fc:	d4 21       	pushm	r4-r7,lr
8000e8fe:	16 98       	mov	r8,r11
8000e900:	18 97       	mov	r7,r12
8000e902:	10 9c       	mov	r12,r8
8000e904:	30 08       	mov	r8,0
8000e906:	14 9b       	mov	r11,r10
8000e908:	48 66       	lddpc	r6,8000e920 <_write_r+0x24>
8000e90a:	12 9a       	mov	r10,r9
8000e90c:	8d 08       	st.w	r6[0x0],r8
8000e90e:	f0 1f 00 06 	mcall	8000e924 <_write_r+0x28>
8000e912:	5b fc       	cp.w	r12,-1
8000e914:	c0 51       	brne	8000e91e <_write_r+0x22>
8000e916:	6c 08       	ld.w	r8,r6[0x0]
8000e918:	58 08       	cp.w	r8,0
8000e91a:	c0 20       	breq	8000e91e <_write_r+0x22>
8000e91c:	8f 38       	st.w	r7[0xc],r8
8000e91e:	d8 22       	popm	r4-r7,pc
8000e920:	00 00       	add	r0,r0
8000e922:	0f c4       	ld.ub	r4,r7[0x4]
8000e924:	80 00       	ld.sh	r0,r0[0x0]
8000e926:	a8 90       	st.b	r4[0x1],r0

8000e928 <_calloc_r>:
8000e928:	d4 21       	pushm	r4-r7,lr
8000e92a:	f4 0b 02 4b 	mul	r11,r10,r11
8000e92e:	f0 1f 00 15 	mcall	8000e980 <_calloc_r+0x58>
8000e932:	18 97       	mov	r7,r12
8000e934:	c2 30       	breq	8000e97a <_calloc_r+0x52>
8000e936:	f8 fa ff fc 	ld.w	r10,r12[-4]
8000e93a:	e0 1a ff fc 	andl	r10,0xfffc
8000e93e:	20 4a       	sub	r10,4
8000e940:	e0 4a 00 24 	cp.w	r10,36
8000e944:	e0 8b 00 18 	brhi	8000e974 <_calloc_r+0x4c>
8000e948:	18 98       	mov	r8,r12
8000e94a:	59 3a       	cp.w	r10,19
8000e94c:	e0 88 00 0f 	brls	8000e96a <_calloc_r+0x42>
8000e950:	30 09       	mov	r9,0
8000e952:	10 a9       	st.w	r8++,r9
8000e954:	10 a9       	st.w	r8++,r9
8000e956:	59 ba       	cp.w	r10,27
8000e958:	e0 88 00 09 	brls	8000e96a <_calloc_r+0x42>
8000e95c:	10 a9       	st.w	r8++,r9
8000e95e:	10 a9       	st.w	r8++,r9
8000e960:	e0 4a 00 24 	cp.w	r10,36
8000e964:	c0 31       	brne	8000e96a <_calloc_r+0x42>
8000e966:	10 a9       	st.w	r8++,r9
8000e968:	10 a9       	st.w	r8++,r9
8000e96a:	30 09       	mov	r9,0
8000e96c:	10 a9       	st.w	r8++,r9
8000e96e:	91 19       	st.w	r8[0x4],r9
8000e970:	91 09       	st.w	r8[0x0],r9
8000e972:	c0 48       	rjmp	8000e97a <_calloc_r+0x52>
8000e974:	30 0b       	mov	r11,0
8000e976:	f0 1f 00 04 	mcall	8000e984 <_calloc_r+0x5c>
8000e97a:	0e 9c       	mov	r12,r7
8000e97c:	d8 22       	popm	r4-r7,pc
8000e97e:	00 00       	add	r0,r0
8000e980:	80 00       	ld.sh	r0,r0[0x0]
8000e982:	9c 70       	ld.sh	r0,lr[0xe]
8000e984:	80 00       	ld.sh	r0,r0[0x0]
8000e986:	a2 7e       	st.h	r1[0xe],lr

8000e988 <_close_r>:
8000e988:	d4 21       	pushm	r4-r7,lr
8000e98a:	30 08       	mov	r8,0
8000e98c:	18 97       	mov	r7,r12
8000e98e:	48 76       	lddpc	r6,8000e9a8 <_close_r+0x20>
8000e990:	16 9c       	mov	r12,r11
8000e992:	8d 08       	st.w	r6[0x0],r8
8000e994:	f0 1f 00 06 	mcall	8000e9ac <_close_r+0x24>
8000e998:	5b fc       	cp.w	r12,-1
8000e99a:	c0 51       	brne	8000e9a4 <_close_r+0x1c>
8000e99c:	6c 08       	ld.w	r8,r6[0x0]
8000e99e:	58 08       	cp.w	r8,0
8000e9a0:	c0 20       	breq	8000e9a4 <_close_r+0x1c>
8000e9a2:	8f 38       	st.w	r7[0xc],r8
8000e9a4:	d8 22       	popm	r4-r7,pc
8000e9a6:	00 00       	add	r0,r0
8000e9a8:	00 00       	add	r0,r0
8000e9aa:	0f c4       	ld.ub	r4,r7[0x4]
8000e9ac:	80 00       	ld.sh	r0,r0[0x0]
8000e9ae:	a8 48       	st.h	r4[0x8],r8

8000e9b0 <_fclose_r>:
8000e9b0:	d4 21       	pushm	r4-r7,lr
8000e9b2:	18 96       	mov	r6,r12
8000e9b4:	16 97       	mov	r7,r11
8000e9b6:	58 0b       	cp.w	r11,0
8000e9b8:	c0 31       	brne	8000e9be <_fclose_r+0xe>
8000e9ba:	16 95       	mov	r5,r11
8000e9bc:	c5 08       	rjmp	8000ea5c <_fclose_r+0xac>
8000e9be:	f0 1f 00 29 	mcall	8000ea60 <_fclose_r+0xb0>
8000e9c2:	58 06       	cp.w	r6,0
8000e9c4:	c0 70       	breq	8000e9d2 <_fclose_r+0x22>
8000e9c6:	6c 68       	ld.w	r8,r6[0x18]
8000e9c8:	58 08       	cp.w	r8,0
8000e9ca:	c0 41       	brne	8000e9d2 <_fclose_r+0x22>
8000e9cc:	0c 9c       	mov	r12,r6
8000e9ce:	f0 1f 00 26 	mcall	8000ea64 <_fclose_r+0xb4>
8000e9d2:	4a 68       	lddpc	r8,8000ea68 <_fclose_r+0xb8>
8000e9d4:	10 37       	cp.w	r7,r8
8000e9d6:	c0 31       	brne	8000e9dc <_fclose_r+0x2c>
8000e9d8:	6c 07       	ld.w	r7,r6[0x0]
8000e9da:	c0 a8       	rjmp	8000e9ee <_fclose_r+0x3e>
8000e9dc:	4a 48       	lddpc	r8,8000ea6c <_fclose_r+0xbc>
8000e9de:	10 37       	cp.w	r7,r8
8000e9e0:	c0 31       	brne	8000e9e6 <_fclose_r+0x36>
8000e9e2:	6c 17       	ld.w	r7,r6[0x4]
8000e9e4:	c0 58       	rjmp	8000e9ee <_fclose_r+0x3e>
8000e9e6:	4a 38       	lddpc	r8,8000ea70 <_fclose_r+0xc0>
8000e9e8:	10 37       	cp.w	r7,r8
8000e9ea:	c0 21       	brne	8000e9ee <_fclose_r+0x3e>
8000e9ec:	6c 27       	ld.w	r7,r6[0x8]
8000e9ee:	8e 69       	ld.sh	r9,r7[0xc]
8000e9f0:	30 08       	mov	r8,0
8000e9f2:	f0 09 19 00 	cp.h	r9,r8
8000e9f6:	c0 51       	brne	8000ea00 <_fclose_r+0x50>
8000e9f8:	f0 1f 00 1f 	mcall	8000ea74 <_fclose_r+0xc4>
8000e9fc:	30 05       	mov	r5,0
8000e9fe:	c2 f8       	rjmp	8000ea5c <_fclose_r+0xac>
8000ea00:	0e 9b       	mov	r11,r7
8000ea02:	0c 9c       	mov	r12,r6
8000ea04:	f0 1f 00 1d 	mcall	8000ea78 <_fclose_r+0xc8>
8000ea08:	6e c8       	ld.w	r8,r7[0x30]
8000ea0a:	18 95       	mov	r5,r12
8000ea0c:	58 08       	cp.w	r8,0
8000ea0e:	c0 60       	breq	8000ea1a <_fclose_r+0x6a>
8000ea10:	6e 8b       	ld.w	r11,r7[0x20]
8000ea12:	0c 9c       	mov	r12,r6
8000ea14:	5d 18       	icall	r8
8000ea16:	f9 b5 05 ff 	movlt	r5,-1
8000ea1a:	8e 68       	ld.sh	r8,r7[0xc]
8000ea1c:	ed b8 00 07 	bld	r8,0x7
8000ea20:	c0 51       	brne	8000ea2a <_fclose_r+0x7a>
8000ea22:	6e 4b       	ld.w	r11,r7[0x10]
8000ea24:	0c 9c       	mov	r12,r6
8000ea26:	f0 1f 00 16 	mcall	8000ea7c <_fclose_r+0xcc>
8000ea2a:	6e db       	ld.w	r11,r7[0x34]
8000ea2c:	58 0b       	cp.w	r11,0
8000ea2e:	c0 a0       	breq	8000ea42 <_fclose_r+0x92>
8000ea30:	ee c8 ff bc 	sub	r8,r7,-68
8000ea34:	10 3b       	cp.w	r11,r8
8000ea36:	c0 40       	breq	8000ea3e <_fclose_r+0x8e>
8000ea38:	0c 9c       	mov	r12,r6
8000ea3a:	f0 1f 00 11 	mcall	8000ea7c <_fclose_r+0xcc>
8000ea3e:	30 08       	mov	r8,0
8000ea40:	8f d8       	st.w	r7[0x34],r8
8000ea42:	6f 2b       	ld.w	r11,r7[0x48]
8000ea44:	58 0b       	cp.w	r11,0
8000ea46:	c0 70       	breq	8000ea54 <_fclose_r+0xa4>
8000ea48:	0c 9c       	mov	r12,r6
8000ea4a:	f0 1f 00 0d 	mcall	8000ea7c <_fclose_r+0xcc>
8000ea4e:	30 08       	mov	r8,0
8000ea50:	ef 48 00 48 	st.w	r7[72],r8
8000ea54:	30 08       	mov	r8,0
8000ea56:	ae 68       	st.h	r7[0xc],r8
8000ea58:	f0 1f 00 07 	mcall	8000ea74 <_fclose_r+0xc4>
8000ea5c:	0a 9c       	mov	r12,r5
8000ea5e:	d8 22       	popm	r4-r7,pc
8000ea60:	80 00       	ld.sh	r0,r0[0x0]
8000ea62:	dc e8       	*unknown*
8000ea64:	80 00       	ld.sh	r0,r0[0x0]
8000ea66:	dd ac       	*unknown*
8000ea68:	80 01       	ld.sh	r1,r0[0x0]
8000ea6a:	01 64       	ld.uh	r4,--r0
8000ea6c:	80 01       	ld.sh	r1,r0[0x0]
8000ea6e:	01 84       	ld.ub	r4,r0[0x0]
8000ea70:	80 01       	ld.sh	r1,r0[0x0]
8000ea72:	01 a4       	ld.ub	r4,r0[0x2]
8000ea74:	80 00       	ld.sh	r0,r0[0x0]
8000ea76:	dc ea       	popm	r4-r10,pc,r12=-1
8000ea78:	80 00       	ld.sh	r0,r0[0x0]
8000ea7a:	db d4       	*unknown*
8000ea7c:	80 00       	ld.sh	r0,r0[0x0]
8000ea7e:	df 04       	*unknown*

8000ea80 <fclose>:
8000ea80:	d4 01       	pushm	lr
8000ea82:	48 48       	lddpc	r8,8000ea90 <fclose+0x10>
8000ea84:	18 9b       	mov	r11,r12
8000ea86:	70 0c       	ld.w	r12,r8[0x0]
8000ea88:	f0 1f 00 03 	mcall	8000ea94 <fclose+0x14>
8000ea8c:	d8 02       	popm	pc
8000ea8e:	00 00       	add	r0,r0
8000ea90:	00 00       	add	r0,r0
8000ea92:	02 04       	add	r4,r1
8000ea94:	80 00       	ld.sh	r0,r0[0x0]
8000ea96:	e9 b0       	*unknown*

8000ea98 <_fstat_r>:
8000ea98:	d4 21       	pushm	r4-r7,lr
8000ea9a:	16 98       	mov	r8,r11
8000ea9c:	18 97       	mov	r7,r12
8000ea9e:	10 9c       	mov	r12,r8
8000eaa0:	30 08       	mov	r8,0
8000eaa2:	48 76       	lddpc	r6,8000eabc <_fstat_r+0x24>
8000eaa4:	14 9b       	mov	r11,r10
8000eaa6:	8d 08       	st.w	r6[0x0],r8
8000eaa8:	f0 1f 00 06 	mcall	8000eac0 <_fstat_r+0x28>
8000eaac:	5b fc       	cp.w	r12,-1
8000eaae:	c0 51       	brne	8000eab8 <_fstat_r+0x20>
8000eab0:	6c 08       	ld.w	r8,r6[0x0]
8000eab2:	58 08       	cp.w	r8,0
8000eab4:	c0 20       	breq	8000eab8 <_fstat_r+0x20>
8000eab6:	8f 38       	st.w	r7[0xc],r8
8000eab8:	d8 22       	popm	r4-r7,pc
8000eaba:	00 00       	add	r0,r0
8000eabc:	00 00       	add	r0,r0
8000eabe:	0f c4       	ld.ub	r4,r7[0x4]
8000eac0:	80 00       	ld.sh	r0,r0[0x0]
8000eac2:	a8 d8       	st.b	r4[0x5],r8

8000eac4 <_lseek_r>:
8000eac4:	d4 21       	pushm	r4-r7,lr
8000eac6:	16 98       	mov	r8,r11
8000eac8:	18 97       	mov	r7,r12
8000eaca:	10 9c       	mov	r12,r8
8000eacc:	30 08       	mov	r8,0
8000eace:	14 9b       	mov	r11,r10
8000ead0:	48 66       	lddpc	r6,8000eae8 <_lseek_r+0x24>
8000ead2:	12 9a       	mov	r10,r9
8000ead4:	8d 08       	st.w	r6[0x0],r8
8000ead6:	f0 1f 00 06 	mcall	8000eaec <_lseek_r+0x28>
8000eada:	5b fc       	cp.w	r12,-1
8000eadc:	c0 51       	brne	8000eae6 <_lseek_r+0x22>
8000eade:	6c 08       	ld.w	r8,r6[0x0]
8000eae0:	58 08       	cp.w	r8,0
8000eae2:	c0 20       	breq	8000eae6 <_lseek_r+0x22>
8000eae4:	8f 38       	st.w	r7[0xc],r8
8000eae6:	d8 22       	popm	r4-r7,pc
8000eae8:	00 00       	add	r0,r0
8000eaea:	0f c4       	ld.ub	r4,r7[0x4]
8000eaec:	80 00       	ld.sh	r0,r0[0x0]
8000eaee:	a8 60       	st.h	r4[0xc],r0

8000eaf0 <_read_r>:
8000eaf0:	d4 21       	pushm	r4-r7,lr
8000eaf2:	16 98       	mov	r8,r11
8000eaf4:	18 97       	mov	r7,r12
8000eaf6:	10 9c       	mov	r12,r8
8000eaf8:	30 08       	mov	r8,0
8000eafa:	14 9b       	mov	r11,r10
8000eafc:	48 66       	lddpc	r6,8000eb14 <_read_r+0x24>
8000eafe:	12 9a       	mov	r10,r9
8000eb00:	8d 08       	st.w	r6[0x0],r8
8000eb02:	f0 1f 00 06 	mcall	8000eb18 <_read_r+0x28>
8000eb06:	5b fc       	cp.w	r12,-1
8000eb08:	c0 51       	brne	8000eb12 <_read_r+0x22>
8000eb0a:	6c 08       	ld.w	r8,r6[0x0]
8000eb0c:	58 08       	cp.w	r8,0
8000eb0e:	c0 20       	breq	8000eb12 <_read_r+0x22>
8000eb10:	8f 38       	st.w	r7[0xc],r8
8000eb12:	d8 22       	popm	r4-r7,pc
8000eb14:	00 00       	add	r0,r0
8000eb16:	0f c4       	ld.ub	r4,r7[0x4]
8000eb18:	80 00       	ld.sh	r0,r0[0x0]
8000eb1a:	a8 78       	st.h	r4[0xe],r8

8000eb1c <__avr32_u32_to_f64>:
8000eb1c:	f8 cb 00 00 	sub	r11,r12,0
8000eb20:	30 0c       	mov	r12,0
8000eb22:	c0 38       	rjmp	8000eb28 <__avr32_s32_to_f64+0x4>

8000eb24 <__avr32_s32_to_f64>:
8000eb24:	18 9b       	mov	r11,r12
8000eb26:	5c 4b       	abs	r11
8000eb28:	30 0a       	mov	r10,0
8000eb2a:	5e 0b       	reteq	r11
8000eb2c:	d4 01       	pushm	lr
8000eb2e:	e0 69 04 1e 	mov	r9,1054
8000eb32:	f6 08 12 00 	clz	r8,r11
8000eb36:	c1 70       	breq	8000eb64 <__avr32_s32_to_f64+0x40>
8000eb38:	c0 c3       	brcs	8000eb50 <__avr32_s32_to_f64+0x2c>
8000eb3a:	f0 0e 11 20 	rsub	lr,r8,32
8000eb3e:	f6 08 09 4b 	lsl	r11,r11,r8
8000eb42:	f4 0e 0a 4e 	lsr	lr,r10,lr
8000eb46:	1c 4b       	or	r11,lr
8000eb48:	f4 08 09 4a 	lsl	r10,r10,r8
8000eb4c:	10 19       	sub	r9,r8
8000eb4e:	c0 b8       	rjmp	8000eb64 <__avr32_s32_to_f64+0x40>
8000eb50:	f4 08 12 00 	clz	r8,r10
8000eb54:	f9 b8 03 00 	movlo	r8,0
8000eb58:	f7 b8 02 e0 	subhs	r8,-32
8000eb5c:	f4 08 09 4b 	lsl	r11,r10,r8
8000eb60:	30 0a       	mov	r10,0
8000eb62:	10 19       	sub	r9,r8
8000eb64:	58 09       	cp.w	r9,0
8000eb66:	e0 89 00 30 	brgt	8000ebc6 <__avr32_s32_to_f64+0xa2>
8000eb6a:	5c 39       	neg	r9
8000eb6c:	2f f9       	sub	r9,-1
8000eb6e:	e0 49 00 36 	cp.w	r9,54
8000eb72:	c0 43       	brcs	8000eb7a <__avr32_s32_to_f64+0x56>
8000eb74:	30 0b       	mov	r11,0
8000eb76:	30 0a       	mov	r10,0
8000eb78:	c2 68       	rjmp	8000ebc4 <__avr32_s32_to_f64+0xa0>
8000eb7a:	2f 69       	sub	r9,-10
8000eb7c:	f2 08 11 20 	rsub	r8,r9,32
8000eb80:	e0 49 00 20 	cp.w	r9,32
8000eb84:	c0 b2       	brcc	8000eb9a <__avr32_s32_to_f64+0x76>
8000eb86:	f4 08 09 4e 	lsl	lr,r10,r8
8000eb8a:	f6 08 09 48 	lsl	r8,r11,r8
8000eb8e:	f4 09 0a 4a 	lsr	r10,r10,r9
8000eb92:	f6 09 0a 4b 	lsr	r11,r11,r9
8000eb96:	10 4b       	or	r11,r8
8000eb98:	c0 88       	rjmp	8000eba8 <__avr32_s32_to_f64+0x84>
8000eb9a:	f6 08 09 4e 	lsl	lr,r11,r8
8000eb9e:	14 4e       	or	lr,r10
8000eba0:	16 9a       	mov	r10,r11
8000eba2:	30 0b       	mov	r11,0
8000eba4:	f4 09 0a 4a 	lsr	r10,r10,r9
8000eba8:	ed ba 00 00 	bld	r10,0x0
8000ebac:	c0 92       	brcc	8000ebbe <__avr32_s32_to_f64+0x9a>
8000ebae:	1c 7e       	tst	lr,lr
8000ebb0:	c0 41       	brne	8000ebb8 <__avr32_s32_to_f64+0x94>
8000ebb2:	ed ba 00 01 	bld	r10,0x1
8000ebb6:	c0 42       	brcc	8000ebbe <__avr32_s32_to_f64+0x9a>
8000ebb8:	2f fa       	sub	r10,-1
8000ebba:	f7 bb 02 ff 	subhs	r11,-1
8000ebbe:	5c fc       	rol	r12
8000ebc0:	5d 0b       	ror	r11
8000ebc2:	5d 0a       	ror	r10
8000ebc4:	d8 02       	popm	pc
8000ebc6:	e0 68 03 ff 	mov	r8,1023
8000ebca:	ed ba 00 0b 	bld	r10,0xb
8000ebce:	f7 b8 00 ff 	subeq	r8,-1
8000ebd2:	10 0a       	add	r10,r8
8000ebd4:	5c 0b       	acr	r11
8000ebd6:	f7 b9 03 fe 	sublo	r9,-2
8000ebda:	e0 49 07 ff 	cp.w	r9,2047
8000ebde:	c0 65       	brlt	8000ebea <__avr32_s32_to_f64+0xc6>
8000ebe0:	30 0a       	mov	r10,0
8000ebe2:	30 0b       	mov	r11,0
8000ebe4:	ea 1b ff e0 	orh	r11,0xffe0
8000ebe8:	c0 c8       	rjmp	8000ec00 <__floatsidf_return_op1>
8000ebea:	ed bb 00 1f 	bld	r11,0x1f
8000ebee:	f7 b9 01 01 	subne	r9,1
8000ebf2:	ab 9a       	lsr	r10,0xb
8000ebf4:	f5 eb 11 5a 	or	r10,r10,r11<<0x15
8000ebf8:	a1 7b       	lsl	r11,0x1
8000ebfa:	ab 9b       	lsr	r11,0xb
8000ebfc:	f7 e9 11 5b 	or	r11,r11,r9<<0x15

8000ec00 <__floatsidf_return_op1>:
8000ec00:	a1 7c       	lsl	r12,0x1
8000ec02:	5d 0b       	ror	r11
8000ec04:	d8 02       	popm	pc

8000ec06 <__avr32_f64_cmp_eq>:
8000ec06:	10 3a       	cp.w	r10,r8
8000ec08:	f2 0b 13 00 	cpc	r11,r9
8000ec0c:	c0 80       	breq	8000ec1c <__avr32_f64_cmp_eq+0x16>
8000ec0e:	a1 7b       	lsl	r11,0x1
8000ec10:	a1 79       	lsl	r9,0x1
8000ec12:	14 4b       	or	r11,r10
8000ec14:	12 4b       	or	r11,r9
8000ec16:	10 4b       	or	r11,r8
8000ec18:	5e 0f       	reteq	1
8000ec1a:	5e fd       	retal	0
8000ec1c:	a1 7b       	lsl	r11,0x1
8000ec1e:	30 0c       	mov	r12,0
8000ec20:	ea 1c ff e0 	orh	r12,0xffe0
8000ec24:	58 0a       	cp.w	r10,0
8000ec26:	f8 0b 13 00 	cpc	r11,r12
8000ec2a:	5e 8f       	retls	1
8000ec2c:	5e fd       	retal	0

8000ec2e <__avr32_f64_cmp_ge>:
8000ec2e:	1a de       	st.w	--sp,lr
8000ec30:	1a d7       	st.w	--sp,r7
8000ec32:	a1 7b       	lsl	r11,0x1
8000ec34:	5f 3c       	srlo	r12
8000ec36:	a1 79       	lsl	r9,0x1
8000ec38:	5f 37       	srlo	r7
8000ec3a:	5c fc       	rol	r12
8000ec3c:	30 0e       	mov	lr,0
8000ec3e:	ea 1e ff e0 	orh	lr,0xffe0
8000ec42:	58 0a       	cp.w	r10,0
8000ec44:	fc 0b 13 00 	cpc	r11,lr
8000ec48:	e0 8b 00 1d 	brhi	8000ec82 <__avr32_f64_cmp_ge+0x54>
8000ec4c:	58 08       	cp.w	r8,0
8000ec4e:	fc 09 13 00 	cpc	r9,lr
8000ec52:	e0 8b 00 18 	brhi	8000ec82 <__avr32_f64_cmp_ge+0x54>
8000ec56:	58 0b       	cp.w	r11,0
8000ec58:	f5 ba 00 00 	subfeq	r10,0
8000ec5c:	c1 50       	breq	8000ec86 <__avr32_f64_cmp_ge+0x58>
8000ec5e:	1b 07       	ld.w	r7,sp++
8000ec60:	1b 0e       	ld.w	lr,sp++
8000ec62:	58 3c       	cp.w	r12,3
8000ec64:	c0 a0       	breq	8000ec78 <__avr32_f64_cmp_ge+0x4a>
8000ec66:	58 1c       	cp.w	r12,1
8000ec68:	c0 33       	brcs	8000ec6e <__avr32_f64_cmp_ge+0x40>
8000ec6a:	5e 0f       	reteq	1
8000ec6c:	5e 1d       	retne	0
8000ec6e:	10 3a       	cp.w	r10,r8
8000ec70:	f2 0b 13 00 	cpc	r11,r9
8000ec74:	5e 2f       	reths	1
8000ec76:	5e 3d       	retlo	0
8000ec78:	14 38       	cp.w	r8,r10
8000ec7a:	f6 09 13 00 	cpc	r9,r11
8000ec7e:	5e 2f       	reths	1
8000ec80:	5e 3d       	retlo	0
8000ec82:	1b 07       	ld.w	r7,sp++
8000ec84:	d8 0a       	popm	pc,r12=0
8000ec86:	58 17       	cp.w	r7,1
8000ec88:	5f 0c       	sreq	r12
8000ec8a:	58 09       	cp.w	r9,0
8000ec8c:	f5 b8 00 00 	subfeq	r8,0
8000ec90:	1b 07       	ld.w	r7,sp++
8000ec92:	1b 0e       	ld.w	lr,sp++
8000ec94:	5e 0f       	reteq	1
8000ec96:	5e fc       	retal	r12

8000ec98 <__avr32_f64_cmp_lt>:
8000ec98:	1a de       	st.w	--sp,lr
8000ec9a:	1a d7       	st.w	--sp,r7
8000ec9c:	a1 7b       	lsl	r11,0x1
8000ec9e:	5f 3c       	srlo	r12
8000eca0:	a1 79       	lsl	r9,0x1
8000eca2:	5f 37       	srlo	r7
8000eca4:	5c fc       	rol	r12
8000eca6:	30 0e       	mov	lr,0
8000eca8:	ea 1e ff e0 	orh	lr,0xffe0
8000ecac:	58 0a       	cp.w	r10,0
8000ecae:	fc 0b 13 00 	cpc	r11,lr
8000ecb2:	e0 8b 00 1d 	brhi	8000ecec <__avr32_f64_cmp_lt+0x54>
8000ecb6:	58 08       	cp.w	r8,0
8000ecb8:	fc 09 13 00 	cpc	r9,lr
8000ecbc:	e0 8b 00 18 	brhi	8000ecec <__avr32_f64_cmp_lt+0x54>
8000ecc0:	58 0b       	cp.w	r11,0
8000ecc2:	f5 ba 00 00 	subfeq	r10,0
8000ecc6:	c1 50       	breq	8000ecf0 <__avr32_f64_cmp_lt+0x58>
8000ecc8:	1b 07       	ld.w	r7,sp++
8000ecca:	1b 0e       	ld.w	lr,sp++
8000eccc:	58 3c       	cp.w	r12,3
8000ecce:	c0 a0       	breq	8000ece2 <__avr32_f64_cmp_lt+0x4a>
8000ecd0:	58 1c       	cp.w	r12,1
8000ecd2:	c0 33       	brcs	8000ecd8 <__avr32_f64_cmp_lt+0x40>
8000ecd4:	5e 0d       	reteq	0
8000ecd6:	5e 1f       	retne	1
8000ecd8:	10 3a       	cp.w	r10,r8
8000ecda:	f2 0b 13 00 	cpc	r11,r9
8000ecde:	5e 2d       	reths	0
8000ece0:	5e 3f       	retlo	1
8000ece2:	14 38       	cp.w	r8,r10
8000ece4:	f6 09 13 00 	cpc	r9,r11
8000ece8:	5e 2d       	reths	0
8000ecea:	5e 3f       	retlo	1
8000ecec:	1b 07       	ld.w	r7,sp++
8000ecee:	d8 0a       	popm	pc,r12=0
8000ecf0:	58 17       	cp.w	r7,1
8000ecf2:	5f 1c       	srne	r12
8000ecf4:	58 09       	cp.w	r9,0
8000ecf6:	f5 b8 00 00 	subfeq	r8,0
8000ecfa:	1b 07       	ld.w	r7,sp++
8000ecfc:	1b 0e       	ld.w	lr,sp++
8000ecfe:	5e 0d       	reteq	0
8000ed00:	5e fc       	retal	r12

8000ed02 <__avr32_udiv64>:
8000ed02:	d4 31       	pushm	r0-r7,lr
8000ed04:	1a 97       	mov	r7,sp
8000ed06:	20 2d       	sub	sp,8
8000ed08:	10 9c       	mov	r12,r8
8000ed0a:	12 9e       	mov	lr,r9
8000ed0c:	14 93       	mov	r3,r10
8000ed0e:	58 09       	cp.w	r9,0
8000ed10:	e0 81 00 cd 	brne	8000eeaa <__avr32_udiv64+0x1a8>
8000ed14:	16 38       	cp.w	r8,r11
8000ed16:	e0 88 00 45 	brls	8000eda0 <__avr32_udiv64+0x9e>
8000ed1a:	f0 08 12 00 	clz	r8,r8
8000ed1e:	c0 d0       	breq	8000ed38 <__avr32_udiv64+0x36>
8000ed20:	f6 08 09 4b 	lsl	r11,r11,r8
8000ed24:	f0 09 11 20 	rsub	r9,r8,32
8000ed28:	f8 08 09 4c 	lsl	r12,r12,r8
8000ed2c:	f4 09 0a 49 	lsr	r9,r10,r9
8000ed30:	f4 08 09 43 	lsl	r3,r10,r8
8000ed34:	f3 eb 10 0b 	or	r11,r9,r11
8000ed38:	f8 0e 16 10 	lsr	lr,r12,0x10
8000ed3c:	f5 dc c0 10 	bfextu	r10,r12,0x0,0x10
8000ed40:	f6 0e 0d 00 	divu	r0,r11,lr
8000ed44:	e6 0b 16 10 	lsr	r11,r3,0x10
8000ed48:	00 99       	mov	r9,r0
8000ed4a:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
8000ed4e:	e0 0a 02 48 	mul	r8,r0,r10
8000ed52:	10 3b       	cp.w	r11,r8
8000ed54:	c0 d2       	brcc	8000ed6e <__avr32_udiv64+0x6c>
8000ed56:	20 19       	sub	r9,1
8000ed58:	18 0b       	add	r11,r12
8000ed5a:	18 3b       	cp.w	r11,r12
8000ed5c:	c0 93       	brcs	8000ed6e <__avr32_udiv64+0x6c>
8000ed5e:	f2 c5 00 01 	sub	r5,r9,1
8000ed62:	f6 0c 00 06 	add	r6,r11,r12
8000ed66:	10 3b       	cp.w	r11,r8
8000ed68:	c0 32       	brcc	8000ed6e <__avr32_udiv64+0x6c>
8000ed6a:	0a 99       	mov	r9,r5
8000ed6c:	0c 9b       	mov	r11,r6
8000ed6e:	f6 08 01 01 	sub	r1,r11,r8
8000ed72:	e7 d3 c0 10 	bfextu	r3,r3,0x0,0x10
8000ed76:	e2 0e 0d 00 	divu	r0,r1,lr
8000ed7a:	e7 e1 11 03 	or	r3,r3,r1<<0x10
8000ed7e:	00 98       	mov	r8,r0
8000ed80:	e0 0a 02 4a 	mul	r10,r0,r10
8000ed84:	14 33       	cp.w	r3,r10
8000ed86:	c0 a2       	brcc	8000ed9a <__avr32_udiv64+0x98>
8000ed88:	20 18       	sub	r8,1
8000ed8a:	18 03       	add	r3,r12
8000ed8c:	18 33       	cp.w	r3,r12
8000ed8e:	c0 63       	brcs	8000ed9a <__avr32_udiv64+0x98>
8000ed90:	f0 cb 00 01 	sub	r11,r8,1
8000ed94:	14 33       	cp.w	r3,r10
8000ed96:	f6 08 17 30 	movlo	r8,r11
8000ed9a:	f1 e9 11 08 	or	r8,r8,r9<<0x10
8000ed9e:	ce c8       	rjmp	8000ef76 <__avr32_udiv64+0x274>
8000eda0:	58 08       	cp.w	r8,0
8000eda2:	c0 51       	brne	8000edac <__avr32_udiv64+0xaa>
8000eda4:	30 19       	mov	r9,1
8000eda6:	f2 08 0d 08 	divu	r8,r9,r8
8000edaa:	10 9c       	mov	r12,r8
8000edac:	f8 06 12 00 	clz	r6,r12
8000edb0:	c0 41       	brne	8000edb8 <__avr32_udiv64+0xb6>
8000edb2:	18 1b       	sub	r11,r12
8000edb4:	30 19       	mov	r9,1
8000edb6:	c4 68       	rjmp	8000ee42 <__avr32_udiv64+0x140>
8000edb8:	ec 01 11 20 	rsub	r1,r6,32
8000edbc:	f4 01 0a 49 	lsr	r9,r10,r1
8000edc0:	f8 06 09 4c 	lsl	r12,r12,r6
8000edc4:	f6 06 09 48 	lsl	r8,r11,r6
8000edc8:	f6 01 0a 41 	lsr	r1,r11,r1
8000edcc:	f3 e8 10 08 	or	r8,r9,r8
8000edd0:	f8 03 16 10 	lsr	r3,r12,0x10
8000edd4:	eb dc c0 10 	bfextu	r5,r12,0x0,0x10
8000edd8:	e2 03 0d 00 	divu	r0,r1,r3
8000eddc:	f0 0b 16 10 	lsr	r11,r8,0x10
8000ede0:	00 9e       	mov	lr,r0
8000ede2:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
8000ede6:	e0 05 02 49 	mul	r9,r0,r5
8000edea:	12 3b       	cp.w	r11,r9
8000edec:	c0 d2       	brcc	8000ee06 <__avr32_udiv64+0x104>
8000edee:	20 1e       	sub	lr,1
8000edf0:	18 0b       	add	r11,r12
8000edf2:	18 3b       	cp.w	r11,r12
8000edf4:	c0 93       	brcs	8000ee06 <__avr32_udiv64+0x104>
8000edf6:	fc c1 00 01 	sub	r1,lr,1
8000edfa:	f6 0c 00 02 	add	r2,r11,r12
8000edfe:	12 3b       	cp.w	r11,r9
8000ee00:	c0 32       	brcc	8000ee06 <__avr32_udiv64+0x104>
8000ee02:	02 9e       	mov	lr,r1
8000ee04:	04 9b       	mov	r11,r2
8000ee06:	12 1b       	sub	r11,r9
8000ee08:	f1 d8 c0 10 	bfextu	r8,r8,0x0,0x10
8000ee0c:	f6 03 0d 02 	divu	r2,r11,r3
8000ee10:	f1 e3 11 08 	or	r8,r8,r3<<0x10
8000ee14:	04 99       	mov	r9,r2
8000ee16:	e4 05 02 4b 	mul	r11,r2,r5
8000ee1a:	16 38       	cp.w	r8,r11
8000ee1c:	c0 d2       	brcc	8000ee36 <__avr32_udiv64+0x134>
8000ee1e:	20 19       	sub	r9,1
8000ee20:	18 08       	add	r8,r12
8000ee22:	18 38       	cp.w	r8,r12
8000ee24:	c0 93       	brcs	8000ee36 <__avr32_udiv64+0x134>
8000ee26:	f2 c3 00 01 	sub	r3,r9,1
8000ee2a:	f0 0c 00 05 	add	r5,r8,r12
8000ee2e:	16 38       	cp.w	r8,r11
8000ee30:	c0 32       	brcc	8000ee36 <__avr32_udiv64+0x134>
8000ee32:	06 99       	mov	r9,r3
8000ee34:	0a 98       	mov	r8,r5
8000ee36:	f4 06 09 43 	lsl	r3,r10,r6
8000ee3a:	f0 0b 01 0b 	sub	r11,r8,r11
8000ee3e:	f3 ee 11 09 	or	r9,r9,lr<<0x10
8000ee42:	f8 06 16 10 	lsr	r6,r12,0x10
8000ee46:	fd dc c0 10 	bfextu	lr,r12,0x0,0x10
8000ee4a:	f6 06 0d 00 	divu	r0,r11,r6
8000ee4e:	e6 0b 16 10 	lsr	r11,r3,0x10
8000ee52:	00 9a       	mov	r10,r0
8000ee54:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
8000ee58:	e0 0e 02 48 	mul	r8,r0,lr
8000ee5c:	10 3b       	cp.w	r11,r8
8000ee5e:	c0 d2       	brcc	8000ee78 <__avr32_udiv64+0x176>
8000ee60:	20 1a       	sub	r10,1
8000ee62:	18 0b       	add	r11,r12
8000ee64:	18 3b       	cp.w	r11,r12
8000ee66:	c0 93       	brcs	8000ee78 <__avr32_udiv64+0x176>
8000ee68:	f4 c2 00 01 	sub	r2,r10,1
8000ee6c:	f6 0c 00 05 	add	r5,r11,r12
8000ee70:	10 3b       	cp.w	r11,r8
8000ee72:	c0 32       	brcc	8000ee78 <__avr32_udiv64+0x176>
8000ee74:	04 9a       	mov	r10,r2
8000ee76:	0a 9b       	mov	r11,r5
8000ee78:	f6 08 01 01 	sub	r1,r11,r8
8000ee7c:	e7 d3 c0 10 	bfextu	r3,r3,0x0,0x10
8000ee80:	e2 06 0d 00 	divu	r0,r1,r6
8000ee84:	e7 e1 11 03 	or	r3,r3,r1<<0x10
8000ee88:	00 98       	mov	r8,r0
8000ee8a:	e0 0e 02 4b 	mul	r11,r0,lr
8000ee8e:	16 33       	cp.w	r3,r11
8000ee90:	c0 a2       	brcc	8000eea4 <__avr32_udiv64+0x1a2>
8000ee92:	20 18       	sub	r8,1
8000ee94:	18 03       	add	r3,r12
8000ee96:	18 33       	cp.w	r3,r12
8000ee98:	c0 63       	brcs	8000eea4 <__avr32_udiv64+0x1a2>
8000ee9a:	f0 cc 00 01 	sub	r12,r8,1
8000ee9e:	16 33       	cp.w	r3,r11
8000eea0:	f8 08 17 30 	movlo	r8,r12
8000eea4:	f1 ea 11 08 	or	r8,r8,r10<<0x10
8000eea8:	c6 b8       	rjmp	8000ef7e <__avr32_udiv64+0x27c>
8000eeaa:	16 39       	cp.w	r9,r11
8000eeac:	e0 8b 00 67 	brhi	8000ef7a <__avr32_udiv64+0x278>
8000eeb0:	f2 09 12 00 	clz	r9,r9
8000eeb4:	c0 b1       	brne	8000eeca <__avr32_udiv64+0x1c8>
8000eeb6:	10 3a       	cp.w	r10,r8
8000eeb8:	5f 2a       	srhs	r10
8000eeba:	1c 3b       	cp.w	r11,lr
8000eebc:	5f b8       	srhi	r8
8000eebe:	10 4a       	or	r10,r8
8000eec0:	f2 0a 18 00 	cp.b	r10,r9
8000eec4:	c5 b0       	breq	8000ef7a <__avr32_udiv64+0x278>
8000eec6:	30 18       	mov	r8,1
8000eec8:	c5 b8       	rjmp	8000ef7e <__avr32_udiv64+0x27c>
8000eeca:	f2 03 11 20 	rsub	r3,r9,32
8000eece:	fc 09 09 4e 	lsl	lr,lr,r9
8000eed2:	f6 09 09 4c 	lsl	r12,r11,r9
8000eed6:	f4 03 0a 42 	lsr	r2,r10,r3
8000eeda:	f0 09 09 46 	lsl	r6,r8,r9
8000eede:	f0 03 0a 48 	lsr	r8,r8,r3
8000eee2:	f6 03 0a 43 	lsr	r3,r11,r3
8000eee6:	18 42       	or	r2,r12
8000eee8:	f1 ee 10 0c 	or	r12,r8,lr
8000eeec:	f8 01 16 10 	lsr	r1,r12,0x10
8000eef0:	fd dc c0 10 	bfextu	lr,r12,0x0,0x10
8000eef4:	e6 01 0d 04 	divu	r4,r3,r1
8000eef8:	e4 03 16 10 	lsr	r3,r2,0x10
8000eefc:	08 98       	mov	r8,r4
8000eefe:	e7 e5 11 03 	or	r3,r3,r5<<0x10
8000ef02:	e8 0e 02 45 	mul	r5,r4,lr
8000ef06:	0a 33       	cp.w	r3,r5
8000ef08:	c0 d2       	brcc	8000ef22 <__avr32_udiv64+0x220>
8000ef0a:	20 18       	sub	r8,1
8000ef0c:	18 03       	add	r3,r12
8000ef0e:	18 33       	cp.w	r3,r12
8000ef10:	c0 93       	brcs	8000ef22 <__avr32_udiv64+0x220>
8000ef12:	f0 c0 00 01 	sub	r0,r8,1
8000ef16:	e6 0c 00 0b 	add	r11,r3,r12
8000ef1a:	0a 33       	cp.w	r3,r5
8000ef1c:	c0 32       	brcc	8000ef22 <__avr32_udiv64+0x220>
8000ef1e:	00 98       	mov	r8,r0
8000ef20:	16 93       	mov	r3,r11
8000ef22:	0a 13       	sub	r3,r5
8000ef24:	f7 d2 c0 10 	bfextu	r11,r2,0x0,0x10
8000ef28:	e6 01 0d 00 	divu	r0,r3,r1
8000ef2c:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
8000ef30:	00 93       	mov	r3,r0
8000ef32:	e0 0e 02 4e 	mul	lr,r0,lr
8000ef36:	1c 3b       	cp.w	r11,lr
8000ef38:	c0 d2       	brcc	8000ef52 <__avr32_udiv64+0x250>
8000ef3a:	20 13       	sub	r3,1
8000ef3c:	18 0b       	add	r11,r12
8000ef3e:	18 3b       	cp.w	r11,r12
8000ef40:	c0 93       	brcs	8000ef52 <__avr32_udiv64+0x250>
8000ef42:	f6 0c 00 0c 	add	r12,r11,r12
8000ef46:	e6 c5 00 01 	sub	r5,r3,1
8000ef4a:	1c 3b       	cp.w	r11,lr
8000ef4c:	c0 32       	brcc	8000ef52 <__avr32_udiv64+0x250>
8000ef4e:	0a 93       	mov	r3,r5
8000ef50:	18 9b       	mov	r11,r12
8000ef52:	e7 e8 11 08 	or	r8,r3,r8<<0x10
8000ef56:	1c 1b       	sub	r11,lr
8000ef58:	f0 06 06 42 	mulu.d	r2,r8,r6
8000ef5c:	06 96       	mov	r6,r3
8000ef5e:	16 36       	cp.w	r6,r11
8000ef60:	e0 8b 00 0a 	brhi	8000ef74 <__avr32_udiv64+0x272>
8000ef64:	5f 0b       	sreq	r11
8000ef66:	f4 09 09 49 	lsl	r9,r10,r9
8000ef6a:	12 32       	cp.w	r2,r9
8000ef6c:	5f b9       	srhi	r9
8000ef6e:	f7 e9 00 09 	and	r9,r11,r9
8000ef72:	c0 60       	breq	8000ef7e <__avr32_udiv64+0x27c>
8000ef74:	20 18       	sub	r8,1
8000ef76:	30 09       	mov	r9,0
8000ef78:	c0 38       	rjmp	8000ef7e <__avr32_udiv64+0x27c>
8000ef7a:	30 09       	mov	r9,0
8000ef7c:	12 98       	mov	r8,r9
8000ef7e:	10 9a       	mov	r10,r8
8000ef80:	12 93       	mov	r3,r9
8000ef82:	10 92       	mov	r2,r8
8000ef84:	12 9b       	mov	r11,r9
8000ef86:	2f ed       	sub	sp,-8
8000ef88:	d8 32       	popm	r0-r7,pc

8000ef8a <__avr32_umod64>:
8000ef8a:	d4 31       	pushm	r0-r7,lr
8000ef8c:	1a 97       	mov	r7,sp
8000ef8e:	20 2d       	sub	sp,8
8000ef90:	10 96       	mov	r6,r8
8000ef92:	12 9e       	mov	lr,r9
8000ef94:	14 9c       	mov	r12,r10
8000ef96:	16 93       	mov	r3,r11
8000ef98:	16 95       	mov	r5,r11
8000ef9a:	58 09       	cp.w	r9,0
8000ef9c:	e0 81 00 89 	brne	8000f0ae <__avr32_umod64+0x124>
8000efa0:	16 38       	cp.w	r8,r11
8000efa2:	e0 88 00 12 	brls	8000efc6 <__avr32_umod64+0x3c>
8000efa6:	f0 08 12 00 	clz	r8,r8
8000efaa:	c5 20       	breq	8000f04e <__avr32_umod64+0xc4>
8000efac:	f6 08 09 45 	lsl	r5,r11,r8
8000efb0:	ec 08 09 46 	lsl	r6,r6,r8
8000efb4:	f0 0b 11 20 	rsub	r11,r8,32
8000efb8:	f4 08 09 4c 	lsl	r12,r10,r8
8000efbc:	f4 0b 0a 4b 	lsr	r11,r10,r11
8000efc0:	f7 e5 10 05 	or	r5,r11,r5
8000efc4:	c4 58       	rjmp	8000f04e <__avr32_umod64+0xc4>
8000efc6:	58 08       	cp.w	r8,0
8000efc8:	c0 51       	brne	8000efd2 <__avr32_umod64+0x48>
8000efca:	30 19       	mov	r9,1
8000efcc:	f2 08 0d 08 	divu	r8,r9,r8
8000efd0:	10 96       	mov	r6,r8
8000efd2:	ec 08 12 00 	clz	r8,r6
8000efd6:	c0 31       	brne	8000efdc <__avr32_umod64+0x52>
8000efd8:	0c 15       	sub	r5,r6
8000efda:	c3 a8       	rjmp	8000f04e <__avr32_umod64+0xc4>
8000efdc:	f0 03 11 20 	rsub	r3,r8,32
8000efe0:	f4 03 0a 4b 	lsr	r11,r10,r3
8000efe4:	ec 08 09 46 	lsl	r6,r6,r8
8000efe8:	ea 08 09 49 	lsl	r9,r5,r8
8000efec:	ea 03 0a 43 	lsr	r3,r5,r3
8000eff0:	f7 e9 10 09 	or	r9,r11,r9
8000eff4:	ec 0e 16 10 	lsr	lr,r6,0x10
8000eff8:	eb d6 c0 10 	bfextu	r5,r6,0x0,0x10
8000effc:	e6 0e 0d 02 	divu	r2,r3,lr
8000f000:	f2 0c 16 10 	lsr	r12,r9,0x10
8000f004:	ea 02 02 4b 	mul	r11,r5,r2
8000f008:	f9 e3 11 0c 	or	r12,r12,r3<<0x10
8000f00c:	16 3c       	cp.w	r12,r11
8000f00e:	c0 92       	brcc	8000f020 <__avr32_umod64+0x96>
8000f010:	0c 0c       	add	r12,r6
8000f012:	0c 3c       	cp.w	r12,r6
8000f014:	c0 63       	brcs	8000f020 <__avr32_umod64+0x96>
8000f016:	f8 06 00 03 	add	r3,r12,r6
8000f01a:	16 3c       	cp.w	r12,r11
8000f01c:	e6 0c 17 30 	movlo	r12,r3
8000f020:	f8 0b 01 03 	sub	r3,r12,r11
8000f024:	f3 d9 c0 10 	bfextu	r9,r9,0x0,0x10
8000f028:	e6 0e 0d 02 	divu	r2,r3,lr
8000f02c:	f3 e3 11 09 	or	r9,r9,r3<<0x10
8000f030:	a5 35       	mul	r5,r2
8000f032:	0a 39       	cp.w	r9,r5
8000f034:	c0 92       	brcc	8000f046 <__avr32_umod64+0xbc>
8000f036:	0c 09       	add	r9,r6
8000f038:	0c 39       	cp.w	r9,r6
8000f03a:	c0 63       	brcs	8000f046 <__avr32_umod64+0xbc>
8000f03c:	f2 06 00 0b 	add	r11,r9,r6
8000f040:	0a 39       	cp.w	r9,r5
8000f042:	f6 09 17 30 	movlo	r9,r11
8000f046:	f2 05 01 05 	sub	r5,r9,r5
8000f04a:	f4 08 09 4c 	lsl	r12,r10,r8
8000f04e:	ec 0a 16 10 	lsr	r10,r6,0x10
8000f052:	fd d6 c0 10 	bfextu	lr,r6,0x0,0x10
8000f056:	ea 0a 0d 02 	divu	r2,r5,r10
8000f05a:	f8 09 16 10 	lsr	r9,r12,0x10
8000f05e:	fc 02 02 4b 	mul	r11,lr,r2
8000f062:	f3 e3 11 09 	or	r9,r9,r3<<0x10
8000f066:	16 39       	cp.w	r9,r11
8000f068:	c0 92       	brcc	8000f07a <__avr32_umod64+0xf0>
8000f06a:	0c 09       	add	r9,r6
8000f06c:	0c 39       	cp.w	r9,r6
8000f06e:	c0 63       	brcs	8000f07a <__avr32_umod64+0xf0>
8000f070:	f2 06 00 05 	add	r5,r9,r6
8000f074:	16 39       	cp.w	r9,r11
8000f076:	ea 09 17 30 	movlo	r9,r5
8000f07a:	f2 0b 01 0b 	sub	r11,r9,r11
8000f07e:	f9 dc c0 10 	bfextu	r12,r12,0x0,0x10
8000f082:	f6 0a 0d 0a 	divu	r10,r11,r10
8000f086:	f9 eb 11 0c 	or	r12,r12,r11<<0x10
8000f08a:	fc 0a 02 4a 	mul	r10,lr,r10
8000f08e:	14 3c       	cp.w	r12,r10
8000f090:	c0 92       	brcc	8000f0a2 <__avr32_umod64+0x118>
8000f092:	0c 0c       	add	r12,r6
8000f094:	0c 3c       	cp.w	r12,r6
8000f096:	c0 63       	brcs	8000f0a2 <__avr32_umod64+0x118>
8000f098:	f8 06 00 06 	add	r6,r12,r6
8000f09c:	14 3c       	cp.w	r12,r10
8000f09e:	ec 0c 17 30 	movlo	r12,r6
8000f0a2:	f8 0a 01 0a 	sub	r10,r12,r10
8000f0a6:	30 0b       	mov	r11,0
8000f0a8:	f4 08 0a 4a 	lsr	r10,r10,r8
8000f0ac:	c8 38       	rjmp	8000f1b2 <__avr32_umod64+0x228>
8000f0ae:	16 39       	cp.w	r9,r11
8000f0b0:	e0 8b 00 81 	brhi	8000f1b2 <__avr32_umod64+0x228>
8000f0b4:	f2 09 12 00 	clz	r9,r9
8000f0b8:	c1 21       	brne	8000f0dc <__avr32_umod64+0x152>
8000f0ba:	10 3a       	cp.w	r10,r8
8000f0bc:	5f 2b       	srhs	r11
8000f0be:	1c 33       	cp.w	r3,lr
8000f0c0:	5f ba       	srhi	r10
8000f0c2:	f7 ea 10 0a 	or	r10,r11,r10
8000f0c6:	f2 0a 18 00 	cp.b	r10,r9
8000f0ca:	c0 60       	breq	8000f0d6 <__avr32_umod64+0x14c>
8000f0cc:	f8 08 01 0b 	sub	r11,r12,r8
8000f0d0:	e6 0e 01 45 	sbc	r5,r3,lr
8000f0d4:	16 9c       	mov	r12,r11
8000f0d6:	0a 9b       	mov	r11,r5
8000f0d8:	18 9a       	mov	r10,r12
8000f0da:	c6 c8       	rjmp	8000f1b2 <__avr32_umod64+0x228>
8000f0dc:	fc 09 09 45 	lsl	r5,lr,r9
8000f0e0:	f6 09 09 4b 	lsl	r11,r11,r9
8000f0e4:	f2 0c 11 20 	rsub	r12,r9,32
8000f0e8:	f0 09 09 46 	lsl	r6,r8,r9
8000f0ec:	e6 0c 0a 43 	lsr	r3,r3,r12
8000f0f0:	f4 0c 0a 42 	lsr	r2,r10,r12
8000f0f4:	f4 09 09 4e 	lsl	lr,r10,r9
8000f0f8:	16 42       	or	r2,r11
8000f0fa:	f0 0c 0a 48 	lsr	r8,r8,r12
8000f0fe:	0a 48       	or	r8,r5
8000f100:	f0 01 16 10 	lsr	r1,r8,0x10
8000f104:	e6 01 0d 0a 	divu	r10,r3,r1
8000f108:	ee eb ff f8 	st.d	r7[-8],r10
8000f10c:	ee f5 ff f8 	ld.w	r5,r7[-8]
8000f110:	14 9b       	mov	r11,r10
8000f112:	e7 d8 c0 10 	bfextu	r3,r8,0x0,0x10
8000f116:	e4 0a 16 10 	lsr	r10,r2,0x10
8000f11a:	f5 e5 11 0a 	or	r10,r10,r5<<0x10
8000f11e:	f6 03 02 45 	mul	r5,r11,r3
8000f122:	0a 3a       	cp.w	r10,r5
8000f124:	c1 02       	brcc	8000f144 <__avr32_umod64+0x1ba>
8000f126:	20 1b       	sub	r11,1
8000f128:	10 0a       	add	r10,r8
8000f12a:	10 3a       	cp.w	r10,r8
8000f12c:	c0 c3       	brcs	8000f144 <__avr32_umod64+0x1ba>
8000f12e:	f6 c0 00 01 	sub	r0,r11,1
8000f132:	ef 40 ff f8 	st.w	r7[-8],r0
8000f136:	f4 08 00 00 	add	r0,r10,r8
8000f13a:	0a 3a       	cp.w	r10,r5
8000f13c:	c0 42       	brcc	8000f144 <__avr32_umod64+0x1ba>
8000f13e:	ee fb ff f8 	ld.w	r11,r7[-8]
8000f142:	00 9a       	mov	r10,r0
8000f144:	0a 1a       	sub	r10,r5
8000f146:	e5 d2 c0 10 	bfextu	r2,r2,0x0,0x10
8000f14a:	f4 01 0d 00 	divu	r0,r10,r1
8000f14e:	e5 e1 11 02 	or	r2,r2,r1<<0x10
8000f152:	e0 03 02 43 	mul	r3,r0,r3
8000f156:	00 91       	mov	r1,r0
8000f158:	06 32       	cp.w	r2,r3
8000f15a:	c0 d2       	brcc	8000f174 <__avr32_umod64+0x1ea>
8000f15c:	20 11       	sub	r1,1
8000f15e:	10 02       	add	r2,r8
8000f160:	10 32       	cp.w	r2,r8
8000f162:	c0 93       	brcs	8000f174 <__avr32_umod64+0x1ea>
8000f164:	e2 c5 00 01 	sub	r5,r1,1
8000f168:	e4 08 00 0a 	add	r10,r2,r8
8000f16c:	06 32       	cp.w	r2,r3
8000f16e:	c0 32       	brcc	8000f174 <__avr32_umod64+0x1ea>
8000f170:	0a 91       	mov	r1,r5
8000f172:	14 92       	mov	r2,r10
8000f174:	e3 eb 11 0b 	or	r11,r1,r11<<0x10
8000f178:	06 12       	sub	r2,r3
8000f17a:	f6 06 06 4a 	mulu.d	r10,r11,r6
8000f17e:	14 95       	mov	r5,r10
8000f180:	04 3b       	cp.w	r11,r2
8000f182:	e0 8b 00 08 	brhi	8000f192 <__avr32_umod64+0x208>
8000f186:	5f 03       	sreq	r3
8000f188:	1c 3a       	cp.w	r10,lr
8000f18a:	5f ba       	srhi	r10
8000f18c:	e7 ea 00 0a 	and	r10,r3,r10
8000f190:	c0 60       	breq	8000f19c <__avr32_umod64+0x212>
8000f192:	ea 06 01 0a 	sub	r10,r5,r6
8000f196:	f6 08 01 4b 	sbc	r11,r11,r8
8000f19a:	14 95       	mov	r5,r10
8000f19c:	fc 05 01 0a 	sub	r10,lr,r5
8000f1a0:	e4 0b 01 42 	sbc	r2,r2,r11
8000f1a4:	e4 09 0a 4b 	lsr	r11,r2,r9
8000f1a8:	f4 09 0a 4a 	lsr	r10,r10,r9
8000f1ac:	e4 0c 09 42 	lsl	r2,r2,r12
8000f1b0:	04 4a       	or	r10,r2
8000f1b2:	2f ed       	sub	sp,-8
8000f1b4:	d8 32       	popm	r0-r7,pc

Disassembly of section .exception:

8000f200 <_evba>:
_evba:

	.org  0x000
	// Unrecoverable Exception.
_handle_Unrecoverable_Exception:
	rjmp $
8000f200:	c0 08       	rjmp	8000f200 <_evba>
	...

8000f204 <_handle_TLB_Multiple_Hit>:

	.org  0x004
	// TLB Multiple Hit.
_handle_TLB_Multiple_Hit:
	rjmp $
8000f204:	c0 08       	rjmp	8000f204 <_handle_TLB_Multiple_Hit>
	...

8000f208 <_handle_Bus_Error_Data_Fetch>:

	.org  0x008
	// Bus Error Data Fetch.
_handle_Bus_Error_Data_Fetch:
	rjmp $
8000f208:	c0 08       	rjmp	8000f208 <_handle_Bus_Error_Data_Fetch>
	...

8000f20c <_handle_Bus_Error_Instruction_Fetch>:

	.org  0x00C
	// Bus Error Instruction Fetch.
_handle_Bus_Error_Instruction_Fetch:
	rjmp $
8000f20c:	c0 08       	rjmp	8000f20c <_handle_Bus_Error_Instruction_Fetch>
	...

8000f210 <_handle_NMI>:

	.org  0x010
	// NMI.
_handle_NMI:
	rjmp $
8000f210:	c0 08       	rjmp	8000f210 <_handle_NMI>
	...

8000f214 <_handle_Instruction_Address>:

	.org  0x014
	// Instruction Address.
_handle_Instruction_Address:
	rjmp $
8000f214:	c0 08       	rjmp	8000f214 <_handle_Instruction_Address>
	...

8000f218 <_handle_ITLB_Protection>:

	.org  0x018
	// ITLB Protection.
_handle_ITLB_Protection:
	rjmp $
8000f218:	c0 08       	rjmp	8000f218 <_handle_ITLB_Protection>
	...

8000f21c <_handle_Breakpoint>:

	.org  0x01C
	// Breakpoint.
_handle_Breakpoint:
	rjmp $
8000f21c:	c0 08       	rjmp	8000f21c <_handle_Breakpoint>
	...

8000f220 <_handle_Illegal_Opcode>:

	.org  0x020
	// Illegal Opcode.
_handle_Illegal_Opcode:
	rjmp $
8000f220:	c0 08       	rjmp	8000f220 <_handle_Illegal_Opcode>
	...

8000f224 <_handle_Unimplemented_Instruction>:

	.org  0x024
	// Unimplemented Instruction.
_handle_Unimplemented_Instruction:
	rjmp $
8000f224:	c0 08       	rjmp	8000f224 <_handle_Unimplemented_Instruction>
	...

8000f228 <_handle_Privilege_Violation>:

	.org  0x028
	// Privilege Violation.
_handle_Privilege_Violation:
	rjmp $
8000f228:	c0 08       	rjmp	8000f228 <_handle_Privilege_Violation>
	...

8000f22c <_handle_Floating_Point>:

	.org  0x02C
	// Floating-Point: UNUSED IN AVR32UC and AVR32AP.
_handle_Floating_Point:
	rjmp $
8000f22c:	c0 08       	rjmp	8000f22c <_handle_Floating_Point>
	...

8000f230 <_handle_Coprocessor_Absent>:

	.org  0x030
	// Coprocessor Absent: UNUSED IN AVR32UC.
_handle_Coprocessor_Absent:
	rjmp $
8000f230:	c0 08       	rjmp	8000f230 <_handle_Coprocessor_Absent>
	...

8000f234 <_handle_Data_Address_Read>:

	.org  0x034
	// Data Address (Read).
_handle_Data_Address_Read:
	rjmp $
8000f234:	c0 08       	rjmp	8000f234 <_handle_Data_Address_Read>
	...

8000f238 <_handle_Data_Address_Write>:

	.org  0x038
	// Data Address (Write).
_handle_Data_Address_Write:
	rjmp $
8000f238:	c0 08       	rjmp	8000f238 <_handle_Data_Address_Write>
	...

8000f23c <_handle_DTLB_Protection_Read>:

	.org  0x03C
	// DTLB Protection (Read).
_handle_DTLB_Protection_Read:
	rjmp $
8000f23c:	c0 08       	rjmp	8000f23c <_handle_DTLB_Protection_Read>
	...

8000f240 <_handle_DTLB_Protection_Write>:

	.org  0x040
	// DTLB Protection (Write).
_handle_DTLB_Protection_Write:
	rjmp $
8000f240:	c0 08       	rjmp	8000f240 <_handle_DTLB_Protection_Write>
	...

8000f244 <_handle_DTLB_Modified>:

	.org  0x044
	// DTLB Modified: UNUSED IN AVR32UC.
_handle_DTLB_Modified:
	rjmp $
8000f244:	c0 08       	rjmp	8000f244 <_handle_DTLB_Modified>
	...

8000f250 <_handle_ITLB_Miss>:

	.org  0x050
	// ITLB Miss.
_handle_ITLB_Miss:
	rjmp $
8000f250:	c0 08       	rjmp	8000f250 <_handle_ITLB_Miss>
	...

8000f260 <_handle_DTLB_Miss_Read>:

	.org  0x060
	// DTLB Miss (Read).
_handle_DTLB_Miss_Read:
	rjmp $
8000f260:	c0 08       	rjmp	8000f260 <_handle_DTLB_Miss_Read>
	...

8000f270 <_handle_DTLB_Miss_Write>:

	.org  0x070
	// DTLB Miss (Write).
_handle_DTLB_Miss_Write:
	rjmp $
8000f270:	c0 08       	rjmp	8000f270 <_handle_DTLB_Miss_Write>
	...

8000f300 <_handle_Supervisor_Call>:

	.org  0x100
	// Supervisor Call.
_handle_Supervisor_Call:
	rjmp $
8000f300:	c0 08       	rjmp	8000f300 <_handle_Supervisor_Call>
	...

8000f304 <_int0>:
	/*
	 * If this was a spurious interrupt (R12 == NULL), return from event
	 * handler.
	 */
	rete
.endr
8000f304:	d7 c1       	pushm	r8-r12,lr
8000f306:	30 0c       	mov	r12,0
8000f308:	f0 1f 00 17 	mcall	8000f364 <spint3+0x4>
8000f30c:	58 0c       	cp.w	r12,0
8000f30e:	f8 0f 17 10 	movne	pc,r12
8000f312:	c0 30       	breq	8000f318 <spint0>
8000f314:	1a dc       	st.w	--sp,r12
8000f316:	df c2       	popm	r8-r12,lr-pc

8000f318 <spint0>:
8000f318:	d7 c2       	popm	r8-r12,lr
8000f31a:	d6 03       	rete

8000f31c <_int1>:
8000f31c:	d7 c1       	pushm	r8-r12,lr
8000f31e:	30 1c       	mov	r12,1
8000f320:	f0 1f 00 11 	mcall	8000f364 <spint3+0x4>
8000f324:	58 0c       	cp.w	r12,0
8000f326:	f8 0f 17 10 	movne	pc,r12
8000f32a:	c0 30       	breq	8000f330 <spint1>
8000f32c:	1a dc       	st.w	--sp,r12
8000f32e:	df c2       	popm	r8-r12,lr-pc

8000f330 <spint1>:
8000f330:	d7 c2       	popm	r8-r12,lr
8000f332:	d6 03       	rete

8000f334 <_int2>:
8000f334:	d7 c1       	pushm	r8-r12,lr
8000f336:	30 2c       	mov	r12,2
8000f338:	f0 1f 00 0b 	mcall	8000f364 <spint3+0x4>
8000f33c:	58 0c       	cp.w	r12,0
8000f33e:	f8 0f 17 10 	movne	pc,r12
8000f342:	c0 30       	breq	8000f348 <spint2>
8000f344:	1a dc       	st.w	--sp,r12
8000f346:	df c2       	popm	r8-r12,lr-pc

8000f348 <spint2>:
8000f348:	d7 c2       	popm	r8-r12,lr
8000f34a:	d6 03       	rete

8000f34c <_int3>:
8000f34c:	d7 c1       	pushm	r8-r12,lr
8000f34e:	30 3c       	mov	r12,3
8000f350:	f0 1f 00 05 	mcall	8000f364 <spint3+0x4>
8000f354:	58 0c       	cp.w	r12,0
8000f356:	f8 0f 17 10 	movne	pc,r12
8000f35a:	c0 30       	breq	8000f360 <spint3>
8000f35c:	1a dc       	st.w	--sp,r12
8000f35e:	df c2       	popm	r8-r12,lr-pc

8000f360 <spint3>:
8000f360:	d7 c2       	popm	r8-r12,lr
8000f362:	d6 03       	rete
8000f364:	80 00       	ld.sh	r0,r0[0x0]
8000f366:	24 bc       	sub	r12,75
	...
